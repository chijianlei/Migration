<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="Java" filename="C:\Users\CHIJIA~1\AppData\Local\Temp\gumtree8249014690573184257" pos:tabs="1"><comment type="block" pos:line="1" pos:column="1">/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */</comment>

<package pos:line="20" pos:column="1">package <name><name pos:line="20" pos:column="9">org<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">apache<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">uima<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">tools<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">.<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="31">util<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">htmlview<pos:position pos:line="20" pos:column="44"/></name></name>;<pos:position pos:line="20" pos:column="45"/></package>

<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">java<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">io<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">File<pos:position pos:line="22" pos:column="20"/></name></name>;<pos:position pos:line="22" pos:column="21"/></import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">java<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">io<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">FileNotFoundException<pos:position pos:line="23" pos:column="37"/></name></name>;<pos:position pos:line="23" pos:column="38"/></import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">java<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">io<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">.<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">FileOutputStream<pos:position pos:line="24" pos:column="32"/></name></name>;<pos:position pos:line="24" pos:column="33"/></import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">java<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">.<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">io<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">FileWriter<pos:position pos:line="25" pos:column="26"/></name></name>;<pos:position pos:line="25" pos:column="27"/></import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">java<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">io<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">.<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">IOException<pos:position pos:line="26" pos:column="27"/></name></name>;<pos:position pos:line="26" pos:column="28"/></import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">java<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">io<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">.<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">InputStream<pos:position pos:line="27" pos:column="27"/></name></name>;<pos:position pos:line="27" pos:column="28"/></import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">java<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">io<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">.<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">OutputStream<pos:position pos:line="28" pos:column="28"/></name></name>;<pos:position pos:line="28" pos:column="29"/></import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">java<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">util<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">ArrayList<pos:position pos:line="29" pos:column="27"/></name></name>;<pos:position pos:line="29" pos:column="28"/></import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">java<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">util<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">Iterator<pos:position pos:line="30" pos:column="26"/></name></name>;<pos:position pos:line="30" pos:column="27"/></import>

<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">javax<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">xml<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">.<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">XMLConstants<pos:position pos:line="32" pos:column="30"/></name></name>;<pos:position pos:line="32" pos:column="31"/></import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">javax<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">.<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">xml<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">transform<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">.<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">Templates<pos:position pos:line="33" pos:column="37"/></name></name>;<pos:position pos:line="33" pos:column="38"/></import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">javax<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">.<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">xml<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">transform<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">.<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">Transformer<pos:position pos:line="34" pos:column="39"/></name></name>;<pos:position pos:line="34" pos:column="40"/></import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">javax<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">.<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">xml<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">transform<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">TransformerConfigurationException<pos:position pos:line="35" pos:column="61"/></name></name>;<pos:position pos:line="35" pos:column="62"/></import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">javax<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">.<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">xml<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">transform<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">.<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">TransformerException<pos:position pos:line="36" pos:column="48"/></name></name>;<pos:position pos:line="36" pos:column="49"/></import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">javax<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">.<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">xml<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">.<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">transform<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">TransformerFactory<pos:position pos:line="37" pos:column="46"/></name></name>;<pos:position pos:line="37" pos:column="47"/></import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">javax<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">xml<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">.<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">transform<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">.<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">stream<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">.<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="35">StreamResult<pos:position pos:line="38" pos:column="47"/></name></name>;<pos:position pos:line="38" pos:column="48"/></import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">javax<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">.<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">xml<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">.<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">transform<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">stream<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">StreamSource<pos:position pos:line="39" pos:column="47"/></name></name>;<pos:position pos:line="39" pos:column="48"/></import>

<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">org<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">.<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">apache<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">uima<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">UIMARuntimeException<pos:position pos:line="41" pos:column="44"/></name></name>;<pos:position pos:line="41" pos:column="45"/></import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">org<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">apache<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">.<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">uima<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">analysis_engine<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">.<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">AnalysisEngine<pos:position pos:line="42" pos:column="54"/></name></name>;<pos:position pos:line="42" pos:column="55"/></import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">org<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">apache<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">.<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">uima<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">.<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">analysis_engine<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">TypeOrFeature<pos:position pos:line="43" pos:column="53"/></name></name>;<pos:position pos:line="43" pos:column="54"/></import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">org<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">apache<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">.<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">uima<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">analysis_engine<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">metadata<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">.<pos:position pos:line="44" pos:column="49"/></operator><name pos:line="44" pos:column="49">AnalysisEngineMetaData<pos:position pos:line="44" pos:column="71"/></name></name>;<pos:position pos:line="44" pos:column="72"/></import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">org<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">.<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">apache<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">.<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">uima<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">resource<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">metadata<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">.<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="42">Capability<pos:position pos:line="45" pos:column="52"/></name></name>;<pos:position pos:line="45" pos:column="53"/></import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">org<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">.<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="12">apache<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">.<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">uima<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">.<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">resource<pos:position pos:line="46" pos:column="32"/></name><operator pos:line="46" pos:column="32">.<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="33">metadata<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">.<pos:position pos:line="46" pos:column="42"/></operator><name pos:line="46" pos:column="42">TypeDescription<pos:position pos:line="46" pos:column="57"/></name></name>;<pos:position pos:line="46" pos:column="58"/></import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">org<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">.<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">apache<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">uima<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">resource<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">.<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="33">metadata<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">.<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="42">TypeSystemDescription<pos:position pos:line="47" pos:column="63"/></name></name>;<pos:position pos:line="47" pos:column="64"/></import>

<comment type="block" format="javadoc" pos:line="49" pos:column="1">/**
 * Utility that uses XSL stylesheets to produce an HTML view (w/ Javascript) of an annotated
 * document.
 * 
 * 
 */</comment>
<class><specifier pos:line="55" pos:column="1">public<pos:position pos:line="55" pos:column="7"/></specifier> class <name pos:line="55" pos:column="14">AnnotationViewGenerator<pos:position pos:line="55" pos:column="37"/></name> <block pos:line="55" pos:column="38">{

  <comment type="block" format="javadoc" pos:line="57" pos:column="3">/** Transformer factory for doing XSL transformations. */</comment>
  <decl_stmt><decl><specifier pos:line="58" pos:column="3">private<pos:position pos:line="58" pos:column="10"/></specifier> <type><name pos:line="58" pos:column="11">TransformerFactory<pos:position pos:line="58" pos:column="29"/></name></type> <name pos:line="58" pos:column="30">mTFactory<pos:position pos:line="58" pos:column="39"/></name></decl>;<pos:position pos:line="58" pos:column="40"/></decl_stmt>

  <comment type="block" format="javadoc" pos:line="60" pos:column="3">/**
   * XSL transform used to translate a style map XML file into the CSS stylesheet used in the
   * annotation viewer.
   */</comment>
  <decl_stmt><decl><specifier pos:line="64" pos:column="3">private<pos:position pos:line="64" pos:column="10"/></specifier> <type><name pos:line="64" pos:column="11">Templates<pos:position pos:line="64" pos:column="20"/></name></type> <name pos:line="64" pos:column="21">mStyleMapToCss<pos:position pos:line="64" pos:column="35"/></name></decl>;<pos:position pos:line="64" pos:column="36"/></decl_stmt>

  <comment type="block" format="javadoc" pos:line="66" pos:column="3">/**
   * XSL transform used to translate a style map XML file into the HTML legend used in the
   * annotation viewer.
   */</comment>
  <decl_stmt><decl><specifier pos:line="70" pos:column="3">private<pos:position pos:line="70" pos:column="10"/></specifier> <type><name pos:line="70" pos:column="11">Templates<pos:position pos:line="70" pos:column="20"/></name></type> <name pos:line="70" pos:column="21">mStyleMapToLegend<pos:position pos:line="70" pos:column="38"/></name></decl>;<pos:position pos:line="70" pos:column="39"/></decl_stmt>

  <comment type="block" format="javadoc" pos:line="72" pos:column="3">/**
   * XSL transform used to translate a style map XML file into ANOTHER XSL file, which can then be
   * applied to an annotated document to produce the main document HTML view.
   */</comment>
  <decl_stmt><decl><specifier pos:line="76" pos:column="3">private<pos:position pos:line="76" pos:column="10"/></specifier> <type><name pos:line="76" pos:column="11">Templates<pos:position pos:line="76" pos:column="20"/></name></type> <name pos:line="76" pos:column="21">mStyleMapToDocFrameXsl<pos:position pos:line="76" pos:column="43"/></name></decl>;<pos:position pos:line="76" pos:column="44"/></decl_stmt>

  <comment type="block" format="javadoc" pos:line="78" pos:column="3">/** Directory in which this program will write its output files. */</comment>
  <decl_stmt><decl><specifier pos:line="79" pos:column="3">private<pos:position pos:line="79" pos:column="10"/></specifier> <type><name pos:line="79" pos:column="11">File<pos:position pos:line="79" pos:column="15"/></name></type> <name pos:line="79" pos:column="16">mOutputDir<pos:position pos:line="79" pos:column="26"/></name></decl>;<pos:position pos:line="79" pos:column="27"/></decl_stmt>

  <comment type="block" format="javadoc" pos:line="81" pos:column="3">/**
   * Creates a new AnnotationViewGenerator.
   * 
   * @param aOutputDir
   *          directory in which this program will write its output files.
   */</comment>
  <constructor><specifier pos:line="87" pos:column="3">public<pos:position pos:line="87" pos:column="9"/></specifier> <name pos:line="87" pos:column="10">AnnotationViewGenerator<pos:position pos:line="87" pos:column="33"/></name><parameter_list pos:line="87" pos:column="33">(<parameter><decl><type><name pos:line="87" pos:column="34">File<pos:position pos:line="87" pos:column="38"/></name></type> <name pos:line="87" pos:column="39">aOutputDir<pos:position pos:line="87" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="87" pos:column="50"/></parameter_list> <block pos:line="87" pos:column="51">{
    <expr_stmt><expr><name pos:line="88" pos:column="5">mOutputDir<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">=<pos:position pos:line="88" pos:column="17"/></operator> <name pos:line="88" pos:column="18">aOutputDir<pos:position pos:line="88" pos:column="28"/></name></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="89" pos:column="5">mTFactory<pos:position pos:line="89" pos:column="14"/></name> <operator pos:line="89" pos:column="15">=<pos:position pos:line="89" pos:column="16"/></operator> <call><name><name pos:line="89" pos:column="17">TransformerFactory<pos:position pos:line="89" pos:column="35"/></name><operator pos:line="89" pos:column="35">.<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="36">newInstance<pos:position pos:line="89" pos:column="47"/></name></name><argument_list pos:line="89" pos:column="47">()<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="90" pos:column="5">mTFactory<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">.<pos:position pos:line="90" pos:column="15"/></operator><name pos:line="90" pos:column="15">setAttribute<pos:position pos:line="90" pos:column="27"/></name></name><argument_list pos:line="90" pos:column="27">(<argument><expr><name><name pos:line="90" pos:column="28">XMLConstants<pos:position pos:line="90" pos:column="40"/></name><operator pos:line="90" pos:column="40">.<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="41">ACCESS_EXTERNAL_DTD<pos:position pos:line="90" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="62">""<pos:position pos:line="90" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="91" pos:column="5">mTFactory<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">.<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="15">setAttribute<pos:position pos:line="91" pos:column="27"/></name></name><argument_list pos:line="91" pos:column="27">(<argument><expr><name><name pos:line="91" pos:column="28">XMLConstants<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">.<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="41">ACCESS_EXTERNAL_STYLESHEET<pos:position pos:line="91" pos:column="67"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="69">""<pos:position pos:line="91" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="73"/></expr_stmt>

    <comment type="line" pos:line="93" pos:column="5">// the viewer uses several files located via the classpath</comment>
    <comment type="line" pos:line="94" pos:column="5">// parse xsl files into templates</comment>
    <expr_stmt><expr><name pos:line="95" pos:column="5">mStyleMapToCss<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">=<pos:position pos:line="95" pos:column="21"/></operator> <call><name pos:line="95" pos:column="22">getTemplates<pos:position pos:line="95" pos:column="34"/></name><argument_list pos:line="95" pos:column="34">(<argument><expr><literal type="string" pos:line="95" pos:column="35">"styleMapToCss.xsl"<pos:position pos:line="95" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name pos:line="96" pos:column="5">mStyleMapToLegend<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <call><name pos:line="96" pos:column="25">getTemplates<pos:position pos:line="96" pos:column="37"/></name><argument_list pos:line="96" pos:column="37">(<argument><expr><literal type="string" pos:line="96" pos:column="38">"styleMapToLegend.xsl"<pos:position pos:line="96" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="97" pos:column="5">mStyleMapToDocFrameXsl<pos:position pos:line="97" pos:column="27"/></name> <operator pos:line="97" pos:column="28">=<pos:position pos:line="97" pos:column="29"/></operator> <call><name pos:line="97" pos:column="30">getTemplates<pos:position pos:line="97" pos:column="42"/></name><argument_list pos:line="97" pos:column="42">(<argument><expr><literal type="string" pos:line="97" pos:column="43">"styleMapToDocFrameXsl.xsl"<pos:position pos:line="97" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="98" pos:column="4"/></block></constructor>

  <comment type="block" format="javadoc" pos:line="100" pos:column="3">/**
   * Parses an XML file and produces a Templates object.
   * 
   * @param filename
   *          name of .xsl file, to be looked up in the classpath, under the same package as this
   *          class.
   * @return Templates object usable for XSL transformation
   */</comment>
  <function><specifier pos:line="108" pos:column="3">private<pos:position pos:line="108" pos:column="10"/></specifier> <type><name pos:line="108" pos:column="11">Templates<pos:position pos:line="108" pos:column="20"/></name></type> <name pos:line="108" pos:column="21">getTemplates<pos:position pos:line="108" pos:column="33"/></name><parameter_list pos:line="108" pos:column="33">(<parameter><decl><type><name pos:line="108" pos:column="34">String<pos:position pos:line="108" pos:column="40"/></name></type> <name pos:line="108" pos:column="41">filename<pos:position pos:line="108" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="108" pos:column="50"/></parameter_list> <block pos:line="108" pos:column="51">{
    <decl_stmt><decl><type><name pos:line="109" pos:column="5">InputStream<pos:position pos:line="109" pos:column="16"/></name></type> <name pos:line="109" pos:column="17">is<pos:position pos:line="109" pos:column="19"/></name> <init pos:line="109" pos:column="20">= <expr><call><name><name pos:line="109" pos:column="22">AnnotationViewGenerator<pos:position pos:line="109" pos:column="45"/></name><operator pos:line="109" pos:column="45">.<pos:position pos:line="109" pos:column="46"/></operator><name><name pos:line="109" pos:column="46">class<pos:position pos:line="109" pos:column="51"/></name><operator pos:line="109" pos:column="51">.<pos:position pos:line="109" pos:column="52"/></operator><name pos:line="109" pos:column="52">getResourceAsStream<pos:position pos:line="109" pos:column="71"/></name></name></name><argument_list pos:line="109" pos:column="71">(<argument><expr><name pos:line="109" pos:column="72">filename<pos:position pos:line="109" pos:column="80"/></name></expr></argument>)<pos:position pos:line="109" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="109" pos:column="82"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="110" pos:column="5">Templates<pos:position pos:line="110" pos:column="14"/></name></type> <name pos:line="110" pos:column="15">templates<pos:position pos:line="110" pos:column="24"/></name></decl>;<pos:position pos:line="110" pos:column="25"/></decl_stmt>
    <try pos:line="111" pos:column="5">try <block pos:line="111" pos:column="9">{
      <expr_stmt><expr><name pos:line="112" pos:column="7">templates<pos:position pos:line="112" pos:column="16"/></name> <operator pos:line="112" pos:column="17">=<pos:position pos:line="112" pos:column="18"/></operator> <call><name><name pos:line="112" pos:column="19">mTFactory<pos:position pos:line="112" pos:column="28"/></name><operator pos:line="112" pos:column="28">.<pos:position pos:line="112" pos:column="29"/></operator><name pos:line="112" pos:column="29">newTemplates<pos:position pos:line="112" pos:column="41"/></name></name><argument_list pos:line="112" pos:column="41">(<argument><expr><operator pos:line="112" pos:column="42">new<pos:position pos:line="112" pos:column="45"/></operator> <call><name pos:line="112" pos:column="46">StreamSource<pos:position pos:line="112" pos:column="58"/></name><argument_list pos:line="112" pos:column="58">(<argument><expr><name pos:line="112" pos:column="59">is<pos:position pos:line="112" pos:column="61"/></name></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block> <catch pos:line="113" pos:column="7">catch <parameter_list pos:line="113" pos:column="13">(<parameter><decl><type><name pos:line="113" pos:column="14">TransformerConfigurationException<pos:position pos:line="113" pos:column="47"/></name></type> <name pos:line="113" pos:column="48">e<pos:position pos:line="113" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="113" pos:column="50"/></parameter_list> <block pos:line="113" pos:column="51">{
      <throw pos:line="114" pos:column="7">throw <expr><operator pos:line="114" pos:column="13">new<pos:position pos:line="114" pos:column="16"/></operator> <call><name pos:line="114" pos:column="17">UIMARuntimeException<pos:position pos:line="114" pos:column="37"/></name><argument_list pos:line="114" pos:column="37">(<argument><expr><name pos:line="114" pos:column="38">e<pos:position pos:line="114" pos:column="39"/></name></expr></argument>)<pos:position pos:line="114" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="41"/></throw>
    }<pos:position pos:line="115" pos:column="6"/></block></catch> <finally pos:line="115" pos:column="7">finally <block pos:line="115" pos:column="15">{
      <try pos:line="116" pos:column="7">try <block pos:line="116" pos:column="11">{
        <expr_stmt><expr><call><name><name pos:line="117" pos:column="9">is<pos:position pos:line="117" pos:column="11"/></name><operator pos:line="117" pos:column="11">.<pos:position pos:line="117" pos:column="12"/></operator><name pos:line="117" pos:column="12">close<pos:position pos:line="117" pos:column="17"/></name></name><argument_list pos:line="117" pos:column="17">()<pos:position pos:line="117" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="118" pos:column="8"/></block> <catch pos:line="118" pos:column="9">catch <parameter_list pos:line="118" pos:column="15">(<parameter><decl><type><name pos:line="118" pos:column="16">IOException<pos:position pos:line="118" pos:column="27"/></name></type> <name pos:line="118" pos:column="28">e<pos:position pos:line="118" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="118" pos:column="30"/></parameter_list> <block pos:line="118" pos:column="31">{
        <comment type="line" pos:line="119" pos:column="9">// ignore close errors</comment>
      }<pos:position pos:line="120" pos:column="8"/></block></catch></try>
    }<pos:position pos:line="121" pos:column="6"/></block></finally></try>
    <return pos:line="122" pos:column="5">return <expr><name pos:line="122" pos:column="12">templates<pos:position pos:line="122" pos:column="21"/></name></expr>;<pos:position pos:line="122" pos:column="22"/></return>
  }<pos:position pos:line="123" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="125" pos:column="3">/**
   * Writes a resource file to disk. The resource file is looked up in the classpath
   * 
   * @param filename
   *          name of the file, to be looked up in the classpath, under the same package as this
   *          class.
   * @return outputDir directory of output file. Output file will be named the same as the
   *         &lt;code&gt;filename&lt;/code&gt; parameter.
   */</comment>
  <function><specifier pos:line="134" pos:column="3">private<pos:position pos:line="134" pos:column="10"/></specifier> <type><name pos:line="134" pos:column="11">void<pos:position pos:line="134" pos:column="15"/></name></type> <name pos:line="134" pos:column="16">writeToFile<pos:position pos:line="134" pos:column="27"/></name><parameter_list pos:line="134" pos:column="27">(<parameter><decl><type><name pos:line="134" pos:column="28">String<pos:position pos:line="134" pos:column="34"/></name></type> <name pos:line="134" pos:column="35">filename<pos:position pos:line="134" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="134" pos:column="45">File<pos:position pos:line="134" pos:column="49"/></name></type> <name pos:line="134" pos:column="50">outputDir<pos:position pos:line="134" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="134" pos:column="60"/></parameter_list> <block pos:line="134" pos:column="61">{
    <decl_stmt><decl><type><name pos:line="135" pos:column="5">File<pos:position pos:line="135" pos:column="9"/></name></type> <name pos:line="135" pos:column="10">outFile<pos:position pos:line="135" pos:column="17"/></name> <init pos:line="135" pos:column="18">= <expr><operator pos:line="135" pos:column="20">new<pos:position pos:line="135" pos:column="23"/></operator> <call><name pos:line="135" pos:column="24">File<pos:position pos:line="135" pos:column="28"/></name><argument_list pos:line="135" pos:column="28">(<argument><expr><name pos:line="135" pos:column="29">outputDir<pos:position pos:line="135" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="40">filename<pos:position pos:line="135" pos:column="48"/></name></expr></argument>)<pos:position pos:line="135" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="135" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="136" pos:column="5">OutputStream<pos:position pos:line="136" pos:column="17"/></name></type> <name pos:line="136" pos:column="18">os<pos:position pos:line="136" pos:column="20"/></name></decl>;<pos:position pos:line="136" pos:column="21"/></decl_stmt>
    <try pos:line="137" pos:column="5">try <block pos:line="137" pos:column="9">{
      <expr_stmt><expr><name pos:line="138" pos:column="7">os<pos:position pos:line="138" pos:column="9"/></name> <operator pos:line="138" pos:column="10">=<pos:position pos:line="138" pos:column="11"/></operator> <operator pos:line="138" pos:column="12">new<pos:position pos:line="138" pos:column="15"/></operator> <call><name pos:line="138" pos:column="16">FileOutputStream<pos:position pos:line="138" pos:column="32"/></name><argument_list pos:line="138" pos:column="32">(<argument><expr><name pos:line="138" pos:column="33">outFile<pos:position pos:line="138" pos:column="40"/></name></expr></argument>)<pos:position pos:line="138" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="139" pos:column="6"/></block> <catch pos:line="139" pos:column="7">catch <parameter_list pos:line="139" pos:column="13">(<parameter><decl><type><name pos:line="139" pos:column="14">FileNotFoundException<pos:position pos:line="139" pos:column="35"/></name></type> <name pos:line="139" pos:column="36">e<pos:position pos:line="139" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="139" pos:column="38"/></parameter_list> <block pos:line="139" pos:column="39">{
      <throw pos:line="140" pos:column="7">throw <expr><operator pos:line="140" pos:column="13">new<pos:position pos:line="140" pos:column="16"/></operator> <call><name pos:line="140" pos:column="17">UIMARuntimeException<pos:position pos:line="140" pos:column="37"/></name><argument_list pos:line="140" pos:column="37">(<argument><expr><name pos:line="140" pos:column="38">e<pos:position pos:line="140" pos:column="39"/></name></expr></argument>)<pos:position pos:line="140" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="41"/></throw>
    }<pos:position pos:line="141" pos:column="6"/></block></catch></try>
    <decl_stmt><decl><type><name pos:line="142" pos:column="5">InputStream<pos:position pos:line="142" pos:column="16"/></name></type> <name pos:line="142" pos:column="17">is<pos:position pos:line="142" pos:column="19"/></name> <init pos:line="142" pos:column="20">= <expr><call><name><name pos:line="142" pos:column="22">AnnotationViewGenerator<pos:position pos:line="142" pos:column="45"/></name><operator pos:line="142" pos:column="45">.<pos:position pos:line="142" pos:column="46"/></operator><name><name pos:line="142" pos:column="46">class<pos:position pos:line="142" pos:column="51"/></name><operator pos:line="142" pos:column="51">.<pos:position pos:line="142" pos:column="52"/></operator><name pos:line="142" pos:column="52">getResourceAsStream<pos:position pos:line="142" pos:column="71"/></name></name></name><argument_list pos:line="142" pos:column="71">(<argument><expr><name pos:line="142" pos:column="72">filename<pos:position pos:line="142" pos:column="80"/></name></expr></argument>)<pos:position pos:line="142" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="142" pos:column="82"/></decl_stmt>
    <try pos:line="143" pos:column="5">try <block pos:line="143" pos:column="9">{
      <decl_stmt><decl><type><name><name pos:line="144" pos:column="7">byte<pos:position pos:line="144" pos:column="11"/></name><index pos:line="144" pos:column="11">[]<pos:position pos:line="144" pos:column="13"/></index></name></type> <name pos:line="144" pos:column="14">buf<pos:position pos:line="144" pos:column="17"/></name> <init pos:line="144" pos:column="18">= <expr><operator pos:line="144" pos:column="20">new<pos:position pos:line="144" pos:column="23"/></operator> <name><name pos:line="144" pos:column="24">byte<pos:position pos:line="144" pos:column="28"/></name><index pos:line="144" pos:column="28">[<expr><literal type="number" pos:line="144" pos:column="29">1024<pos:position pos:line="144" pos:column="33"/></literal></expr>]<pos:position pos:line="144" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="144" pos:column="35"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="145" pos:column="7">int<pos:position pos:line="145" pos:column="10"/></name></type> <name pos:line="145" pos:column="11">numRead<pos:position pos:line="145" pos:column="18"/></name></decl>;<pos:position pos:line="145" pos:column="19"/></decl_stmt>
      <while pos:line="146" pos:column="7">while <condition pos:line="146" pos:column="13">(<expr><operator pos:line="146" pos:column="14">(<pos:position pos:line="146" pos:column="15"/></operator><name pos:line="146" pos:column="15">numRead<pos:position pos:line="146" pos:column="22"/></name> <operator pos:line="146" pos:column="23">=<pos:position pos:line="146" pos:column="24"/></operator> <call><name><name pos:line="146" pos:column="25">is<pos:position pos:line="146" pos:column="27"/></name><operator pos:line="146" pos:column="27">.<pos:position pos:line="146" pos:column="28"/></operator><name pos:line="146" pos:column="28">read<pos:position pos:line="146" pos:column="32"/></name></name><argument_list pos:line="146" pos:column="32">(<argument><expr><name pos:line="146" pos:column="33">buf<pos:position pos:line="146" pos:column="36"/></name></expr></argument>)<pos:position pos:line="146" pos:column="37"/></argument_list></call><operator pos:line="146" pos:column="37">)<pos:position pos:line="146" pos:column="38"/></operator> <operator pos:line="146" pos:column="39">&gt;<pos:position pos:line="146" pos:column="43"/></operator> <literal type="number" pos:line="146" pos:column="41">0<pos:position pos:line="146" pos:column="42"/></literal></expr>)<pos:position pos:line="146" pos:column="43"/></condition> <block pos:line="146" pos:column="44">{
        <expr_stmt><expr><call><name><name pos:line="147" pos:column="9">os<pos:position pos:line="147" pos:column="11"/></name><operator pos:line="147" pos:column="11">.<pos:position pos:line="147" pos:column="12"/></operator><name pos:line="147" pos:column="12">write<pos:position pos:line="147" pos:column="17"/></name></name><argument_list pos:line="147" pos:column="17">(<argument><expr><name pos:line="147" pos:column="18">buf<pos:position pos:line="147" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="147" pos:column="23">0<pos:position pos:line="147" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="147" pos:column="26">numRead<pos:position pos:line="147" pos:column="33"/></name></expr></argument>)<pos:position pos:line="147" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="35"/></expr_stmt>
      }<pos:position pos:line="148" pos:column="8"/></block></while>
    }<pos:position pos:line="149" pos:column="6"/></block> <catch pos:line="149" pos:column="7">catch <parameter_list pos:line="149" pos:column="13">(<parameter><decl><type><name pos:line="149" pos:column="14">IOException<pos:position pos:line="149" pos:column="25"/></name></type> <name pos:line="149" pos:column="26">e<pos:position pos:line="149" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="149" pos:column="28"/></parameter_list> <block pos:line="149" pos:column="29">{
      <throw pos:line="150" pos:column="7">throw <expr><operator pos:line="150" pos:column="13">new<pos:position pos:line="150" pos:column="16"/></operator> <call><name pos:line="150" pos:column="17">UIMARuntimeException<pos:position pos:line="150" pos:column="37"/></name><argument_list pos:line="150" pos:column="37">(<argument><expr><name pos:line="150" pos:column="38">e<pos:position pos:line="150" pos:column="39"/></name></expr></argument>)<pos:position pos:line="150" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="41"/></throw>
    }<pos:position pos:line="151" pos:column="6"/></block></catch> <finally pos:line="151" pos:column="7">finally <block pos:line="151" pos:column="15">{
      <try pos:line="152" pos:column="7">try <block pos:line="152" pos:column="11">{
        <expr_stmt><expr><call><name><name pos:line="153" pos:column="9">is<pos:position pos:line="153" pos:column="11"/></name><operator pos:line="153" pos:column="11">.<pos:position pos:line="153" pos:column="12"/></operator><name pos:line="153" pos:column="12">close<pos:position pos:line="153" pos:column="17"/></name></name><argument_list pos:line="153" pos:column="17">()<pos:position pos:line="153" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="154" pos:column="8"/></block> <catch pos:line="154" pos:column="9">catch <parameter_list pos:line="154" pos:column="15">(<parameter><decl><type><name pos:line="154" pos:column="16">IOException<pos:position pos:line="154" pos:column="27"/></name></type> <name pos:line="154" pos:column="28">e<pos:position pos:line="154" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="154" pos:column="30"/></parameter_list> <block pos:line="154" pos:column="31">{
        <comment type="line" pos:line="155" pos:column="9">// ignore close errors</comment>
      }<pos:position pos:line="156" pos:column="8"/></block></catch></try>
      <try pos:line="157" pos:column="7">try <block pos:line="157" pos:column="11">{
        <expr_stmt><expr><call><name><name pos:line="158" pos:column="9">os<pos:position pos:line="158" pos:column="11"/></name><operator pos:line="158" pos:column="11">.<pos:position pos:line="158" pos:column="12"/></operator><name pos:line="158" pos:column="12">close<pos:position pos:line="158" pos:column="17"/></name></name><argument_list pos:line="158" pos:column="17">()<pos:position pos:line="158" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="159" pos:column="8"/></block> <catch pos:line="159" pos:column="9">catch <parameter_list pos:line="159" pos:column="15">(<parameter><decl><type><name pos:line="159" pos:column="16">IOException<pos:position pos:line="159" pos:column="27"/></name></type> <name pos:line="159" pos:column="28">e<pos:position pos:line="159" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="159" pos:column="30"/></parameter_list> <block pos:line="159" pos:column="31">{
        <comment type="line" pos:line="160" pos:column="9">// ignore close errors</comment>
      }<pos:position pos:line="161" pos:column="8"/></block></catch></try>
    }<pos:position pos:line="162" pos:column="6"/></block></finally></try>
  }<pos:position pos:line="163" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="165" pos:column="3">/**
   * Processes a user-specified file map and produces three outputs:
   * &lt;UL&gt;
   * &lt;LI&gt;annotations.css - A CSS stylesheet for the annotation viewer&lt;/LI&gt;
   * &lt;LI&gt;legend.html - HTML document for legend (bottom pane of viewer)&lt;/LI&gt;
   * &lt;LI&gt;docFrame.xsl - An XSL stylesheet to be applied to annotated documents during calls to
   * {@link #processDocument(File)}.&lt;/LI&gt;
   * &lt;/UL&gt;
   * 
   * @param aStyleMap
   *          path to style map to be processed
   */</comment>
  <function><specifier pos:line="177" pos:column="3">public<pos:position pos:line="177" pos:column="9"/></specifier> <type><name pos:line="177" pos:column="10">void<pos:position pos:line="177" pos:column="14"/></name></type> <name pos:line="177" pos:column="15">processStyleMap<pos:position pos:line="177" pos:column="30"/></name><parameter_list pos:line="177" pos:column="30">(<parameter><decl><type><name pos:line="177" pos:column="31">File<pos:position pos:line="177" pos:column="35"/></name></type> <name pos:line="177" pos:column="36">aStyleMap<pos:position pos:line="177" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="177" pos:column="46"/></parameter_list> <throws pos:line="177" pos:column="47">throws <argument><expr><name pos:line="177" pos:column="54">TransformerException<pos:position pos:line="177" pos:column="74"/></name></expr></argument></throws> <block pos:line="177" pos:column="75">{
    <comment type="line" pos:line="178" pos:column="5">// Copy static files annotations.xsl, annotationViewer.js, and index.html to</comment>
    <comment type="line" pos:line="179" pos:column="5">// the output dir as well, where they will be used later</comment>
    <expr_stmt><expr><call><name pos:line="180" pos:column="5">writeToFile<pos:position pos:line="180" pos:column="16"/></name><argument_list pos:line="180" pos:column="16">(<argument><expr><literal type="string" pos:line="180" pos:column="17">"annotations.xsl"<pos:position pos:line="180" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="180" pos:column="36">mOutputDir<pos:position pos:line="180" pos:column="46"/></name></expr></argument>)<pos:position pos:line="180" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="181" pos:column="5">writeToFile<pos:position pos:line="181" pos:column="16"/></name><argument_list pos:line="181" pos:column="16">(<argument><expr><literal type="string" pos:line="181" pos:column="17">"annotationViewer.js"<pos:position pos:line="181" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="181" pos:column="40">mOutputDir<pos:position pos:line="181" pos:column="50"/></name></expr></argument>)<pos:position pos:line="181" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="182" pos:column="5">writeToFile<pos:position pos:line="182" pos:column="16"/></name><argument_list pos:line="182" pos:column="16">(<argument><expr><literal type="string" pos:line="182" pos:column="17">"index.html"<pos:position pos:line="182" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="182" pos:column="31">mOutputDir<pos:position pos:line="182" pos:column="41"/></name></expr></argument>)<pos:position pos:line="182" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="43"/></expr_stmt>
    
    <comment type="line" pos:line="184" pos:column="5">// Generate CSS from Style Map</comment>
    <decl_stmt><decl><type><name pos:line="185" pos:column="5">Transformer<pos:position pos:line="185" pos:column="16"/></name></type> <name pos:line="185" pos:column="17">cssTransformer<pos:position pos:line="185" pos:column="31"/></name> <init pos:line="185" pos:column="32">= <expr><call><name><name pos:line="185" pos:column="34">mStyleMapToCss<pos:position pos:line="185" pos:column="48"/></name><operator pos:line="185" pos:column="48">.<pos:position pos:line="185" pos:column="49"/></operator><name pos:line="185" pos:column="49">newTransformer<pos:position pos:line="185" pos:column="63"/></name></name><argument_list pos:line="185" pos:column="63">()<pos:position pos:line="185" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="185" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="186" pos:column="5">cssTransformer<pos:position pos:line="186" pos:column="19"/></name><operator pos:line="186" pos:column="19">.<pos:position pos:line="186" pos:column="20"/></operator><name pos:line="186" pos:column="20">transform<pos:position pos:line="186" pos:column="29"/></name></name><argument_list pos:line="186" pos:column="29">(<argument><expr><operator pos:line="186" pos:column="30">new<pos:position pos:line="186" pos:column="33"/></operator> <call><name pos:line="186" pos:column="34">StreamSource<pos:position pos:line="186" pos:column="46"/></name><argument_list pos:line="186" pos:column="46">(<argument><expr><name pos:line="186" pos:column="47">aStyleMap<pos:position pos:line="186" pos:column="56"/></name></expr></argument>)<pos:position pos:line="186" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="186" pos:column="59">new<pos:position pos:line="186" pos:column="62"/></operator> <call><name pos:line="186" pos:column="63">StreamResult<pos:position pos:line="186" pos:column="75"/></name><argument_list pos:line="186" pos:column="75">(<argument><expr><operator pos:line="186" pos:column="76">new<pos:position pos:line="186" pos:column="79"/></operator> <call><name pos:line="186" pos:column="80">File<pos:position pos:line="186" pos:column="84"/></name><argument_list pos:line="186" pos:column="84">(<argument><expr><name pos:line="186" pos:column="85">mOutputDir<pos:position pos:line="186" pos:column="95"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="187" pos:column="13">"annotations.css"<pos:position pos:line="187" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="31"/></argument_list></call><operator pos:line="187" pos:column="31">.<pos:position pos:line="187" pos:column="32"/></operator><call><name pos:line="187" pos:column="32">getAbsolutePath<pos:position pos:line="187" pos:column="47"/></name><argument_list pos:line="187" pos:column="47">()<pos:position pos:line="187" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="187" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="187" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="52"/></expr_stmt>
    <comment type="line" pos:line="188" pos:column="5">// NOTE: getAbsolutePath() seems to be necessary on Java 1.5</comment>

    <comment type="line" pos:line="190" pos:column="5">// Generate legend from Style Map</comment>
    <decl_stmt><decl><type><name pos:line="191" pos:column="5">Transformer<pos:position pos:line="191" pos:column="16"/></name></type> <name pos:line="191" pos:column="17">legendTransformer<pos:position pos:line="191" pos:column="34"/></name> <init pos:line="191" pos:column="35">= <expr><call><name><name pos:line="191" pos:column="37">mStyleMapToLegend<pos:position pos:line="191" pos:column="54"/></name><operator pos:line="191" pos:column="54">.<pos:position pos:line="191" pos:column="55"/></operator><name pos:line="191" pos:column="55">newTransformer<pos:position pos:line="191" pos:column="69"/></name></name><argument_list pos:line="191" pos:column="69">()<pos:position pos:line="191" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="191" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="192" pos:column="5">legendTransformer<pos:position pos:line="192" pos:column="22"/></name><operator pos:line="192" pos:column="22">.<pos:position pos:line="192" pos:column="23"/></operator><name pos:line="192" pos:column="23">transform<pos:position pos:line="192" pos:column="32"/></name></name><argument_list pos:line="192" pos:column="32">(<argument><expr><operator pos:line="192" pos:column="33">new<pos:position pos:line="192" pos:column="36"/></operator> <call><name pos:line="192" pos:column="37">StreamSource<pos:position pos:line="192" pos:column="49"/></name><argument_list pos:line="192" pos:column="49">(<argument><expr><name pos:line="192" pos:column="50">aStyleMap<pos:position pos:line="192" pos:column="59"/></name></expr></argument>)<pos:position pos:line="192" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="192" pos:column="62">new<pos:position pos:line="192" pos:column="65"/></operator> <call><name pos:line="192" pos:column="66">StreamResult<pos:position pos:line="192" pos:column="78"/></name><argument_list pos:line="192" pos:column="78">(<argument><expr><operator pos:line="192" pos:column="79">new<pos:position pos:line="192" pos:column="82"/></operator> <call><name pos:line="192" pos:column="83">File<pos:position pos:line="192" pos:column="87"/></name><argument_list pos:line="192" pos:column="87">(<argument><expr><name pos:line="192" pos:column="88">mOutputDir<pos:position pos:line="192" pos:column="98"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="193" pos:column="13">"legend.html"<pos:position pos:line="193" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="27"/></argument_list></call><operator pos:line="193" pos:column="27">.<pos:position pos:line="193" pos:column="28"/></operator><call><name pos:line="193" pos:column="28">getAbsolutePath<pos:position pos:line="193" pos:column="43"/></name><argument_list pos:line="193" pos:column="43">()<pos:position pos:line="193" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="193" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="193" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="48"/></expr_stmt>
    <comment type="line" pos:line="194" pos:column="5">// NOTE: getAbsolutePath() seems to be necessary on Java 1.5</comment>

    <comment type="line" pos:line="196" pos:column="5">// Generate DocFrameXsl from Style Map</comment>
    <decl_stmt><decl><type><name pos:line="197" pos:column="5">Transformer<pos:position pos:line="197" pos:column="16"/></name></type> <name pos:line="197" pos:column="17">docFrameXslTransformer<pos:position pos:line="197" pos:column="39"/></name> <init pos:line="197" pos:column="40">= <expr><call><name><name pos:line="197" pos:column="42">mStyleMapToDocFrameXsl<pos:position pos:line="197" pos:column="64"/></name><operator pos:line="197" pos:column="64">.<pos:position pos:line="197" pos:column="65"/></operator><name pos:line="197" pos:column="65">newTransformer<pos:position pos:line="197" pos:column="79"/></name></name><argument_list pos:line="197" pos:column="79">()<pos:position pos:line="197" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="197" pos:column="82"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="198" pos:column="5">docFrameXslTransformer<pos:position pos:line="198" pos:column="27"/></name><operator pos:line="198" pos:column="27">.<pos:position pos:line="198" pos:column="28"/></operator><name pos:line="198" pos:column="28">transform<pos:position pos:line="198" pos:column="37"/></name></name><argument_list pos:line="198" pos:column="37">(<argument><expr><operator pos:line="198" pos:column="38">new<pos:position pos:line="198" pos:column="41"/></operator> <call><name pos:line="198" pos:column="42">StreamSource<pos:position pos:line="198" pos:column="54"/></name><argument_list pos:line="198" pos:column="54">(<argument><expr><name pos:line="198" pos:column="55">aStyleMap<pos:position pos:line="198" pos:column="64"/></name></expr></argument>)<pos:position pos:line="198" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="198" pos:column="67">new<pos:position pos:line="198" pos:column="70"/></operator> <call><name pos:line="198" pos:column="71">StreamResult<pos:position pos:line="198" pos:column="83"/></name><argument_list pos:line="198" pos:column="83">(<argument><expr><operator pos:line="198" pos:column="84">new<pos:position pos:line="198" pos:column="87"/></operator> <call><name pos:line="198" pos:column="88">File<pos:position pos:line="198" pos:column="92"/></name><argument_list pos:line="198" pos:column="92">(
            <argument><expr><name pos:line="199" pos:column="13">mOutputDir<pos:position pos:line="199" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="25">"docFrame.xsl"<pos:position pos:line="199" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="40"/></argument_list></call><operator pos:line="199" pos:column="40">.<pos:position pos:line="199" pos:column="41"/></operator><call><name pos:line="199" pos:column="41">getAbsolutePath<pos:position pos:line="199" pos:column="56"/></name><argument_list pos:line="199" pos:column="56">()<pos:position pos:line="199" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="199" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="199" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="61"/></expr_stmt>
    <comment type="line" pos:line="200" pos:column="5">// NOTE: getAbsolutePath() seems to be necessary on Java 1.5</comment>
  }<pos:position pos:line="201" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="203" pos:column="3">/**
   * Processes an annotated document using the docFrame.xsl stylsheet generated by a previous call
   * to {@link #processStyleMap(File)}. Generates a file named docView.html, which represents the
   * HTML view of the annotated document.
   * 
   * @param aInlineXmlDoc
   *          path to annotated document to be processed
   */</comment>
  <function><specifier pos:line="211" pos:column="3">public<pos:position pos:line="211" pos:column="9"/></specifier> <type><name pos:line="211" pos:column="10">void<pos:position pos:line="211" pos:column="14"/></name></type> <name pos:line="211" pos:column="15">processDocument<pos:position pos:line="211" pos:column="30"/></name><parameter_list pos:line="211" pos:column="30">(<parameter><decl><type><name pos:line="211" pos:column="31">File<pos:position pos:line="211" pos:column="35"/></name></type> <name pos:line="211" pos:column="36">aInlineXmlDoc<pos:position pos:line="211" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="211" pos:column="50"/></parameter_list> <throws pos:line="211" pos:column="51">throws <argument><expr><name pos:line="211" pos:column="58">TransformerException<pos:position pos:line="211" pos:column="78"/></name></expr></argument></throws> <block pos:line="211" pos:column="79">{
    <comment type="line" pos:line="212" pos:column="5">// Generate document view HTML from Inline XML</comment>
    <decl_stmt><decl><type><name pos:line="213" pos:column="5">Transformer<pos:position pos:line="213" pos:column="16"/></name></type> <name pos:line="213" pos:column="17">docHtmlTransformer<pos:position pos:line="213" pos:column="35"/></name> <init pos:line="213" pos:column="36">= <expr><call><name><name pos:line="213" pos:column="38">mTFactory<pos:position pos:line="213" pos:column="47"/></name><operator pos:line="213" pos:column="47">.<pos:position pos:line="213" pos:column="48"/></operator><name pos:line="213" pos:column="48">newTransformer<pos:position pos:line="213" pos:column="62"/></name></name><argument_list pos:line="213" pos:column="62">(<argument><expr><operator pos:line="213" pos:column="63">new<pos:position pos:line="213" pos:column="66"/></operator> <call><name pos:line="213" pos:column="67">StreamSource<pos:position pos:line="213" pos:column="79"/></name><argument_list pos:line="213" pos:column="79">(<argument><expr><operator pos:line="213" pos:column="80">new<pos:position pos:line="213" pos:column="83"/></operator> <call><name pos:line="213" pos:column="84">File<pos:position pos:line="213" pos:column="88"/></name><argument_list pos:line="213" pos:column="88">(<argument><expr><name pos:line="213" pos:column="89">mOutputDir<pos:position pos:line="213" pos:column="99"/></name></expr></argument>,
            <argument><expr><literal type="string" pos:line="214" pos:column="13">"docFrame.xsl"<pos:position pos:line="214" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="214" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="214" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="214" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="215" pos:column="5">docHtmlTransformer<pos:position pos:line="215" pos:column="23"/></name><operator pos:line="215" pos:column="23">.<pos:position pos:line="215" pos:column="24"/></operator><name pos:line="215" pos:column="24">transform<pos:position pos:line="215" pos:column="33"/></name></name><argument_list pos:line="215" pos:column="33">(<argument><expr><operator pos:line="215" pos:column="34">new<pos:position pos:line="215" pos:column="37"/></operator> <call><name pos:line="215" pos:column="38">StreamSource<pos:position pos:line="215" pos:column="50"/></name><argument_list pos:line="215" pos:column="50">(<argument><expr><name pos:line="215" pos:column="51">aInlineXmlDoc<pos:position pos:line="215" pos:column="64"/></name></expr></argument>)<pos:position pos:line="215" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="215" pos:column="67">new<pos:position pos:line="215" pos:column="70"/></operator> <call><name pos:line="215" pos:column="71">StreamResult<pos:position pos:line="215" pos:column="83"/></name><argument_list pos:line="215" pos:column="83">(<argument><expr><operator pos:line="215" pos:column="84">new<pos:position pos:line="215" pos:column="87"/></operator> <call><name pos:line="215" pos:column="88">File<pos:position pos:line="215" pos:column="92"/></name><argument_list pos:line="215" pos:column="92">(
            <argument><expr><name pos:line="216" pos:column="13">mOutputDir<pos:position pos:line="216" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="25">"docView.html"<pos:position pos:line="216" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="40"/></argument_list></call><operator pos:line="216" pos:column="40">.<pos:position pos:line="216" pos:column="41"/></operator><call><name pos:line="216" pos:column="41">getAbsolutePath<pos:position pos:line="216" pos:column="56"/></name><argument_list pos:line="216" pos:column="56">()<pos:position pos:line="216" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="216" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="216" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="61"/></expr_stmt>
    <comment type="line" pos:line="217" pos:column="5">// NOTE: getAbsolutePath() seems to be necessary on Java 1.5</comment>

  }<pos:position pos:line="219" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="221" pos:column="3">/**
   * Automatically generates a style map for the given text analysis engine. The style map will be
   * returned as an XML string.
   * 
   * @param aTaeMetaData
   *          Metadata of the Text Analysis Engine whose outputs will be viewed using the generated
   *          style map.
   * 
   * @return a String containing the XML style map
   */</comment>
  <function><specifier pos:line="231" pos:column="3">public<pos:position pos:line="231" pos:column="9"/></specifier> <specifier pos:line="231" pos:column="10">static<pos:position pos:line="231" pos:column="16"/></specifier> <type><name pos:line="231" pos:column="17">String<pos:position pos:line="231" pos:column="23"/></name></type> <name pos:line="231" pos:column="24">autoGenerateStyleMap<pos:position pos:line="231" pos:column="44"/></name><parameter_list pos:line="231" pos:column="44">(<parameter><decl><type><name pos:line="231" pos:column="45">AnalysisEngineMetaData<pos:position pos:line="231" pos:column="67"/></name></type> <name pos:line="231" pos:column="68">aTaeMetaData<pos:position pos:line="231" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="231" pos:column="81"/></parameter_list> <block pos:line="231" pos:column="82">{
    <comment type="line" pos:line="232" pos:column="5">// styles used in automatically generated style maps</comment>

    <decl_stmt><decl><type><specifier pos:line="234" pos:column="5">final<pos:position pos:line="234" pos:column="10"/></specifier> <name><name pos:line="234" pos:column="11">String<pos:position pos:line="234" pos:column="17"/></name><index pos:line="234" pos:column="17">[]<pos:position pos:line="234" pos:column="19"/></index></name></type> <name pos:line="234" pos:column="20">STYLES<pos:position pos:line="234" pos:column="26"/></name> <init pos:line="234" pos:column="27">= <expr><block pos:line="234" pos:column="29">{ <expr><literal type="string" pos:line="234" pos:column="31">"color:black; background:lightblue;"<pos:position pos:line="234" pos:column="67"/></literal></expr>,
        <expr><literal type="string" pos:line="235" pos:column="9">"color:black; background:lightgreen;"<pos:position pos:line="235" pos:column="46"/></literal></expr>, <expr><literal type="string" pos:line="235" pos:column="48">"color:black; background:orange;"<pos:position pos:line="235" pos:column="81"/></literal></expr>,
        <expr><literal type="string" pos:line="236" pos:column="9">"color:black; background:yellow;"<pos:position pos:line="236" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="236" pos:column="44">"color:black; background:pink;"<pos:position pos:line="236" pos:column="75"/></literal></expr>,
        <expr><literal type="string" pos:line="237" pos:column="9">"color:black; background:salmon;"<pos:position pos:line="237" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="237" pos:column="44">"color:black; background:cyan;"<pos:position pos:line="237" pos:column="75"/></literal></expr>,
        <expr><literal type="string" pos:line="238" pos:column="9">"color:black; background:violet;"<pos:position pos:line="238" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="238" pos:column="44">"color:black; background:tan;"<pos:position pos:line="238" pos:column="74"/></literal></expr>,
        <expr><literal type="string" pos:line="239" pos:column="9">"color:white; background:brown;"<pos:position pos:line="239" pos:column="41"/></literal></expr>, <expr><literal type="string" pos:line="239" pos:column="43">"color:white; background:blue;"<pos:position pos:line="239" pos:column="74"/></literal></expr>,
        <expr><literal type="string" pos:line="240" pos:column="9">"color:white; background:green;"<pos:position pos:line="240" pos:column="41"/></literal></expr>, <expr><literal type="string" pos:line="240" pos:column="43">"color:white; background:red;"<pos:position pos:line="240" pos:column="73"/></literal></expr>,
        <expr><literal type="string" pos:line="241" pos:column="9">"color:white; background:mediumpurple;"<pos:position pos:line="241" pos:column="48"/></literal></expr> }<pos:position pos:line="241" pos:column="50"/></block></expr></init></decl>;<pos:position pos:line="241" pos:column="51"/></decl_stmt>

    <comment type="line" pos:line="243" pos:column="5">// get list of output types from TAE</comment>
    <decl_stmt><decl><type><name pos:line="244" pos:column="5">ArrayList<pos:position pos:line="244" pos:column="14"/></name></type> <name pos:line="244" pos:column="15">outputTypes<pos:position pos:line="244" pos:column="26"/></name> <init pos:line="244" pos:column="27">= <expr><operator pos:line="244" pos:column="29">new<pos:position pos:line="244" pos:column="32"/></operator> <call><name pos:line="244" pos:column="33">ArrayList<pos:position pos:line="244" pos:column="42"/></name><argument_list pos:line="244" pos:column="42">()<pos:position pos:line="244" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="244" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="245" pos:column="5">Capability<pos:position pos:line="245" pos:column="15"/></name><index pos:line="245" pos:column="15">[]<pos:position pos:line="245" pos:column="17"/></index></name></type> <name pos:line="245" pos:column="18">capabilities<pos:position pos:line="245" pos:column="30"/></name> <init pos:line="245" pos:column="31">= <expr><call><name><name pos:line="245" pos:column="33">aTaeMetaData<pos:position pos:line="245" pos:column="45"/></name><operator pos:line="245" pos:column="45">.<pos:position pos:line="245" pos:column="46"/></operator><name pos:line="245" pos:column="46">getCapabilities<pos:position pos:line="245" pos:column="61"/></name></name><argument_list pos:line="245" pos:column="61">()<pos:position pos:line="245" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="245" pos:column="64"/></decl_stmt>

    <for pos:line="247" pos:column="5">for <control pos:line="247" pos:column="9">(<init><decl><type><name pos:line="247" pos:column="10">int<pos:position pos:line="247" pos:column="13"/></name></type> <name pos:line="247" pos:column="14">i<pos:position pos:line="247" pos:column="15"/></name> <init pos:line="247" pos:column="16">= <expr><literal type="number" pos:line="247" pos:column="18">0<pos:position pos:line="247" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="247" pos:column="20"/></init> <condition><expr><name pos:line="247" pos:column="21">i<pos:position pos:line="247" pos:column="22"/></name> <operator pos:line="247" pos:column="23">&lt;<pos:position pos:line="247" pos:column="27"/></operator> <name><name pos:line="247" pos:column="25">capabilities<pos:position pos:line="247" pos:column="37"/></name><operator pos:line="247" pos:column="37">.<pos:position pos:line="247" pos:column="38"/></operator><name pos:line="247" pos:column="38">length<pos:position pos:line="247" pos:column="44"/></name></name></expr>;<pos:position pos:line="247" pos:column="45"/></condition> <incr><expr><name pos:line="247" pos:column="46">i<pos:position pos:line="247" pos:column="47"/></name><operator pos:line="247" pos:column="47">++<pos:position pos:line="247" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="247" pos:column="50"/></control> <block pos:line="247" pos:column="51">{
      <decl_stmt><decl><type><name><name pos:line="248" pos:column="7">TypeOrFeature<pos:position pos:line="248" pos:column="20"/></name><index pos:line="248" pos:column="20">[]<pos:position pos:line="248" pos:column="22"/></index></name></type> <name pos:line="248" pos:column="23">outputs<pos:position pos:line="248" pos:column="30"/></name> <init pos:line="248" pos:column="31">= <expr><name><name pos:line="248" pos:column="33">capabilities<pos:position pos:line="248" pos:column="45"/></name><index pos:line="248" pos:column="45">[<expr><name pos:line="248" pos:column="46">i<pos:position pos:line="248" pos:column="47"/></name></expr>]<pos:position pos:line="248" pos:column="48"/></index></name><operator pos:line="248" pos:column="48">.<pos:position pos:line="248" pos:column="49"/></operator><call><name pos:line="248" pos:column="49">getOutputs<pos:position pos:line="248" pos:column="59"/></name><argument_list pos:line="248" pos:column="59">()<pos:position pos:line="248" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="248" pos:column="62"/></decl_stmt>

      <for pos:line="250" pos:column="7">for <control pos:line="250" pos:column="11">(<init><decl><type><name pos:line="250" pos:column="12">int<pos:position pos:line="250" pos:column="15"/></name></type> <name pos:line="250" pos:column="16">j<pos:position pos:line="250" pos:column="17"/></name> <init pos:line="250" pos:column="18">= <expr><literal type="number" pos:line="250" pos:column="20">0<pos:position pos:line="250" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="250" pos:column="22"/></init> <condition><expr><name pos:line="250" pos:column="23">j<pos:position pos:line="250" pos:column="24"/></name> <operator pos:line="250" pos:column="25">&lt;<pos:position pos:line="250" pos:column="29"/></operator> <name><name pos:line="250" pos:column="27">outputs<pos:position pos:line="250" pos:column="34"/></name><operator pos:line="250" pos:column="34">.<pos:position pos:line="250" pos:column="35"/></operator><name pos:line="250" pos:column="35">length<pos:position pos:line="250" pos:column="41"/></name></name></expr>;<pos:position pos:line="250" pos:column="42"/></condition> <incr><expr><name pos:line="250" pos:column="43">j<pos:position pos:line="250" pos:column="44"/></name><operator pos:line="250" pos:column="44">++<pos:position pos:line="250" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="250" pos:column="47"/></control> <block pos:line="250" pos:column="48">{
        <if pos:line="251" pos:column="9">if <condition pos:line="251" pos:column="12">(<expr><name><name pos:line="251" pos:column="13">outputs<pos:position pos:line="251" pos:column="20"/></name><index pos:line="251" pos:column="20">[<expr><name pos:line="251" pos:column="21">j<pos:position pos:line="251" pos:column="22"/></name></expr>]<pos:position pos:line="251" pos:column="23"/></index></name><operator pos:line="251" pos:column="23">.<pos:position pos:line="251" pos:column="24"/></operator><call><name pos:line="251" pos:column="24">isType<pos:position pos:line="251" pos:column="30"/></name><argument_list pos:line="251" pos:column="30">()<pos:position pos:line="251" pos:column="32"/></argument_list></call> <operator pos:line="251" pos:column="33">&amp;&amp;<pos:position pos:line="251" pos:column="43"/></operator> <operator pos:line="251" pos:column="36">!<pos:position pos:line="251" pos:column="37"/></operator><call><name><name pos:line="251" pos:column="37">outputTypes<pos:position pos:line="251" pos:column="48"/></name><operator pos:line="251" pos:column="48">.<pos:position pos:line="251" pos:column="49"/></operator><name pos:line="251" pos:column="49">contains<pos:position pos:line="251" pos:column="57"/></name></name><argument_list pos:line="251" pos:column="57">(<argument><expr><name><name pos:line="251" pos:column="58">outputs<pos:position pos:line="251" pos:column="65"/></name><index pos:line="251" pos:column="65">[<expr><name pos:line="251" pos:column="66">j<pos:position pos:line="251" pos:column="67"/></name></expr>]<pos:position pos:line="251" pos:column="68"/></index></name><operator pos:line="251" pos:column="68">.<pos:position pos:line="251" pos:column="69"/></operator><call><name pos:line="251" pos:column="69">getName<pos:position pos:line="251" pos:column="76"/></name><argument_list pos:line="251" pos:column="76">()<pos:position pos:line="251" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="251" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="251" pos:column="80"/></condition><then pos:line="251" pos:column="80"> <block pos:line="251" pos:column="81">{
          <expr_stmt><expr><call><name><name pos:line="252" pos:column="11">outputTypes<pos:position pos:line="252" pos:column="22"/></name><operator pos:line="252" pos:column="22">.<pos:position pos:line="252" pos:column="23"/></operator><name pos:line="252" pos:column="23">add<pos:position pos:line="252" pos:column="26"/></name></name><argument_list pos:line="252" pos:column="26">(<argument><expr><name><name pos:line="252" pos:column="27">outputs<pos:position pos:line="252" pos:column="34"/></name><index pos:line="252" pos:column="34">[<expr><name pos:line="252" pos:column="35">j<pos:position pos:line="252" pos:column="36"/></name></expr>]<pos:position pos:line="252" pos:column="37"/></index></name><operator pos:line="252" pos:column="37">.<pos:position pos:line="252" pos:column="38"/></operator><call><name pos:line="252" pos:column="38">getName<pos:position pos:line="252" pos:column="45"/></name><argument_list pos:line="252" pos:column="45">()<pos:position pos:line="252" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="252" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="253" pos:column="10"/></block></then></if>
      }<pos:position pos:line="254" pos:column="8"/></block></for>
    }<pos:position pos:line="255" pos:column="6"/></block></for>

    <comment type="line" pos:line="257" pos:column="5">// generate style map by mapping each type to a background color</comment>
    <decl_stmt><decl><type><name pos:line="258" pos:column="5">StringBuffer<pos:position pos:line="258" pos:column="17"/></name></type> <name pos:line="258" pos:column="18">buf<pos:position pos:line="258" pos:column="21"/></name> <init pos:line="258" pos:column="22">= <expr><operator pos:line="258" pos:column="24">new<pos:position pos:line="258" pos:column="27"/></operator> <call><name pos:line="258" pos:column="28">StringBuffer<pos:position pos:line="258" pos:column="40"/></name><argument_list pos:line="258" pos:column="40">()<pos:position pos:line="258" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="258" pos:column="43"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="260" pos:column="5">buf<pos:position pos:line="260" pos:column="8"/></name><operator pos:line="260" pos:column="8">.<pos:position pos:line="260" pos:column="9"/></operator><name pos:line="260" pos:column="9">append<pos:position pos:line="260" pos:column="15"/></name></name><argument_list pos:line="260" pos:column="15">(<argument><expr><literal type="string" pos:line="260" pos:column="16">"&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n"<pos:position pos:line="260" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="261" pos:column="5">buf<pos:position pos:line="261" pos:column="8"/></name><operator pos:line="261" pos:column="8">.<pos:position pos:line="261" pos:column="9"/></operator><name pos:line="261" pos:column="9">append<pos:position pos:line="261" pos:column="15"/></name></name><argument_list pos:line="261" pos:column="15">(<argument><expr><literal type="string" pos:line="261" pos:column="16">"&lt;styleMap&gt;\n"<pos:position pos:line="261" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="32"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="263" pos:column="5">int<pos:position pos:line="263" pos:column="8"/></name></type> <name pos:line="263" pos:column="9">i<pos:position pos:line="263" pos:column="10"/></name> <init pos:line="263" pos:column="11">= <expr><literal type="number" pos:line="263" pos:column="13">0<pos:position pos:line="263" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="263" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="264" pos:column="5">Iterator<pos:position pos:line="264" pos:column="13"/></name></type> <name pos:line="264" pos:column="14">it<pos:position pos:line="264" pos:column="16"/></name> <init pos:line="264" pos:column="17">= <expr><call><name><name pos:line="264" pos:column="19">outputTypes<pos:position pos:line="264" pos:column="30"/></name><operator pos:line="264" pos:column="30">.<pos:position pos:line="264" pos:column="31"/></operator><name pos:line="264" pos:column="31">iterator<pos:position pos:line="264" pos:column="39"/></name></name><argument_list pos:line="264" pos:column="39">()<pos:position pos:line="264" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="264" pos:column="42"/></decl_stmt>

    <while pos:line="266" pos:column="5">while <condition pos:line="266" pos:column="11">(<expr><call><name><name pos:line="266" pos:column="12">it<pos:position pos:line="266" pos:column="14"/></name><operator pos:line="266" pos:column="14">.<pos:position pos:line="266" pos:column="15"/></operator><name pos:line="266" pos:column="15">hasNext<pos:position pos:line="266" pos:column="22"/></name></name><argument_list pos:line="266" pos:column="22">()<pos:position pos:line="266" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="266" pos:column="25"/></condition> <block pos:line="266" pos:column="26">{
      <decl_stmt><decl><type><name pos:line="267" pos:column="7">String<pos:position pos:line="267" pos:column="13"/></name></type> <name pos:line="267" pos:column="14">outputType<pos:position pos:line="267" pos:column="24"/></name> <init pos:line="267" pos:column="25">= <expr><operator pos:line="267" pos:column="27">(<pos:position pos:line="267" pos:column="28"/></operator><name pos:line="267" pos:column="28">String<pos:position pos:line="267" pos:column="34"/></name><operator pos:line="267" pos:column="34">)<pos:position pos:line="267" pos:column="35"/></operator> <call><name><name pos:line="267" pos:column="36">it<pos:position pos:line="267" pos:column="38"/></name><operator pos:line="267" pos:column="38">.<pos:position pos:line="267" pos:column="39"/></operator><name pos:line="267" pos:column="39">next<pos:position pos:line="267" pos:column="43"/></name></name><argument_list pos:line="267" pos:column="43">()<pos:position pos:line="267" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="267" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="268" pos:column="7">String<pos:position pos:line="268" pos:column="13"/></name></type> <name pos:line="268" pos:column="14">label<pos:position pos:line="268" pos:column="19"/></name> <init pos:line="268" pos:column="20">= <expr><name pos:line="268" pos:column="22">outputType<pos:position pos:line="268" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="268" pos:column="33"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="269" pos:column="7">int<pos:position pos:line="269" pos:column="10"/></name></type> <name pos:line="269" pos:column="11">lastDot<pos:position pos:line="269" pos:column="18"/></name> <init pos:line="269" pos:column="19">= <expr><call><name><name pos:line="269" pos:column="21">outputType<pos:position pos:line="269" pos:column="31"/></name><operator pos:line="269" pos:column="31">.<pos:position pos:line="269" pos:column="32"/></operator><name pos:line="269" pos:column="32">lastIndexOf<pos:position pos:line="269" pos:column="43"/></name></name><argument_list pos:line="269" pos:column="43">(<argument><expr><literal type="char" pos:line="269" pos:column="44">'.'<pos:position pos:line="269" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="269" pos:column="49"/></decl_stmt>
      <if pos:line="270" pos:column="7">if <condition pos:line="270" pos:column="10">(<expr><name pos:line="270" pos:column="11">lastDot<pos:position pos:line="270" pos:column="18"/></name> <operator pos:line="270" pos:column="19">&gt;<pos:position pos:line="270" pos:column="23"/></operator> <operator pos:line="270" pos:column="21">-<pos:position pos:line="270" pos:column="22"/></operator><literal type="number" pos:line="270" pos:column="22">1<pos:position pos:line="270" pos:column="23"/></literal></expr>)<pos:position pos:line="270" pos:column="24"/></condition><then pos:line="270" pos:column="24"> <block pos:line="270" pos:column="25">{
        <expr_stmt><expr><name pos:line="271" pos:column="9">label<pos:position pos:line="271" pos:column="14"/></name> <operator pos:line="271" pos:column="15">=<pos:position pos:line="271" pos:column="16"/></operator> <call><name><name pos:line="271" pos:column="17">outputType<pos:position pos:line="271" pos:column="27"/></name><operator pos:line="271" pos:column="27">.<pos:position pos:line="271" pos:column="28"/></operator><name pos:line="271" pos:column="28">substring<pos:position pos:line="271" pos:column="37"/></name></name><argument_list pos:line="271" pos:column="37">(<argument><expr><name pos:line="271" pos:column="38">lastDot<pos:position pos:line="271" pos:column="45"/></name> <operator pos:line="271" pos:column="46">+<pos:position pos:line="271" pos:column="47"/></operator> <literal type="number" pos:line="271" pos:column="48">1<pos:position pos:line="271" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="272" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name><name pos:line="274" pos:column="7">buf<pos:position pos:line="274" pos:column="10"/></name><operator pos:line="274" pos:column="10">.<pos:position pos:line="274" pos:column="11"/></operator><name pos:line="274" pos:column="11">append<pos:position pos:line="274" pos:column="17"/></name></name><argument_list pos:line="274" pos:column="17">(<argument><expr><literal type="string" pos:line="274" pos:column="18">"&lt;rule&gt;\n"<pos:position pos:line="274" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="275" pos:column="7">buf<pos:position pos:line="275" pos:column="10"/></name><operator pos:line="275" pos:column="10">.<pos:position pos:line="275" pos:column="11"/></operator><name pos:line="275" pos:column="11">append<pos:position pos:line="275" pos:column="17"/></name></name><argument_list pos:line="275" pos:column="17">(<argument><expr><literal type="string" pos:line="275" pos:column="18">"&lt;pattern&gt;"<pos:position pos:line="275" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="276" pos:column="7">buf<pos:position pos:line="276" pos:column="10"/></name><operator pos:line="276" pos:column="10">.<pos:position pos:line="276" pos:column="11"/></operator><name pos:line="276" pos:column="11">append<pos:position pos:line="276" pos:column="17"/></name></name><argument_list pos:line="276" pos:column="17">(<argument><expr><name pos:line="276" pos:column="18">outputType<pos:position pos:line="276" pos:column="28"/></name></expr></argument>)<pos:position pos:line="276" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="277" pos:column="7">buf<pos:position pos:line="277" pos:column="10"/></name><operator pos:line="277" pos:column="10">.<pos:position pos:line="277" pos:column="11"/></operator><name pos:line="277" pos:column="11">append<pos:position pos:line="277" pos:column="17"/></name></name><argument_list pos:line="277" pos:column="17">(<argument><expr><literal type="string" pos:line="277" pos:column="18">"&lt;/pattern&gt;\n"<pos:position pos:line="277" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="278" pos:column="7">buf<pos:position pos:line="278" pos:column="10"/></name><operator pos:line="278" pos:column="10">.<pos:position pos:line="278" pos:column="11"/></operator><name pos:line="278" pos:column="11">append<pos:position pos:line="278" pos:column="17"/></name></name><argument_list pos:line="278" pos:column="17">(<argument><expr><literal type="string" pos:line="278" pos:column="18">"&lt;label&gt;"<pos:position pos:line="278" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="278" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="279" pos:column="7">buf<pos:position pos:line="279" pos:column="10"/></name><operator pos:line="279" pos:column="10">.<pos:position pos:line="279" pos:column="11"/></operator><name pos:line="279" pos:column="11">append<pos:position pos:line="279" pos:column="17"/></name></name><argument_list pos:line="279" pos:column="17">(<argument><expr><name pos:line="279" pos:column="18">label<pos:position pos:line="279" pos:column="23"/></name></expr></argument>)<pos:position pos:line="279" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="280" pos:column="7">buf<pos:position pos:line="280" pos:column="10"/></name><operator pos:line="280" pos:column="10">.<pos:position pos:line="280" pos:column="11"/></operator><name pos:line="280" pos:column="11">append<pos:position pos:line="280" pos:column="17"/></name></name><argument_list pos:line="280" pos:column="17">(<argument><expr><literal type="string" pos:line="280" pos:column="18">"&lt;/label&gt;\n"<pos:position pos:line="280" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="280" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="281" pos:column="7">buf<pos:position pos:line="281" pos:column="10"/></name><operator pos:line="281" pos:column="10">.<pos:position pos:line="281" pos:column="11"/></operator><name pos:line="281" pos:column="11">append<pos:position pos:line="281" pos:column="17"/></name></name><argument_list pos:line="281" pos:column="17">(<argument><expr><literal type="string" pos:line="281" pos:column="18">"&lt;style&gt;"<pos:position pos:line="281" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="281" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="282" pos:column="7">buf<pos:position pos:line="282" pos:column="10"/></name><operator pos:line="282" pos:column="10">.<pos:position pos:line="282" pos:column="11"/></operator><name pos:line="282" pos:column="11">append<pos:position pos:line="282" pos:column="17"/></name></name><argument_list pos:line="282" pos:column="17">(<argument><expr><name><name pos:line="282" pos:column="18">STYLES<pos:position pos:line="282" pos:column="24"/></name><index pos:line="282" pos:column="24">[<expr><name pos:line="282" pos:column="25">i<pos:position pos:line="282" pos:column="26"/></name> <operator pos:line="282" pos:column="27">%<pos:position pos:line="282" pos:column="28"/></operator> <name><name pos:line="282" pos:column="29">STYLES<pos:position pos:line="282" pos:column="35"/></name><operator pos:line="282" pos:column="35">.<pos:position pos:line="282" pos:column="36"/></operator><name pos:line="282" pos:column="36">length<pos:position pos:line="282" pos:column="42"/></name></name></expr>]<pos:position pos:line="282" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="282" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="283" pos:column="7">buf<pos:position pos:line="283" pos:column="10"/></name><operator pos:line="283" pos:column="10">.<pos:position pos:line="283" pos:column="11"/></operator><name pos:line="283" pos:column="11">append<pos:position pos:line="283" pos:column="17"/></name></name><argument_list pos:line="283" pos:column="17">(<argument><expr><literal type="string" pos:line="283" pos:column="18">"&lt;/style&gt;\n"<pos:position pos:line="283" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="283" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="284" pos:column="7">buf<pos:position pos:line="284" pos:column="10"/></name><operator pos:line="284" pos:column="10">.<pos:position pos:line="284" pos:column="11"/></operator><name pos:line="284" pos:column="11">append<pos:position pos:line="284" pos:column="17"/></name></name><argument_list pos:line="284" pos:column="17">(<argument><expr><literal type="string" pos:line="284" pos:column="18">"&lt;/rule&gt;\n"<pos:position pos:line="284" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="284" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name pos:line="285" pos:column="7">i<pos:position pos:line="285" pos:column="8"/></name><operator pos:line="285" pos:column="8">++<pos:position pos:line="285" pos:column="10"/></operator></expr>;<pos:position pos:line="285" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="286" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="288" pos:column="5">buf<pos:position pos:line="288" pos:column="8"/></name><operator pos:line="288" pos:column="8">.<pos:position pos:line="288" pos:column="9"/></operator><name pos:line="288" pos:column="9">append<pos:position pos:line="288" pos:column="15"/></name></name><argument_list pos:line="288" pos:column="15">(<argument><expr><literal type="string" pos:line="288" pos:column="16">"&lt;/styleMap&gt;\n"<pos:position pos:line="288" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="33"/></expr_stmt>

    <return pos:line="290" pos:column="5">return <expr><call><name><name pos:line="290" pos:column="12">buf<pos:position pos:line="290" pos:column="15"/></name><operator pos:line="290" pos:column="15">.<pos:position pos:line="290" pos:column="16"/></operator><name pos:line="290" pos:column="16">toString<pos:position pos:line="290" pos:column="24"/></name></name><argument_list pos:line="290" pos:column="24">()<pos:position pos:line="290" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="27"/></return>
  }<pos:position pos:line="291" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="293" pos:column="3">/**
   * Automatically generates a style map for the given type system. The style map will be returned
   * as an XML string.
   * 
   * @param aTypeSystem
   *          the type system for which a style map will be generated
   * 
   * @return a String containing the XML style map
   */</comment>
  <function><specifier pos:line="302" pos:column="3">public<pos:position pos:line="302" pos:column="9"/></specifier> <specifier pos:line="302" pos:column="10">static<pos:position pos:line="302" pos:column="16"/></specifier> <type><name pos:line="302" pos:column="17">String<pos:position pos:line="302" pos:column="23"/></name></type> <name pos:line="302" pos:column="24">autoGenerateStyleMap<pos:position pos:line="302" pos:column="44"/></name><parameter_list pos:line="302" pos:column="44">(<parameter><decl><type><name pos:line="302" pos:column="45">TypeSystemDescription<pos:position pos:line="302" pos:column="66"/></name></type> <name pos:line="302" pos:column="67">aTypeSystem<pos:position pos:line="302" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="302" pos:column="79"/></parameter_list> <block pos:line="302" pos:column="80">{
    <comment type="line" pos:line="303" pos:column="5">// styles used in automatically generated style maps</comment>

    <decl_stmt><decl><type><specifier pos:line="305" pos:column="5">final<pos:position pos:line="305" pos:column="10"/></specifier> <name><name pos:line="305" pos:column="11">String<pos:position pos:line="305" pos:column="17"/></name><index pos:line="305" pos:column="17">[]<pos:position pos:line="305" pos:column="19"/></index></name></type> <name pos:line="305" pos:column="20">STYLES<pos:position pos:line="305" pos:column="26"/></name> <init pos:line="305" pos:column="27">= <expr><block pos:line="305" pos:column="29">{ <expr><literal type="string" pos:line="305" pos:column="31">"color:black; background:lightblue;"<pos:position pos:line="305" pos:column="67"/></literal></expr>,
        <expr><literal type="string" pos:line="306" pos:column="9">"color:black; background:lightgreen;"<pos:position pos:line="306" pos:column="46"/></literal></expr>, <expr><literal type="string" pos:line="306" pos:column="48">"color:black; background:orange;"<pos:position pos:line="306" pos:column="81"/></literal></expr>,
        <expr><literal type="string" pos:line="307" pos:column="9">"color:black; background:yellow;"<pos:position pos:line="307" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="307" pos:column="44">"color:black; background:pink;"<pos:position pos:line="307" pos:column="75"/></literal></expr>,
        <expr><literal type="string" pos:line="308" pos:column="9">"color:black; background:salmon;"<pos:position pos:line="308" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="308" pos:column="44">"color:black; background:cyan;"<pos:position pos:line="308" pos:column="75"/></literal></expr>,
        <expr><literal type="string" pos:line="309" pos:column="9">"color:black; background:violet;"<pos:position pos:line="309" pos:column="42"/></literal></expr>, <expr><literal type="string" pos:line="309" pos:column="44">"color:black; background:tan;"<pos:position pos:line="309" pos:column="74"/></literal></expr>,
        <expr><literal type="string" pos:line="310" pos:column="9">"color:white; background:brown;"<pos:position pos:line="310" pos:column="41"/></literal></expr>, <expr><literal type="string" pos:line="310" pos:column="43">"color:white; background:blue;"<pos:position pos:line="310" pos:column="74"/></literal></expr>,
        <expr><literal type="string" pos:line="311" pos:column="9">"color:white; background:green;"<pos:position pos:line="311" pos:column="41"/></literal></expr>, <expr><literal type="string" pos:line="311" pos:column="43">"color:white; background:red;"<pos:position pos:line="311" pos:column="73"/></literal></expr>,
        <expr><literal type="string" pos:line="312" pos:column="9">"color:white; background:mediumpurple;"<pos:position pos:line="312" pos:column="48"/></literal></expr> }<pos:position pos:line="312" pos:column="50"/></block></expr></init></decl>;<pos:position pos:line="312" pos:column="51"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="314" pos:column="5">TypeDescription<pos:position pos:line="314" pos:column="20"/></name><index pos:line="314" pos:column="20">[]<pos:position pos:line="314" pos:column="22"/></index></name></type> <name pos:line="314" pos:column="23">types<pos:position pos:line="314" pos:column="28"/></name> <init pos:line="314" pos:column="29">= <expr><call><name><name pos:line="314" pos:column="31">aTypeSystem<pos:position pos:line="314" pos:column="42"/></name><operator pos:line="314" pos:column="42">.<pos:position pos:line="314" pos:column="43"/></operator><name pos:line="314" pos:column="43">getTypes<pos:position pos:line="314" pos:column="51"/></name></name><argument_list pos:line="314" pos:column="51">()<pos:position pos:line="314" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="314" pos:column="54"/></decl_stmt>

    <comment type="line" pos:line="316" pos:column="5">// generate style map by mapping each type to a background color</comment>
    <decl_stmt><decl><type><name pos:line="317" pos:column="5">StringBuffer<pos:position pos:line="317" pos:column="17"/></name></type> <name pos:line="317" pos:column="18">buf<pos:position pos:line="317" pos:column="21"/></name> <init pos:line="317" pos:column="22">= <expr><operator pos:line="317" pos:column="24">new<pos:position pos:line="317" pos:column="27"/></operator> <call><name pos:line="317" pos:column="28">StringBuffer<pos:position pos:line="317" pos:column="40"/></name><argument_list pos:line="317" pos:column="40">()<pos:position pos:line="317" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="317" pos:column="43"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="319" pos:column="5">buf<pos:position pos:line="319" pos:column="8"/></name><operator pos:line="319" pos:column="8">.<pos:position pos:line="319" pos:column="9"/></operator><name pos:line="319" pos:column="9">append<pos:position pos:line="319" pos:column="15"/></name></name><argument_list pos:line="319" pos:column="15">(<argument><expr><literal type="string" pos:line="319" pos:column="16">"&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\"?&gt;\n"<pos:position pos:line="319" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="319" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="319" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="320" pos:column="5">buf<pos:position pos:line="320" pos:column="8"/></name><operator pos:line="320" pos:column="8">.<pos:position pos:line="320" pos:column="9"/></operator><name pos:line="320" pos:column="9">append<pos:position pos:line="320" pos:column="15"/></name></name><argument_list pos:line="320" pos:column="15">(<argument><expr><literal type="string" pos:line="320" pos:column="16">"&lt;styleMap&gt;\n"<pos:position pos:line="320" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="320" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="32"/></expr_stmt>

    <for pos:line="322" pos:column="5">for <control pos:line="322" pos:column="9">(<init><decl><type><name pos:line="322" pos:column="10">int<pos:position pos:line="322" pos:column="13"/></name></type> <name pos:line="322" pos:column="14">i<pos:position pos:line="322" pos:column="15"/></name> <init pos:line="322" pos:column="16">= <expr><literal type="number" pos:line="322" pos:column="18">0<pos:position pos:line="322" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="322" pos:column="20"/></init> <condition><expr><name pos:line="322" pos:column="21">i<pos:position pos:line="322" pos:column="22"/></name> <operator pos:line="322" pos:column="23">&lt;<pos:position pos:line="322" pos:column="27"/></operator> <name><name pos:line="322" pos:column="25">types<pos:position pos:line="322" pos:column="30"/></name><operator pos:line="322" pos:column="30">.<pos:position pos:line="322" pos:column="31"/></operator><name pos:line="322" pos:column="31">length<pos:position pos:line="322" pos:column="37"/></name></name></expr>;<pos:position pos:line="322" pos:column="38"/></condition> <incr><expr><name pos:line="322" pos:column="39">i<pos:position pos:line="322" pos:column="40"/></name><operator pos:line="322" pos:column="40">++<pos:position pos:line="322" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="322" pos:column="43"/></control> <block pos:line="322" pos:column="44">{
      <decl_stmt><decl><type><name pos:line="323" pos:column="7">String<pos:position pos:line="323" pos:column="13"/></name></type> <name pos:line="323" pos:column="14">outputType<pos:position pos:line="323" pos:column="24"/></name> <init pos:line="323" pos:column="25">= <expr><name><name pos:line="323" pos:column="27">types<pos:position pos:line="323" pos:column="32"/></name><index pos:line="323" pos:column="32">[<expr><name pos:line="323" pos:column="33">i<pos:position pos:line="323" pos:column="34"/></name></expr>]<pos:position pos:line="323" pos:column="35"/></index></name><operator pos:line="323" pos:column="35">.<pos:position pos:line="323" pos:column="36"/></operator><call><name pos:line="323" pos:column="36">getName<pos:position pos:line="323" pos:column="43"/></name><argument_list pos:line="323" pos:column="43">()<pos:position pos:line="323" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="323" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="324" pos:column="7">String<pos:position pos:line="324" pos:column="13"/></name></type> <name pos:line="324" pos:column="14">label<pos:position pos:line="324" pos:column="19"/></name> <init pos:line="324" pos:column="20">= <expr><name pos:line="324" pos:column="22">outputType<pos:position pos:line="324" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="324" pos:column="33"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="325" pos:column="7">int<pos:position pos:line="325" pos:column="10"/></name></type> <name pos:line="325" pos:column="11">lastDot<pos:position pos:line="325" pos:column="18"/></name> <init pos:line="325" pos:column="19">= <expr><call><name><name pos:line="325" pos:column="21">outputType<pos:position pos:line="325" pos:column="31"/></name><operator pos:line="325" pos:column="31">.<pos:position pos:line="325" pos:column="32"/></operator><name pos:line="325" pos:column="32">lastIndexOf<pos:position pos:line="325" pos:column="43"/></name></name><argument_list pos:line="325" pos:column="43">(<argument><expr><literal type="char" pos:line="325" pos:column="44">'.'<pos:position pos:line="325" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="325" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="325" pos:column="49"/></decl_stmt>
      <if pos:line="326" pos:column="7">if <condition pos:line="326" pos:column="10">(<expr><name pos:line="326" pos:column="11">lastDot<pos:position pos:line="326" pos:column="18"/></name> <operator pos:line="326" pos:column="19">&gt;<pos:position pos:line="326" pos:column="23"/></operator> <operator pos:line="326" pos:column="21">-<pos:position pos:line="326" pos:column="22"/></operator><literal type="number" pos:line="326" pos:column="22">1<pos:position pos:line="326" pos:column="23"/></literal></expr>)<pos:position pos:line="326" pos:column="24"/></condition><then pos:line="326" pos:column="24"> <block pos:line="326" pos:column="25">{
        <expr_stmt><expr><name pos:line="327" pos:column="9">label<pos:position pos:line="327" pos:column="14"/></name> <operator pos:line="327" pos:column="15">=<pos:position pos:line="327" pos:column="16"/></operator> <call><name><name pos:line="327" pos:column="17">outputType<pos:position pos:line="327" pos:column="27"/></name><operator pos:line="327" pos:column="27">.<pos:position pos:line="327" pos:column="28"/></operator><name pos:line="327" pos:column="28">substring<pos:position pos:line="327" pos:column="37"/></name></name><argument_list pos:line="327" pos:column="37">(<argument><expr><name pos:line="327" pos:column="38">lastDot<pos:position pos:line="327" pos:column="45"/></name> <operator pos:line="327" pos:column="46">+<pos:position pos:line="327" pos:column="47"/></operator> <literal type="number" pos:line="327" pos:column="48">1<pos:position pos:line="327" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="328" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name><name pos:line="330" pos:column="7">buf<pos:position pos:line="330" pos:column="10"/></name><operator pos:line="330" pos:column="10">.<pos:position pos:line="330" pos:column="11"/></operator><name pos:line="330" pos:column="11">append<pos:position pos:line="330" pos:column="17"/></name></name><argument_list pos:line="330" pos:column="17">(<argument><expr><literal type="string" pos:line="330" pos:column="18">"&lt;rule&gt;\n"<pos:position pos:line="330" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="330" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="331" pos:column="7">buf<pos:position pos:line="331" pos:column="10"/></name><operator pos:line="331" pos:column="10">.<pos:position pos:line="331" pos:column="11"/></operator><name pos:line="331" pos:column="11">append<pos:position pos:line="331" pos:column="17"/></name></name><argument_list pos:line="331" pos:column="17">(<argument><expr><literal type="string" pos:line="331" pos:column="18">"&lt;pattern&gt;"<pos:position pos:line="331" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="332" pos:column="7">buf<pos:position pos:line="332" pos:column="10"/></name><operator pos:line="332" pos:column="10">.<pos:position pos:line="332" pos:column="11"/></operator><name pos:line="332" pos:column="11">append<pos:position pos:line="332" pos:column="17"/></name></name><argument_list pos:line="332" pos:column="17">(<argument><expr><name pos:line="332" pos:column="18">outputType<pos:position pos:line="332" pos:column="28"/></name></expr></argument>)<pos:position pos:line="332" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="333" pos:column="7">buf<pos:position pos:line="333" pos:column="10"/></name><operator pos:line="333" pos:column="10">.<pos:position pos:line="333" pos:column="11"/></operator><name pos:line="333" pos:column="11">append<pos:position pos:line="333" pos:column="17"/></name></name><argument_list pos:line="333" pos:column="17">(<argument><expr><literal type="string" pos:line="333" pos:column="18">"&lt;/pattern&gt;\n"<pos:position pos:line="333" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="334" pos:column="7">buf<pos:position pos:line="334" pos:column="10"/></name><operator pos:line="334" pos:column="10">.<pos:position pos:line="334" pos:column="11"/></operator><name pos:line="334" pos:column="11">append<pos:position pos:line="334" pos:column="17"/></name></name><argument_list pos:line="334" pos:column="17">(<argument><expr><literal type="string" pos:line="334" pos:column="18">"&lt;label&gt;"<pos:position pos:line="334" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="335" pos:column="7">buf<pos:position pos:line="335" pos:column="10"/></name><operator pos:line="335" pos:column="10">.<pos:position pos:line="335" pos:column="11"/></operator><name pos:line="335" pos:column="11">append<pos:position pos:line="335" pos:column="17"/></name></name><argument_list pos:line="335" pos:column="17">(<argument><expr><name pos:line="335" pos:column="18">label<pos:position pos:line="335" pos:column="23"/></name></expr></argument>)<pos:position pos:line="335" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="336" pos:column="7">buf<pos:position pos:line="336" pos:column="10"/></name><operator pos:line="336" pos:column="10">.<pos:position pos:line="336" pos:column="11"/></operator><name pos:line="336" pos:column="11">append<pos:position pos:line="336" pos:column="17"/></name></name><argument_list pos:line="336" pos:column="17">(<argument><expr><literal type="string" pos:line="336" pos:column="18">"&lt;/label&gt;\n"<pos:position pos:line="336" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="336" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="337" pos:column="7">buf<pos:position pos:line="337" pos:column="10"/></name><operator pos:line="337" pos:column="10">.<pos:position pos:line="337" pos:column="11"/></operator><name pos:line="337" pos:column="11">append<pos:position pos:line="337" pos:column="17"/></name></name><argument_list pos:line="337" pos:column="17">(<argument><expr><literal type="string" pos:line="337" pos:column="18">"&lt;style&gt;"<pos:position pos:line="337" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="337" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="338" pos:column="7">buf<pos:position pos:line="338" pos:column="10"/></name><operator pos:line="338" pos:column="10">.<pos:position pos:line="338" pos:column="11"/></operator><name pos:line="338" pos:column="11">append<pos:position pos:line="338" pos:column="17"/></name></name><argument_list pos:line="338" pos:column="17">(<argument><expr><name><name pos:line="338" pos:column="18">STYLES<pos:position pos:line="338" pos:column="24"/></name><index pos:line="338" pos:column="24">[<expr><name pos:line="338" pos:column="25">i<pos:position pos:line="338" pos:column="26"/></name> <operator pos:line="338" pos:column="27">%<pos:position pos:line="338" pos:column="28"/></operator> <name><name pos:line="338" pos:column="29">STYLES<pos:position pos:line="338" pos:column="35"/></name><operator pos:line="338" pos:column="35">.<pos:position pos:line="338" pos:column="36"/></operator><name pos:line="338" pos:column="36">length<pos:position pos:line="338" pos:column="42"/></name></name></expr>]<pos:position pos:line="338" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="338" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="338" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="339" pos:column="7">buf<pos:position pos:line="339" pos:column="10"/></name><operator pos:line="339" pos:column="10">.<pos:position pos:line="339" pos:column="11"/></operator><name pos:line="339" pos:column="11">append<pos:position pos:line="339" pos:column="17"/></name></name><argument_list pos:line="339" pos:column="17">(<argument><expr><literal type="string" pos:line="339" pos:column="18">"&lt;/style&gt;\n"<pos:position pos:line="339" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="340" pos:column="7">buf<pos:position pos:line="340" pos:column="10"/></name><operator pos:line="340" pos:column="10">.<pos:position pos:line="340" pos:column="11"/></operator><name pos:line="340" pos:column="11">append<pos:position pos:line="340" pos:column="17"/></name></name><argument_list pos:line="340" pos:column="17">(<argument><expr><literal type="string" pos:line="340" pos:column="18">"&lt;/rule&gt;\n"<pos:position pos:line="340" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="341" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name><name pos:line="343" pos:column="5">buf<pos:position pos:line="343" pos:column="8"/></name><operator pos:line="343" pos:column="8">.<pos:position pos:line="343" pos:column="9"/></operator><name pos:line="343" pos:column="9">append<pos:position pos:line="343" pos:column="15"/></name></name><argument_list pos:line="343" pos:column="15">(<argument><expr><literal type="string" pos:line="343" pos:column="16">"&lt;/styleMap&gt;\n"<pos:position pos:line="343" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="33"/></expr_stmt>

    <return pos:line="345" pos:column="5">return <expr><call><name><name pos:line="345" pos:column="12">buf<pos:position pos:line="345" pos:column="15"/></name><operator pos:line="345" pos:column="15">.<pos:position pos:line="345" pos:column="16"/></operator><name pos:line="345" pos:column="16">toString<pos:position pos:line="345" pos:column="24"/></name></name><argument_list pos:line="345" pos:column="24">()<pos:position pos:line="345" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="27"/></return>
  }<pos:position pos:line="346" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="348" pos:column="3">/**
   * Automatically generates a style map file for the given analysis engine. The style map will be
   * written to the file &lt;code&gt;aStyleMapFile&lt;/code&gt;.
   * 
   * @param aAE
   *          the Analysis Engine whose outputs will be viewed using the generated style map.
   * @param aStyleMapFile
   *          file to which autogenerated style map will be written
   */</comment>
  <function><specifier pos:line="357" pos:column="3">public<pos:position pos:line="357" pos:column="9"/></specifier> <type><name pos:line="357" pos:column="10">void<pos:position pos:line="357" pos:column="14"/></name></type> <name pos:line="357" pos:column="15">autoGenerateStyleMapFile<pos:position pos:line="357" pos:column="39"/></name><parameter_list pos:line="357" pos:column="39">(<parameter><decl><type><name pos:line="357" pos:column="40">AnalysisEngine<pos:position pos:line="357" pos:column="54"/></name></type> <name pos:line="357" pos:column="55">aAE<pos:position pos:line="357" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="357" pos:column="60">File<pos:position pos:line="357" pos:column="64"/></name></type> <name pos:line="357" pos:column="65">aStyleMapFile<pos:position pos:line="357" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="357" pos:column="79"/></parameter_list> <throws pos:line="357" pos:column="80">throws <argument><expr><name pos:line="357" pos:column="87">IOException<pos:position pos:line="357" pos:column="98"/></name></expr></argument></throws> <block pos:line="357" pos:column="99">{
    <expr_stmt><expr><call><name><name pos:line="358" pos:column="5">this<pos:position pos:line="358" pos:column="9"/></name><operator pos:line="358" pos:column="9">.<pos:position pos:line="358" pos:column="10"/></operator><name pos:line="358" pos:column="10">autoGenerateStyleMapFile<pos:position pos:line="358" pos:column="34"/></name></name><argument_list pos:line="358" pos:column="34">(<argument><expr><call><name><name pos:line="358" pos:column="35">aAE<pos:position pos:line="358" pos:column="38"/></name><operator pos:line="358" pos:column="38">.<pos:position pos:line="358" pos:column="39"/></operator><name pos:line="358" pos:column="39">getAnalysisEngineMetaData<pos:position pos:line="358" pos:column="64"/></name></name><argument_list pos:line="358" pos:column="64">()<pos:position pos:line="358" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="358" pos:column="68">aStyleMapFile<pos:position pos:line="358" pos:column="81"/></name></expr></argument>)<pos:position pos:line="358" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="83"/></expr_stmt>
  }<pos:position pos:line="359" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="361" pos:column="3">/**
   * Automatically generates a style map file for the given analysis engine metadata. The style map
   * will be written to the file &lt;code&gt;aStyleMapFile&lt;/code&gt;.
   * 
   * 
   * @param aMetaData
   *          Metadata of the Analysis Engine whose outputs will be viewed using the generated style
   *          map.
   * @param aStyleMapFile
   *          file to which autogenerated style map will be written
   */</comment>
  <function><specifier pos:line="372" pos:column="3">public<pos:position pos:line="372" pos:column="9"/></specifier> <type><name pos:line="372" pos:column="10">void<pos:position pos:line="372" pos:column="14"/></name></type> <name pos:line="372" pos:column="15">autoGenerateStyleMapFile<pos:position pos:line="372" pos:column="39"/></name><parameter_list pos:line="372" pos:column="39">(<parameter><decl><type><name pos:line="372" pos:column="40">AnalysisEngineMetaData<pos:position pos:line="372" pos:column="62"/></name></type> <name pos:line="372" pos:column="63">aMetaData<pos:position pos:line="372" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="372" pos:column="74">File<pos:position pos:line="372" pos:column="78"/></name></type> <name pos:line="372" pos:column="79">aStyleMapFile<pos:position pos:line="372" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="372" pos:column="93"/></parameter_list>
          <throws pos:line="373" pos:column="11">throws <argument><expr><name pos:line="373" pos:column="18">IOException<pos:position pos:line="373" pos:column="29"/></name></expr></argument></throws> <block pos:line="373" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="374" pos:column="5">String<pos:position pos:line="374" pos:column="11"/></name></type> <name pos:line="374" pos:column="12">xmlStr<pos:position pos:line="374" pos:column="18"/></name> <init pos:line="374" pos:column="19">= <expr><call><name pos:line="374" pos:column="21">autoGenerateStyleMap<pos:position pos:line="374" pos:column="41"/></name><argument_list pos:line="374" pos:column="41">(<argument><expr><name pos:line="374" pos:column="42">aMetaData<pos:position pos:line="374" pos:column="51"/></name></expr></argument>)<pos:position pos:line="374" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="374" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="375" pos:column="5">FileWriter<pos:position pos:line="375" pos:column="15"/></name></type> <name pos:line="375" pos:column="16">out<pos:position pos:line="375" pos:column="19"/></name> <init pos:line="375" pos:column="20">= <expr><literal type="null" pos:line="375" pos:column="22">null<pos:position pos:line="375" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="375" pos:column="27"/></decl_stmt>
    <try pos:line="376" pos:column="5">try <block pos:line="376" pos:column="9">{
      <expr_stmt><expr><name pos:line="377" pos:column="7">out<pos:position pos:line="377" pos:column="10"/></name> <operator pos:line="377" pos:column="11">=<pos:position pos:line="377" pos:column="12"/></operator> <operator pos:line="377" pos:column="13">new<pos:position pos:line="377" pos:column="16"/></operator> <call><name pos:line="377" pos:column="17">FileWriter<pos:position pos:line="377" pos:column="27"/></name><argument_list pos:line="377" pos:column="27">(<argument><expr><name pos:line="377" pos:column="28">aStyleMapFile<pos:position pos:line="377" pos:column="41"/></name></expr></argument>)<pos:position pos:line="377" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="377" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="378" pos:column="7">out<pos:position pos:line="378" pos:column="10"/></name><operator pos:line="378" pos:column="10">.<pos:position pos:line="378" pos:column="11"/></operator><name pos:line="378" pos:column="11">write<pos:position pos:line="378" pos:column="16"/></name></name><argument_list pos:line="378" pos:column="16">(<argument><expr><name pos:line="378" pos:column="17">xmlStr<pos:position pos:line="378" pos:column="23"/></name></expr></argument>)<pos:position pos:line="378" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="379" pos:column="6"/></block> <finally pos:line="379" pos:column="7">finally <block pos:line="379" pos:column="15">{
      <if pos:line="380" pos:column="7">if <condition pos:line="380" pos:column="10">(<expr><name pos:line="380" pos:column="11">out<pos:position pos:line="380" pos:column="14"/></name> <operator pos:line="380" pos:column="15">!=<pos:position pos:line="380" pos:column="17"/></operator> <literal type="null" pos:line="380" pos:column="18">null<pos:position pos:line="380" pos:column="22"/></literal></expr>)<pos:position pos:line="380" pos:column="23"/></condition><then pos:line="380" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="381" pos:column="9">out<pos:position pos:line="381" pos:column="12"/></name><operator pos:line="381" pos:column="12">.<pos:position pos:line="381" pos:column="13"/></operator><name pos:line="381" pos:column="13">close<pos:position pos:line="381" pos:column="18"/></name></name><argument_list pos:line="381" pos:column="18">()<pos:position pos:line="381" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="21"/></expr_stmt></block></then></if>
    }<pos:position pos:line="382" pos:column="6"/></block></finally></try>
  }<pos:position pos:line="383" pos:column="4"/></block></function>

  <comment type="block" format="javadoc" pos:line="385" pos:column="3">/**
   * Automatically generates a style map file for the given type system. The style map will be
   * written to the file &lt;code&gt;aStyleMapFile&lt;/code&gt;.
   * 
   * @param aTypeSystem
   *          the type system for which a style map will be generated
   * @param aStyleMapFile
   *          file to which autogenerated style map will be written
   */</comment>
  <function><specifier pos:line="394" pos:column="3">public<pos:position pos:line="394" pos:column="9"/></specifier> <type><name pos:line="394" pos:column="10">void<pos:position pos:line="394" pos:column="14"/></name></type> <name pos:line="394" pos:column="15">autoGenerateStyleMapFile<pos:position pos:line="394" pos:column="39"/></name><parameter_list pos:line="394" pos:column="39">(<parameter><decl><type><name pos:line="394" pos:column="40">TypeSystemDescription<pos:position pos:line="394" pos:column="61"/></name></type> <name pos:line="394" pos:column="62">aTypeSystem<pos:position pos:line="394" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="394" pos:column="75">File<pos:position pos:line="394" pos:column="79"/></name></type> <name pos:line="394" pos:column="80">aStyleMapFile<pos:position pos:line="394" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="394" pos:column="94"/></parameter_list>
          <throws pos:line="395" pos:column="11">throws <argument><expr><name pos:line="395" pos:column="18">IOException<pos:position pos:line="395" pos:column="29"/></name></expr></argument></throws> <block pos:line="395" pos:column="30">{
    <decl_stmt><decl><type><name pos:line="396" pos:column="5">String<pos:position pos:line="396" pos:column="11"/></name></type> <name pos:line="396" pos:column="12">xmlStr<pos:position pos:line="396" pos:column="18"/></name> <init pos:line="396" pos:column="19">= <expr><call><name pos:line="396" pos:column="21">autoGenerateStyleMap<pos:position pos:line="396" pos:column="41"/></name><argument_list pos:line="396" pos:column="41">(<argument><expr><name pos:line="396" pos:column="42">aTypeSystem<pos:position pos:line="396" pos:column="53"/></name></expr></argument>)<pos:position pos:line="396" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="396" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="397" pos:column="5">FileWriter<pos:position pos:line="397" pos:column="15"/></name></type> <name pos:line="397" pos:column="16">out<pos:position pos:line="397" pos:column="19"/></name> <init pos:line="397" pos:column="20">= <expr><literal type="null" pos:line="397" pos:column="22">null<pos:position pos:line="397" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="397" pos:column="27"/></decl_stmt>
    <try pos:line="398" pos:column="5">try <block pos:line="398" pos:column="9">{
      <expr_stmt><expr><name pos:line="399" pos:column="7">out<pos:position pos:line="399" pos:column="10"/></name> <operator pos:line="399" pos:column="11">=<pos:position pos:line="399" pos:column="12"/></operator> <operator pos:line="399" pos:column="13">new<pos:position pos:line="399" pos:column="16"/></operator> <call><name pos:line="399" pos:column="17">FileWriter<pos:position pos:line="399" pos:column="27"/></name><argument_list pos:line="399" pos:column="27">(<argument><expr><name pos:line="399" pos:column="28">aStyleMapFile<pos:position pos:line="399" pos:column="41"/></name></expr></argument>)<pos:position pos:line="399" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="399" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name><name pos:line="400" pos:column="7">out<pos:position pos:line="400" pos:column="10"/></name><operator pos:line="400" pos:column="10">.<pos:position pos:line="400" pos:column="11"/></operator><name pos:line="400" pos:column="11">write<pos:position pos:line="400" pos:column="16"/></name></name><argument_list pos:line="400" pos:column="16">(<argument><expr><name pos:line="400" pos:column="17">xmlStr<pos:position pos:line="400" pos:column="23"/></name></expr></argument>)<pos:position pos:line="400" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="401" pos:column="6"/></block> <finally pos:line="401" pos:column="7">finally <block pos:line="401" pos:column="15">{
      <if pos:line="402" pos:column="7">if <condition pos:line="402" pos:column="10">(<expr><name pos:line="402" pos:column="11">out<pos:position pos:line="402" pos:column="14"/></name> <operator pos:line="402" pos:column="15">!=<pos:position pos:line="402" pos:column="17"/></operator> <literal type="null" pos:line="402" pos:column="18">null<pos:position pos:line="402" pos:column="22"/></literal></expr>)<pos:position pos:line="402" pos:column="23"/></condition><then pos:line="402" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="403" pos:column="9">out<pos:position pos:line="403" pos:column="12"/></name><operator pos:line="403" pos:column="12">.<pos:position pos:line="403" pos:column="13"/></operator><name pos:line="403" pos:column="13">close<pos:position pos:line="403" pos:column="18"/></name></name><argument_list pos:line="403" pos:column="18">()<pos:position pos:line="403" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="21"/></expr_stmt></block></then></if>
    }<pos:position pos:line="404" pos:column="6"/></block></finally></try>
  }<pos:position pos:line="405" pos:column="4"/></block></function>
}<pos:position pos:line="406" pos:column="2"/></block></class>
</unit>

