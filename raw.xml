<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="Java" filename="C:\Users\CHIJIA~1\AppData\Local\Temp\gumtree3780375348800012324" pos:tabs="1"><comment type="block" pos:line="1" pos:column="1">/*
 * Copyright 2004-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package pos:line="16" pos:column="1">package <name><name pos:line="16" pos:column="9">org<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">springframework<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">webflow<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">.<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="37">mvc<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">.<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">view<pos:position pos:line="16" pos:column="45"/></name></name>;<pos:position pos:line="16" pos:column="46"/></package>

<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">java<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">io<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">IOException<pos:position pos:line="18" pos:column="27"/></name></name>;<pos:position pos:line="18" pos:column="28"/></import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">java<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">io<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">.<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">Serializable<pos:position pos:line="19" pos:column="28"/></name></name>;<pos:position pos:line="19" pos:column="29"/></import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">java<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">lang<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">.<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">reflect<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">.<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">Array<pos:position pos:line="20" pos:column="31"/></name></name>;<pos:position pos:line="20" pos:column="32"/></import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">java<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">util<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">HashMap<pos:position pos:line="21" pos:column="25"/></name></name>;<pos:position pos:line="21" pos:column="26"/></import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">java<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">util<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">List<pos:position pos:line="22" pos:column="22"/></name></name>;<pos:position pos:line="22" pos:column="23"/></import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">java<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">util<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">Map<pos:position pos:line="23" pos:column="21"/></name></name>;<pos:position pos:line="23" pos:column="22"/></import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">java<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">util<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">Set<pos:position pos:line="24" pos:column="21"/></name></name>;<pos:position pos:line="24" pos:column="22"/></import>

<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">org<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">apache<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">commons<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">logging<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">Log<pos:position pos:line="26" pos:column="38"/></name></name>;<pos:position pos:line="26" pos:column="39"/></import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">org<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">apache<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">commons<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">logging<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">.<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">LogFactory<pos:position pos:line="27" pos:column="45"/></name></name>;<pos:position pos:line="27" pos:column="46"/></import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">org<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">springframework<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">binding<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">.<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">convert<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">.<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="44">ConversionExecutor<pos:position pos:line="28" pos:column="62"/></name></name>;<pos:position pos:line="28" pos:column="63"/></import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">org<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">.<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="12">springframework<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">.<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">binding<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">.<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">convert<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">.<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="44">ConversionService<pos:position pos:line="29" pos:column="61"/></name></name>;<pos:position pos:line="29" pos:column="62"/></import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">org<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">springframework<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">binding<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">.<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">expression<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">EvaluationException<pos:position pos:line="30" pos:column="66"/></name></name>;<pos:position pos:line="30" pos:column="67"/></import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">org<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">springframework<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">binding<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">expression<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">.<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">Expression<pos:position pos:line="31" pos:column="57"/></name></name>;<pos:position pos:line="31" pos:column="58"/></import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">org<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">springframework<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">binding<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">.<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">expression<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">.<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="47">ExpressionParser<pos:position pos:line="32" pos:column="63"/></name></name>;<pos:position pos:line="32" pos:column="64"/></import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">org<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">.<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">springframework<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">.<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">binding<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">expression<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">.<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="47">ParserContext<pos:position pos:line="33" pos:column="60"/></name></name>;<pos:position pos:line="33" pos:column="61"/></import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">org<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">.<pos:position pos:line="34" pos:column="12"/></operator><name pos:line="34" pos:column="12">springframework<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">.<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">binding<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">.<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">expression<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">.<pos:position pos:line="34" pos:column="47"/></operator><name pos:line="34" pos:column="47">beanwrapper<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">.<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="59">BeanWrapperExpressionParser<pos:position pos:line="34" pos:column="86"/></name></name>;<pos:position pos:line="34" pos:column="87"/></import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">org<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">springframework<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">binding<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">expression<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">.<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="47">support<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">.<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="55">FluentParserContext<pos:position pos:line="35" pos:column="74"/></name></name>;<pos:position pos:line="35" pos:column="75"/></import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">org<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">springframework<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">.<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">binding<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">.<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">expression<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">.<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="47">support<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">.<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="55">StaticExpression<pos:position pos:line="36" pos:column="71"/></name></name>;<pos:position pos:line="36" pos:column="72"/></import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">org<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">.<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">springframework<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">binding<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">.<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">mapping<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">.<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="44">MappingResult<pos:position pos:line="37" pos:column="57"/></name></name>;<pos:position pos:line="37" pos:column="58"/></import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">org<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">.<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="12">springframework<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">.<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">binding<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">mapping<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">.<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="44">MappingResults<pos:position pos:line="38" pos:column="58"/></name></name>;<pos:position pos:line="38" pos:column="59"/></import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">org<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">.<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="12">springframework<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">binding<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">.<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="36">mapping<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">.<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="44">MappingResultsCriteria<pos:position pos:line="39" pos:column="66"/></name></name>;<pos:position pos:line="39" pos:column="67"/></import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">org<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">.<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">springframework<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">binding<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">.<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="36">mapping<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">.<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">impl<pos:position pos:line="40" pos:column="48"/></name><operator pos:line="40" pos:column="48">.<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="49">DefaultMapper<pos:position pos:line="40" pos:column="62"/></name></name>;<pos:position pos:line="40" pos:column="63"/></import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">org<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">.<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">springframework<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">.<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="28">binding<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">.<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="36">mapping<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">.<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="44">impl<pos:position pos:line="41" pos:column="48"/></name><operator pos:line="41" pos:column="48">.<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="49">DefaultMapping<pos:position pos:line="41" pos:column="63"/></name></name>;<pos:position pos:line="41" pos:column="64"/></import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">org<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">springframework<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">.<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">binding<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">.<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">message<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">.<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="44">MessageBuilder<pos:position pos:line="42" pos:column="58"/></name></name>;<pos:position pos:line="42" pos:column="59"/></import>
<import pos:line="43" pos:column="1">import <name><name pos:line="43" pos:column="8">org<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">.<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="12">springframework<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">.<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">binding<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">.<pos:position pos:line="43" pos:column="36"/></operator><name pos:line="43" pos:column="36">message<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">.<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="44">MessageResolver<pos:position pos:line="43" pos:column="59"/></name></name>;<pos:position pos:line="43" pos:column="60"/></import>
<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">org<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">.<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="12">springframework<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">.<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="28">core<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">.<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="33">style<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">.<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="39">ToStringCreator<pos:position pos:line="44" pos:column="54"/></name></name>;<pos:position pos:line="44" pos:column="55"/></import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">org<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">.<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">springframework<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">.<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">util<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">.<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="33">Assert<pos:position pos:line="45" pos:column="39"/></name></name>;<pos:position pos:line="45" pos:column="40"/></import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">org<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">.<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="12">springframework<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">.<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="28">validation<pos:position pos:line="46" pos:column="38"/></name><operator pos:line="46" pos:column="38">.<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">BindingResult<pos:position pos:line="46" pos:column="52"/></name></name>;<pos:position pos:line="46" pos:column="53"/></import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">org<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">.<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">springframework<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">.<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">validation<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">.<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">MessageCodesResolver<pos:position pos:line="47" pos:column="59"/></name></name>;<pos:position pos:line="47" pos:column="60"/></import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">org<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">.<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">springframework<pos:position pos:line="48" pos:column="27"/></name><operator pos:line="48" pos:column="27">.<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">validation<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">.<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="39">Validator<pos:position pos:line="48" pos:column="48"/></name></name>;<pos:position pos:line="48" pos:column="49"/></import>
<import pos:line="49" pos:column="1">import <name><name pos:line="49" pos:column="8">org<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">.<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="12">springframework<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">.<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">web<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">.<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">util<pos:position pos:line="49" pos:column="36"/></name><operator pos:line="49" pos:column="36">.<pos:position pos:line="49" pos:column="37"/></operator><name pos:line="49" pos:column="37">WebUtils<pos:position pos:line="49" pos:column="45"/></name></name>;<pos:position pos:line="49" pos:column="46"/></import>
<import pos:line="50" pos:column="1">import <name><name pos:line="50" pos:column="8">org<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">.<pos:position pos:line="50" pos:column="12"/></operator><name pos:line="50" pos:column="12">springframework<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">.<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">webflow<pos:position pos:line="50" pos:column="35"/></name><operator pos:line="50" pos:column="35">.<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="36">core<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">.<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="41">collection<pos:position pos:line="50" pos:column="51"/></name><operator pos:line="50" pos:column="51">.<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="52">AttributeMap<pos:position pos:line="50" pos:column="64"/></name></name>;<pos:position pos:line="50" pos:column="65"/></import>
<import pos:line="51" pos:column="1">import <name><name pos:line="51" pos:column="8">org<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">.<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="12">springframework<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">.<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">webflow<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">.<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">core<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">.<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">collection<pos:position pos:line="51" pos:column="51"/></name><operator pos:line="51" pos:column="51">.<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="52">ParameterMap<pos:position pos:line="51" pos:column="64"/></name></name>;<pos:position pos:line="51" pos:column="65"/></import>
<import pos:line="52" pos:column="1">import <name><name pos:line="52" pos:column="8">org<pos:position pos:line="52" pos:column="11"/></name><operator pos:line="52" pos:column="11">.<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="12">springframework<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">webflow<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">.<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">definition<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">.<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="47">TransitionDefinition<pos:position pos:line="52" pos:column="67"/></name></name>;<pos:position pos:line="52" pos:column="68"/></import>
<import pos:line="53" pos:column="1">import <name><name pos:line="53" pos:column="8">org<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">.<pos:position pos:line="53" pos:column="12"/></operator><name pos:line="53" pos:column="12">springframework<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">.<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">webflow<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">.<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="36">engine<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">.<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="43">builder<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">.<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="51">BinderConfiguration<pos:position pos:line="53" pos:column="70"/></name></name>;<pos:position pos:line="53" pos:column="71"/></import>
<import pos:line="54" pos:column="1">import <name><name pos:line="54" pos:column="8">org<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">.<pos:position pos:line="54" pos:column="12"/></operator><name pos:line="54" pos:column="12">springframework<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">.<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">webflow<pos:position pos:line="54" pos:column="35"/></name><operator pos:line="54" pos:column="35">.<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="36">engine<pos:position pos:line="54" pos:column="42"/></name><operator pos:line="54" pos:column="42">.<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="43">builder<pos:position pos:line="54" pos:column="50"/></name><operator pos:line="54" pos:column="50">.<pos:position pos:line="54" pos:column="51"/></operator><name pos:line="54" pos:column="51">BinderConfiguration<pos:position pos:line="54" pos:column="70"/></name><operator pos:line="54" pos:column="70">.<pos:position pos:line="54" pos:column="71"/></operator><name pos:line="54" pos:column="71">Binding<pos:position pos:line="54" pos:column="78"/></name></name>;<pos:position pos:line="54" pos:column="79"/></import>
<import pos:line="55" pos:column="1">import <name><name pos:line="55" pos:column="8">org<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">.<pos:position pos:line="55" pos:column="12"/></operator><name pos:line="55" pos:column="12">springframework<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">.<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">webflow<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">.<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="36">execution<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">.<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="46">Event<pos:position pos:line="55" pos:column="51"/></name></name>;<pos:position pos:line="55" pos:column="52"/></import>
<import pos:line="56" pos:column="1">import <name><name pos:line="56" pos:column="8">org<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">.<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="12">springframework<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">.<pos:position pos:line="56" pos:column="28"/></operator><name pos:line="56" pos:column="28">webflow<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">.<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="36">execution<pos:position pos:line="56" pos:column="45"/></name><operator pos:line="56" pos:column="45">.<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="46">FlowExecutionKey<pos:position pos:line="56" pos:column="62"/></name></name>;<pos:position pos:line="56" pos:column="63"/></import>
<import pos:line="57" pos:column="1">import <name><name pos:line="57" pos:column="8">org<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">.<pos:position pos:line="57" pos:column="12"/></operator><name pos:line="57" pos:column="12">springframework<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">.<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="28">webflow<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">.<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="36">execution<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">.<pos:position pos:line="57" pos:column="46"/></operator><name pos:line="57" pos:column="46">RequestContext<pos:position pos:line="57" pos:column="60"/></name></name>;<pos:position pos:line="57" pos:column="61"/></import>
<import pos:line="58" pos:column="1">import <name><name pos:line="58" pos:column="8">org<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">.<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="12">springframework<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">.<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">webflow<pos:position pos:line="58" pos:column="35"/></name><operator pos:line="58" pos:column="35">.<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="36">execution<pos:position pos:line="58" pos:column="45"/></name><operator pos:line="58" pos:column="45">.<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="46">View<pos:position pos:line="58" pos:column="50"/></name></name>;<pos:position pos:line="58" pos:column="51"/></import>
<import pos:line="59" pos:column="1">import <name><name pos:line="59" pos:column="8">org<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">.<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">springframework<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">.<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">webflow<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">.<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">validation<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">.<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="47">BeanValidationHintResolver<pos:position pos:line="59" pos:column="73"/></name></name>;<pos:position pos:line="59" pos:column="74"/></import>
<import pos:line="60" pos:column="1">import <name><name pos:line="60" pos:column="8">org<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">.<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">springframework<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">.<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="28">webflow<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">.<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="36">validation<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">.<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="47">ValidationHelper<pos:position pos:line="60" pos:column="63"/></name></name>;<pos:position pos:line="60" pos:column="64"/></import>
<import pos:line="61" pos:column="1">import <name><name pos:line="61" pos:column="8">org<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">.<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="12">springframework<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">.<pos:position pos:line="61" pos:column="28"/></operator><name pos:line="61" pos:column="28">webflow<pos:position pos:line="61" pos:column="35"/></name><operator pos:line="61" pos:column="35">.<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="36">validation<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">.<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="47">ValidationHintResolver<pos:position pos:line="61" pos:column="69"/></name></name>;<pos:position pos:line="61" pos:column="70"/></import>

<comment type="block" format="javadoc" pos:line="63" pos:column="1">/**
 * Base view implementation for the Spring Web MVC Servlet and Spring Web MVC Portlet frameworks.
 *
 * @author Keith Donald
 */</comment>
<class><specifier pos:line="68" pos:column="1">public<pos:position pos:line="68" pos:column="7"/></specifier> <specifier pos:line="68" pos:column="8">abstract<pos:position pos:line="68" pos:column="16"/></specifier> class <name pos:line="68" pos:column="23">AbstractMvcView<pos:position pos:line="68" pos:column="38"/></name> <super><implements pos:line="68" pos:column="39">implements <name pos:line="68" pos:column="50">View<pos:position pos:line="68" pos:column="54"/></name></implements></super> <block pos:line="68" pos:column="55">{

	<decl_stmt><decl><specifier pos:line="70" pos:column="2">private<pos:position pos:line="70" pos:column="9"/></specifier> <specifier pos:line="70" pos:column="10">static<pos:position pos:line="70" pos:column="16"/></specifier> <type><specifier pos:line="70" pos:column="17">final<pos:position pos:line="70" pos:column="22"/></specifier> <name pos:line="70" pos:column="23">Log<pos:position pos:line="70" pos:column="26"/></name></type> <name pos:line="70" pos:column="27">logger<pos:position pos:line="70" pos:column="33"/></name> <init pos:line="70" pos:column="34">= <expr><call><name><name pos:line="70" pos:column="36">LogFactory<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">.<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="47">getLog<pos:position pos:line="70" pos:column="53"/></name></name><argument_list pos:line="70" pos:column="53">(<argument><expr><name><name pos:line="70" pos:column="54">AbstractMvcView<pos:position pos:line="70" pos:column="69"/></name><operator pos:line="70" pos:column="69">.<pos:position pos:line="70" pos:column="70"/></operator><name pos:line="70" pos:column="70">class<pos:position pos:line="70" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="70" pos:column="77"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="72" pos:column="2">private<pos:position pos:line="72" pos:column="9"/></specifier> <specifier pos:line="72" pos:column="10">static<pos:position pos:line="72" pos:column="16"/></specifier> <type><specifier pos:line="72" pos:column="17">final<pos:position pos:line="72" pos:column="22"/></specifier> <name pos:line="72" pos:column="23">MappingResultsCriteria<pos:position pos:line="72" pos:column="45"/></name></type> <name pos:line="72" pos:column="46">PROPERTY_NOT_FOUND_ERROR<pos:position pos:line="72" pos:column="70"/></name> <init pos:line="72" pos:column="71">= <expr><operator pos:line="72" pos:column="73">new<pos:position pos:line="72" pos:column="76"/></operator> <call><name pos:line="72" pos:column="77">PropertyNotFoundError<pos:position pos:line="72" pos:column="98"/></name><argument_list pos:line="72" pos:column="98">()<pos:position pos:line="72" pos:column="100"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="101"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="74" pos:column="2">private<pos:position pos:line="74" pos:column="9"/></specifier> <specifier pos:line="74" pos:column="10">static<pos:position pos:line="74" pos:column="16"/></specifier> <type><specifier pos:line="74" pos:column="17">final<pos:position pos:line="74" pos:column="22"/></specifier> <name pos:line="74" pos:column="23">MappingResultsCriteria<pos:position pos:line="74" pos:column="45"/></name></type> <name pos:line="74" pos:column="46">MAPPING_ERROR<pos:position pos:line="74" pos:column="59"/></name> <init pos:line="74" pos:column="60">= <expr><operator pos:line="74" pos:column="62">new<pos:position pos:line="74" pos:column="65"/></operator> <call><name pos:line="74" pos:column="66">MappingError<pos:position pos:line="74" pos:column="78"/></name><argument_list pos:line="74" pos:column="78">()<pos:position pos:line="74" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="81"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="76" pos:column="2">private<pos:position pos:line="76" pos:column="9"/></specifier> <type><name><name pos:line="76" pos:column="10">org<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">.<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">springframework<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">.<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="30">web<pos:position pos:line="76" pos:column="33"/></name><operator pos:line="76" pos:column="33">.<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="34">servlet<pos:position pos:line="76" pos:column="41"/></name><operator pos:line="76" pos:column="41">.<pos:position pos:line="76" pos:column="42"/></operator><name pos:line="76" pos:column="42">View<pos:position pos:line="76" pos:column="46"/></name></name></type> <name pos:line="76" pos:column="47">view<pos:position pos:line="76" pos:column="51"/></name></decl>;<pos:position pos:line="76" pos:column="52"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="78" pos:column="2">private<pos:position pos:line="78" pos:column="9"/></specifier> <type><name pos:line="78" pos:column="10">RequestContext<pos:position pos:line="78" pos:column="24"/></name></type> <name pos:line="78" pos:column="25">requestContext<pos:position pos:line="78" pos:column="39"/></name></decl>;<pos:position pos:line="78" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="80" pos:column="2">private<pos:position pos:line="80" pos:column="9"/></specifier> <type><name pos:line="80" pos:column="10">ExpressionParser<pos:position pos:line="80" pos:column="26"/></name></type> <name pos:line="80" pos:column="27">expressionParser<pos:position pos:line="80" pos:column="43"/></name></decl>;<pos:position pos:line="80" pos:column="44"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="82" pos:column="2">private<pos:position pos:line="82" pos:column="9"/></specifier> <type><specifier pos:line="82" pos:column="10">final<pos:position pos:line="82" pos:column="15"/></specifier> <name pos:line="82" pos:column="16">ExpressionParser<pos:position pos:line="82" pos:column="32"/></name></type> <name pos:line="82" pos:column="33">emptyValueExpressionParser<pos:position pos:line="82" pos:column="59"/></name> <init pos:line="82" pos:column="60">= <expr><operator pos:line="82" pos:column="62">new<pos:position pos:line="82" pos:column="65"/></operator> <call><name pos:line="82" pos:column="66">BeanWrapperExpressionParser<pos:position pos:line="82" pos:column="93"/></name><argument_list pos:line="82" pos:column="93">()<pos:position pos:line="82" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="96"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="84" pos:column="2">private<pos:position pos:line="84" pos:column="9"/></specifier> <type><name pos:line="84" pos:column="10">ConversionService<pos:position pos:line="84" pos:column="27"/></name></type> <name pos:line="84" pos:column="28">conversionService<pos:position pos:line="84" pos:column="45"/></name></decl>;<pos:position pos:line="84" pos:column="46"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="86" pos:column="2">private<pos:position pos:line="86" pos:column="9"/></specifier> <type><name pos:line="86" pos:column="10">Validator<pos:position pos:line="86" pos:column="19"/></name></type> <name pos:line="86" pos:column="20">validator<pos:position pos:line="86" pos:column="29"/></name></decl>;<pos:position pos:line="86" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="88" pos:column="2">private<pos:position pos:line="88" pos:column="9"/></specifier> <type><name pos:line="88" pos:column="10">String<pos:position pos:line="88" pos:column="16"/></name></type> <name pos:line="88" pos:column="17">fieldMarkerPrefix<pos:position pos:line="88" pos:column="34"/></name> <init pos:line="88" pos:column="35">= <expr><literal type="string" pos:line="88" pos:column="37">"_"<pos:position pos:line="88" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="88" pos:column="41"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="90" pos:column="2">private<pos:position pos:line="90" pos:column="9"/></specifier> <type><name pos:line="90" pos:column="10">String<pos:position pos:line="90" pos:column="16"/></name></type> <name pos:line="90" pos:column="17">eventIdParameterName<pos:position pos:line="90" pos:column="37"/></name> <init pos:line="90" pos:column="38">= <expr><literal type="string" pos:line="90" pos:column="40">"_eventId"<pos:position pos:line="90" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="90" pos:column="51"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="92" pos:column="2">private<pos:position pos:line="92" pos:column="9"/></specifier> <type><name pos:line="92" pos:column="10">String<pos:position pos:line="92" pos:column="16"/></name></type> <name pos:line="92" pos:column="17">eventId<pos:position pos:line="92" pos:column="24"/></name></decl>;<pos:position pos:line="92" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="94" pos:column="2">private<pos:position pos:line="94" pos:column="9"/></specifier> <type><name pos:line="94" pos:column="10">MappingResults<pos:position pos:line="94" pos:column="24"/></name></type> <name pos:line="94" pos:column="25">mappingResults<pos:position pos:line="94" pos:column="39"/></name></decl>;<pos:position pos:line="94" pos:column="40"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="96" pos:column="2">private<pos:position pos:line="96" pos:column="9"/></specifier> <type><name pos:line="96" pos:column="10">BinderConfiguration<pos:position pos:line="96" pos:column="29"/></name></type> <name pos:line="96" pos:column="30">binderConfiguration<pos:position pos:line="96" pos:column="49"/></name></decl>;<pos:position pos:line="96" pos:column="50"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="98" pos:column="2">private<pos:position pos:line="98" pos:column="9"/></specifier> <type><name pos:line="98" pos:column="10">MessageCodesResolver<pos:position pos:line="98" pos:column="30"/></name></type> <name pos:line="98" pos:column="31">messageCodesResolver<pos:position pos:line="98" pos:column="51"/></name></decl>;<pos:position pos:line="98" pos:column="52"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="100" pos:column="2">private<pos:position pos:line="100" pos:column="9"/></specifier> <type><name pos:line="100" pos:column="10">boolean<pos:position pos:line="100" pos:column="17"/></name></type> <name pos:line="100" pos:column="18">userEventProcessed<pos:position pos:line="100" pos:column="36"/></name></decl>;<pos:position pos:line="100" pos:column="37"/></decl_stmt>

	<decl_stmt><decl><specifier pos:line="102" pos:column="2">private<pos:position pos:line="102" pos:column="9"/></specifier> <type><name pos:line="102" pos:column="10">ValidationHintResolver<pos:position pos:line="102" pos:column="32"/></name></type> <name pos:line="102" pos:column="33">validationHintResolver<pos:position pos:line="102" pos:column="55"/></name> <init pos:line="102" pos:column="56">= <expr><operator pos:line="102" pos:column="58">new<pos:position pos:line="102" pos:column="61"/></operator> <call><name pos:line="102" pos:column="62">BeanValidationHintResolver<pos:position pos:line="102" pos:column="88"/></name><argument_list pos:line="102" pos:column="88">()<pos:position pos:line="102" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="102" pos:column="91"/></decl_stmt>

	<comment type="block" format="javadoc" pos:line="104" pos:column="2">/**
	 * Creates a new MVC view.
	 * @param view the Spring MVC view to render
	 * @param requestContext the current flow request context
	 */</comment>
	<constructor><specifier pos:line="109" pos:column="2">public<pos:position pos:line="109" pos:column="8"/></specifier> <name pos:line="109" pos:column="9">AbstractMvcView<pos:position pos:line="109" pos:column="24"/></name><parameter_list pos:line="109" pos:column="24">(<parameter><decl><type><name><name pos:line="109" pos:column="25">org<pos:position pos:line="109" pos:column="28"/></name><operator pos:line="109" pos:column="28">.<pos:position pos:line="109" pos:column="29"/></operator><name pos:line="109" pos:column="29">springframework<pos:position pos:line="109" pos:column="44"/></name><operator pos:line="109" pos:column="44">.<pos:position pos:line="109" pos:column="45"/></operator><name pos:line="109" pos:column="45">web<pos:position pos:line="109" pos:column="48"/></name><operator pos:line="109" pos:column="48">.<pos:position pos:line="109" pos:column="49"/></operator><name pos:line="109" pos:column="49">servlet<pos:position pos:line="109" pos:column="56"/></name><operator pos:line="109" pos:column="56">.<pos:position pos:line="109" pos:column="57"/></operator><name pos:line="109" pos:column="57">View<pos:position pos:line="109" pos:column="61"/></name></name></type> <name pos:line="109" pos:column="62">view<pos:position pos:line="109" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="109" pos:column="68">RequestContext<pos:position pos:line="109" pos:column="82"/></name></type> <name pos:line="109" pos:column="83">requestContext<pos:position pos:line="109" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="109" pos:column="98"/></parameter_list> <block pos:line="109" pos:column="99">{
		<expr_stmt><expr><name><name pos:line="110" pos:column="3">this<pos:position pos:line="110" pos:column="7"/></name><operator pos:line="110" pos:column="7">.<pos:position pos:line="110" pos:column="8"/></operator><name pos:line="110" pos:column="8">view<pos:position pos:line="110" pos:column="12"/></name></name> <operator pos:line="110" pos:column="13">=<pos:position pos:line="110" pos:column="14"/></operator> <name pos:line="110" pos:column="15">view<pos:position pos:line="110" pos:column="19"/></name></expr>;<pos:position pos:line="110" pos:column="20"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="111" pos:column="3">this<pos:position pos:line="111" pos:column="7"/></name><operator pos:line="111" pos:column="7">.<pos:position pos:line="111" pos:column="8"/></operator><name pos:line="111" pos:column="8">requestContext<pos:position pos:line="111" pos:column="22"/></name></name> <operator pos:line="111" pos:column="23">=<pos:position pos:line="111" pos:column="24"/></operator> <name pos:line="111" pos:column="25">requestContext<pos:position pos:line="111" pos:column="39"/></name></expr>;<pos:position pos:line="111" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="3"/></block></constructor>

	<comment type="block" format="javadoc" pos:line="114" pos:column="2">/**
	 * Sets the expression parser to use to parse model expressions.
	 * @param expressionParser the expression parser
	 */</comment>
	<function><specifier pos:line="118" pos:column="2">public<pos:position pos:line="118" pos:column="8"/></specifier> <type><name pos:line="118" pos:column="9">void<pos:position pos:line="118" pos:column="13"/></name></type> <name pos:line="118" pos:column="14">setExpressionParser<pos:position pos:line="118" pos:column="33"/></name><parameter_list pos:line="118" pos:column="33">(<parameter><decl><type><name pos:line="118" pos:column="34">ExpressionParser<pos:position pos:line="118" pos:column="50"/></name></type> <name pos:line="118" pos:column="51">expressionParser<pos:position pos:line="118" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="118" pos:column="68"/></parameter_list> <block pos:line="118" pos:column="69">{
		<expr_stmt><expr><name><name pos:line="119" pos:column="3">this<pos:position pos:line="119" pos:column="7"/></name><operator pos:line="119" pos:column="7">.<pos:position pos:line="119" pos:column="8"/></operator><name pos:line="119" pos:column="8">expressionParser<pos:position pos:line="119" pos:column="24"/></name></name> <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <name pos:line="119" pos:column="27">expressionParser<pos:position pos:line="119" pos:column="43"/></name></expr>;<pos:position pos:line="119" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="120" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="122" pos:column="2">/**
	 * Sets the service to use to expose formatters for field values.
	 * @param conversionService the conversion service
	 */</comment>
	<function><specifier pos:line="126" pos:column="2">public<pos:position pos:line="126" pos:column="8"/></specifier> <type><name pos:line="126" pos:column="9">void<pos:position pos:line="126" pos:column="13"/></name></type> <name pos:line="126" pos:column="14">setConversionService<pos:position pos:line="126" pos:column="34"/></name><parameter_list pos:line="126" pos:column="34">(<parameter><decl><type><name pos:line="126" pos:column="35">ConversionService<pos:position pos:line="126" pos:column="52"/></name></type> <name pos:line="126" pos:column="53">conversionService<pos:position pos:line="126" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="126" pos:column="71"/></parameter_list> <block pos:line="126" pos:column="72">{
		<expr_stmt><expr><name><name pos:line="127" pos:column="3">this<pos:position pos:line="127" pos:column="7"/></name><operator pos:line="127" pos:column="7">.<pos:position pos:line="127" pos:column="8"/></operator><name pos:line="127" pos:column="8">conversionService<pos:position pos:line="127" pos:column="25"/></name></name> <operator pos:line="127" pos:column="26">=<pos:position pos:line="127" pos:column="27"/></operator> <name pos:line="127" pos:column="28">conversionService<pos:position pos:line="127" pos:column="45"/></name></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="128" pos:column="3"/></block></function>

	<function><specifier pos:line="130" pos:column="2">public<pos:position pos:line="130" pos:column="8"/></specifier> <type><name pos:line="130" pos:column="9">void<pos:position pos:line="130" pos:column="13"/></name></type> <name pos:line="130" pos:column="14">setValidator<pos:position pos:line="130" pos:column="26"/></name><parameter_list pos:line="130" pos:column="26">(<parameter><decl><type><name pos:line="130" pos:column="27">Validator<pos:position pos:line="130" pos:column="36"/></name></type> <name pos:line="130" pos:column="37">validator<pos:position pos:line="130" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="130" pos:column="47"/></parameter_list> <block pos:line="130" pos:column="48">{
		<expr_stmt><expr><name><name pos:line="131" pos:column="3">this<pos:position pos:line="131" pos:column="7"/></name><operator pos:line="131" pos:column="7">.<pos:position pos:line="131" pos:column="8"/></operator><name pos:line="131" pos:column="8">validator<pos:position pos:line="131" pos:column="17"/></name></name> <operator pos:line="131" pos:column="18">=<pos:position pos:line="131" pos:column="19"/></operator> <name pos:line="131" pos:column="20">validator<pos:position pos:line="131" pos:column="29"/></name></expr>;<pos:position pos:line="131" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="132" pos:column="3"/></block></function>

	<function><specifier pos:line="134" pos:column="2">public<pos:position pos:line="134" pos:column="8"/></specifier> <type><name pos:line="134" pos:column="9">void<pos:position pos:line="134" pos:column="13"/></name></type> <name pos:line="134" pos:column="14">setValidationHintResolver<pos:position pos:line="134" pos:column="39"/></name><parameter_list pos:line="134" pos:column="39">(<parameter><decl><type><name pos:line="134" pos:column="40">ValidationHintResolver<pos:position pos:line="134" pos:column="62"/></name></type> <name pos:line="134" pos:column="63">validationHintResolver<pos:position pos:line="134" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="134" pos:column="86"/></parameter_list> <block pos:line="134" pos:column="87">{
		<if pos:line="135" pos:column="3">if <condition pos:line="135" pos:column="6">(<expr><name pos:line="135" pos:column="7">validationHintResolver<pos:position pos:line="135" pos:column="29"/></name> <operator pos:line="135" pos:column="30">!=<pos:position pos:line="135" pos:column="32"/></operator> <literal type="null" pos:line="135" pos:column="33">null<pos:position pos:line="135" pos:column="37"/></literal></expr>)<pos:position pos:line="135" pos:column="38"/></condition><then pos:line="135" pos:column="38"> <block pos:line="135" pos:column="39">{
			<expr_stmt><expr><name><name pos:line="136" pos:column="4">this<pos:position pos:line="136" pos:column="8"/></name><operator pos:line="136" pos:column="8">.<pos:position pos:line="136" pos:column="9"/></operator><name pos:line="136" pos:column="9">validationHintResolver<pos:position pos:line="136" pos:column="31"/></name></name> <operator pos:line="136" pos:column="32">=<pos:position pos:line="136" pos:column="33"/></operator> <name pos:line="136" pos:column="34">validationHintResolver<pos:position pos:line="136" pos:column="56"/></name></expr>;<pos:position pos:line="136" pos:column="57"/></expr_stmt>
		}<pos:position pos:line="137" pos:column="4"/></block></then></if>
	}<pos:position pos:line="138" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="140" pos:column="2">/**
	 * Sets the configuration describing how this view should bind to its model to access data for rendering.
	 * @param binderConfiguration the model binder configuration
	 */</comment>
	<function><specifier pos:line="144" pos:column="2">public<pos:position pos:line="144" pos:column="8"/></specifier> <type><name pos:line="144" pos:column="9">void<pos:position pos:line="144" pos:column="13"/></name></type> <name pos:line="144" pos:column="14">setBinderConfiguration<pos:position pos:line="144" pos:column="36"/></name><parameter_list pos:line="144" pos:column="36">(<parameter><decl><type><name pos:line="144" pos:column="37">BinderConfiguration<pos:position pos:line="144" pos:column="56"/></name></type> <name pos:line="144" pos:column="57">binderConfiguration<pos:position pos:line="144" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="144" pos:column="77"/></parameter_list> <block pos:line="144" pos:column="78">{
		<expr_stmt><expr><name><name pos:line="145" pos:column="3">this<pos:position pos:line="145" pos:column="7"/></name><operator pos:line="145" pos:column="7">.<pos:position pos:line="145" pos:column="8"/></operator><name pos:line="145" pos:column="8">binderConfiguration<pos:position pos:line="145" pos:column="27"/></name></name> <operator pos:line="145" pos:column="28">=<pos:position pos:line="145" pos:column="29"/></operator> <name pos:line="145" pos:column="30">binderConfiguration<pos:position pos:line="145" pos:column="49"/></name></expr>;<pos:position pos:line="145" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="146" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="148" pos:column="2">/**
	 * Set the message codes resolver to use to resolve bind and validation failure message codes.
	 * @param messageCodesResolver the binding error message code resolver to use
	 */</comment>
	<function><specifier pos:line="152" pos:column="2">public<pos:position pos:line="152" pos:column="8"/></specifier> <type><name pos:line="152" pos:column="9">void<pos:position pos:line="152" pos:column="13"/></name></type> <name pos:line="152" pos:column="14">setMessageCodesResolver<pos:position pos:line="152" pos:column="37"/></name><parameter_list pos:line="152" pos:column="37">(<parameter><decl><type><name pos:line="152" pos:column="38">MessageCodesResolver<pos:position pos:line="152" pos:column="58"/></name></type> <name pos:line="152" pos:column="59">messageCodesResolver<pos:position pos:line="152" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="152" pos:column="80"/></parameter_list> <block pos:line="152" pos:column="81">{
		<expr_stmt><expr><name><name pos:line="153" pos:column="3">this<pos:position pos:line="153" pos:column="7"/></name><operator pos:line="153" pos:column="7">.<pos:position pos:line="153" pos:column="8"/></operator><name pos:line="153" pos:column="8">messageCodesResolver<pos:position pos:line="153" pos:column="28"/></name></name> <operator pos:line="153" pos:column="29">=<pos:position pos:line="153" pos:column="30"/></operator> <name pos:line="153" pos:column="31">messageCodesResolver<pos:position pos:line="153" pos:column="51"/></name></expr>;<pos:position pos:line="153" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="154" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="156" pos:column="2">/**
	 * Specify a prefix that can be used for parameters that mark potentially empty fields, having "prefix + field" as
	 * name. Such a marker parameter is checked by existence: You can send any value for it, for example "visible". This
	 * is particularly useful for HTML checkboxes and select options.
	 * &lt;p&gt;
	 * Default is "_", for "_FIELD" parameters (e.g. "_subscribeToNewsletter"). Set this to null if you want to turn off
	 * the empty field check completely.
	 * &lt;p&gt;
	 * HTML checkboxes only send a value when they're checked, so it is not possible to detect that a formerly checked
	 * box has just been unchecked, at least not with standard HTML means.
	 * &lt;p&gt;
	 * This auto-reset mechanism addresses this deficiency, provided that a marker parameter is sent for each checkbox
	 * field, like "_subscribeToNewsletter" for a "subscribeToNewsletter" field. As the marker parameter is sent in any
	 * case, the data binder can detect an empty field and automatically reset its value.
	 */</comment>
	<function><specifier pos:line="171" pos:column="2">public<pos:position pos:line="171" pos:column="8"/></specifier> <type><name pos:line="171" pos:column="9">void<pos:position pos:line="171" pos:column="13"/></name></type> <name pos:line="171" pos:column="14">setFieldMarkerPrefix<pos:position pos:line="171" pos:column="34"/></name><parameter_list pos:line="171" pos:column="34">(<parameter><decl><type><name pos:line="171" pos:column="35">String<pos:position pos:line="171" pos:column="41"/></name></type> <name pos:line="171" pos:column="42">fieldMarkerPrefix<pos:position pos:line="171" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="171" pos:column="60"/></parameter_list> <block pos:line="171" pos:column="61">{
		<expr_stmt><expr><name><name pos:line="172" pos:column="3">this<pos:position pos:line="172" pos:column="7"/></name><operator pos:line="172" pos:column="7">.<pos:position pos:line="172" pos:column="8"/></operator><name pos:line="172" pos:column="8">fieldMarkerPrefix<pos:position pos:line="172" pos:column="25"/></name></name> <operator pos:line="172" pos:column="26">=<pos:position pos:line="172" pos:column="27"/></operator> <name pos:line="172" pos:column="28">fieldMarkerPrefix<pos:position pos:line="172" pos:column="45"/></name></expr>;<pos:position pos:line="172" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="173" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="175" pos:column="2">/**
	 * Sets the name of the request parameter to use to lookup user events signaled by this view. If not specified, the
	 * default is &lt;code&gt;_eventId&lt;/code&gt;
	 * @param eventIdParameterName the event id parameter name
	 */</comment>
	<function><specifier pos:line="180" pos:column="2">public<pos:position pos:line="180" pos:column="8"/></specifier> <type><name pos:line="180" pos:column="9">void<pos:position pos:line="180" pos:column="13"/></name></type> <name pos:line="180" pos:column="14">setEventIdParameterName<pos:position pos:line="180" pos:column="37"/></name><parameter_list pos:line="180" pos:column="37">(<parameter><decl><type><name pos:line="180" pos:column="38">String<pos:position pos:line="180" pos:column="44"/></name></type> <name pos:line="180" pos:column="45">eventIdParameterName<pos:position pos:line="180" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="180" pos:column="66"/></parameter_list> <block pos:line="180" pos:column="67">{
		<expr_stmt><expr><name><name pos:line="181" pos:column="3">this<pos:position pos:line="181" pos:column="7"/></name><operator pos:line="181" pos:column="7">.<pos:position pos:line="181" pos:column="8"/></operator><name pos:line="181" pos:column="8">eventIdParameterName<pos:position pos:line="181" pos:column="28"/></name></name> <operator pos:line="181" pos:column="29">=<pos:position pos:line="181" pos:column="30"/></operator> <name pos:line="181" pos:column="31">eventIdParameterName<pos:position pos:line="181" pos:column="51"/></name></expr>;<pos:position pos:line="181" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="182" pos:column="3"/></block></function>

	<function><specifier pos:line="184" pos:column="2">public<pos:position pos:line="184" pos:column="8"/></specifier> <type><name pos:line="184" pos:column="9">void<pos:position pos:line="184" pos:column="13"/></name></type> <name pos:line="184" pos:column="14">render<pos:position pos:line="184" pos:column="20"/></name><parameter_list pos:line="184" pos:column="20">()<pos:position pos:line="184" pos:column="22"/></parameter_list> <throws pos:line="184" pos:column="23">throws <argument><expr><name pos:line="184" pos:column="30">IOException<pos:position pos:line="184" pos:column="41"/></name></expr></argument></throws> <block pos:line="184" pos:column="42">{
		<decl_stmt><decl><type><name><name pos:line="185" pos:column="3">Map<pos:position pos:line="185" pos:column="6"/></name><argument_list type="generic" pos:line="185" pos:column="6">&lt;<argument><name pos:line="185" pos:column="7">String<pos:position pos:line="185" pos:column="13"/></name></argument>, <argument><name pos:line="185" pos:column="15">Object<pos:position pos:line="185" pos:column="21"/></name></argument>&gt;<pos:position pos:line="185" pos:column="25"/></argument_list></name></type> <name pos:line="185" pos:column="23">model<pos:position pos:line="185" pos:column="28"/></name> <init pos:line="185" pos:column="29">= <expr><operator pos:line="185" pos:column="31">new<pos:position pos:line="185" pos:column="34"/></operator> <call><name><name pos:line="185" pos:column="35">HashMap<pos:position pos:line="185" pos:column="42"/></name><argument_list type="generic" pos:line="185" pos:column="42">&lt;<argument><name pos:line="185" pos:column="43">String<pos:position pos:line="185" pos:column="49"/></name></argument>, <argument><name pos:line="185" pos:column="51">Object<pos:position pos:line="185" pos:column="57"/></name></argument>&gt;<pos:position pos:line="185" pos:column="61"/></argument_list></name><argument_list pos:line="185" pos:column="58">()<pos:position pos:line="185" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="185" pos:column="61"/></decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="186" pos:column="3">model<pos:position pos:line="186" pos:column="8"/></name><operator pos:line="186" pos:column="8">.<pos:position pos:line="186" pos:column="9"/></operator><name pos:line="186" pos:column="9">putAll<pos:position pos:line="186" pos:column="15"/></name></name><argument_list pos:line="186" pos:column="15">(<argument><expr><call><name pos:line="186" pos:column="16">flowScopes<pos:position pos:line="186" pos:column="26"/></name><argument_list pos:line="186" pos:column="26">()<pos:position pos:line="186" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="186" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="187" pos:column="3">exposeBindingModel<pos:position pos:line="187" pos:column="21"/></name><argument_list pos:line="187" pos:column="21">(<argument><expr><name pos:line="187" pos:column="22">model<pos:position pos:line="187" pos:column="27"/></name></expr></argument>)<pos:position pos:line="187" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="188" pos:column="3">model<pos:position pos:line="188" pos:column="8"/></name><operator pos:line="188" pos:column="8">.<pos:position pos:line="188" pos:column="9"/></operator><name pos:line="188" pos:column="9">put<pos:position pos:line="188" pos:column="12"/></name></name><argument_list pos:line="188" pos:column="12">(<argument><expr><literal type="string" pos:line="188" pos:column="13">"flowRequestContext"<pos:position pos:line="188" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="35">requestContext<pos:position pos:line="188" pos:column="49"/></name></expr></argument>)<pos:position pos:line="188" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="51"/></expr_stmt>
		<decl_stmt><decl><type><name pos:line="189" pos:column="3">FlowExecutionKey<pos:position pos:line="189" pos:column="19"/></name></type> <name pos:line="189" pos:column="20">key<pos:position pos:line="189" pos:column="23"/></name> <init pos:line="189" pos:column="24">= <expr><call><name><name pos:line="189" pos:column="26">requestContext<pos:position pos:line="189" pos:column="40"/></name><operator pos:line="189" pos:column="40">.<pos:position pos:line="189" pos:column="41"/></operator><name pos:line="189" pos:column="41">getFlowExecutionContext<pos:position pos:line="189" pos:column="64"/></name></name><argument_list pos:line="189" pos:column="64">()<pos:position pos:line="189" pos:column="66"/></argument_list></call><operator pos:line="189" pos:column="66">.<pos:position pos:line="189" pos:column="67"/></operator><call><name pos:line="189" pos:column="67">getKey<pos:position pos:line="189" pos:column="73"/></name><argument_list pos:line="189" pos:column="73">()<pos:position pos:line="189" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="189" pos:column="76"/></decl_stmt>
		<if pos:line="190" pos:column="3">if <condition pos:line="190" pos:column="6">(<expr><name pos:line="190" pos:column="7">key<pos:position pos:line="190" pos:column="10"/></name> <operator pos:line="190" pos:column="11">!=<pos:position pos:line="190" pos:column="13"/></operator> <literal type="null" pos:line="190" pos:column="14">null<pos:position pos:line="190" pos:column="18"/></literal></expr>)<pos:position pos:line="190" pos:column="19"/></condition><then pos:line="190" pos:column="19"> <block pos:line="190" pos:column="20">{
			<expr_stmt><expr><call><name><name pos:line="191" pos:column="4">model<pos:position pos:line="191" pos:column="9"/></name><operator pos:line="191" pos:column="9">.<pos:position pos:line="191" pos:column="10"/></operator><name pos:line="191" pos:column="10">put<pos:position pos:line="191" pos:column="13"/></name></name><argument_list pos:line="191" pos:column="13">(<argument><expr><literal type="string" pos:line="191" pos:column="14">"flowExecutionKey"<pos:position pos:line="191" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="191" pos:column="34">requestContext<pos:position pos:line="191" pos:column="48"/></name><operator pos:line="191" pos:column="48">.<pos:position pos:line="191" pos:column="49"/></operator><name pos:line="191" pos:column="49">getFlowExecutionContext<pos:position pos:line="191" pos:column="72"/></name></name><argument_list pos:line="191" pos:column="72">()<pos:position pos:line="191" pos:column="74"/></argument_list></call><operator pos:line="191" pos:column="74">.<pos:position pos:line="191" pos:column="75"/></operator><call><name pos:line="191" pos:column="75">getKey<pos:position pos:line="191" pos:column="81"/></name><argument_list pos:line="191" pos:column="81">()<pos:position pos:line="191" pos:column="83"/></argument_list></call><operator pos:line="191" pos:column="83">.<pos:position pos:line="191" pos:column="84"/></operator><call><name pos:line="191" pos:column="84">toString<pos:position pos:line="191" pos:column="92"/></name><argument_list pos:line="191" pos:column="92">()<pos:position pos:line="191" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="191" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="96"/></expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="192" pos:column="4">model<pos:position pos:line="192" pos:column="9"/></name><operator pos:line="192" pos:column="9">.<pos:position pos:line="192" pos:column="10"/></operator><name pos:line="192" pos:column="10">put<pos:position pos:line="192" pos:column="13"/></name></name><argument_list pos:line="192" pos:column="13">(<argument><expr><literal type="string" pos:line="192" pos:column="14">"flowExecutionUrl"<pos:position pos:line="192" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="192" pos:column="34">requestContext<pos:position pos:line="192" pos:column="48"/></name><operator pos:line="192" pos:column="48">.<pos:position pos:line="192" pos:column="49"/></operator><name pos:line="192" pos:column="49">getFlowExecutionUrl<pos:position pos:line="192" pos:column="68"/></name></name><argument_list pos:line="192" pos:column="68">()<pos:position pos:line="192" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="192" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="193" pos:column="4"/></block></then></if>
		<expr_stmt><expr><call><name><name pos:line="194" pos:column="3">model<pos:position pos:line="194" pos:column="8"/></name><operator pos:line="194" pos:column="8">.<pos:position pos:line="194" pos:column="9"/></operator><name pos:line="194" pos:column="9">put<pos:position pos:line="194" pos:column="12"/></name></name><argument_list pos:line="194" pos:column="12">(<argument><expr><literal type="string" pos:line="194" pos:column="13">"currentUser"<pos:position pos:line="194" pos:column="26"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="194" pos:column="28">requestContext<pos:position pos:line="194" pos:column="42"/></name><operator pos:line="194" pos:column="42">.<pos:position pos:line="194" pos:column="43"/></operator><name pos:line="194" pos:column="43">getExternalContext<pos:position pos:line="194" pos:column="61"/></name></name><argument_list pos:line="194" pos:column="61">()<pos:position pos:line="194" pos:column="63"/></argument_list></call><operator pos:line="194" pos:column="63">.<pos:position pos:line="194" pos:column="64"/></operator><call><name pos:line="194" pos:column="64">getCurrentUser<pos:position pos:line="194" pos:column="78"/></name><argument_list pos:line="194" pos:column="78">()<pos:position pos:line="194" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="194" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="82"/></expr_stmt>
		<try pos:line="195" pos:column="3">try <block pos:line="195" pos:column="7">{
			<if pos:line="196" pos:column="4">if <condition pos:line="196" pos:column="7">(<expr><call><name><name pos:line="196" pos:column="8">logger<pos:position pos:line="196" pos:column="14"/></name><operator pos:line="196" pos:column="14">.<pos:position pos:line="196" pos:column="15"/></operator><name pos:line="196" pos:column="15">isDebugEnabled<pos:position pos:line="196" pos:column="29"/></name></name><argument_list pos:line="196" pos:column="29">()<pos:position pos:line="196" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="196" pos:column="32"/></condition><then pos:line="196" pos:column="32"> <block pos:line="196" pos:column="33">{
				<expr_stmt><expr><call><name><name pos:line="197" pos:column="5">logger<pos:position pos:line="197" pos:column="11"/></name><operator pos:line="197" pos:column="11">.<pos:position pos:line="197" pos:column="12"/></operator><name pos:line="197" pos:column="12">debug<pos:position pos:line="197" pos:column="17"/></name></name><argument_list pos:line="197" pos:column="17">(<argument><expr><literal type="string" pos:line="197" pos:column="18">"Rendering MVC ["<pos:position pos:line="197" pos:column="35"/></literal> <operator pos:line="197" pos:column="36">+<pos:position pos:line="197" pos:column="37"/></operator> <name pos:line="197" pos:column="38">view<pos:position pos:line="197" pos:column="42"/></name> <operator pos:line="197" pos:column="43">+<pos:position pos:line="197" pos:column="44"/></operator> <literal type="string" pos:line="197" pos:column="45">"] with model map ["<pos:position pos:line="197" pos:column="65"/></literal> <operator pos:line="197" pos:column="66">+<pos:position pos:line="197" pos:column="67"/></operator> <name pos:line="197" pos:column="68">model<pos:position pos:line="197" pos:column="73"/></name> <operator pos:line="197" pos:column="74">+<pos:position pos:line="197" pos:column="75"/></operator> <literal type="string" pos:line="197" pos:column="76">"]"<pos:position pos:line="197" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="81"/></expr_stmt>
			}<pos:position pos:line="198" pos:column="5"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="199" pos:column="4">doRender<pos:position pos:line="199" pos:column="12"/></name><argument_list pos:line="199" pos:column="12">(<argument><expr><name pos:line="199" pos:column="13">model<pos:position pos:line="199" pos:column="18"/></name></expr></argument>)<pos:position pos:line="199" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="20"/></expr_stmt>
		}<pos:position pos:line="200" pos:column="4"/></block> <catch pos:line="200" pos:column="5">catch <parameter_list pos:line="200" pos:column="11">(<parameter><decl><type><name pos:line="200" pos:column="12">IOException<pos:position pos:line="200" pos:column="23"/></name></type> <name pos:line="200" pos:column="24">e<pos:position pos:line="200" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="200" pos:column="26"/></parameter_list> <block pos:line="200" pos:column="27">{
			<throw pos:line="201" pos:column="4">throw <expr><name pos:line="201" pos:column="10">e<pos:position pos:line="201" pos:column="11"/></name></expr>;<pos:position pos:line="201" pos:column="12"/></throw>
		}<pos:position pos:line="202" pos:column="4"/></block></catch> <catch pos:line="202" pos:column="5">catch <parameter_list pos:line="202" pos:column="11">(<parameter><decl><type><name pos:line="202" pos:column="12">Exception<pos:position pos:line="202" pos:column="21"/></name></type> <name pos:line="202" pos:column="22">e<pos:position pos:line="202" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="202" pos:column="24"/></parameter_list> <block pos:line="202" pos:column="25">{
			<decl_stmt><decl><type><name pos:line="203" pos:column="4">IllegalStateException<pos:position pos:line="203" pos:column="25"/></name></type> <name pos:line="203" pos:column="26">ise<pos:position pos:line="203" pos:column="29"/></name> <init pos:line="203" pos:column="30">= <expr><operator pos:line="203" pos:column="32">new<pos:position pos:line="203" pos:column="35"/></operator> <call><name pos:line="203" pos:column="36">IllegalStateException<pos:position pos:line="203" pos:column="57"/></name><argument_list pos:line="203" pos:column="57">(<argument><expr><literal type="string" pos:line="203" pos:column="58">"Exception occurred rendering view "<pos:position pos:line="203" pos:column="94"/></literal> <operator pos:line="203" pos:column="95">+<pos:position pos:line="203" pos:column="96"/></operator> <name pos:line="203" pos:column="97">view<pos:position pos:line="203" pos:column="101"/></name></expr></argument>)<pos:position pos:line="203" pos:column="102"/></argument_list></call></expr></init></decl>;<pos:position pos:line="203" pos:column="103"/></decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="204" pos:column="4">ise<pos:position pos:line="204" pos:column="7"/></name><operator pos:line="204" pos:column="7">.<pos:position pos:line="204" pos:column="8"/></operator><name pos:line="204" pos:column="8">initCause<pos:position pos:line="204" pos:column="17"/></name></name><argument_list pos:line="204" pos:column="17">(<argument><expr><name pos:line="204" pos:column="18">e<pos:position pos:line="204" pos:column="19"/></name></expr></argument>)<pos:position pos:line="204" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="21"/></expr_stmt>
			<throw pos:line="205" pos:column="4">throw <expr><name pos:line="205" pos:column="10">ise<pos:position pos:line="205" pos:column="13"/></name></expr>;<pos:position pos:line="205" pos:column="14"/></throw>
		}<pos:position pos:line="206" pos:column="4"/></block></catch></try>
	}<pos:position pos:line="207" pos:column="3"/></block></function>

	<function><specifier pos:line="209" pos:column="2">public<pos:position pos:line="209" pos:column="8"/></specifier> <type><name pos:line="209" pos:column="9">boolean<pos:position pos:line="209" pos:column="16"/></name></type> <name pos:line="209" pos:column="17">userEventQueued<pos:position pos:line="209" pos:column="32"/></name><parameter_list pos:line="209" pos:column="32">()<pos:position pos:line="209" pos:column="34"/></parameter_list> <block pos:line="209" pos:column="35">{
		<return pos:line="210" pos:column="3">return <expr><operator pos:line="210" pos:column="10">!<pos:position pos:line="210" pos:column="11"/></operator><name pos:line="210" pos:column="11">userEventProcessed<pos:position pos:line="210" pos:column="29"/></name> <operator pos:line="210" pos:column="30">&amp;&amp;<pos:position pos:line="210" pos:column="40"/></operator> <call><name pos:line="210" pos:column="33">getEventId<pos:position pos:line="210" pos:column="43"/></name><argument_list pos:line="210" pos:column="43">()<pos:position pos:line="210" pos:column="45"/></argument_list></call> <operator pos:line="210" pos:column="46">!=<pos:position pos:line="210" pos:column="48"/></operator> <literal type="null" pos:line="210" pos:column="49">null<pos:position pos:line="210" pos:column="53"/></literal></expr>;<pos:position pos:line="210" pos:column="54"/></return>
	}<pos:position pos:line="211" pos:column="3"/></block></function>

	<function><specifier pos:line="213" pos:column="2">public<pos:position pos:line="213" pos:column="8"/></specifier> <type><name pos:line="213" pos:column="9">void<pos:position pos:line="213" pos:column="13"/></name></type> <name pos:line="213" pos:column="14">processUserEvent<pos:position pos:line="213" pos:column="30"/></name><parameter_list pos:line="213" pos:column="30">()<pos:position pos:line="213" pos:column="32"/></parameter_list> <block pos:line="213" pos:column="33">{
		<decl_stmt><decl><type><name pos:line="214" pos:column="3">String<pos:position pos:line="214" pos:column="9"/></name></type> <name pos:line="214" pos:column="10">eventId<pos:position pos:line="214" pos:column="17"/></name> <init pos:line="214" pos:column="18">= <expr><call><name pos:line="214" pos:column="20">getEventId<pos:position pos:line="214" pos:column="30"/></name><argument_list pos:line="214" pos:column="30">()<pos:position pos:line="214" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="214" pos:column="33"/></decl_stmt>
		<if pos:line="215" pos:column="3">if <condition pos:line="215" pos:column="6">(<expr><name pos:line="215" pos:column="7">eventId<pos:position pos:line="215" pos:column="14"/></name> <operator pos:line="215" pos:column="15">==<pos:position pos:line="215" pos:column="17"/></operator> <literal type="null" pos:line="215" pos:column="18">null<pos:position pos:line="215" pos:column="22"/></literal></expr>)<pos:position pos:line="215" pos:column="23"/></condition><then pos:line="215" pos:column="23"> <block pos:line="215" pos:column="24">{
			<return pos:line="216" pos:column="4">return;<pos:position pos:line="216" pos:column="11"/></return>
		}<pos:position pos:line="217" pos:column="4"/></block></then></if>
		<if pos:line="218" pos:column="3">if <condition pos:line="218" pos:column="6">(<expr><call><name><name pos:line="218" pos:column="7">logger<pos:position pos:line="218" pos:column="13"/></name><operator pos:line="218" pos:column="13">.<pos:position pos:line="218" pos:column="14"/></operator><name pos:line="218" pos:column="14">isDebugEnabled<pos:position pos:line="218" pos:column="28"/></name></name><argument_list pos:line="218" pos:column="28">()<pos:position pos:line="218" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="218" pos:column="31"/></condition><then pos:line="218" pos:column="31"> <block pos:line="218" pos:column="32">{
			<expr_stmt><expr><call><name><name pos:line="219" pos:column="4">logger<pos:position pos:line="219" pos:column="10"/></name><operator pos:line="219" pos:column="10">.<pos:position pos:line="219" pos:column="11"/></operator><name pos:line="219" pos:column="11">debug<pos:position pos:line="219" pos:column="16"/></name></name><argument_list pos:line="219" pos:column="16">(<argument><expr><literal type="string" pos:line="219" pos:column="17">"Processing user event '"<pos:position pos:line="219" pos:column="42"/></literal> <operator pos:line="219" pos:column="43">+<pos:position pos:line="219" pos:column="44"/></operator> <name pos:line="219" pos:column="45">eventId<pos:position pos:line="219" pos:column="52"/></name> <operator pos:line="219" pos:column="53">+<pos:position pos:line="219" pos:column="54"/></operator> <literal type="string" pos:line="219" pos:column="55">"'"<pos:position pos:line="219" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="60"/></expr_stmt>
		}<pos:position pos:line="220" pos:column="4"/></block></then></if>
		<decl_stmt><decl><type><name pos:line="221" pos:column="3">Object<pos:position pos:line="221" pos:column="9"/></name></type> <name pos:line="221" pos:column="10">model<pos:position pos:line="221" pos:column="15"/></name> <init pos:line="221" pos:column="16">= <expr><call><name pos:line="221" pos:column="18">getModelObject<pos:position pos:line="221" pos:column="32"/></name><argument_list pos:line="221" pos:column="32">()<pos:position pos:line="221" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="221" pos:column="35"/></decl_stmt>
		<if pos:line="222" pos:column="3">if <condition pos:line="222" pos:column="6">(<expr><name pos:line="222" pos:column="7">model<pos:position pos:line="222" pos:column="12"/></name> <operator pos:line="222" pos:column="13">!=<pos:position pos:line="222" pos:column="15"/></operator> <literal type="null" pos:line="222" pos:column="16">null<pos:position pos:line="222" pos:column="20"/></literal></expr>)<pos:position pos:line="222" pos:column="21"/></condition><then pos:line="222" pos:column="21"> <block pos:line="222" pos:column="22">{
			<if pos:line="223" pos:column="4">if <condition pos:line="223" pos:column="7">(<expr><call><name><name pos:line="223" pos:column="8">logger<pos:position pos:line="223" pos:column="14"/></name><operator pos:line="223" pos:column="14">.<pos:position pos:line="223" pos:column="15"/></operator><name pos:line="223" pos:column="15">isDebugEnabled<pos:position pos:line="223" pos:column="29"/></name></name><argument_list pos:line="223" pos:column="29">()<pos:position pos:line="223" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="223" pos:column="32"/></condition><then pos:line="223" pos:column="32"> <block pos:line="223" pos:column="33">{
				<expr_stmt><expr><call><name><name pos:line="224" pos:column="5">logger<pos:position pos:line="224" pos:column="11"/></name><operator pos:line="224" pos:column="11">.<pos:position pos:line="224" pos:column="12"/></operator><name pos:line="224" pos:column="12">debug<pos:position pos:line="224" pos:column="17"/></name></name><argument_list pos:line="224" pos:column="17">(<argument><expr><literal type="string" pos:line="224" pos:column="18">"Resolved model "<pos:position pos:line="224" pos:column="35"/></literal> <operator pos:line="224" pos:column="36">+<pos:position pos:line="224" pos:column="37"/></operator> <name pos:line="224" pos:column="38">model<pos:position pos:line="224" pos:column="43"/></name></expr></argument>)<pos:position pos:line="224" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="45"/></expr_stmt>
			}<pos:position pos:line="225" pos:column="5"/></block></then></if>
			<decl_stmt><decl><type><name pos:line="226" pos:column="4">TransitionDefinition<pos:position pos:line="226" pos:column="24"/></name></type> <name pos:line="226" pos:column="25">transition<pos:position pos:line="226" pos:column="35"/></name> <init pos:line="226" pos:column="36">= <expr><call><name><name pos:line="226" pos:column="38">requestContext<pos:position pos:line="226" pos:column="52"/></name><operator pos:line="226" pos:column="52">.<pos:position pos:line="226" pos:column="53"/></operator><name pos:line="226" pos:column="53">getMatchingTransition<pos:position pos:line="226" pos:column="74"/></name></name><argument_list pos:line="226" pos:column="74">(<argument><expr><name pos:line="226" pos:column="75">eventId<pos:position pos:line="226" pos:column="82"/></name></expr></argument>)<pos:position pos:line="226" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="226" pos:column="84"/></decl_stmt>
			<if pos:line="227" pos:column="4">if <condition pos:line="227" pos:column="7">(<expr><call><name pos:line="227" pos:column="8">shouldBind<pos:position pos:line="227" pos:column="18"/></name><argument_list pos:line="227" pos:column="18">(<argument><expr><name pos:line="227" pos:column="19">model<pos:position pos:line="227" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="227" pos:column="26">transition<pos:position pos:line="227" pos:column="36"/></name></expr></argument>)<pos:position pos:line="227" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="227" pos:column="38"/></condition><then pos:line="227" pos:column="38"> <block pos:line="227" pos:column="39">{
				<expr_stmt><expr><name pos:line="228" pos:column="5">mappingResults<pos:position pos:line="228" pos:column="19"/></name> <operator pos:line="228" pos:column="20">=<pos:position pos:line="228" pos:column="21"/></operator> <call><name pos:line="228" pos:column="22">bind<pos:position pos:line="228" pos:column="26"/></name><argument_list pos:line="228" pos:column="26">(<argument><expr><name pos:line="228" pos:column="27">model<pos:position pos:line="228" pos:column="32"/></name></expr></argument>)<pos:position pos:line="228" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="34"/></expr_stmt>
				<if pos:line="229" pos:column="5">if <condition pos:line="229" pos:column="8">(<expr><call><name pos:line="229" pos:column="9">hasErrors<pos:position pos:line="229" pos:column="18"/></name><argument_list pos:line="229" pos:column="18">(<argument><expr><name pos:line="229" pos:column="19">mappingResults<pos:position pos:line="229" pos:column="33"/></name></expr></argument>)<pos:position pos:line="229" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="229" pos:column="35"/></condition><then pos:line="229" pos:column="35"> <block pos:line="229" pos:column="36">{
					<if pos:line="230" pos:column="6">if <condition pos:line="230" pos:column="9">(<expr><call><name><name pos:line="230" pos:column="10">logger<pos:position pos:line="230" pos:column="16"/></name><operator pos:line="230" pos:column="16">.<pos:position pos:line="230" pos:column="17"/></operator><name pos:line="230" pos:column="17">isDebugEnabled<pos:position pos:line="230" pos:column="31"/></name></name><argument_list pos:line="230" pos:column="31">()<pos:position pos:line="230" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="230" pos:column="34"/></condition><then pos:line="230" pos:column="34"> <block pos:line="230" pos:column="35">{
						<expr_stmt><expr><call><name><name pos:line="231" pos:column="7">logger<pos:position pos:line="231" pos:column="13"/></name><operator pos:line="231" pos:column="13">.<pos:position pos:line="231" pos:column="14"/></operator><name pos:line="231" pos:column="14">debug<pos:position pos:line="231" pos:column="19"/></name></name><argument_list pos:line="231" pos:column="19">(<argument><expr><literal type="string" pos:line="231" pos:column="20">"Model binding resulted in errors; adding error messages to context"<pos:position pos:line="231" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="90"/></expr_stmt>
					}<pos:position pos:line="232" pos:column="7"/></block></then></if>
					<expr_stmt><expr><call><name pos:line="233" pos:column="6">addErrorMessages<pos:position pos:line="233" pos:column="22"/></name><argument_list pos:line="233" pos:column="22">(<argument><expr><name pos:line="233" pos:column="23">mappingResults<pos:position pos:line="233" pos:column="37"/></name></expr></argument>)<pos:position pos:line="233" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="39"/></expr_stmt>
				}<pos:position pos:line="234" pos:column="6"/></block></then></if>
				<if pos:line="235" pos:column="5">if <condition pos:line="235" pos:column="8">(<expr><call><name pos:line="235" pos:column="9">shouldValidate<pos:position pos:line="235" pos:column="23"/></name><argument_list pos:line="235" pos:column="23">(<argument><expr><name pos:line="235" pos:column="24">model<pos:position pos:line="235" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="31">transition<pos:position pos:line="235" pos:column="41"/></name></expr></argument>)<pos:position pos:line="235" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="235" pos:column="43"/></condition><then pos:line="235" pos:column="43"> <block pos:line="235" pos:column="44">{
					<expr_stmt><expr><call><name pos:line="236" pos:column="6">validate<pos:position pos:line="236" pos:column="14"/></name><argument_list pos:line="236" pos:column="14">(<argument><expr><name pos:line="236" pos:column="15">model<pos:position pos:line="236" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="22">transition<pos:position pos:line="236" pos:column="32"/></name></expr></argument>)<pos:position pos:line="236" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="34"/></expr_stmt>
				}<pos:position pos:line="237" pos:column="6"/></block></then></if>
			}<pos:position pos:line="238" pos:column="5"/></block></then></if>
		}<pos:position pos:line="239" pos:column="4"/></block></then> <else pos:line="239" pos:column="5">else <block pos:line="239" pos:column="10">{
			<if pos:line="240" pos:column="4">if <condition pos:line="240" pos:column="7">(<expr><call><name><name pos:line="240" pos:column="8">logger<pos:position pos:line="240" pos:column="14"/></name><operator pos:line="240" pos:column="14">.<pos:position pos:line="240" pos:column="15"/></operator><name pos:line="240" pos:column="15">isDebugEnabled<pos:position pos:line="240" pos:column="29"/></name></name><argument_list pos:line="240" pos:column="29">()<pos:position pos:line="240" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="240" pos:column="32"/></condition><then pos:line="240" pos:column="32"> <block pos:line="240" pos:column="33">{
				<expr_stmt><expr><call><name><name pos:line="241" pos:column="5">logger<pos:position pos:line="241" pos:column="11"/></name><operator pos:line="241" pos:column="11">.<pos:position pos:line="241" pos:column="12"/></operator><name pos:line="241" pos:column="12">debug<pos:position pos:line="241" pos:column="17"/></name></name><argument_list pos:line="241" pos:column="17">(<argument><expr><literal type="string" pos:line="241" pos:column="18">"No model to bind to; done processing user event"<pos:position pos:line="241" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="69"/></expr_stmt>
			}<pos:position pos:line="242" pos:column="5"/></block></then></if>
		}<pos:position pos:line="243" pos:column="4"/></block></else></if>
		<expr_stmt><expr><name pos:line="244" pos:column="3">userEventProcessed<pos:position pos:line="244" pos:column="21"/></name> <operator pos:line="244" pos:column="22">=<pos:position pos:line="244" pos:column="23"/></operator> <literal type="boolean" pos:line="244" pos:column="24">true<pos:position pos:line="244" pos:column="28"/></literal></expr>;<pos:position pos:line="244" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="245" pos:column="3"/></block></function>

	<function><specifier pos:line="247" pos:column="2">public<pos:position pos:line="247" pos:column="8"/></specifier> <type><name pos:line="247" pos:column="9">Serializable<pos:position pos:line="247" pos:column="21"/></name></type> <name pos:line="247" pos:column="22">getUserEventState<pos:position pos:line="247" pos:column="39"/></name><parameter_list pos:line="247" pos:column="39">()<pos:position pos:line="247" pos:column="41"/></parameter_list> <block pos:line="247" pos:column="42">{
		<return pos:line="248" pos:column="3">return <expr><operator pos:line="248" pos:column="10">new<pos:position pos:line="248" pos:column="13"/></operator> <call><name pos:line="248" pos:column="14">ViewActionStateHolder<pos:position pos:line="248" pos:column="35"/></name><argument_list pos:line="248" pos:column="35">(<argument><expr><name pos:line="248" pos:column="36">eventId<pos:position pos:line="248" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="45">userEventProcessed<pos:position pos:line="248" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="65">mappingResults<pos:position pos:line="248" pos:column="79"/></name></expr></argument>)<pos:position pos:line="248" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="81"/></return>
	}<pos:position pos:line="249" pos:column="3"/></block></function>

	<function><specifier pos:line="251" pos:column="2">public<pos:position pos:line="251" pos:column="8"/></specifier> <type><name pos:line="251" pos:column="9">boolean<pos:position pos:line="251" pos:column="16"/></name></type> <name pos:line="251" pos:column="17">hasFlowEvent<pos:position pos:line="251" pos:column="29"/></name><parameter_list pos:line="251" pos:column="29">()<pos:position pos:line="251" pos:column="31"/></parameter_list> <block pos:line="251" pos:column="32">{
		<return pos:line="252" pos:column="3">return <expr><name pos:line="252" pos:column="10">userEventProcessed<pos:position pos:line="252" pos:column="28"/></name> <operator pos:line="252" pos:column="29">&amp;&amp;<pos:position pos:line="252" pos:column="39"/></operator> <operator pos:line="252" pos:column="32">!<pos:position pos:line="252" pos:column="33"/></operator><call><name><name pos:line="252" pos:column="33">requestContext<pos:position pos:line="252" pos:column="47"/></name><operator pos:line="252" pos:column="47">.<pos:position pos:line="252" pos:column="48"/></operator><name pos:line="252" pos:column="48">getMessageContext<pos:position pos:line="252" pos:column="65"/></name></name><argument_list pos:line="252" pos:column="65">()<pos:position pos:line="252" pos:column="67"/></argument_list></call><operator pos:line="252" pos:column="67">.<pos:position pos:line="252" pos:column="68"/></operator><call><name pos:line="252" pos:column="68">hasErrorMessages<pos:position pos:line="252" pos:column="84"/></name><argument_list pos:line="252" pos:column="84">()<pos:position pos:line="252" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="87"/></return>
	}<pos:position pos:line="253" pos:column="3"/></block></function>

	<function><specifier pos:line="255" pos:column="2">public<pos:position pos:line="255" pos:column="8"/></specifier> <type><name pos:line="255" pos:column="9">Event<pos:position pos:line="255" pos:column="14"/></name></type> <name pos:line="255" pos:column="15">getFlowEvent<pos:position pos:line="255" pos:column="27"/></name><parameter_list pos:line="255" pos:column="27">()<pos:position pos:line="255" pos:column="29"/></parameter_list> <block pos:line="255" pos:column="30">{
		<if pos:line="256" pos:column="3">if <condition pos:line="256" pos:column="6">(<expr><operator pos:line="256" pos:column="7">!<pos:position pos:line="256" pos:column="8"/></operator><call><name pos:line="256" pos:column="8">hasFlowEvent<pos:position pos:line="256" pos:column="20"/></name><argument_list pos:line="256" pos:column="20">()<pos:position pos:line="256" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="256" pos:column="23"/></condition><then pos:line="256" pos:column="23"> <block pos:line="256" pos:column="24">{
			<return pos:line="257" pos:column="4">return <expr><literal type="null" pos:line="257" pos:column="11">null<pos:position pos:line="257" pos:column="15"/></literal></expr>;<pos:position pos:line="257" pos:column="16"/></return>
		}<pos:position pos:line="258" pos:column="4"/></block></then></if>
		<return pos:line="259" pos:column="3">return <expr><operator pos:line="259" pos:column="10">new<pos:position pos:line="259" pos:column="13"/></operator> <call><name pos:line="259" pos:column="14">Event<pos:position pos:line="259" pos:column="19"/></name><argument_list pos:line="259" pos:column="19">(<argument><expr><name pos:line="259" pos:column="20">this<pos:position pos:line="259" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="259" pos:column="26">getEventId<pos:position pos:line="259" pos:column="36"/></name><argument_list pos:line="259" pos:column="36">()<pos:position pos:line="259" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="259" pos:column="40">requestContext<pos:position pos:line="259" pos:column="54"/></name><operator pos:line="259" pos:column="54">.<pos:position pos:line="259" pos:column="55"/></operator><name pos:line="259" pos:column="55">getRequestParameters<pos:position pos:line="259" pos:column="75"/></name></name><argument_list pos:line="259" pos:column="75">()<pos:position pos:line="259" pos:column="77"/></argument_list></call><operator pos:line="259" pos:column="77">.<pos:position pos:line="259" pos:column="78"/></operator><call><name pos:line="259" pos:column="78">asAttributeMap<pos:position pos:line="259" pos:column="92"/></name><argument_list pos:line="259" pos:column="92">()<pos:position pos:line="259" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="259" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="96"/></return>
	}<pos:position pos:line="260" pos:column="3"/></block></function>

	<function><specifier pos:line="262" pos:column="2">public<pos:position pos:line="262" pos:column="8"/></specifier> <type><name pos:line="262" pos:column="9">void<pos:position pos:line="262" pos:column="13"/></name></type> <name pos:line="262" pos:column="14">saveState<pos:position pos:line="262" pos:column="23"/></name><parameter_list pos:line="262" pos:column="23">()<pos:position pos:line="262" pos:column="25"/></parameter_list> <block pos:line="262" pos:column="26">{

	}<pos:position pos:line="264" pos:column="3"/></block></function>

	<function><specifier pos:line="266" pos:column="2">public<pos:position pos:line="266" pos:column="8"/></specifier> <type><name pos:line="266" pos:column="9">String<pos:position pos:line="266" pos:column="15"/></name></type> <name pos:line="266" pos:column="16">toString<pos:position pos:line="266" pos:column="24"/></name><parameter_list pos:line="266" pos:column="24">()<pos:position pos:line="266" pos:column="26"/></parameter_list> <block pos:line="266" pos:column="27">{
		<return pos:line="267" pos:column="3">return <expr><operator pos:line="267" pos:column="10">new<pos:position pos:line="267" pos:column="13"/></operator> <call><name pos:line="267" pos:column="14">ToStringCreator<pos:position pos:line="267" pos:column="29"/></name><argument_list pos:line="267" pos:column="29">(<argument><expr><name pos:line="267" pos:column="30">this<pos:position pos:line="267" pos:column="34"/></name></expr></argument>)<pos:position pos:line="267" pos:column="35"/></argument_list></call><operator pos:line="267" pos:column="35">.<pos:position pos:line="267" pos:column="36"/></operator><call><name pos:line="267" pos:column="36">append<pos:position pos:line="267" pos:column="42"/></name><argument_list pos:line="267" pos:column="42">(<argument><expr><literal type="string" pos:line="267" pos:column="43">"view"<pos:position pos:line="267" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="267" pos:column="51">view<pos:position pos:line="267" pos:column="55"/></name></expr></argument>)<pos:position pos:line="267" pos:column="56"/></argument_list></call><operator pos:line="267" pos:column="56">.<pos:position pos:line="267" pos:column="57"/></operator><call><name pos:line="267" pos:column="57">toString<pos:position pos:line="267" pos:column="65"/></name><argument_list pos:line="267" pos:column="65">()<pos:position pos:line="267" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="68"/></return>
	}<pos:position pos:line="268" pos:column="3"/></block></function>

	<comment type="line" pos:line="270" pos:column="2">// subclassing hooks</comment>

	<comment type="block" format="javadoc" pos:line="272" pos:column="2">/**
	 * Returns the current flow request context.
	 * @return the flow request context
	 */</comment>
	<function><specifier pos:line="276" pos:column="2">protected<pos:position pos:line="276" pos:column="11"/></specifier> <type><name pos:line="276" pos:column="12">RequestContext<pos:position pos:line="276" pos:column="26"/></name></type> <name pos:line="276" pos:column="27">getRequestContext<pos:position pos:line="276" pos:column="44"/></name><parameter_list pos:line="276" pos:column="44">()<pos:position pos:line="276" pos:column="46"/></parameter_list> <block pos:line="276" pos:column="47">{
		<return pos:line="277" pos:column="3">return <expr><name pos:line="277" pos:column="10">requestContext<pos:position pos:line="277" pos:column="24"/></name></expr>;<pos:position pos:line="277" pos:column="25"/></return>
	}<pos:position pos:line="278" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="280" pos:column="2">/**
	 * Returns the Spring MVC view to render
	 * @return the view
	 */</comment>
	<function><specifier pos:line="284" pos:column="2">protected<pos:position pos:line="284" pos:column="11"/></specifier> <type><name><name pos:line="284" pos:column="12">org<pos:position pos:line="284" pos:column="15"/></name><operator pos:line="284" pos:column="15">.<pos:position pos:line="284" pos:column="16"/></operator><name pos:line="284" pos:column="16">springframework<pos:position pos:line="284" pos:column="31"/></name><operator pos:line="284" pos:column="31">.<pos:position pos:line="284" pos:column="32"/></operator><name pos:line="284" pos:column="32">web<pos:position pos:line="284" pos:column="35"/></name><operator pos:line="284" pos:column="35">.<pos:position pos:line="284" pos:column="36"/></operator><name pos:line="284" pos:column="36">servlet<pos:position pos:line="284" pos:column="43"/></name><operator pos:line="284" pos:column="43">.<pos:position pos:line="284" pos:column="44"/></operator><name pos:line="284" pos:column="44">View<pos:position pos:line="284" pos:column="48"/></name></name></type> <name pos:line="284" pos:column="49">getView<pos:position pos:line="284" pos:column="56"/></name><parameter_list pos:line="284" pos:column="56">()<pos:position pos:line="284" pos:column="58"/></parameter_list> <block pos:line="284" pos:column="59">{
		<return pos:line="285" pos:column="3">return <expr><name pos:line="285" pos:column="10">view<pos:position pos:line="285" pos:column="14"/></name></expr>;<pos:position pos:line="285" pos:column="15"/></return>
	}<pos:position pos:line="286" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="288" pos:column="2">/**
	 * @return the configured ConversionService
	 */</comment>
	<function><specifier pos:line="291" pos:column="2">protected<pos:position pos:line="291" pos:column="11"/></specifier> <type><name pos:line="291" pos:column="12">ConversionService<pos:position pos:line="291" pos:column="29"/></name></type> <name pos:line="291" pos:column="30">getConversionService<pos:position pos:line="291" pos:column="50"/></name><parameter_list pos:line="291" pos:column="50">()<pos:position pos:line="291" pos:column="52"/></parameter_list> <block pos:line="291" pos:column="53">{
		<return pos:line="292" pos:column="3">return <expr><name pos:line="292" pos:column="10">conversionService<pos:position pos:line="292" pos:column="27"/></name></expr>;<pos:position pos:line="292" pos:column="28"/></return>
	}<pos:position pos:line="293" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="295" pos:column="2">/**
	 * Template method subclasses should override to execute the view rendering logic.
	 * @param model the view model data
	 * @throws Exception an exception occurred rendering the view
	 */</comment>
	<function_decl><specifier pos:line="300" pos:column="2">protected<pos:position pos:line="300" pos:column="11"/></specifier> <specifier pos:line="300" pos:column="12">abstract<pos:position pos:line="300" pos:column="20"/></specifier> <type><name pos:line="300" pos:column="21">void<pos:position pos:line="300" pos:column="25"/></name></type> <name pos:line="300" pos:column="26">doRender<pos:position pos:line="300" pos:column="34"/></name><parameter_list pos:line="300" pos:column="34">(<parameter><decl><type><name><name pos:line="300" pos:column="35">Map<pos:position pos:line="300" pos:column="38"/></name><argument_list type="generic" pos:line="300" pos:column="38">&lt;<argument><name pos:line="300" pos:column="39">String<pos:position pos:line="300" pos:column="45"/></name></argument>, <argument><name pos:line="300" pos:column="47">?<pos:position pos:line="300" pos:column="48"/></name></argument>&gt;<pos:position pos:line="300" pos:column="52"/></argument_list></name></type> <name pos:line="300" pos:column="50">model<pos:position pos:line="300" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="300" pos:column="56"/></parameter_list> <throws pos:line="300" pos:column="57">throws <argument><expr><name pos:line="300" pos:column="64">Exception<pos:position pos:line="300" pos:column="73"/></name></expr></argument></throws>;<pos:position pos:line="300" pos:column="74"/></function_decl>

	<comment type="block" format="javadoc" pos:line="302" pos:column="2">/**
	 * Returns the id of the user event being processed.
	 * @return the user event
	 */</comment>
	<function><specifier pos:line="306" pos:column="2">protected<pos:position pos:line="306" pos:column="11"/></specifier> <type><name pos:line="306" pos:column="12">String<pos:position pos:line="306" pos:column="18"/></name></type> <name pos:line="306" pos:column="19">getEventId<pos:position pos:line="306" pos:column="29"/></name><parameter_list pos:line="306" pos:column="29">()<pos:position pos:line="306" pos:column="31"/></parameter_list> <block pos:line="306" pos:column="32">{
		<if pos:line="307" pos:column="3">if <condition pos:line="307" pos:column="6">(<expr><name pos:line="307" pos:column="7">eventId<pos:position pos:line="307" pos:column="14"/></name> <operator pos:line="307" pos:column="15">==<pos:position pos:line="307" pos:column="17"/></operator> <literal type="null" pos:line="307" pos:column="18">null<pos:position pos:line="307" pos:column="22"/></literal></expr>)<pos:position pos:line="307" pos:column="23"/></condition><then pos:line="307" pos:column="23"> <block pos:line="307" pos:column="24">{
			<expr_stmt><expr><name pos:line="308" pos:column="4">eventId<pos:position pos:line="308" pos:column="11"/></name> <operator pos:line="308" pos:column="12">=<pos:position pos:line="308" pos:column="13"/></operator> <call><name pos:line="308" pos:column="14">determineEventId<pos:position pos:line="308" pos:column="30"/></name><argument_list pos:line="308" pos:column="30">(<argument><expr><name pos:line="308" pos:column="31">requestContext<pos:position pos:line="308" pos:column="45"/></name></expr></argument>)<pos:position pos:line="308" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="309" pos:column="4"/></block></then></if>
		<return pos:line="310" pos:column="3">return <expr><name><name pos:line="310" pos:column="10">this<pos:position pos:line="310" pos:column="14"/></name><operator pos:line="310" pos:column="14">.<pos:position pos:line="310" pos:column="15"/></operator><name pos:line="310" pos:column="15">eventId<pos:position pos:line="310" pos:column="22"/></name></name></expr>;<pos:position pos:line="310" pos:column="23"/></return>
	}<pos:position pos:line="311" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="313" pos:column="2">/**
	 * Determines if model data binding should be invoked given the Transition that matched the current user event being
	 * processed. Returns true unless the &lt;code&gt;bind&lt;/code&gt; attribute of the Transition has been set to false.
	 * Subclasses may override.
	 * @param model the model data binding would be performed on
	 * @param transition the matched transition
	 * @return true if binding should occur, false if not
	 */</comment>
	<function><specifier pos:line="321" pos:column="2">protected<pos:position pos:line="321" pos:column="11"/></specifier> <type><name pos:line="321" pos:column="12">boolean<pos:position pos:line="321" pos:column="19"/></name></type> <name pos:line="321" pos:column="20">shouldBind<pos:position pos:line="321" pos:column="30"/></name><parameter_list pos:line="321" pos:column="30">(<parameter><decl><type><name pos:line="321" pos:column="31">Object<pos:position pos:line="321" pos:column="37"/></name></type> <name pos:line="321" pos:column="38">model<pos:position pos:line="321" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="321" pos:column="45">TransitionDefinition<pos:position pos:line="321" pos:column="65"/></name></type> <name pos:line="321" pos:column="66">transition<pos:position pos:line="321" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="321" pos:column="77"/></parameter_list> <block pos:line="321" pos:column="78">{
		<if pos:line="322" pos:column="3">if <condition pos:line="322" pos:column="6">(<expr><name pos:line="322" pos:column="7">transition<pos:position pos:line="322" pos:column="17"/></name> <operator pos:line="322" pos:column="18">==<pos:position pos:line="322" pos:column="20"/></operator> <literal type="null" pos:line="322" pos:column="21">null<pos:position pos:line="322" pos:column="25"/></literal></expr>)<pos:position pos:line="322" pos:column="26"/></condition><then pos:line="322" pos:column="26"> <block pos:line="322" pos:column="27">{
			<return pos:line="323" pos:column="4">return <expr><literal type="boolean" pos:line="323" pos:column="11">true<pos:position pos:line="323" pos:column="15"/></literal></expr>;<pos:position pos:line="323" pos:column="16"/></return>
		}<pos:position pos:line="324" pos:column="4"/></block></then></if>
		<return pos:line="325" pos:column="3">return <expr><call><name><name pos:line="325" pos:column="10">transition<pos:position pos:line="325" pos:column="20"/></name><operator pos:line="325" pos:column="20">.<pos:position pos:line="325" pos:column="21"/></operator><name pos:line="325" pos:column="21">getAttributes<pos:position pos:line="325" pos:column="34"/></name></name><argument_list pos:line="325" pos:column="34">()<pos:position pos:line="325" pos:column="36"/></argument_list></call><operator pos:line="325" pos:column="36">.<pos:position pos:line="325" pos:column="37"/></operator><call><name pos:line="325" pos:column="37">getBoolean<pos:position pos:line="325" pos:column="47"/></name><argument_list pos:line="325" pos:column="47">(<argument><expr><literal type="string" pos:line="325" pos:column="48">"bind"<pos:position pos:line="325" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="325" pos:column="56">true<pos:position pos:line="325" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="325" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="62"/></return>
	}<pos:position pos:line="326" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="328" pos:column="2">/**
	 * Returns the results of binding to the view's model, if model binding has occurred.
	 * @return the binding (mapping) results
	 */</comment>
	<function><specifier pos:line="332" pos:column="2">protected<pos:position pos:line="332" pos:column="11"/></specifier> <type><name pos:line="332" pos:column="12">MappingResults<pos:position pos:line="332" pos:column="26"/></name></type> <name pos:line="332" pos:column="27">getMappingResults<pos:position pos:line="332" pos:column="44"/></name><parameter_list pos:line="332" pos:column="44">()<pos:position pos:line="332" pos:column="46"/></parameter_list> <block pos:line="332" pos:column="47">{
		<return pos:line="333" pos:column="3">return <expr><name pos:line="333" pos:column="10">mappingResults<pos:position pos:line="333" pos:column="24"/></name></expr>;<pos:position pos:line="333" pos:column="25"/></return>
	}<pos:position pos:line="334" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="336" pos:column="2">/**
	 * Returns the binding configuration that defines how to connect properties of the model to UI elements.
	 * @return an instance of {@link BinderConfiguration} or null.
	 */</comment>
	<function><specifier pos:line="340" pos:column="2">protected<pos:position pos:line="340" pos:column="11"/></specifier> <type><name pos:line="340" pos:column="12">BinderConfiguration<pos:position pos:line="340" pos:column="31"/></name></type> <name pos:line="340" pos:column="32">getBinderConfiguration<pos:position pos:line="340" pos:column="54"/></name><parameter_list pos:line="340" pos:column="54">()<pos:position pos:line="340" pos:column="56"/></parameter_list> <block pos:line="340" pos:column="57">{
		<return pos:line="341" pos:column="3">return <expr><name pos:line="341" pos:column="10">binderConfiguration<pos:position pos:line="341" pos:column="29"/></name></expr>;<pos:position pos:line="341" pos:column="30"/></return>
	}<pos:position pos:line="342" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="344" pos:column="2">/**
	 * Returns the EL parser to be used for data binding purposes.
	 * @return an instance of {@link ExpressionParser}.
	 */</comment>
	<function><specifier pos:line="348" pos:column="2">protected<pos:position pos:line="348" pos:column="11"/></specifier> <type><name pos:line="348" pos:column="12">ExpressionParser<pos:position pos:line="348" pos:column="28"/></name></type> <name pos:line="348" pos:column="29">getExpressionParser<pos:position pos:line="348" pos:column="48"/></name><parameter_list pos:line="348" pos:column="48">()<pos:position pos:line="348" pos:column="50"/></parameter_list> <block pos:line="348" pos:column="51">{
		<return pos:line="349" pos:column="3">return <expr><name pos:line="349" pos:column="10">expressionParser<pos:position pos:line="349" pos:column="26"/></name></expr>;<pos:position pos:line="349" pos:column="27"/></return>
	}<pos:position pos:line="350" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="352" pos:column="2">/**
	 * Returns the prefix that can be used for parameters that mark potentially empty fields.
	 * @return the prefix value.
	 */</comment>
	<function><specifier pos:line="356" pos:column="2">protected<pos:position pos:line="356" pos:column="11"/></specifier> <type><name pos:line="356" pos:column="12">String<pos:position pos:line="356" pos:column="18"/></name></type> <name pos:line="356" pos:column="19">getFieldMarkerPrefix<pos:position pos:line="356" pos:column="39"/></name><parameter_list pos:line="356" pos:column="39">()<pos:position pos:line="356" pos:column="41"/></parameter_list> <block pos:line="356" pos:column="42">{
		<return pos:line="357" pos:column="3">return <expr><name pos:line="357" pos:column="10">fieldMarkerPrefix<pos:position pos:line="357" pos:column="27"/></name></expr>;<pos:position pos:line="357" pos:column="28"/></return>
	}<pos:position pos:line="358" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="360" pos:column="2">/**
	 * Obtain the user event from the current flow request. The default implementation returns the value of the request
	 * parameter with name {@link #setEventIdParameterName(String) eventIdParameterName}. Subclasses may override.
	 * @param context the current flow request context
	 * @return the user event that occurred
	 */</comment>
	<function><specifier pos:line="366" pos:column="2">protected<pos:position pos:line="366" pos:column="11"/></specifier> <type><name pos:line="366" pos:column="12">String<pos:position pos:line="366" pos:column="18"/></name></type> <name pos:line="366" pos:column="19">determineEventId<pos:position pos:line="366" pos:column="35"/></name><parameter_list pos:line="366" pos:column="35">(<parameter><decl><type><name pos:line="366" pos:column="36">RequestContext<pos:position pos:line="366" pos:column="50"/></name></type> <name pos:line="366" pos:column="51">context<pos:position pos:line="366" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="366" pos:column="59"/></parameter_list> <block pos:line="366" pos:column="60">{
		<return pos:line="367" pos:column="3">return <expr><call><name><name pos:line="367" pos:column="10">WebUtils<pos:position pos:line="367" pos:column="18"/></name><operator pos:line="367" pos:column="18">.<pos:position pos:line="367" pos:column="19"/></operator><name pos:line="367" pos:column="19">findParameterValue<pos:position pos:line="367" pos:column="37"/></name></name><argument_list pos:line="367" pos:column="37">(<argument><expr><call><name><name pos:line="367" pos:column="38">context<pos:position pos:line="367" pos:column="45"/></name><operator pos:line="367" pos:column="45">.<pos:position pos:line="367" pos:column="46"/></operator><name pos:line="367" pos:column="46">getRequestParameters<pos:position pos:line="367" pos:column="66"/></name></name><argument_list pos:line="367" pos:column="66">()<pos:position pos:line="367" pos:column="68"/></argument_list></call><operator pos:line="367" pos:column="68">.<pos:position pos:line="367" pos:column="69"/></operator><call><name pos:line="367" pos:column="69">asMap<pos:position pos:line="367" pos:column="74"/></name><argument_list pos:line="367" pos:column="74">()<pos:position pos:line="367" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="367" pos:column="78">eventIdParameterName<pos:position pos:line="367" pos:column="98"/></name></expr></argument>)<pos:position pos:line="367" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="100"/></return>
	}<pos:position pos:line="368" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="370" pos:column="2">/**
	 * &lt;p&gt;
	 * Causes the model to be populated from information contained in request parameters.
	 * &lt;/p&gt;
	 * &lt;p&gt;
	 * If a view has binding configuration then only model fields specified in the binding configuration will be
	 * considered. In the absence of binding configuration all request parameters will be used to update matching fields
	 * on the model.
	 * &lt;/p&gt;
	 *
	 * @param model the model to be updated
	 * @return an instance of MappingResults with information about the results of the binding.
	 */</comment>
	<function><specifier pos:line="383" pos:column="2">protected<pos:position pos:line="383" pos:column="11"/></specifier> <type><name pos:line="383" pos:column="12">MappingResults<pos:position pos:line="383" pos:column="26"/></name></type> <name pos:line="383" pos:column="27">bind<pos:position pos:line="383" pos:column="31"/></name><parameter_list pos:line="383" pos:column="31">(<parameter><decl><type><name pos:line="383" pos:column="32">Object<pos:position pos:line="383" pos:column="38"/></name></type> <name pos:line="383" pos:column="39">model<pos:position pos:line="383" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="383" pos:column="45"/></parameter_list> <block pos:line="383" pos:column="46">{
		<if pos:line="384" pos:column="3">if <condition pos:line="384" pos:column="6">(<expr><call><name><name pos:line="384" pos:column="7">logger<pos:position pos:line="384" pos:column="13"/></name><operator pos:line="384" pos:column="13">.<pos:position pos:line="384" pos:column="14"/></operator><name pos:line="384" pos:column="14">isDebugEnabled<pos:position pos:line="384" pos:column="28"/></name></name><argument_list pos:line="384" pos:column="28">()<pos:position pos:line="384" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="384" pos:column="31"/></condition><then pos:line="384" pos:column="31"> <block pos:line="384" pos:column="32">{
			<expr_stmt><expr><call><name><name pos:line="385" pos:column="4">logger<pos:position pos:line="385" pos:column="10"/></name><operator pos:line="385" pos:column="10">.<pos:position pos:line="385" pos:column="11"/></operator><name pos:line="385" pos:column="11">debug<pos:position pos:line="385" pos:column="16"/></name></name><argument_list pos:line="385" pos:column="16">(<argument><expr><literal type="string" pos:line="385" pos:column="17">"Binding to model"<pos:position pos:line="385" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="385" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="386" pos:column="4"/></block></then></if>
		<decl_stmt><decl><type><name pos:line="387" pos:column="3">DefaultMapper<pos:position pos:line="387" pos:column="16"/></name></type> <name pos:line="387" pos:column="17">mapper<pos:position pos:line="387" pos:column="23"/></name> <init pos:line="387" pos:column="24">= <expr><operator pos:line="387" pos:column="26">new<pos:position pos:line="387" pos:column="29"/></operator> <call><name pos:line="387" pos:column="30">DefaultMapper<pos:position pos:line="387" pos:column="43"/></name><argument_list pos:line="387" pos:column="43">()<pos:position pos:line="387" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="387" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="388" pos:column="3">ParameterMap<pos:position pos:line="388" pos:column="15"/></name></type> <name pos:line="388" pos:column="16">requestParameters<pos:position pos:line="388" pos:column="33"/></name> <init pos:line="388" pos:column="34">= <expr><call><name><name pos:line="388" pos:column="36">requestContext<pos:position pos:line="388" pos:column="50"/></name><operator pos:line="388" pos:column="50">.<pos:position pos:line="388" pos:column="51"/></operator><name pos:line="388" pos:column="51">getRequestParameters<pos:position pos:line="388" pos:column="71"/></name></name><argument_list pos:line="388" pos:column="71">()<pos:position pos:line="388" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="388" pos:column="74"/></decl_stmt>
		<if pos:line="389" pos:column="3">if <condition pos:line="389" pos:column="6">(<expr><name pos:line="389" pos:column="7">binderConfiguration<pos:position pos:line="389" pos:column="26"/></name> <operator pos:line="389" pos:column="27">!=<pos:position pos:line="389" pos:column="29"/></operator> <literal type="null" pos:line="389" pos:column="30">null<pos:position pos:line="389" pos:column="34"/></literal></expr>)<pos:position pos:line="389" pos:column="35"/></condition><then pos:line="389" pos:column="35"> <block pos:line="389" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="390" pos:column="4">addModelBindings<pos:position pos:line="390" pos:column="20"/></name><argument_list pos:line="390" pos:column="20">(<argument><expr><name pos:line="390" pos:column="21">mapper<pos:position pos:line="390" pos:column="27"/></name></expr></argument>, <argument><expr><call><name><name pos:line="390" pos:column="29">requestParameters<pos:position pos:line="390" pos:column="46"/></name><operator pos:line="390" pos:column="46">.<pos:position pos:line="390" pos:column="47"/></operator><name pos:line="390" pos:column="47">asMap<pos:position pos:line="390" pos:column="52"/></name></name><argument_list pos:line="390" pos:column="52">()<pos:position pos:line="390" pos:column="54"/></argument_list></call><operator pos:line="390" pos:column="54">.<pos:position pos:line="390" pos:column="55"/></operator><call><name pos:line="390" pos:column="55">keySet<pos:position pos:line="390" pos:column="61"/></name><argument_list pos:line="390" pos:column="61">()<pos:position pos:line="390" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="390" pos:column="65">model<pos:position pos:line="390" pos:column="70"/></name></expr></argument>)<pos:position pos:line="390" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="391" pos:column="4"/></block></then> <else pos:line="391" pos:column="5">else <block pos:line="391" pos:column="10">{
			<expr_stmt><expr><call><name pos:line="392" pos:column="4">addDefaultMappings<pos:position pos:line="392" pos:column="22"/></name><argument_list pos:line="392" pos:column="22">(<argument><expr><name pos:line="392" pos:column="23">mapper<pos:position pos:line="392" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="392" pos:column="31">requestParameters<pos:position pos:line="392" pos:column="48"/></name><operator pos:line="392" pos:column="48">.<pos:position pos:line="392" pos:column="49"/></operator><name pos:line="392" pos:column="49">asMap<pos:position pos:line="392" pos:column="54"/></name></name><argument_list pos:line="392" pos:column="54">()<pos:position pos:line="392" pos:column="56"/></argument_list></call><operator pos:line="392" pos:column="56">.<pos:position pos:line="392" pos:column="57"/></operator><call><name pos:line="392" pos:column="57">keySet<pos:position pos:line="392" pos:column="63"/></name><argument_list pos:line="392" pos:column="63">()<pos:position pos:line="392" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="392" pos:column="67">model<pos:position pos:line="392" pos:column="72"/></name></expr></argument>)<pos:position pos:line="392" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="393" pos:column="4"/></block></else></if>
		<return pos:line="394" pos:column="3">return <expr><call><name><name pos:line="394" pos:column="10">mapper<pos:position pos:line="394" pos:column="16"/></name><operator pos:line="394" pos:column="16">.<pos:position pos:line="394" pos:column="17"/></operator><name pos:line="394" pos:column="17">map<pos:position pos:line="394" pos:column="20"/></name></name><argument_list pos:line="394" pos:column="20">(<argument><expr><name pos:line="394" pos:column="21">requestParameters<pos:position pos:line="394" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="394" pos:column="40">model<pos:position pos:line="394" pos:column="45"/></name></expr></argument>)<pos:position pos:line="394" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="394" pos:column="47"/></return>
	}<pos:position pos:line="395" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="397" pos:column="2">/**
	 * &lt;p&gt;
	 * Adds a {@link DefaultMapping} for every configured view {@link Binding} for which there is an incoming request
	 * parameter. If there is no matching incoming request parameter, a special mapping is created that will set the
	 * target field on the model to an empty value (typically null).
	 * &lt;/p&gt;
	 *
	 * @param mapper the mapper to which mappings will be added
	 * @param parameterNames the request parameters
	 * @param model the model
	 */</comment>
	<function><specifier pos:line="408" pos:column="2">protected<pos:position pos:line="408" pos:column="11"/></specifier> <type><name pos:line="408" pos:column="12">void<pos:position pos:line="408" pos:column="16"/></name></type> <name pos:line="408" pos:column="17">addModelBindings<pos:position pos:line="408" pos:column="33"/></name><parameter_list pos:line="408" pos:column="33">(<parameter><decl><type><name pos:line="408" pos:column="34">DefaultMapper<pos:position pos:line="408" pos:column="47"/></name></type> <name pos:line="408" pos:column="48">mapper<pos:position pos:line="408" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="408" pos:column="56">Set<pos:position pos:line="408" pos:column="59"/></name><argument_list type="generic" pos:line="408" pos:column="59">&lt;<argument><name pos:line="408" pos:column="60">String<pos:position pos:line="408" pos:column="66"/></name></argument>&gt;<pos:position pos:line="408" pos:column="70"/></argument_list></name></type> <name pos:line="408" pos:column="68">parameterNames<pos:position pos:line="408" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="408" pos:column="84">Object<pos:position pos:line="408" pos:column="90"/></name></type> <name pos:line="408" pos:column="91">model<pos:position pos:line="408" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="408" pos:column="97"/></parameter_list> <block pos:line="408" pos:column="98">{
		<for pos:line="409" pos:column="3">for <control pos:line="409" pos:column="7">(<init><decl><type><name pos:line="409" pos:column="8">Binding<pos:position pos:line="409" pos:column="15"/></name></type> <name pos:line="409" pos:column="16">binding<pos:position pos:line="409" pos:column="23"/></name> <range pos:line="409" pos:column="24">: <expr><call><name><name pos:line="409" pos:column="26">binderConfiguration<pos:position pos:line="409" pos:column="45"/></name><operator pos:line="409" pos:column="45">.<pos:position pos:line="409" pos:column="46"/></operator><name pos:line="409" pos:column="46">getBindings<pos:position pos:line="409" pos:column="57"/></name></name><argument_list pos:line="409" pos:column="57">()<pos:position pos:line="409" pos:column="59"/></argument_list></call></expr></range></decl></init>)<pos:position pos:line="409" pos:column="60"/></control> <block pos:line="409" pos:column="61">{
			<decl_stmt><decl><type><name pos:line="410" pos:column="4">String<pos:position pos:line="410" pos:column="10"/></name></type> <name pos:line="410" pos:column="11">parameterName<pos:position pos:line="410" pos:column="24"/></name> <init pos:line="410" pos:column="25">= <expr><call><name><name pos:line="410" pos:column="27">binding<pos:position pos:line="410" pos:column="34"/></name><operator pos:line="410" pos:column="34">.<pos:position pos:line="410" pos:column="35"/></operator><name pos:line="410" pos:column="35">getProperty<pos:position pos:line="410" pos:column="46"/></name></name><argument_list pos:line="410" pos:column="46">()<pos:position pos:line="410" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="410" pos:column="49"/></decl_stmt>
			<if pos:line="411" pos:column="4">if <condition pos:line="411" pos:column="7">(<expr><call><name><name pos:line="411" pos:column="8">parameterNames<pos:position pos:line="411" pos:column="22"/></name><operator pos:line="411" pos:column="22">.<pos:position pos:line="411" pos:column="23"/></operator><name pos:line="411" pos:column="23">contains<pos:position pos:line="411" pos:column="31"/></name></name><argument_list pos:line="411" pos:column="31">(<argument><expr><name pos:line="411" pos:column="32">parameterName<pos:position pos:line="411" pos:column="45"/></name></expr></argument>)<pos:position pos:line="411" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="411" pos:column="47"/></condition><then pos:line="411" pos:column="47"> <block pos:line="411" pos:column="48">{
				<expr_stmt><expr><call><name pos:line="412" pos:column="5">addMapping<pos:position pos:line="412" pos:column="15"/></name><argument_list pos:line="412" pos:column="15">(<argument><expr><name pos:line="412" pos:column="16">mapper<pos:position pos:line="412" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="412" pos:column="24">binding<pos:position pos:line="412" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="412" pos:column="33">model<pos:position pos:line="412" pos:column="38"/></name></expr></argument>)<pos:position pos:line="412" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="412" pos:column="40"/></expr_stmt>
			}<pos:position pos:line="413" pos:column="5"/></block></then> <else pos:line="413" pos:column="6">else <block pos:line="413" pos:column="11">{
				<if pos:line="414" pos:column="5">if <condition pos:line="414" pos:column="8">(<expr><name pos:line="414" pos:column="9">fieldMarkerPrefix<pos:position pos:line="414" pos:column="26"/></name> <operator pos:line="414" pos:column="27">!=<pos:position pos:line="414" pos:column="29"/></operator> <literal type="null" pos:line="414" pos:column="30">null<pos:position pos:line="414" pos:column="34"/></literal> <operator pos:line="414" pos:column="35">&amp;&amp;<pos:position pos:line="414" pos:column="45"/></operator> <call><name><name pos:line="414" pos:column="38">parameterNames<pos:position pos:line="414" pos:column="52"/></name><operator pos:line="414" pos:column="52">.<pos:position pos:line="414" pos:column="53"/></operator><name pos:line="414" pos:column="53">contains<pos:position pos:line="414" pos:column="61"/></name></name><argument_list pos:line="414" pos:column="61">(<argument><expr><name pos:line="414" pos:column="62">fieldMarkerPrefix<pos:position pos:line="414" pos:column="79"/></name> <operator pos:line="414" pos:column="80">+<pos:position pos:line="414" pos:column="81"/></operator> <name pos:line="414" pos:column="82">parameterName<pos:position pos:line="414" pos:column="95"/></name></expr></argument>)<pos:position pos:line="414" pos:column="96"/></argument_list></call></expr>)<pos:position pos:line="414" pos:column="97"/></condition><then pos:line="414" pos:column="97"> <block pos:line="414" pos:column="98">{
					<expr_stmt><expr><call><name pos:line="415" pos:column="6">addEmptyValueMapping<pos:position pos:line="415" pos:column="26"/></name><argument_list pos:line="415" pos:column="26">(<argument><expr><name pos:line="415" pos:column="27">mapper<pos:position pos:line="415" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="415" pos:column="35">parameterName<pos:position pos:line="415" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="415" pos:column="50">model<pos:position pos:line="415" pos:column="55"/></name></expr></argument>)<pos:position pos:line="415" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="415" pos:column="57"/></expr_stmt>
				}<pos:position pos:line="416" pos:column="6"/></block></then></if>
			}<pos:position pos:line="417" pos:column="5"/></block></else></if>
		}<pos:position pos:line="418" pos:column="4"/></block></for>
	}<pos:position pos:line="419" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="421" pos:column="2">/**
	 * &lt;p&gt;
	 * Creates and adds a {@link DefaultMapping} for the given {@link Binding}. Information such as the model field
	 * name, if the field is required, and whether type conversion is needed will be passed on from the binding to the
	 * mapping.
	 * &lt;/p&gt;
	 * &lt;p&gt;
	 * &lt;b&gt;Note:&lt;/b&gt; with Spring 3 type conversion and formatting now in use in Web Flow, it is no longer necessary to
	 * use named converters on binding elements. The preferred approach is to register Spring 3 formatters. Named
	 * converters are supported for backwards compatibility only and will not result in use of the Spring 3 type
	 * conversion system at runtime.
	 * &lt;/p&gt;
	 *
	 * @param mapper the mapper to add the mapping to
	 * @param binding the binding element
	 * @param model the model
	 */</comment>
	<function><specifier pos:line="438" pos:column="2">protected<pos:position pos:line="438" pos:column="11"/></specifier> <type><name pos:line="438" pos:column="12">void<pos:position pos:line="438" pos:column="16"/></name></type> <name pos:line="438" pos:column="17">addMapping<pos:position pos:line="438" pos:column="27"/></name><parameter_list pos:line="438" pos:column="27">(<parameter><decl><type><name pos:line="438" pos:column="28">DefaultMapper<pos:position pos:line="438" pos:column="41"/></name></type> <name pos:line="438" pos:column="42">mapper<pos:position pos:line="438" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="438" pos:column="50">Binding<pos:position pos:line="438" pos:column="57"/></name></type> <name pos:line="438" pos:column="58">binding<pos:position pos:line="438" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="438" pos:column="67">Object<pos:position pos:line="438" pos:column="73"/></name></type> <name pos:line="438" pos:column="74">model<pos:position pos:line="438" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="438" pos:column="80"/></parameter_list> <block pos:line="438" pos:column="81">{
		<decl_stmt><decl><type><name pos:line="439" pos:column="3">Expression<pos:position pos:line="439" pos:column="13"/></name></type> <name pos:line="439" pos:column="14">source<pos:position pos:line="439" pos:column="20"/></name> <init pos:line="439" pos:column="21">= <expr><operator pos:line="439" pos:column="23">new<pos:position pos:line="439" pos:column="26"/></operator> <call><name pos:line="439" pos:column="27">RequestParameterExpression<pos:position pos:line="439" pos:column="53"/></name><argument_list pos:line="439" pos:column="53">(<argument><expr><call><name><name pos:line="439" pos:column="54">binding<pos:position pos:line="439" pos:column="61"/></name><operator pos:line="439" pos:column="61">.<pos:position pos:line="439" pos:column="62"/></operator><name pos:line="439" pos:column="62">getProperty<pos:position pos:line="439" pos:column="73"/></name></name><argument_list pos:line="439" pos:column="73">()<pos:position pos:line="439" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="439" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="439" pos:column="77"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="440" pos:column="3">ParserContext<pos:position pos:line="440" pos:column="16"/></name></type> <name pos:line="440" pos:column="17">parserContext<pos:position pos:line="440" pos:column="30"/></name> <init pos:line="440" pos:column="31">= <expr><operator pos:line="440" pos:column="33">new<pos:position pos:line="440" pos:column="36"/></operator> <call><name pos:line="440" pos:column="37">FluentParserContext<pos:position pos:line="440" pos:column="56"/></name><argument_list pos:line="440" pos:column="56">()<pos:position pos:line="440" pos:column="58"/></argument_list></call><operator pos:line="440" pos:column="58">.<pos:position pos:line="440" pos:column="59"/></operator><call><name pos:line="440" pos:column="59">evaluate<pos:position pos:line="440" pos:column="67"/></name><argument_list pos:line="440" pos:column="67">(<argument><expr><call><name><name pos:line="440" pos:column="68">model<pos:position pos:line="440" pos:column="73"/></name><operator pos:line="440" pos:column="73">.<pos:position pos:line="440" pos:column="74"/></operator><name pos:line="440" pos:column="74">getClass<pos:position pos:line="440" pos:column="82"/></name></name><argument_list pos:line="440" pos:column="82">()<pos:position pos:line="440" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="440" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="440" pos:column="86"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="441" pos:column="3">Expression<pos:position pos:line="441" pos:column="13"/></name></type> <name pos:line="441" pos:column="14">target<pos:position pos:line="441" pos:column="20"/></name> <init pos:line="441" pos:column="21">= <expr><call><name><name pos:line="441" pos:column="23">expressionParser<pos:position pos:line="441" pos:column="39"/></name><operator pos:line="441" pos:column="39">.<pos:position pos:line="441" pos:column="40"/></operator><name pos:line="441" pos:column="40">parseExpression<pos:position pos:line="441" pos:column="55"/></name></name><argument_list pos:line="441" pos:column="55">(<argument><expr><call><name><name pos:line="441" pos:column="56">binding<pos:position pos:line="441" pos:column="63"/></name><operator pos:line="441" pos:column="63">.<pos:position pos:line="441" pos:column="64"/></operator><name pos:line="441" pos:column="64">getProperty<pos:position pos:line="441" pos:column="75"/></name></name><argument_list pos:line="441" pos:column="75">()<pos:position pos:line="441" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="441" pos:column="79">parserContext<pos:position pos:line="441" pos:column="92"/></name></expr></argument>)<pos:position pos:line="441" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="441" pos:column="94"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="442" pos:column="3">DefaultMapping<pos:position pos:line="442" pos:column="17"/></name></type> <name pos:line="442" pos:column="18">mapping<pos:position pos:line="442" pos:column="25"/></name> <init pos:line="442" pos:column="26">= <expr><operator pos:line="442" pos:column="28">new<pos:position pos:line="442" pos:column="31"/></operator> <call><name pos:line="442" pos:column="32">DefaultMapping<pos:position pos:line="442" pos:column="46"/></name><argument_list pos:line="442" pos:column="46">(<argument><expr><name pos:line="442" pos:column="47">source<pos:position pos:line="442" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="55">target<pos:position pos:line="442" pos:column="61"/></name></expr></argument>)<pos:position pos:line="442" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="442" pos:column="63"/></decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="443" pos:column="3">mapping<pos:position pos:line="443" pos:column="10"/></name><operator pos:line="443" pos:column="10">.<pos:position pos:line="443" pos:column="11"/></operator><name pos:line="443" pos:column="11">setRequired<pos:position pos:line="443" pos:column="22"/></name></name><argument_list pos:line="443" pos:column="22">(<argument><expr><call><name><name pos:line="443" pos:column="23">binding<pos:position pos:line="443" pos:column="30"/></name><operator pos:line="443" pos:column="30">.<pos:position pos:line="443" pos:column="31"/></operator><name pos:line="443" pos:column="31">getRequired<pos:position pos:line="443" pos:column="42"/></name></name><argument_list pos:line="443" pos:column="42">()<pos:position pos:line="443" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="443" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="46"/></expr_stmt>
		<if pos:line="444" pos:column="3">if <condition pos:line="444" pos:column="6">(<expr><call><name><name pos:line="444" pos:column="7">binding<pos:position pos:line="444" pos:column="14"/></name><operator pos:line="444" pos:column="14">.<pos:position pos:line="444" pos:column="15"/></operator><name pos:line="444" pos:column="15">getConverter<pos:position pos:line="444" pos:column="27"/></name></name><argument_list pos:line="444" pos:column="27">()<pos:position pos:line="444" pos:column="29"/></argument_list></call> <operator pos:line="444" pos:column="30">!=<pos:position pos:line="444" pos:column="32"/></operator> <literal type="null" pos:line="444" pos:column="33">null<pos:position pos:line="444" pos:column="37"/></literal></expr>)<pos:position pos:line="444" pos:column="38"/></condition><then pos:line="444" pos:column="38"> <block pos:line="444" pos:column="39">{
			<expr_stmt><expr><call><name><name pos:line="445" pos:column="4">Assert<pos:position pos:line="445" pos:column="10"/></name><operator pos:line="445" pos:column="10">.<pos:position pos:line="445" pos:column="11"/></operator><name pos:line="445" pos:column="11">notNull<pos:position pos:line="445" pos:column="18"/></name></name><argument_list pos:line="445" pos:column="18">(<argument><expr><name pos:line="445" pos:column="19">conversionService<pos:position pos:line="445" pos:column="36"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="446" pos:column="6">"A ConversionService must be configured to use resolve custom converters to use during binding"<pos:position pos:line="446" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="446" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="103"/></expr_stmt>
			<decl_stmt><decl><type><name pos:line="447" pos:column="4">ConversionExecutor<pos:position pos:line="447" pos:column="22"/></name></type> <name pos:line="447" pos:column="23">conversionExecutor<pos:position pos:line="447" pos:column="41"/></name> <init pos:line="447" pos:column="42">= <expr><call><name><name pos:line="447" pos:column="44">conversionService<pos:position pos:line="447" pos:column="61"/></name><operator pos:line="447" pos:column="61">.<pos:position pos:line="447" pos:column="62"/></operator><name pos:line="447" pos:column="62">getConversionExecutor<pos:position pos:line="447" pos:column="83"/></name></name><argument_list pos:line="447" pos:column="83">(<argument><expr><call><name><name pos:line="447" pos:column="84">binding<pos:position pos:line="447" pos:column="91"/></name><operator pos:line="447" pos:column="91">.<pos:position pos:line="447" pos:column="92"/></operator><name pos:line="447" pos:column="92">getConverter<pos:position pos:line="447" pos:column="104"/></name></name><argument_list pos:line="447" pos:column="104">()<pos:position pos:line="447" pos:column="106"/></argument_list></call></expr></argument>,
					<argument><expr><name><name pos:line="448" pos:column="6">String<pos:position pos:line="448" pos:column="12"/></name><operator pos:line="448" pos:column="12">.<pos:position pos:line="448" pos:column="13"/></operator><name pos:line="448" pos:column="13">class<pos:position pos:line="448" pos:column="18"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="448" pos:column="20">target<pos:position pos:line="448" pos:column="26"/></name><operator pos:line="448" pos:column="26">.<pos:position pos:line="448" pos:column="27"/></operator><name pos:line="448" pos:column="27">getValueType<pos:position pos:line="448" pos:column="39"/></name></name><argument_list pos:line="448" pos:column="39">(<argument><expr><name pos:line="448" pos:column="40">model<pos:position pos:line="448" pos:column="45"/></name></expr></argument>)<pos:position pos:line="448" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="448" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="448" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="449" pos:column="4">mapping<pos:position pos:line="449" pos:column="11"/></name><operator pos:line="449" pos:column="11">.<pos:position pos:line="449" pos:column="12"/></operator><name pos:line="449" pos:column="12">setTypeConverter<pos:position pos:line="449" pos:column="28"/></name></name><argument_list pos:line="449" pos:column="28">(<argument><expr><name pos:line="449" pos:column="29">conversionExecutor<pos:position pos:line="449" pos:column="47"/></name></expr></argument>)<pos:position pos:line="449" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="450" pos:column="4"/></block></then></if>
		<if pos:line="451" pos:column="3">if <condition pos:line="451" pos:column="6">(<expr><call><name><name pos:line="451" pos:column="7">logger<pos:position pos:line="451" pos:column="13"/></name><operator pos:line="451" pos:column="13">.<pos:position pos:line="451" pos:column="14"/></operator><name pos:line="451" pos:column="14">isDebugEnabled<pos:position pos:line="451" pos:column="28"/></name></name><argument_list pos:line="451" pos:column="28">()<pos:position pos:line="451" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="451" pos:column="31"/></condition><then pos:line="451" pos:column="31"> <block pos:line="451" pos:column="32">{
			<expr_stmt><expr><call><name><name pos:line="452" pos:column="4">logger<pos:position pos:line="452" pos:column="10"/></name><operator pos:line="452" pos:column="10">.<pos:position pos:line="452" pos:column="11"/></operator><name pos:line="452" pos:column="11">debug<pos:position pos:line="452" pos:column="16"/></name></name><argument_list pos:line="452" pos:column="16">(<argument><expr><literal type="string" pos:line="452" pos:column="17">"Adding mapping for parameter '"<pos:position pos:line="452" pos:column="49"/></literal> <operator pos:line="452" pos:column="50">+<pos:position pos:line="452" pos:column="51"/></operator> <call><name><name pos:line="452" pos:column="52">binding<pos:position pos:line="452" pos:column="59"/></name><operator pos:line="452" pos:column="59">.<pos:position pos:line="452" pos:column="60"/></operator><name pos:line="452" pos:column="60">getProperty<pos:position pos:line="452" pos:column="71"/></name></name><argument_list pos:line="452" pos:column="71">()<pos:position pos:line="452" pos:column="73"/></argument_list></call> <operator pos:line="452" pos:column="74">+<pos:position pos:line="452" pos:column="75"/></operator> <literal type="string" pos:line="452" pos:column="76">"'"<pos:position pos:line="452" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="452" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="453" pos:column="4"/></block></then></if>
		<expr_stmt><expr><call><name><name pos:line="454" pos:column="3">mapper<pos:position pos:line="454" pos:column="9"/></name><operator pos:line="454" pos:column="9">.<pos:position pos:line="454" pos:column="10"/></operator><name pos:line="454" pos:column="10">addMapping<pos:position pos:line="454" pos:column="20"/></name></name><argument_list pos:line="454" pos:column="20">(<argument><expr><name pos:line="454" pos:column="21">mapping<pos:position pos:line="454" pos:column="28"/></name></expr></argument>)<pos:position pos:line="454" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="454" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="455" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="457" pos:column="2">/**
	 * Add a {@link DefaultMapping} instance for all incoming request parameters except those having a special field
	 * marker prefix. This method is used when binding configuration was not specified on the view.
	 *
	 * @param mapper the mapper to add mappings to
	 * @param parameterNames the request parameter names
	 * @param model the model
	 */</comment>
	<function><specifier pos:line="465" pos:column="2">protected<pos:position pos:line="465" pos:column="11"/></specifier> <type><name pos:line="465" pos:column="12">void<pos:position pos:line="465" pos:column="16"/></name></type> <name pos:line="465" pos:column="17">addDefaultMappings<pos:position pos:line="465" pos:column="35"/></name><parameter_list pos:line="465" pos:column="35">(<parameter><decl><type><name pos:line="465" pos:column="36">DefaultMapper<pos:position pos:line="465" pos:column="49"/></name></type> <name pos:line="465" pos:column="50">mapper<pos:position pos:line="465" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="465" pos:column="58">Set<pos:position pos:line="465" pos:column="61"/></name><argument_list type="generic" pos:line="465" pos:column="61">&lt;<argument><name pos:line="465" pos:column="62">String<pos:position pos:line="465" pos:column="68"/></name></argument>&gt;<pos:position pos:line="465" pos:column="72"/></argument_list></name></type> <name pos:line="465" pos:column="70">parameterNames<pos:position pos:line="465" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="465" pos:column="86">Object<pos:position pos:line="465" pos:column="92"/></name></type> <name pos:line="465" pos:column="93">model<pos:position pos:line="465" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="465" pos:column="99"/></parameter_list> <block pos:line="465" pos:column="100">{
		<for pos:line="466" pos:column="3">for <control pos:line="466" pos:column="7">(<init><decl><type><name pos:line="466" pos:column="8">String<pos:position pos:line="466" pos:column="14"/></name></type> <name pos:line="466" pos:column="15">parameterName<pos:position pos:line="466" pos:column="28"/></name> <range pos:line="466" pos:column="29">: <expr><name pos:line="466" pos:column="31">parameterNames<pos:position pos:line="466" pos:column="45"/></name></expr></range></decl></init>)<pos:position pos:line="466" pos:column="46"/></control> <block pos:line="466" pos:column="47">{
			<if pos:line="467" pos:column="4">if <condition pos:line="467" pos:column="7">(<expr><name pos:line="467" pos:column="8">fieldMarkerPrefix<pos:position pos:line="467" pos:column="25"/></name> <operator pos:line="467" pos:column="26">!=<pos:position pos:line="467" pos:column="28"/></operator> <literal type="null" pos:line="467" pos:column="29">null<pos:position pos:line="467" pos:column="33"/></literal> <operator pos:line="467" pos:column="34">&amp;&amp;<pos:position pos:line="467" pos:column="44"/></operator> <call><name><name pos:line="467" pos:column="37">parameterName<pos:position pos:line="467" pos:column="50"/></name><operator pos:line="467" pos:column="50">.<pos:position pos:line="467" pos:column="51"/></operator><name pos:line="467" pos:column="51">startsWith<pos:position pos:line="467" pos:column="61"/></name></name><argument_list pos:line="467" pos:column="61">(<argument><expr><name pos:line="467" pos:column="62">fieldMarkerPrefix<pos:position pos:line="467" pos:column="79"/></name></expr></argument>)<pos:position pos:line="467" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="467" pos:column="81"/></condition><then pos:line="467" pos:column="81"> <block pos:line="467" pos:column="82">{
				<decl_stmt><decl><type><name pos:line="468" pos:column="5">String<pos:position pos:line="468" pos:column="11"/></name></type> <name pos:line="468" pos:column="12">field<pos:position pos:line="468" pos:column="17"/></name> <init pos:line="468" pos:column="18">= <expr><call><name><name pos:line="468" pos:column="20">parameterName<pos:position pos:line="468" pos:column="33"/></name><operator pos:line="468" pos:column="33">.<pos:position pos:line="468" pos:column="34"/></operator><name pos:line="468" pos:column="34">substring<pos:position pos:line="468" pos:column="43"/></name></name><argument_list pos:line="468" pos:column="43">(<argument><expr><call><name><name pos:line="468" pos:column="44">fieldMarkerPrefix<pos:position pos:line="468" pos:column="61"/></name><operator pos:line="468" pos:column="61">.<pos:position pos:line="468" pos:column="62"/></operator><name pos:line="468" pos:column="62">length<pos:position pos:line="468" pos:column="68"/></name></name><argument_list pos:line="468" pos:column="68">()<pos:position pos:line="468" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="468" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="468" pos:column="72"/></decl_stmt>
				<if pos:line="469" pos:column="5">if <condition pos:line="469" pos:column="8">(<expr><operator pos:line="469" pos:column="9">!<pos:position pos:line="469" pos:column="10"/></operator><call><name><name pos:line="469" pos:column="10">parameterNames<pos:position pos:line="469" pos:column="24"/></name><operator pos:line="469" pos:column="24">.<pos:position pos:line="469" pos:column="25"/></operator><name pos:line="469" pos:column="25">contains<pos:position pos:line="469" pos:column="33"/></name></name><argument_list pos:line="469" pos:column="33">(<argument><expr><name pos:line="469" pos:column="34">field<pos:position pos:line="469" pos:column="39"/></name></expr></argument>)<pos:position pos:line="469" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="469" pos:column="41"/></condition><then pos:line="469" pos:column="41"> <block pos:line="469" pos:column="42">{
					<expr_stmt><expr><call><name pos:line="470" pos:column="6">addEmptyValueMapping<pos:position pos:line="470" pos:column="26"/></name><argument_list pos:line="470" pos:column="26">(<argument><expr><name pos:line="470" pos:column="27">mapper<pos:position pos:line="470" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="35">field<pos:position pos:line="470" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="42">model<pos:position pos:line="470" pos:column="47"/></name></expr></argument>)<pos:position pos:line="470" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="49"/></expr_stmt>
				}<pos:position pos:line="471" pos:column="6"/></block></then></if>
			}<pos:position pos:line="472" pos:column="5"/></block></then> <else pos:line="472" pos:column="6">else <block pos:line="472" pos:column="11">{
				<expr_stmt><expr><call><name pos:line="473" pos:column="5">addDefaultMapping<pos:position pos:line="473" pos:column="22"/></name><argument_list pos:line="473" pos:column="22">(<argument><expr><name pos:line="473" pos:column="23">mapper<pos:position pos:line="473" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="473" pos:column="31">parameterName<pos:position pos:line="473" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="473" pos:column="46">model<pos:position pos:line="473" pos:column="51"/></name></expr></argument>)<pos:position pos:line="473" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="474" pos:column="5"/></block></else></if>
		}<pos:position pos:line="475" pos:column="4"/></block></for>
	}<pos:position pos:line="476" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="478" pos:column="2">/**
	 * Adds a special {@link DefaultMapping} that results in setting the target field on the model to an empty value
	 * (typically null).
	 *
	 * @param mapper the mapper to add the mapping to
	 * @param field the field for which a mapping is to be added
	 * @param model the model
	 */</comment>
	<function><specifier pos:line="486" pos:column="2">protected<pos:position pos:line="486" pos:column="11"/></specifier> <type><name pos:line="486" pos:column="12">void<pos:position pos:line="486" pos:column="16"/></name></type> <name pos:line="486" pos:column="17">addEmptyValueMapping<pos:position pos:line="486" pos:column="37"/></name><parameter_list pos:line="486" pos:column="37">(<parameter><decl><type><name pos:line="486" pos:column="38">DefaultMapper<pos:position pos:line="486" pos:column="51"/></name></type> <name pos:line="486" pos:column="52">mapper<pos:position pos:line="486" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="486" pos:column="60">String<pos:position pos:line="486" pos:column="66"/></name></type> <name pos:line="486" pos:column="67">field<pos:position pos:line="486" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="486" pos:column="74">Object<pos:position pos:line="486" pos:column="80"/></name></type> <name pos:line="486" pos:column="81">model<pos:position pos:line="486" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="486" pos:column="87"/></parameter_list> <block pos:line="486" pos:column="88">{
		<decl_stmt><decl><type><name pos:line="487" pos:column="3">ParserContext<pos:position pos:line="487" pos:column="16"/></name></type> <name pos:line="487" pos:column="17">parserContext<pos:position pos:line="487" pos:column="30"/></name> <init pos:line="487" pos:column="31">= <expr><operator pos:line="487" pos:column="33">new<pos:position pos:line="487" pos:column="36"/></operator> <call><name pos:line="487" pos:column="37">FluentParserContext<pos:position pos:line="487" pos:column="56"/></name><argument_list pos:line="487" pos:column="56">()<pos:position pos:line="487" pos:column="58"/></argument_list></call><operator pos:line="487" pos:column="58">.<pos:position pos:line="487" pos:column="59"/></operator><call><name pos:line="487" pos:column="59">evaluate<pos:position pos:line="487" pos:column="67"/></name><argument_list pos:line="487" pos:column="67">(<argument><expr><call><name><name pos:line="487" pos:column="68">model<pos:position pos:line="487" pos:column="73"/></name><operator pos:line="487" pos:column="73">.<pos:position pos:line="487" pos:column="74"/></operator><name pos:line="487" pos:column="74">getClass<pos:position pos:line="487" pos:column="82"/></name></name><argument_list pos:line="487" pos:column="82">()<pos:position pos:line="487" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="487" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="487" pos:column="86"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="488" pos:column="3">Expression<pos:position pos:line="488" pos:column="13"/></name></type> <name pos:line="488" pos:column="14">target<pos:position pos:line="488" pos:column="20"/></name> <init pos:line="488" pos:column="21">= <expr><call><name><name pos:line="488" pos:column="23">emptyValueExpressionParser<pos:position pos:line="488" pos:column="49"/></name><operator pos:line="488" pos:column="49">.<pos:position pos:line="488" pos:column="50"/></operator><name pos:line="488" pos:column="50">parseExpression<pos:position pos:line="488" pos:column="65"/></name></name><argument_list pos:line="488" pos:column="65">(<argument><expr><name pos:line="488" pos:column="66">field<pos:position pos:line="488" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="73">parserContext<pos:position pos:line="488" pos:column="86"/></name></expr></argument>)<pos:position pos:line="488" pos:column="87"/></argument_list></call></expr></init></decl>;<pos:position pos:line="488" pos:column="88"/></decl_stmt>
		<try pos:line="489" pos:column="3">try <block pos:line="489" pos:column="7">{
			<decl_stmt><decl><type><name><name pos:line="490" pos:column="4">Class<pos:position pos:line="490" pos:column="9"/></name><argument_list type="generic" pos:line="490" pos:column="9">&lt;<argument><name pos:line="490" pos:column="10">?<pos:position pos:line="490" pos:column="11"/></name></argument>&gt;<pos:position pos:line="490" pos:column="15"/></argument_list></name></type> <name pos:line="490" pos:column="13">propertyType<pos:position pos:line="490" pos:column="25"/></name> <init pos:line="490" pos:column="26">= <expr><call><name><name pos:line="490" pos:column="28">target<pos:position pos:line="490" pos:column="34"/></name><operator pos:line="490" pos:column="34">.<pos:position pos:line="490" pos:column="35"/></operator><name pos:line="490" pos:column="35">getValueType<pos:position pos:line="490" pos:column="47"/></name></name><argument_list pos:line="490" pos:column="47">(<argument><expr><name pos:line="490" pos:column="48">model<pos:position pos:line="490" pos:column="53"/></name></expr></argument>)<pos:position pos:line="490" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="490" pos:column="55"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="491" pos:column="4">Expression<pos:position pos:line="491" pos:column="14"/></name></type> <name pos:line="491" pos:column="15">source<pos:position pos:line="491" pos:column="21"/></name> <init pos:line="491" pos:column="22">= <expr><operator pos:line="491" pos:column="24">new<pos:position pos:line="491" pos:column="27"/></operator> <call><name pos:line="491" pos:column="28">StaticExpression<pos:position pos:line="491" pos:column="44"/></name><argument_list pos:line="491" pos:column="44">(<argument><expr><call><name pos:line="491" pos:column="45">getEmptyValue<pos:position pos:line="491" pos:column="58"/></name><argument_list pos:line="491" pos:column="58">(<argument><expr><name pos:line="491" pos:column="59">propertyType<pos:position pos:line="491" pos:column="71"/></name></expr></argument>)<pos:position pos:line="491" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="491" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="491" pos:column="74"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="492" pos:column="4">DefaultMapping<pos:position pos:line="492" pos:column="18"/></name></type> <name pos:line="492" pos:column="19">mapping<pos:position pos:line="492" pos:column="26"/></name> <init pos:line="492" pos:column="27">= <expr><operator pos:line="492" pos:column="29">new<pos:position pos:line="492" pos:column="32"/></operator> <call><name pos:line="492" pos:column="33">DefaultMapping<pos:position pos:line="492" pos:column="47"/></name><argument_list pos:line="492" pos:column="47">(<argument><expr><name pos:line="492" pos:column="48">source<pos:position pos:line="492" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="492" pos:column="56">target<pos:position pos:line="492" pos:column="62"/></name></expr></argument>)<pos:position pos:line="492" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="492" pos:column="64"/></decl_stmt>
			<if pos:line="493" pos:column="4">if <condition pos:line="493" pos:column="7">(<expr><call><name><name pos:line="493" pos:column="8">logger<pos:position pos:line="493" pos:column="14"/></name><operator pos:line="493" pos:column="14">.<pos:position pos:line="493" pos:column="15"/></operator><name pos:line="493" pos:column="15">isDebugEnabled<pos:position pos:line="493" pos:column="29"/></name></name><argument_list pos:line="493" pos:column="29">()<pos:position pos:line="493" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="493" pos:column="32"/></condition><then pos:line="493" pos:column="32"> <block pos:line="493" pos:column="33">{
				<expr_stmt><expr><call><name><name pos:line="494" pos:column="5">logger<pos:position pos:line="494" pos:column="11"/></name><operator pos:line="494" pos:column="11">.<pos:position pos:line="494" pos:column="12"/></operator><name pos:line="494" pos:column="12">debug<pos:position pos:line="494" pos:column="17"/></name></name><argument_list pos:line="494" pos:column="17">(<argument><expr><literal type="string" pos:line="494" pos:column="18">"Adding empty value mapping for parameter '"<pos:position pos:line="494" pos:column="62"/></literal> <operator pos:line="494" pos:column="63">+<pos:position pos:line="494" pos:column="64"/></operator> <name pos:line="494" pos:column="65">field<pos:position pos:line="494" pos:column="70"/></name> <operator pos:line="494" pos:column="71">+<pos:position pos:line="494" pos:column="72"/></operator> <literal type="string" pos:line="494" pos:column="73">"'"<pos:position pos:line="494" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="494" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="78"/></expr_stmt>
			}<pos:position pos:line="495" pos:column="5"/></block></then></if>
			<expr_stmt><expr><call><name><name pos:line="496" pos:column="4">mapper<pos:position pos:line="496" pos:column="10"/></name><operator pos:line="496" pos:column="10">.<pos:position pos:line="496" pos:column="11"/></operator><name pos:line="496" pos:column="11">addMapping<pos:position pos:line="496" pos:column="21"/></name></name><argument_list pos:line="496" pos:column="21">(<argument><expr><name pos:line="496" pos:column="22">mapping<pos:position pos:line="496" pos:column="29"/></name></expr></argument>)<pos:position pos:line="496" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="31"/></expr_stmt>
		}<pos:position pos:line="497" pos:column="4"/></block> <catch pos:line="497" pos:column="5">catch <parameter_list pos:line="497" pos:column="11">(<parameter><decl><type><name pos:line="497" pos:column="12">EvaluationException<pos:position pos:line="497" pos:column="31"/></name></type> <name pos:line="497" pos:column="32">e<pos:position pos:line="497" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="497" pos:column="34"/></parameter_list> <block pos:line="497" pos:column="35">{
		}<pos:position pos:line="498" pos:column="4"/></block></catch></try>
	}<pos:position pos:line="499" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="501" pos:column="2">/**
	 * Adds a {@link DefaultMapping} between the given request parameter name and a matching model field.
	 *
	 * @param mapper the mapper to add the mapping to
	 * @param parameter the request parameter name
	 * @param model the model
	 */</comment>
	<function><specifier pos:line="508" pos:column="2">protected<pos:position pos:line="508" pos:column="11"/></specifier> <type><name pos:line="508" pos:column="12">void<pos:position pos:line="508" pos:column="16"/></name></type> <name pos:line="508" pos:column="17">addDefaultMapping<pos:position pos:line="508" pos:column="34"/></name><parameter_list pos:line="508" pos:column="34">(<parameter><decl><type><name pos:line="508" pos:column="35">DefaultMapper<pos:position pos:line="508" pos:column="48"/></name></type> <name pos:line="508" pos:column="49">mapper<pos:position pos:line="508" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="508" pos:column="57">String<pos:position pos:line="508" pos:column="63"/></name></type> <name pos:line="508" pos:column="64">parameter<pos:position pos:line="508" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="508" pos:column="75">Object<pos:position pos:line="508" pos:column="81"/></name></type> <name pos:line="508" pos:column="82">model<pos:position pos:line="508" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="508" pos:column="88"/></parameter_list> <block pos:line="508" pos:column="89">{
		<decl_stmt><decl><type><name pos:line="509" pos:column="3">Expression<pos:position pos:line="509" pos:column="13"/></name></type> <name pos:line="509" pos:column="14">source<pos:position pos:line="509" pos:column="20"/></name> <init pos:line="509" pos:column="21">= <expr><operator pos:line="509" pos:column="23">new<pos:position pos:line="509" pos:column="26"/></operator> <call><name pos:line="509" pos:column="27">RequestParameterExpression<pos:position pos:line="509" pos:column="53"/></name><argument_list pos:line="509" pos:column="53">(<argument><expr><name pos:line="509" pos:column="54">parameter<pos:position pos:line="509" pos:column="63"/></name></expr></argument>)<pos:position pos:line="509" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="509" pos:column="65"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="510" pos:column="3">ParserContext<pos:position pos:line="510" pos:column="16"/></name></type> <name pos:line="510" pos:column="17">parserContext<pos:position pos:line="510" pos:column="30"/></name> <init pos:line="510" pos:column="31">= <expr><operator pos:line="510" pos:column="33">new<pos:position pos:line="510" pos:column="36"/></operator> <call><name pos:line="510" pos:column="37">FluentParserContext<pos:position pos:line="510" pos:column="56"/></name><argument_list pos:line="510" pos:column="56">()<pos:position pos:line="510" pos:column="58"/></argument_list></call><operator pos:line="510" pos:column="58">.<pos:position pos:line="510" pos:column="59"/></operator><call><name pos:line="510" pos:column="59">evaluate<pos:position pos:line="510" pos:column="67"/></name><argument_list pos:line="510" pos:column="67">(<argument><expr><call><name><name pos:line="510" pos:column="68">model<pos:position pos:line="510" pos:column="73"/></name><operator pos:line="510" pos:column="73">.<pos:position pos:line="510" pos:column="74"/></operator><name pos:line="510" pos:column="74">getClass<pos:position pos:line="510" pos:column="82"/></name></name><argument_list pos:line="510" pos:column="82">()<pos:position pos:line="510" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="510" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="510" pos:column="86"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="511" pos:column="3">Expression<pos:position pos:line="511" pos:column="13"/></name></type> <name pos:line="511" pos:column="14">target<pos:position pos:line="511" pos:column="20"/></name> <init pos:line="511" pos:column="21">= <expr><call><name><name pos:line="511" pos:column="23">expressionParser<pos:position pos:line="511" pos:column="39"/></name><operator pos:line="511" pos:column="39">.<pos:position pos:line="511" pos:column="40"/></operator><name pos:line="511" pos:column="40">parseExpression<pos:position pos:line="511" pos:column="55"/></name></name><argument_list pos:line="511" pos:column="55">(<argument><expr><name pos:line="511" pos:column="56">parameter<pos:position pos:line="511" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="511" pos:column="67">parserContext<pos:position pos:line="511" pos:column="80"/></name></expr></argument>)<pos:position pos:line="511" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="511" pos:column="82"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="512" pos:column="3">DefaultMapping<pos:position pos:line="512" pos:column="17"/></name></type> <name pos:line="512" pos:column="18">mapping<pos:position pos:line="512" pos:column="25"/></name> <init pos:line="512" pos:column="26">= <expr><operator pos:line="512" pos:column="28">new<pos:position pos:line="512" pos:column="31"/></operator> <call><name pos:line="512" pos:column="32">DefaultMapping<pos:position pos:line="512" pos:column="46"/></name><argument_list pos:line="512" pos:column="46">(<argument><expr><name pos:line="512" pos:column="47">source<pos:position pos:line="512" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="55">target<pos:position pos:line="512" pos:column="61"/></name></expr></argument>)<pos:position pos:line="512" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="512" pos:column="63"/></decl_stmt>
		<if pos:line="513" pos:column="3">if <condition pos:line="513" pos:column="6">(<expr><call><name><name pos:line="513" pos:column="7">logger<pos:position pos:line="513" pos:column="13"/></name><operator pos:line="513" pos:column="13">.<pos:position pos:line="513" pos:column="14"/></operator><name pos:line="513" pos:column="14">isDebugEnabled<pos:position pos:line="513" pos:column="28"/></name></name><argument_list pos:line="513" pos:column="28">()<pos:position pos:line="513" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="513" pos:column="31"/></condition><then pos:line="513" pos:column="31"> <block pos:line="513" pos:column="32">{
			<expr_stmt><expr><call><name><name pos:line="514" pos:column="4">logger<pos:position pos:line="514" pos:column="10"/></name><operator pos:line="514" pos:column="10">.<pos:position pos:line="514" pos:column="11"/></operator><name pos:line="514" pos:column="11">debug<pos:position pos:line="514" pos:column="16"/></name></name><argument_list pos:line="514" pos:column="16">(<argument><expr><literal type="string" pos:line="514" pos:column="17">"Adding default mapping for parameter '"<pos:position pos:line="514" pos:column="57"/></literal> <operator pos:line="514" pos:column="58">+<pos:position pos:line="514" pos:column="59"/></operator> <name pos:line="514" pos:column="60">parameter<pos:position pos:line="514" pos:column="69"/></name> <operator pos:line="514" pos:column="70">+<pos:position pos:line="514" pos:column="71"/></operator> <literal type="string" pos:line="514" pos:column="72">"'"<pos:position pos:line="514" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="514" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="514" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="515" pos:column="4"/></block></then></if>
		<expr_stmt><expr><call><name><name pos:line="516" pos:column="3">mapper<pos:position pos:line="516" pos:column="9"/></name><operator pos:line="516" pos:column="9">.<pos:position pos:line="516" pos:column="10"/></operator><name pos:line="516" pos:column="10">addMapping<pos:position pos:line="516" pos:column="20"/></name></name><argument_list pos:line="516" pos:column="20">(<argument><expr><name pos:line="516" pos:column="21">mapping<pos:position pos:line="516" pos:column="28"/></name></expr></argument>)<pos:position pos:line="516" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="517" pos:column="3"/></block></function>

	<comment type="line" pos:line="519" pos:column="2">// package private</comment>

	<comment type="block" format="javadoc" pos:line="521" pos:column="2">/**
	 * Restores the internal state of this view from the provided state holder.
	 * @see AbstractMvcViewFactory#getView(RequestContext)
	 */</comment>
	<function><type><name pos:line="525" pos:column="2">void<pos:position pos:line="525" pos:column="6"/></name></type> <name pos:line="525" pos:column="7">restoreState<pos:position pos:line="525" pos:column="19"/></name><parameter_list pos:line="525" pos:column="19">(<parameter><decl><type><name pos:line="525" pos:column="20">ViewActionStateHolder<pos:position pos:line="525" pos:column="41"/></name></type> <name pos:line="525" pos:column="42">stateHolder<pos:position pos:line="525" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="525" pos:column="54"/></parameter_list> <block pos:line="525" pos:column="55">{
		<expr_stmt><expr><name pos:line="526" pos:column="3">eventId<pos:position pos:line="526" pos:column="10"/></name> <operator pos:line="526" pos:column="11">=<pos:position pos:line="526" pos:column="12"/></operator> <call><name><name pos:line="526" pos:column="13">stateHolder<pos:position pos:line="526" pos:column="24"/></name><operator pos:line="526" pos:column="24">.<pos:position pos:line="526" pos:column="25"/></operator><name pos:line="526" pos:column="25">getEventId<pos:position pos:line="526" pos:column="35"/></name></name><argument_list pos:line="526" pos:column="35">()<pos:position pos:line="526" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name pos:line="527" pos:column="3">userEventProcessed<pos:position pos:line="527" pos:column="21"/></name> <operator pos:line="527" pos:column="22">=<pos:position pos:line="527" pos:column="23"/></operator> <call><name><name pos:line="527" pos:column="24">stateHolder<pos:position pos:line="527" pos:column="35"/></name><operator pos:line="527" pos:column="35">.<pos:position pos:line="527" pos:column="36"/></operator><name pos:line="527" pos:column="36">getUserEventProcessed<pos:position pos:line="527" pos:column="57"/></name></name><argument_list pos:line="527" pos:column="57">()<pos:position pos:line="527" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="527" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="528" pos:column="3">mappingResults<pos:position pos:line="528" pos:column="17"/></name> <operator pos:line="528" pos:column="18">=<pos:position pos:line="528" pos:column="19"/></operator> <call><name><name pos:line="528" pos:column="20">stateHolder<pos:position pos:line="528" pos:column="31"/></name><operator pos:line="528" pos:column="31">.<pos:position pos:line="528" pos:column="32"/></operator><name pos:line="528" pos:column="32">getMappingResults<pos:position pos:line="528" pos:column="49"/></name></name><argument_list pos:line="528" pos:column="49">()<pos:position pos:line="528" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="528" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="529" pos:column="3"/></block></function>

	<comment type="block" format="javadoc" pos:line="531" pos:column="2">/**
	 * Determines if model validation should execute given the Transition that matched the current user event being
	 * processed. Returns true unless the &lt;code&gt;validate&lt;/code&gt; attribute of the Transition has been set to false, or
	 * model data binding errors occurred and the global &lt;code&gt;validateOnBindingErrors&lt;/code&gt; flag is set to false.
	 * Subclasses may override.
	 * @param model the model data binding would be performed on
	 * @param transition the matched transition
	 * @return true if binding should occur, false if not
	 */</comment>
	<function><specifier pos:line="540" pos:column="2">protected<pos:position pos:line="540" pos:column="11"/></specifier> <type><name pos:line="540" pos:column="12">boolean<pos:position pos:line="540" pos:column="19"/></name></type> <name pos:line="540" pos:column="20">shouldValidate<pos:position pos:line="540" pos:column="34"/></name><parameter_list pos:line="540" pos:column="34">(<parameter><decl><type><name pos:line="540" pos:column="35">Object<pos:position pos:line="540" pos:column="41"/></name></type> <name pos:line="540" pos:column="42">model<pos:position pos:line="540" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="540" pos:column="49">TransitionDefinition<pos:position pos:line="540" pos:column="69"/></name></type> <name pos:line="540" pos:column="70">transition<pos:position pos:line="540" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="540" pos:column="81"/></parameter_list> <block pos:line="540" pos:column="82">{
		<decl_stmt><decl><type><name pos:line="541" pos:column="3">Boolean<pos:position pos:line="541" pos:column="10"/></name></type> <name pos:line="541" pos:column="11">validateAttribute<pos:position pos:line="541" pos:column="28"/></name> <init pos:line="541" pos:column="29">= <expr><call><name pos:line="541" pos:column="31">getValidateAttribute<pos:position pos:line="541" pos:column="51"/></name><argument_list pos:line="541" pos:column="51">(<argument><expr><name pos:line="541" pos:column="52">transition<pos:position pos:line="541" pos:column="62"/></name></expr></argument>)<pos:position pos:line="541" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="541" pos:column="64"/></decl_stmt>
		<if pos:line="542" pos:column="3">if <condition pos:line="542" pos:column="6">(<expr><name pos:line="542" pos:column="7">validateAttribute<pos:position pos:line="542" pos:column="24"/></name> <operator pos:line="542" pos:column="25">!=<pos:position pos:line="542" pos:column="27"/></operator> <literal type="null" pos:line="542" pos:column="28">null<pos:position pos:line="542" pos:column="32"/></literal></expr>)<pos:position pos:line="542" pos:column="33"/></condition><then pos:line="542" pos:column="33"> <block pos:line="542" pos:column="34">{
			<return pos:line="543" pos:column="4">return <expr><name pos:line="543" pos:column="11">validateAttribute<pos:position pos:line="543" pos:column="28"/></name></expr>;<pos:position pos:line="543" pos:column="29"/></return>
		}<pos:position pos:line="544" pos:column="4"/></block></then> <else pos:line="544" pos:column="5">else <block pos:line="544" pos:column="10">{
			<decl_stmt><decl><type><name><name pos:line="545" pos:column="4">AttributeMap<pos:position pos:line="545" pos:column="16"/></name><argument_list type="generic" pos:line="545" pos:column="16">&lt;<argument><name pos:line="545" pos:column="17">Object<pos:position pos:line="545" pos:column="23"/></name></argument>&gt;<pos:position pos:line="545" pos:column="27"/></argument_list></name></type> <name pos:line="545" pos:column="25">flowExecutionAttributes<pos:position pos:line="545" pos:column="48"/></name> <init pos:line="545" pos:column="49">= <expr><call><name><name pos:line="545" pos:column="51">requestContext<pos:position pos:line="545" pos:column="65"/></name><operator pos:line="545" pos:column="65">.<pos:position pos:line="545" pos:column="66"/></operator><name pos:line="545" pos:column="66">getFlowExecutionContext<pos:position pos:line="545" pos:column="89"/></name></name><argument_list pos:line="545" pos:column="89">()<pos:position pos:line="545" pos:column="91"/></argument_list></call><operator pos:line="545" pos:column="91">.<pos:position pos:line="545" pos:column="92"/></operator><call><name pos:line="545" pos:column="92">getAttributes<pos:position pos:line="545" pos:column="105"/></name><argument_list pos:line="545" pos:column="105">()<pos:position pos:line="545" pos:column="107"/></argument_list></call></expr></init></decl>;<pos:position pos:line="545" pos:column="108"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="546" pos:column="4">Boolean<pos:position pos:line="546" pos:column="11"/></name></type> <name pos:line="546" pos:column="12">validateOnBindingErrors<pos:position pos:line="546" pos:column="35"/></name> <init pos:line="546" pos:column="36">= <expr><call><name><name pos:line="546" pos:column="38">flowExecutionAttributes<pos:position pos:line="546" pos:column="61"/></name><operator pos:line="546" pos:column="61">.<pos:position pos:line="546" pos:column="62"/></operator><name pos:line="546" pos:column="62">getBoolean<pos:position pos:line="546" pos:column="72"/></name></name><argument_list pos:line="546" pos:column="72">(<argument><expr><literal type="string" pos:line="546" pos:column="73">"validateOnBindingErrors"<pos:position pos:line="546" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="546" pos:column="99"/></argument_list></call></expr></init></decl>;<pos:position pos:line="546" pos:column="100"/></decl_stmt>
			<if pos:line="547" pos:column="4">if <condition pos:line="547" pos:column="7">(<expr><name pos:line="547" pos:column="8">validateOnBindingErrors<pos:position pos:line="547" pos:column="31"/></name> <operator pos:line="547" pos:column="32">!=<pos:position pos:line="547" pos:column="34"/></operator> <literal type="null" pos:line="547" pos:column="35">null<pos:position pos:line="547" pos:column="39"/></literal></expr>)<pos:position pos:line="547" pos:column="40"/></condition><then pos:line="547" pos:column="40"> <block pos:line="547" pos:column="41">{
				<if pos:line="548" pos:column="5">if <condition pos:line="548" pos:column="8">(<expr><operator pos:line="548" pos:column="9">!<pos:position pos:line="548" pos:column="10"/></operator><name pos:line="548" pos:column="10">validateOnBindingErrors<pos:position pos:line="548" pos:column="33"/></name> <operator pos:line="548" pos:column="34">&amp;&amp;<pos:position pos:line="548" pos:column="44"/></operator> <call><name><name pos:line="548" pos:column="37">mappingResults<pos:position pos:line="548" pos:column="51"/></name><operator pos:line="548" pos:column="51">.<pos:position pos:line="548" pos:column="52"/></operator><name pos:line="548" pos:column="52">hasErrorResults<pos:position pos:line="548" pos:column="67"/></name></name><argument_list pos:line="548" pos:column="67">()<pos:position pos:line="548" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="548" pos:column="70"/></condition><then pos:line="548" pos:column="70"> <block pos:line="548" pos:column="71">{
					<return pos:line="549" pos:column="6">return <expr><literal type="boolean" pos:line="549" pos:column="13">false<pos:position pos:line="549" pos:column="18"/></literal></expr>;<pos:position pos:line="549" pos:column="19"/></return>
				}<pos:position pos:line="550" pos:column="6"/></block></then></if>
			}<pos:position pos:line="551" pos:column="5"/></block></then></if>
			<return pos:line="552" pos:column="4">return <expr><literal type="boolean" pos:line="552" pos:column="11">true<pos:position pos:line="552" pos:column="15"/></literal></expr>;<pos:position pos:line="552" pos:column="16"/></return>
		}<pos:position pos:line="553" pos:column="4"/></block></else></if>
	}<pos:position pos:line="554" pos:column="3"/></block></function>

	<comment type="line" pos:line="556" pos:column="2">// internal helpers</comment>

	<function><specifier pos:line="558" pos:column="2">private<pos:position pos:line="558" pos:column="9"/></specifier> <type><name><name pos:line="558" pos:column="10">Map<pos:position pos:line="558" pos:column="13"/></name><argument_list type="generic" pos:line="558" pos:column="13">&lt;<argument><name pos:line="558" pos:column="14">String<pos:position pos:line="558" pos:column="20"/></name></argument>, <argument><name pos:line="558" pos:column="22">Object<pos:position pos:line="558" pos:column="28"/></name></argument>&gt;<pos:position pos:line="558" pos:column="32"/></argument_list></name></type> <name pos:line="558" pos:column="30">flowScopes<pos:position pos:line="558" pos:column="40"/></name><parameter_list pos:line="558" pos:column="40">()<pos:position pos:line="558" pos:column="42"/></parameter_list> <block pos:line="558" pos:column="43">{
		<if pos:line="559" pos:column="3">if <condition pos:line="559" pos:column="6">(<expr><call><name><name pos:line="559" pos:column="7">requestContext<pos:position pos:line="559" pos:column="21"/></name><operator pos:line="559" pos:column="21">.<pos:position pos:line="559" pos:column="22"/></operator><name pos:line="559" pos:column="22">getCurrentState<pos:position pos:line="559" pos:column="37"/></name></name><argument_list pos:line="559" pos:column="37">()<pos:position pos:line="559" pos:column="39"/></argument_list></call><operator pos:line="559" pos:column="39">.<pos:position pos:line="559" pos:column="40"/></operator><call><name pos:line="559" pos:column="40">isViewState<pos:position pos:line="559" pos:column="51"/></name><argument_list pos:line="559" pos:column="51">()<pos:position pos:line="559" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="559" pos:column="54"/></condition><then pos:line="559" pos:column="54"> <block pos:line="559" pos:column="55">{
			<return pos:line="560" pos:column="4">return <expr><call><name><name pos:line="560" pos:column="11">requestContext<pos:position pos:line="560" pos:column="25"/></name><operator pos:line="560" pos:column="25">.<pos:position pos:line="560" pos:column="26"/></operator><name pos:line="560" pos:column="26">getConversationScope<pos:position pos:line="560" pos:column="46"/></name></name><argument_list pos:line="560" pos:column="46">()<pos:position pos:line="560" pos:column="48"/></argument_list></call><operator pos:line="560" pos:column="48">.<pos:position pos:line="560" pos:column="49"/></operator><call><name pos:line="560" pos:column="49">union<pos:position pos:line="560" pos:column="54"/></name><argument_list pos:line="560" pos:column="54">(<argument><expr><call><name><name pos:line="560" pos:column="55">requestContext<pos:position pos:line="560" pos:column="69"/></name><operator pos:line="560" pos:column="69">.<pos:position pos:line="560" pos:column="70"/></operator><name pos:line="560" pos:column="70">getFlowScope<pos:position pos:line="560" pos:column="82"/></name></name><argument_list pos:line="560" pos:column="82">()<pos:position pos:line="560" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="560" pos:column="85"/></argument_list></call>
					<operator pos:line="561" pos:column="6">.<pos:position pos:line="561" pos:column="7"/></operator><call><name pos:line="561" pos:column="7">union<pos:position pos:line="561" pos:column="12"/></name><argument_list pos:line="561" pos:column="12">(<argument><expr><call><name><name pos:line="561" pos:column="13">requestContext<pos:position pos:line="561" pos:column="27"/></name><operator pos:line="561" pos:column="27">.<pos:position pos:line="561" pos:column="28"/></operator><name pos:line="561" pos:column="28">getViewScope<pos:position pos:line="561" pos:column="40"/></name></name><argument_list pos:line="561" pos:column="40">()<pos:position pos:line="561" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="561" pos:column="43"/></argument_list></call><operator pos:line="561" pos:column="43">.<pos:position pos:line="561" pos:column="44"/></operator><call><name pos:line="561" pos:column="44">union<pos:position pos:line="561" pos:column="49"/></name><argument_list pos:line="561" pos:column="49">(<argument><expr><call><name><name pos:line="561" pos:column="50">requestContext<pos:position pos:line="561" pos:column="64"/></name><operator pos:line="561" pos:column="64">.<pos:position pos:line="561" pos:column="65"/></operator><name pos:line="561" pos:column="65">getFlashScope<pos:position pos:line="561" pos:column="78"/></name></name><argument_list pos:line="561" pos:column="78">()<pos:position pos:line="561" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="561" pos:column="81"/></argument_list></call>
					<operator pos:line="562" pos:column="6">.<pos:position pos:line="562" pos:column="7"/></operator><call><name pos:line="562" pos:column="7">union<pos:position pos:line="562" pos:column="12"/></name><argument_list pos:line="562" pos:column="12">(<argument><expr><call><name><name pos:line="562" pos:column="13">requestContext<pos:position pos:line="562" pos:column="27"/></name><operator pos:line="562" pos:column="27">.<pos:position pos:line="562" pos:column="28"/></operator><name pos:line="562" pos:column="28">getRequestScope<pos:position pos:line="562" pos:column="43"/></name></name><argument_list pos:line="562" pos:column="43">()<pos:position pos:line="562" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="562" pos:column="46"/></argument_list></call><operator pos:line="562" pos:column="46">.<pos:position pos:line="562" pos:column="47"/></operator><call><name pos:line="562" pos:column="47">asMap<pos:position pos:line="562" pos:column="52"/></name><argument_list pos:line="562" pos:column="52">()<pos:position pos:line="562" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="562" pos:column="55"/></return>
		}<pos:position pos:line="563" pos:column="4"/></block></then> <else pos:line="563" pos:column="5">else <block pos:line="563" pos:column="10">{
			<return pos:line="564" pos:column="4">return <expr><call><name><name pos:line="564" pos:column="11">requestContext<pos:position pos:line="564" pos:column="25"/></name><operator pos:line="564" pos:column="25">.<pos:position pos:line="564" pos:column="26"/></operator><name pos:line="564" pos:column="26">getConversationScope<pos:position pos:line="564" pos:column="46"/></name></name><argument_list pos:line="564" pos:column="46">()<pos:position pos:line="564" pos:column="48"/></argument_list></call><operator pos:line="564" pos:column="48">.<pos:position pos:line="564" pos:column="49"/></operator><call><name pos:line="564" pos:column="49">union<pos:position pos:line="564" pos:column="54"/></name><argument_list pos:line="564" pos:column="54">(<argument><expr><call><name><name pos:line="564" pos:column="55">requestContext<pos:position pos:line="564" pos:column="69"/></name><operator pos:line="564" pos:column="69">.<pos:position pos:line="564" pos:column="70"/></operator><name pos:line="564" pos:column="70">getFlowScope<pos:position pos:line="564" pos:column="82"/></name></name><argument_list pos:line="564" pos:column="82">()<pos:position pos:line="564" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="564" pos:column="85"/></argument_list></call>
					<operator pos:line="565" pos:column="6">.<pos:position pos:line="565" pos:column="7"/></operator><call><name pos:line="565" pos:column="7">union<pos:position pos:line="565" pos:column="12"/></name><argument_list pos:line="565" pos:column="12">(<argument><expr><call><name><name pos:line="565" pos:column="13">requestContext<pos:position pos:line="565" pos:column="27"/></name><operator pos:line="565" pos:column="27">.<pos:position pos:line="565" pos:column="28"/></operator><name pos:line="565" pos:column="28">getFlashScope<pos:position pos:line="565" pos:column="41"/></name></name><argument_list pos:line="565" pos:column="41">()<pos:position pos:line="565" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="565" pos:column="44"/></argument_list></call><operator pos:line="565" pos:column="44">.<pos:position pos:line="565" pos:column="45"/></operator><call><name pos:line="565" pos:column="45">union<pos:position pos:line="565" pos:column="50"/></name><argument_list pos:line="565" pos:column="50">(<argument><expr><call><name><name pos:line="565" pos:column="51">requestContext<pos:position pos:line="565" pos:column="65"/></name><operator pos:line="565" pos:column="65">.<pos:position pos:line="565" pos:column="66"/></operator><name pos:line="565" pos:column="66">getRequestScope<pos:position pos:line="565" pos:column="81"/></name></name><argument_list pos:line="565" pos:column="81">()<pos:position pos:line="565" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="565" pos:column="84"/></argument_list></call><operator pos:line="565" pos:column="84">.<pos:position pos:line="565" pos:column="85"/></operator><call><name pos:line="565" pos:column="85">asMap<pos:position pos:line="565" pos:column="90"/></name><argument_list pos:line="565" pos:column="90">()<pos:position pos:line="565" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="565" pos:column="93"/></return>
		}<pos:position pos:line="566" pos:column="4"/></block></else></if>
	}<pos:position pos:line="567" pos:column="3"/></block></function>

	<function><specifier pos:line="569" pos:column="2">private<pos:position pos:line="569" pos:column="9"/></specifier> <type><name pos:line="569" pos:column="10">void<pos:position pos:line="569" pos:column="14"/></name></type> <name pos:line="569" pos:column="15">exposeBindingModel<pos:position pos:line="569" pos:column="33"/></name><parameter_list pos:line="569" pos:column="33">(<parameter><decl><type><name><name pos:line="569" pos:column="34">Map<pos:position pos:line="569" pos:column="37"/></name><argument_list type="generic" pos:line="569" pos:column="37">&lt;<argument><name pos:line="569" pos:column="38">String<pos:position pos:line="569" pos:column="44"/></name></argument>, <argument><name pos:line="569" pos:column="46">Object<pos:position pos:line="569" pos:column="52"/></name></argument>&gt;<pos:position pos:line="569" pos:column="56"/></argument_list></name></type> <name pos:line="569" pos:column="54">model<pos:position pos:line="569" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="569" pos:column="60"/></parameter_list> <block pos:line="569" pos:column="61">{
		<decl_stmt><decl><type><name pos:line="570" pos:column="3">Object<pos:position pos:line="570" pos:column="9"/></name></type> <name pos:line="570" pos:column="10">modelObject<pos:position pos:line="570" pos:column="21"/></name> <init pos:line="570" pos:column="22">= <expr><call><name pos:line="570" pos:column="24">getModelObject<pos:position pos:line="570" pos:column="38"/></name><argument_list pos:line="570" pos:column="38">()<pos:position pos:line="570" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="570" pos:column="41"/></decl_stmt>
		<if pos:line="571" pos:column="3">if <condition pos:line="571" pos:column="6">(<expr><name pos:line="571" pos:column="7">modelObject<pos:position pos:line="571" pos:column="18"/></name> <operator pos:line="571" pos:column="19">!=<pos:position pos:line="571" pos:column="21"/></operator> <literal type="null" pos:line="571" pos:column="22">null<pos:position pos:line="571" pos:column="26"/></literal></expr>)<pos:position pos:line="571" pos:column="27"/></condition><then pos:line="571" pos:column="27"> <block pos:line="571" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="572" pos:column="4">BindingModel<pos:position pos:line="572" pos:column="16"/></name></type> <name pos:line="572" pos:column="17">bindingModel<pos:position pos:line="572" pos:column="29"/></name> <init pos:line="572" pos:column="30">= <expr><operator pos:line="572" pos:column="32">new<pos:position pos:line="572" pos:column="35"/></operator> <call><name pos:line="572" pos:column="36">BindingModel<pos:position pos:line="572" pos:column="48"/></name><argument_list pos:line="572" pos:column="48">(<argument><expr><call><name pos:line="572" pos:column="49">getModelExpression<pos:position pos:line="572" pos:column="67"/></name><argument_list pos:line="572" pos:column="67">()<pos:position pos:line="572" pos:column="69"/></argument_list></call><operator pos:line="572" pos:column="69">.<pos:position pos:line="572" pos:column="70"/></operator><call><name pos:line="572" pos:column="70">getExpressionString<pos:position pos:line="572" pos:column="89"/></name><argument_list pos:line="572" pos:column="89">()<pos:position pos:line="572" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="572" pos:column="93">modelObject<pos:position pos:line="572" pos:column="104"/></name></expr></argument>,
					<argument><expr><name pos:line="573" pos:column="6">expressionParser<pos:position pos:line="573" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="573" pos:column="24">conversionService<pos:position pos:line="573" pos:column="41"/></name></expr></argument>, <argument><expr><call><name><name pos:line="573" pos:column="43">requestContext<pos:position pos:line="573" pos:column="57"/></name><operator pos:line="573" pos:column="57">.<pos:position pos:line="573" pos:column="58"/></operator><name pos:line="573" pos:column="58">getMessageContext<pos:position pos:line="573" pos:column="75"/></name></name><argument_list pos:line="573" pos:column="75">()<pos:position pos:line="573" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="573" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="573" pos:column="79"/></decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="574" pos:column="4">bindingModel<pos:position pos:line="574" pos:column="16"/></name><operator pos:line="574" pos:column="16">.<pos:position pos:line="574" pos:column="17"/></operator><name pos:line="574" pos:column="17">setBinderConfiguration<pos:position pos:line="574" pos:column="39"/></name></name><argument_list pos:line="574" pos:column="39">(<argument><expr><name pos:line="574" pos:column="40">binderConfiguration<pos:position pos:line="574" pos:column="59"/></name></expr></argument>)<pos:position pos:line="574" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="574" pos:column="61"/></expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="575" pos:column="4">bindingModel<pos:position pos:line="575" pos:column="16"/></name><operator pos:line="575" pos:column="16">.<pos:position pos:line="575" pos:column="17"/></operator><name pos:line="575" pos:column="17">setMappingResults<pos:position pos:line="575" pos:column="34"/></name></name><argument_list pos:line="575" pos:column="34">(<argument><expr><name pos:line="575" pos:column="35">mappingResults<pos:position pos:line="575" pos:column="49"/></name></expr></argument>)<pos:position pos:line="575" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="575" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="576" pos:column="4">model<pos:position pos:line="576" pos:column="9"/></name><operator pos:line="576" pos:column="9">.<pos:position pos:line="576" pos:column="10"/></operator><name pos:line="576" pos:column="10">put<pos:position pos:line="576" pos:column="13"/></name></name><argument_list pos:line="576" pos:column="13">(<argument><expr><name><name pos:line="576" pos:column="14">BindingResult<pos:position pos:line="576" pos:column="27"/></name><operator pos:line="576" pos:column="27">.<pos:position pos:line="576" pos:column="28"/></operator><name pos:line="576" pos:column="28">MODEL_KEY_PREFIX<pos:position pos:line="576" pos:column="44"/></name></name> <operator pos:line="576" pos:column="45">+<pos:position pos:line="576" pos:column="46"/></operator> <call><name pos:line="576" pos:column="47">getModelExpression<pos:position pos:line="576" pos:column="65"/></name><argument_list pos:line="576" pos:column="65">()<pos:position pos:line="576" pos:column="67"/></argument_list></call><operator pos:line="576" pos:column="67">.<pos:position pos:line="576" pos:column="68"/></operator><call><name pos:line="576" pos:column="68">getExpressionString<pos:position pos:line="576" pos:column="87"/></name><argument_list pos:line="576" pos:column="87">()<pos:position pos:line="576" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="576" pos:column="91">bindingModel<pos:position pos:line="576" pos:column="103"/></name></expr></argument>)<pos:position pos:line="576" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="105"/></expr_stmt>
		}<pos:position pos:line="577" pos:column="4"/></block></then></if>
	}<pos:position pos:line="578" pos:column="3"/></block></function>

	<function><specifier pos:line="580" pos:column="2">private<pos:position pos:line="580" pos:column="9"/></specifier> <type><name pos:line="580" pos:column="10">Object<pos:position pos:line="580" pos:column="16"/></name></type> <name pos:line="580" pos:column="17">getModelObject<pos:position pos:line="580" pos:column="31"/></name><parameter_list pos:line="580" pos:column="31">()<pos:position pos:line="580" pos:column="33"/></parameter_list> <block pos:line="580" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="581" pos:column="3">Expression<pos:position pos:line="581" pos:column="13"/></name></type> <name pos:line="581" pos:column="14">model<pos:position pos:line="581" pos:column="19"/></name> <init pos:line="581" pos:column="20">= <expr><call><name pos:line="581" pos:column="22">getModelExpression<pos:position pos:line="581" pos:column="40"/></name><argument_list pos:line="581" pos:column="40">()<pos:position pos:line="581" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="581" pos:column="43"/></decl_stmt>
		<if pos:line="582" pos:column="3">if <condition pos:line="582" pos:column="6">(<expr><name pos:line="582" pos:column="7">model<pos:position pos:line="582" pos:column="12"/></name> <operator pos:line="582" pos:column="13">!=<pos:position pos:line="582" pos:column="15"/></operator> <literal type="null" pos:line="582" pos:column="16">null<pos:position pos:line="582" pos:column="20"/></literal></expr>)<pos:position pos:line="582" pos:column="21"/></condition><then pos:line="582" pos:column="21"> <block pos:line="582" pos:column="22">{
			<try pos:line="583" pos:column="4">try <block pos:line="583" pos:column="8">{
				<return pos:line="584" pos:column="5">return <expr><call><name><name pos:line="584" pos:column="12">model<pos:position pos:line="584" pos:column="17"/></name><operator pos:line="584" pos:column="17">.<pos:position pos:line="584" pos:column="18"/></operator><name pos:line="584" pos:column="18">getValue<pos:position pos:line="584" pos:column="26"/></name></name><argument_list pos:line="584" pos:column="26">(<argument><expr><name pos:line="584" pos:column="27">requestContext<pos:position pos:line="584" pos:column="41"/></name></expr></argument>)<pos:position pos:line="584" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="584" pos:column="43"/></return>
			}<pos:position pos:line="585" pos:column="5"/></block> <catch pos:line="585" pos:column="6">catch <parameter_list pos:line="585" pos:column="12">(<parameter><decl><type><name pos:line="585" pos:column="13">EvaluationException<pos:position pos:line="585" pos:column="32"/></name></type> <name pos:line="585" pos:column="33">e<pos:position pos:line="585" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="585" pos:column="35"/></parameter_list> <block pos:line="585" pos:column="36">{
				<return pos:line="586" pos:column="5">return <expr><literal type="null" pos:line="586" pos:column="12">null<pos:position pos:line="586" pos:column="16"/></literal></expr>;<pos:position pos:line="586" pos:column="17"/></return>
			}<pos:position pos:line="587" pos:column="5"/></block></catch></try>
		}<pos:position pos:line="588" pos:column="4"/></block></then> <else pos:line="588" pos:column="5">else <block pos:line="588" pos:column="10">{
			<return pos:line="589" pos:column="4">return <expr><literal type="null" pos:line="589" pos:column="11">null<pos:position pos:line="589" pos:column="15"/></literal></expr>;<pos:position pos:line="589" pos:column="16"/></return>
		}<pos:position pos:line="590" pos:column="4"/></block></else></if>
	}<pos:position pos:line="591" pos:column="3"/></block></function>

	<function><specifier pos:line="593" pos:column="2">private<pos:position pos:line="593" pos:column="9"/></specifier> <type><name pos:line="593" pos:column="10">Expression<pos:position pos:line="593" pos:column="20"/></name></type> <name pos:line="593" pos:column="21">getModelExpression<pos:position pos:line="593" pos:column="39"/></name><parameter_list pos:line="593" pos:column="39">()<pos:position pos:line="593" pos:column="41"/></parameter_list> <block pos:line="593" pos:column="42">{
		<return pos:line="594" pos:column="3">return <expr><operator pos:line="594" pos:column="10">(<pos:position pos:line="594" pos:column="11"/></operator><name pos:line="594" pos:column="11">Expression<pos:position pos:line="594" pos:column="21"/></name><operator pos:line="594" pos:column="21">)<pos:position pos:line="594" pos:column="22"/></operator> <call><name><name pos:line="594" pos:column="23">requestContext<pos:position pos:line="594" pos:column="37"/></name><operator pos:line="594" pos:column="37">.<pos:position pos:line="594" pos:column="38"/></operator><name pos:line="594" pos:column="38">getCurrentState<pos:position pos:line="594" pos:column="53"/></name></name><argument_list pos:line="594" pos:column="53">()<pos:position pos:line="594" pos:column="55"/></argument_list></call><operator pos:line="594" pos:column="55">.<pos:position pos:line="594" pos:column="56"/></operator><call><name pos:line="594" pos:column="56">getAttributes<pos:position pos:line="594" pos:column="69"/></name><argument_list pos:line="594" pos:column="69">()<pos:position pos:line="594" pos:column="71"/></argument_list></call><operator pos:line="594" pos:column="71">.<pos:position pos:line="594" pos:column="72"/></operator><call><name pos:line="594" pos:column="72">get<pos:position pos:line="594" pos:column="75"/></name><argument_list pos:line="594" pos:column="75">(<argument><expr><literal type="string" pos:line="594" pos:column="76">"model"<pos:position pos:line="594" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="594" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="85"/></return>
	}<pos:position pos:line="595" pos:column="3"/></block></function>

	<function><specifier pos:line="597" pos:column="2">private<pos:position pos:line="597" pos:column="9"/></specifier> <type><name pos:line="597" pos:column="10">Object<pos:position pos:line="597" pos:column="16"/></name></type> <name pos:line="597" pos:column="17">getEmptyValue<pos:position pos:line="597" pos:column="30"/></name><parameter_list pos:line="597" pos:column="30">(<parameter><decl><type><name><name pos:line="597" pos:column="31">Class<pos:position pos:line="597" pos:column="36"/></name><argument_list type="generic" pos:line="597" pos:column="36">&lt;<argument><name pos:line="597" pos:column="37">?<pos:position pos:line="597" pos:column="38"/></name></argument>&gt;<pos:position pos:line="597" pos:column="42"/></argument_list></name></type> <name pos:line="597" pos:column="40">fieldType<pos:position pos:line="597" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="597" pos:column="50"/></parameter_list> <block pos:line="597" pos:column="51">{
		<if pos:line="598" pos:column="3">if <condition pos:line="598" pos:column="6">(<expr><name pos:line="598" pos:column="7">fieldType<pos:position pos:line="598" pos:column="16"/></name> <operator pos:line="598" pos:column="17">!=<pos:position pos:line="598" pos:column="19"/></operator> <literal type="null" pos:line="598" pos:column="20">null<pos:position pos:line="598" pos:column="24"/></literal> <operator pos:line="598" pos:column="25">&amp;&amp;<pos:position pos:line="598" pos:column="35"/></operator> <call><name><name pos:line="598" pos:column="28">boolean<pos:position pos:line="598" pos:column="35"/></name><operator pos:line="598" pos:column="35">.<pos:position pos:line="598" pos:column="36"/></operator><name><name pos:line="598" pos:column="36">class<pos:position pos:line="598" pos:column="41"/></name><operator pos:line="598" pos:column="41">.<pos:position pos:line="598" pos:column="42"/></operator><name pos:line="598" pos:column="42">equals<pos:position pos:line="598" pos:column="48"/></name></name></name><argument_list pos:line="598" pos:column="48">(<argument><expr><name pos:line="598" pos:column="49">fieldType<pos:position pos:line="598" pos:column="58"/></name></expr></argument>)<pos:position pos:line="598" pos:column="59"/></argument_list></call> <operator pos:line="598" pos:column="60">||<pos:position pos:line="598" pos:column="62"/></operator> <call><name><name pos:line="598" pos:column="63">Boolean<pos:position pos:line="598" pos:column="70"/></name><operator pos:line="598" pos:column="70">.<pos:position pos:line="598" pos:column="71"/></operator><name><name pos:line="598" pos:column="71">class<pos:position pos:line="598" pos:column="76"/></name><operator pos:line="598" pos:column="76">.<pos:position pos:line="598" pos:column="77"/></operator><name pos:line="598" pos:column="77">equals<pos:position pos:line="598" pos:column="83"/></name></name></name><argument_list pos:line="598" pos:column="83">(<argument><expr><name pos:line="598" pos:column="84">fieldType<pos:position pos:line="598" pos:column="93"/></name></expr></argument>)<pos:position pos:line="598" pos:column="94"/></argument_list></call></expr>)<pos:position pos:line="598" pos:column="95"/></condition><then pos:line="598" pos:column="95"> <block pos:line="598" pos:column="96">{
			<comment type="line" pos:line="599" pos:column="4">// Special handling of boolean property.</comment>
			<return pos:line="600" pos:column="4">return <expr><literal type="boolean" pos:line="600" pos:column="11">false<pos:position pos:line="600" pos:column="16"/></literal></expr>;<pos:position pos:line="600" pos:column="17"/></return>
		}<pos:position pos:line="601" pos:column="4"/></block></then> <elseif pos:line="601" pos:column="5">else <if pos:line="601" pos:column="10">if <condition pos:line="601" pos:column="13">(<expr><name pos:line="601" pos:column="14">fieldType<pos:position pos:line="601" pos:column="23"/></name> <operator pos:line="601" pos:column="24">!=<pos:position pos:line="601" pos:column="26"/></operator> <literal type="null" pos:line="601" pos:column="27">null<pos:position pos:line="601" pos:column="31"/></literal> <operator pos:line="601" pos:column="32">&amp;&amp;<pos:position pos:line="601" pos:column="42"/></operator> <call><name><name pos:line="601" pos:column="35">fieldType<pos:position pos:line="601" pos:column="44"/></name><operator pos:line="601" pos:column="44">.<pos:position pos:line="601" pos:column="45"/></operator><name pos:line="601" pos:column="45">isArray<pos:position pos:line="601" pos:column="52"/></name></name><argument_list pos:line="601" pos:column="52">()<pos:position pos:line="601" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="601" pos:column="55"/></condition><then pos:line="601" pos:column="55"> <block pos:line="601" pos:column="56">{
			<comment type="line" pos:line="602" pos:column="4">// Special handling of array property.</comment>
			<return pos:line="603" pos:column="4">return <expr><call><name><name pos:line="603" pos:column="11">Array<pos:position pos:line="603" pos:column="16"/></name><operator pos:line="603" pos:column="16">.<pos:position pos:line="603" pos:column="17"/></operator><name pos:line="603" pos:column="17">newInstance<pos:position pos:line="603" pos:column="28"/></name></name><argument_list pos:line="603" pos:column="28">(<argument><expr><call><name><name pos:line="603" pos:column="29">fieldType<pos:position pos:line="603" pos:column="38"/></name><operator pos:line="603" pos:column="38">.<pos:position pos:line="603" pos:column="39"/></operator><name pos:line="603" pos:column="39">getComponentType<pos:position pos:line="603" pos:column="55"/></name></name><argument_list pos:line="603" pos:column="55">()<pos:position pos:line="603" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="603" pos:column="59">0<pos:position pos:line="603" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="603" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="603" pos:column="62"/></return>
		}<pos:position pos:line="604" pos:column="4"/></block></then></if></elseif> <else pos:line="604" pos:column="5">else <block pos:line="604" pos:column="10">{
			<comment type="line" pos:line="605" pos:column="4">// Default value: try null.</comment>
			<return pos:line="606" pos:column="4">return <expr><literal type="null" pos:line="606" pos:column="11">null<pos:position pos:line="606" pos:column="15"/></literal></expr>;<pos:position pos:line="606" pos:column="16"/></return>
		}<pos:position pos:line="607" pos:column="4"/></block></else></if>
	}<pos:position pos:line="608" pos:column="3"/></block></function>

	<function><specifier pos:line="610" pos:column="2">private<pos:position pos:line="610" pos:column="9"/></specifier> <type><name pos:line="610" pos:column="10">boolean<pos:position pos:line="610" pos:column="17"/></name></type> <name pos:line="610" pos:column="18">hasErrors<pos:position pos:line="610" pos:column="27"/></name><parameter_list pos:line="610" pos:column="27">(<parameter><decl><type><name pos:line="610" pos:column="28">MappingResults<pos:position pos:line="610" pos:column="42"/></name></type> <name pos:line="610" pos:column="43">results<pos:position pos:line="610" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="610" pos:column="51"/></parameter_list> <block pos:line="610" pos:column="52">{
		<return pos:line="611" pos:column="3">return <expr><call><name><name pos:line="611" pos:column="10">results<pos:position pos:line="611" pos:column="17"/></name><operator pos:line="611" pos:column="17">.<pos:position pos:line="611" pos:column="18"/></operator><name pos:line="611" pos:column="18">hasErrorResults<pos:position pos:line="611" pos:column="33"/></name></name><argument_list pos:line="611" pos:column="33">()<pos:position pos:line="611" pos:column="35"/></argument_list></call> <operator pos:line="611" pos:column="36">&amp;&amp;<pos:position pos:line="611" pos:column="46"/></operator> <operator pos:line="611" pos:column="39">!<pos:position pos:line="611" pos:column="40"/></operator><call><name pos:line="611" pos:column="40">onlyPropertyNotFoundErrorsPresent<pos:position pos:line="611" pos:column="73"/></name><argument_list pos:line="611" pos:column="73">(<argument><expr><name pos:line="611" pos:column="74">results<pos:position pos:line="611" pos:column="81"/></name></expr></argument>)<pos:position pos:line="611" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="83"/></return>
	}<pos:position pos:line="612" pos:column="3"/></block></function>

	<function><specifier pos:line="614" pos:column="2">private<pos:position pos:line="614" pos:column="9"/></specifier> <type><name pos:line="614" pos:column="10">boolean<pos:position pos:line="614" pos:column="17"/></name></type> <name pos:line="614" pos:column="18">onlyPropertyNotFoundErrorsPresent<pos:position pos:line="614" pos:column="51"/></name><parameter_list pos:line="614" pos:column="51">(<parameter><decl><type><name pos:line="614" pos:column="52">MappingResults<pos:position pos:line="614" pos:column="66"/></name></type> <name pos:line="614" pos:column="67">results<pos:position pos:line="614" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="614" pos:column="75"/></parameter_list> <block pos:line="614" pos:column="76">{
		<return pos:line="615" pos:column="3">return <expr><call><name><name pos:line="615" pos:column="10">results<pos:position pos:line="615" pos:column="17"/></name><operator pos:line="615" pos:column="17">.<pos:position pos:line="615" pos:column="18"/></operator><name pos:line="615" pos:column="18">getResults<pos:position pos:line="615" pos:column="28"/></name></name><argument_list pos:line="615" pos:column="28">(<argument><expr><name pos:line="615" pos:column="29">PROPERTY_NOT_FOUND_ERROR<pos:position pos:line="615" pos:column="53"/></name></expr></argument>)<pos:position pos:line="615" pos:column="54"/></argument_list></call><operator pos:line="615" pos:column="54">.<pos:position pos:line="615" pos:column="55"/></operator><call><name pos:line="615" pos:column="55">size<pos:position pos:line="615" pos:column="59"/></name><argument_list pos:line="615" pos:column="59">()<pos:position pos:line="615" pos:column="61"/></argument_list></call> <operator pos:line="615" pos:column="62">==<pos:position pos:line="615" pos:column="64"/></operator> <call><name><name pos:line="615" pos:column="65">mappingResults<pos:position pos:line="615" pos:column="79"/></name><operator pos:line="615" pos:column="79">.<pos:position pos:line="615" pos:column="80"/></operator><name pos:line="615" pos:column="80">getErrorResults<pos:position pos:line="615" pos:column="95"/></name></name><argument_list pos:line="615" pos:column="95">()<pos:position pos:line="615" pos:column="97"/></argument_list></call><operator pos:line="615" pos:column="97">.<pos:position pos:line="615" pos:column="98"/></operator><call><name pos:line="615" pos:column="98">size<pos:position pos:line="615" pos:column="102"/></name><argument_list pos:line="615" pos:column="102">()<pos:position pos:line="615" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="105"/></return>
	}<pos:position pos:line="616" pos:column="3"/></block></function>

	<function><specifier pos:line="618" pos:column="2">private<pos:position pos:line="618" pos:column="9"/></specifier> <type><name pos:line="618" pos:column="10">void<pos:position pos:line="618" pos:column="14"/></name></type> <name pos:line="618" pos:column="15">addErrorMessages<pos:position pos:line="618" pos:column="31"/></name><parameter_list pos:line="618" pos:column="31">(<parameter><decl><type><name pos:line="618" pos:column="32">MappingResults<pos:position pos:line="618" pos:column="46"/></name></type> <name pos:line="618" pos:column="47">results<pos:position pos:line="618" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="618" pos:column="55"/></parameter_list> <block pos:line="618" pos:column="56">{
		<decl_stmt><decl><type><name><name pos:line="619" pos:column="3">List<pos:position pos:line="619" pos:column="7"/></name><argument_list type="generic" pos:line="619" pos:column="7">&lt;<argument><name pos:line="619" pos:column="8">MappingResult<pos:position pos:line="619" pos:column="21"/></name></argument>&gt;<pos:position pos:line="619" pos:column="25"/></argument_list></name></type> <name pos:line="619" pos:column="23">errors<pos:position pos:line="619" pos:column="29"/></name> <init pos:line="619" pos:column="30">= <expr><call><name><name pos:line="619" pos:column="32">results<pos:position pos:line="619" pos:column="39"/></name><operator pos:line="619" pos:column="39">.<pos:position pos:line="619" pos:column="40"/></operator><name pos:line="619" pos:column="40">getResults<pos:position pos:line="619" pos:column="50"/></name></name><argument_list pos:line="619" pos:column="50">(<argument><expr><name pos:line="619" pos:column="51">MAPPING_ERROR<pos:position pos:line="619" pos:column="64"/></name></expr></argument>)<pos:position pos:line="619" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="619" pos:column="66"/></decl_stmt>
		<for pos:line="620" pos:column="3">for <control pos:line="620" pos:column="7">(<init><decl><type><name pos:line="620" pos:column="8">MappingResult<pos:position pos:line="620" pos:column="21"/></name></type> <name pos:line="620" pos:column="22">error<pos:position pos:line="620" pos:column="27"/></name> <range pos:line="620" pos:column="28">: <expr><name pos:line="620" pos:column="30">errors<pos:position pos:line="620" pos:column="36"/></name></expr></range></decl></init>)<pos:position pos:line="620" pos:column="37"/></control> <block pos:line="620" pos:column="38">{
			<expr_stmt><expr><call><name><name pos:line="621" pos:column="4">requestContext<pos:position pos:line="621" pos:column="18"/></name><operator pos:line="621" pos:column="18">.<pos:position pos:line="621" pos:column="19"/></operator><name pos:line="621" pos:column="19">getMessageContext<pos:position pos:line="621" pos:column="36"/></name></name><argument_list pos:line="621" pos:column="36">()<pos:position pos:line="621" pos:column="38"/></argument_list></call><operator pos:line="621" pos:column="38">.<pos:position pos:line="621" pos:column="39"/></operator><call><name pos:line="621" pos:column="39">addMessage<pos:position pos:line="621" pos:column="49"/></name><argument_list pos:line="621" pos:column="49">(<argument><expr><call><name pos:line="621" pos:column="50">createMessageResolver<pos:position pos:line="621" pos:column="71"/></name><argument_list pos:line="621" pos:column="71">(<argument><expr><name pos:line="621" pos:column="72">error<pos:position pos:line="621" pos:column="77"/></name></expr></argument>)<pos:position pos:line="621" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="621" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="621" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="622" pos:column="4"/></block></for>
	}<pos:position pos:line="623" pos:column="3"/></block></function>

	<function><specifier pos:line="625" pos:column="2">protected<pos:position pos:line="625" pos:column="11"/></specifier> <type><name pos:line="625" pos:column="12">MessageResolver<pos:position pos:line="625" pos:column="27"/></name></type> <name pos:line="625" pos:column="28">createMessageResolver<pos:position pos:line="625" pos:column="49"/></name><parameter_list pos:line="625" pos:column="49">(<parameter><decl><type><name pos:line="625" pos:column="50">MappingResult<pos:position pos:line="625" pos:column="63"/></name></type> <name pos:line="625" pos:column="64">error<pos:position pos:line="625" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="625" pos:column="70"/></parameter_list> <block pos:line="625" pos:column="71">{
		<decl_stmt><decl><type><name pos:line="626" pos:column="3">String<pos:position pos:line="626" pos:column="9"/></name></type> <name pos:line="626" pos:column="10">model<pos:position pos:line="626" pos:column="15"/></name> <init pos:line="626" pos:column="16">= <expr><call><name pos:line="626" pos:column="18">getModelExpression<pos:position pos:line="626" pos:column="36"/></name><argument_list pos:line="626" pos:column="36">()<pos:position pos:line="626" pos:column="38"/></argument_list></call><operator pos:line="626" pos:column="38">.<pos:position pos:line="626" pos:column="39"/></operator><call><name pos:line="626" pos:column="39">getExpressionString<pos:position pos:line="626" pos:column="58"/></name><argument_list pos:line="626" pos:column="58">()<pos:position pos:line="626" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="626" pos:column="61"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="627" pos:column="3">String<pos:position pos:line="627" pos:column="9"/></name></type> <name pos:line="627" pos:column="10">field<pos:position pos:line="627" pos:column="15"/></name> <init pos:line="627" pos:column="16">= <expr><call><name><name pos:line="627" pos:column="18">error<pos:position pos:line="627" pos:column="23"/></name><operator pos:line="627" pos:column="23">.<pos:position pos:line="627" pos:column="24"/></operator><name pos:line="627" pos:column="24">getMapping<pos:position pos:line="627" pos:column="34"/></name></name><argument_list pos:line="627" pos:column="34">()<pos:position pos:line="627" pos:column="36"/></argument_list></call><operator pos:line="627" pos:column="36">.<pos:position pos:line="627" pos:column="37"/></operator><call><name pos:line="627" pos:column="37">getTargetExpression<pos:position pos:line="627" pos:column="56"/></name><argument_list pos:line="627" pos:column="56">()<pos:position pos:line="627" pos:column="58"/></argument_list></call><operator pos:line="627" pos:column="58">.<pos:position pos:line="627" pos:column="59"/></operator><call><name pos:line="627" pos:column="59">getExpressionString<pos:position pos:line="627" pos:column="78"/></name><argument_list pos:line="627" pos:column="78">()<pos:position pos:line="627" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="627" pos:column="81"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="628" pos:column="3">Class<pos:position pos:line="628" pos:column="8"/></name><argument_list type="generic" pos:line="628" pos:column="8">&lt;<argument><name pos:line="628" pos:column="9">?<pos:position pos:line="628" pos:column="10"/></name></argument>&gt;<pos:position pos:line="628" pos:column="14"/></argument_list></name></type> <name pos:line="628" pos:column="12">fieldType<pos:position pos:line="628" pos:column="21"/></name> <init pos:line="628" pos:column="22">= <expr><call><name><name pos:line="628" pos:column="24">error<pos:position pos:line="628" pos:column="29"/></name><operator pos:line="628" pos:column="29">.<pos:position pos:line="628" pos:column="30"/></operator><name pos:line="628" pos:column="30">getMapping<pos:position pos:line="628" pos:column="40"/></name></name><argument_list pos:line="628" pos:column="40">()<pos:position pos:line="628" pos:column="42"/></argument_list></call><operator pos:line="628" pos:column="42">.<pos:position pos:line="628" pos:column="43"/></operator><call><name pos:line="628" pos:column="43">getTargetExpression<pos:position pos:line="628" pos:column="62"/></name><argument_list pos:line="628" pos:column="62">()<pos:position pos:line="628" pos:column="64"/></argument_list></call><operator pos:line="628" pos:column="64">.<pos:position pos:line="628" pos:column="65"/></operator><call><name pos:line="628" pos:column="65">getValueType<pos:position pos:line="628" pos:column="77"/></name><argument_list pos:line="628" pos:column="77">(<argument><expr><call><name pos:line="628" pos:column="78">getModelObject<pos:position pos:line="628" pos:column="92"/></name><argument_list pos:line="628" pos:column="92">()<pos:position pos:line="628" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="628" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="628" pos:column="96"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="629" pos:column="3">String<pos:position pos:line="629" pos:column="9"/></name><index pos:line="629" pos:column="9">[]<pos:position pos:line="629" pos:column="11"/></index></name></type> <name pos:line="629" pos:column="12">messageCodes<pos:position pos:line="629" pos:column="24"/></name> <init pos:line="629" pos:column="25">= <expr><call><name><name pos:line="629" pos:column="27">messageCodesResolver<pos:position pos:line="629" pos:column="47"/></name><operator pos:line="629" pos:column="47">.<pos:position pos:line="629" pos:column="48"/></operator><name pos:line="629" pos:column="48">resolveMessageCodes<pos:position pos:line="629" pos:column="67"/></name></name><argument_list pos:line="629" pos:column="67">(<argument><expr><call><name><name pos:line="629" pos:column="68">error<pos:position pos:line="629" pos:column="73"/></name><operator pos:line="629" pos:column="73">.<pos:position pos:line="629" pos:column="74"/></operator><name pos:line="629" pos:column="74">getCode<pos:position pos:line="629" pos:column="81"/></name></name><argument_list pos:line="629" pos:column="81">()<pos:position pos:line="629" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="629" pos:column="85">model<pos:position pos:line="629" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="629" pos:column="92">field<pos:position pos:line="629" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="629" pos:column="99">fieldType<pos:position pos:line="629" pos:column="108"/></name></expr></argument>)<pos:position pos:line="629" pos:column="109"/></argument_list></call></expr></init></decl>;<pos:position pos:line="629" pos:column="110"/></decl_stmt>
		<return pos:line="630" pos:column="3">return <expr><operator pos:line="630" pos:column="10">new<pos:position pos:line="630" pos:column="13"/></operator> <call><name pos:line="630" pos:column="14">MessageBuilder<pos:position pos:line="630" pos:column="28"/></name><argument_list pos:line="630" pos:column="28">()<pos:position pos:line="630" pos:column="30"/></argument_list></call><operator pos:line="630" pos:column="30">.<pos:position pos:line="630" pos:column="31"/></operator><call><name pos:line="630" pos:column="31">error<pos:position pos:line="630" pos:column="36"/></name><argument_list pos:line="630" pos:column="36">()<pos:position pos:line="630" pos:column="38"/></argument_list></call><operator pos:line="630" pos:column="38">.<pos:position pos:line="630" pos:column="39"/></operator><call><name pos:line="630" pos:column="39">source<pos:position pos:line="630" pos:column="45"/></name><argument_list pos:line="630" pos:column="45">(<argument><expr><name pos:line="630" pos:column="46">field<pos:position pos:line="630" pos:column="51"/></name></expr></argument>)<pos:position pos:line="630" pos:column="52"/></argument_list></call><operator pos:line="630" pos:column="52">.<pos:position pos:line="630" pos:column="53"/></operator><call><name pos:line="630" pos:column="53">codes<pos:position pos:line="630" pos:column="58"/></name><argument_list pos:line="630" pos:column="58">(<argument><expr><name pos:line="630" pos:column="59">messageCodes<pos:position pos:line="630" pos:column="71"/></name></expr></argument>)<pos:position pos:line="630" pos:column="72"/></argument_list></call><operator pos:line="630" pos:column="72">.<pos:position pos:line="630" pos:column="73"/></operator><call><name pos:line="630" pos:column="73">resolvableArg<pos:position pos:line="630" pos:column="86"/></name><argument_list pos:line="630" pos:column="86">(<argument><expr><name pos:line="630" pos:column="87">field<pos:position pos:line="630" pos:column="92"/></name></expr></argument>)<pos:position pos:line="630" pos:column="93"/></argument_list></call>
				<operator pos:line="631" pos:column="5">.<pos:position pos:line="631" pos:column="6"/></operator><call><name pos:line="631" pos:column="6">defaultText<pos:position pos:line="631" pos:column="17"/></name><argument_list pos:line="631" pos:column="17">(<argument><expr><call><name><name pos:line="631" pos:column="18">error<pos:position pos:line="631" pos:column="23"/></name><operator pos:line="631" pos:column="23">.<pos:position pos:line="631" pos:column="24"/></operator><name pos:line="631" pos:column="24">getCode<pos:position pos:line="631" pos:column="31"/></name></name><argument_list pos:line="631" pos:column="31">()<pos:position pos:line="631" pos:column="33"/></argument_list></call> <operator pos:line="631" pos:column="34">+<pos:position pos:line="631" pos:column="35"/></operator> <literal type="string" pos:line="631" pos:column="36">" on "<pos:position pos:line="631" pos:column="42"/></literal> <operator pos:line="631" pos:column="43">+<pos:position pos:line="631" pos:column="44"/></operator> <name pos:line="631" pos:column="45">field<pos:position pos:line="631" pos:column="50"/></name></expr></argument>)<pos:position pos:line="631" pos:column="51"/></argument_list></call><operator pos:line="631" pos:column="51">.<pos:position pos:line="631" pos:column="52"/></operator><call><name pos:line="631" pos:column="52">build<pos:position pos:line="631" pos:column="57"/></name><argument_list pos:line="631" pos:column="57">()<pos:position pos:line="631" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="631" pos:column="60"/></return>
	}<pos:position pos:line="632" pos:column="3"/></block></function>

	<function><specifier pos:line="634" pos:column="2">private<pos:position pos:line="634" pos:column="9"/></specifier> <type><name pos:line="634" pos:column="10">Boolean<pos:position pos:line="634" pos:column="17"/></name></type> <name pos:line="634" pos:column="18">getValidateAttribute<pos:position pos:line="634" pos:column="38"/></name><parameter_list pos:line="634" pos:column="38">(<parameter><decl><type><name pos:line="634" pos:column="39">TransitionDefinition<pos:position pos:line="634" pos:column="59"/></name></type> <name pos:line="634" pos:column="60">transition<pos:position pos:line="634" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="634" pos:column="71"/></parameter_list> <block pos:line="634" pos:column="72">{
		<if pos:line="635" pos:column="3">if <condition pos:line="635" pos:column="6">(<expr><name pos:line="635" pos:column="7">transition<pos:position pos:line="635" pos:column="17"/></name> <operator pos:line="635" pos:column="18">!=<pos:position pos:line="635" pos:column="20"/></operator> <literal type="null" pos:line="635" pos:column="21">null<pos:position pos:line="635" pos:column="25"/></literal></expr>)<pos:position pos:line="635" pos:column="26"/></condition><then pos:line="635" pos:column="26"> <block pos:line="635" pos:column="27">{
			<return pos:line="636" pos:column="4">return <expr><call><name><name pos:line="636" pos:column="11">transition<pos:position pos:line="636" pos:column="21"/></name><operator pos:line="636" pos:column="21">.<pos:position pos:line="636" pos:column="22"/></operator><name pos:line="636" pos:column="22">getAttributes<pos:position pos:line="636" pos:column="35"/></name></name><argument_list pos:line="636" pos:column="35">()<pos:position pos:line="636" pos:column="37"/></argument_list></call><operator pos:line="636" pos:column="37">.<pos:position pos:line="636" pos:column="38"/></operator><call><name pos:line="636" pos:column="38">getBoolean<pos:position pos:line="636" pos:column="48"/></name><argument_list pos:line="636" pos:column="48">(<argument><expr><literal type="string" pos:line="636" pos:column="49">"validate"<pos:position pos:line="636" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="636" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="636" pos:column="61"/></return>
		}<pos:position pos:line="637" pos:column="4"/></block></then> <else pos:line="637" pos:column="5">else <block pos:line="637" pos:column="10">{
			<return pos:line="638" pos:column="4">return <expr><literal type="null" pos:line="638" pos:column="11">null<pos:position pos:line="638" pos:column="15"/></literal></expr>;<pos:position pos:line="638" pos:column="16"/></return>
		}<pos:position pos:line="639" pos:column="4"/></block></else></if>
	}<pos:position pos:line="640" pos:column="3"/></block></function>

	<function><specifier pos:line="642" pos:column="2">private<pos:position pos:line="642" pos:column="9"/></specifier> <type><name pos:line="642" pos:column="10">void<pos:position pos:line="642" pos:column="14"/></name></type> <name pos:line="642" pos:column="15">validate<pos:position pos:line="642" pos:column="23"/></name><parameter_list pos:line="642" pos:column="23">(<parameter><decl><type><name pos:line="642" pos:column="24">Object<pos:position pos:line="642" pos:column="30"/></name></type> <name pos:line="642" pos:column="31">model<pos:position pos:line="642" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="642" pos:column="38">TransitionDefinition<pos:position pos:line="642" pos:column="58"/></name></type> <name pos:line="642" pos:column="59">transition<pos:position pos:line="642" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="642" pos:column="70"/></parameter_list> <block pos:line="642" pos:column="71">{
		<if pos:line="643" pos:column="3">if <condition pos:line="643" pos:column="6">(<expr><call><name><name pos:line="643" pos:column="7">logger<pos:position pos:line="643" pos:column="13"/></name><operator pos:line="643" pos:column="13">.<pos:position pos:line="643" pos:column="14"/></operator><name pos:line="643" pos:column="14">isDebugEnabled<pos:position pos:line="643" pos:column="28"/></name></name><argument_list pos:line="643" pos:column="28">()<pos:position pos:line="643" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="643" pos:column="31"/></condition><then pos:line="643" pos:column="31"> <block pos:line="643" pos:column="32">{
			<expr_stmt><expr><call><name><name pos:line="644" pos:column="4">logger<pos:position pos:line="644" pos:column="10"/></name><operator pos:line="644" pos:column="10">.<pos:position pos:line="644" pos:column="11"/></operator><name pos:line="644" pos:column="11">debug<pos:position pos:line="644" pos:column="16"/></name></name><argument_list pos:line="644" pos:column="16">(<argument><expr><literal type="string" pos:line="644" pos:column="17">"Validating model"<pos:position pos:line="644" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="644" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="644" pos:column="37"/></expr_stmt>
		}<pos:position pos:line="645" pos:column="4"/></block></then></if>
		<decl_stmt><decl><type><name pos:line="646" pos:column="3">ValidationHelper<pos:position pos:line="646" pos:column="19"/></name></type> <name pos:line="646" pos:column="20">helper<pos:position pos:line="646" pos:column="26"/></name> <init pos:line="646" pos:column="27">= <expr><operator pos:line="646" pos:column="29">new<pos:position pos:line="646" pos:column="32"/></operator> <call><name pos:line="646" pos:column="33">ValidationHelper<pos:position pos:line="646" pos:column="49"/></name><argument_list pos:line="646" pos:column="49">(<argument><expr><name pos:line="646" pos:column="50">model<pos:position pos:line="646" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="646" pos:column="57">requestContext<pos:position pos:line="646" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="646" pos:column="73">eventId<pos:position pos:line="646" pos:column="80"/></name></expr></argument>, <argument><expr><call><name pos:line="646" pos:column="82">getModelExpression<pos:position pos:line="646" pos:column="100"/></name><argument_list pos:line="646" pos:column="100">()<pos:position pos:line="646" pos:column="102"/></argument_list></call>
				<operator pos:line="647" pos:column="5">.<pos:position pos:line="647" pos:column="6"/></operator><call><name pos:line="647" pos:column="6">getExpressionString<pos:position pos:line="647" pos:column="25"/></name><argument_list pos:line="647" pos:column="25">()<pos:position pos:line="647" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="647" pos:column="29">expressionParser<pos:position pos:line="647" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="647" pos:column="47">messageCodesResolver<pos:position pos:line="647" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="647" pos:column="69">mappingResults<pos:position pos:line="647" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="647" pos:column="85">validationHintResolver<pos:position pos:line="647" pos:column="107"/></name></expr></argument>)<pos:position pos:line="647" pos:column="108"/></argument_list></call></expr></init></decl>;<pos:position pos:line="647" pos:column="109"/></decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="648" pos:column="3">helper<pos:position pos:line="648" pos:column="9"/></name><operator pos:line="648" pos:column="9">.<pos:position pos:line="648" pos:column="10"/></operator><name pos:line="648" pos:column="10">setValidator<pos:position pos:line="648" pos:column="22"/></name></name><argument_list pos:line="648" pos:column="22">(<argument><expr><name><name pos:line="648" pos:column="23">this<pos:position pos:line="648" pos:column="27"/></name><operator pos:line="648" pos:column="27">.<pos:position pos:line="648" pos:column="28"/></operator><name pos:line="648" pos:column="28">validator<pos:position pos:line="648" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="648" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="648" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="649" pos:column="3">helper<pos:position pos:line="649" pos:column="9"/></name><operator pos:line="649" pos:column="9">.<pos:position pos:line="649" pos:column="10"/></operator><name pos:line="649" pos:column="10">validate<pos:position pos:line="649" pos:column="18"/></name></name><argument_list pos:line="649" pos:column="18">()<pos:position pos:line="649" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="649" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="650" pos:column="3"/></block></function>

	<class><specifier pos:line="652" pos:column="2">private<pos:position pos:line="652" pos:column="9"/></specifier> <specifier pos:line="652" pos:column="10">static<pos:position pos:line="652" pos:column="16"/></specifier> class <name pos:line="652" pos:column="23">PropertyNotFoundError<pos:position pos:line="652" pos:column="44"/></name> <super><implements pos:line="652" pos:column="45">implements <name pos:line="652" pos:column="56">MappingResultsCriteria<pos:position pos:line="652" pos:column="78"/></name></implements></super> <block pos:line="652" pos:column="79">{
		<function><specifier pos:line="653" pos:column="3">public<pos:position pos:line="653" pos:column="9"/></specifier> <type><name pos:line="653" pos:column="10">boolean<pos:position pos:line="653" pos:column="17"/></name></type> <name pos:line="653" pos:column="18">test<pos:position pos:line="653" pos:column="22"/></name><parameter_list pos:line="653" pos:column="22">(<parameter><decl><type><name pos:line="653" pos:column="23">MappingResult<pos:position pos:line="653" pos:column="36"/></name></type> <name pos:line="653" pos:column="37">result<pos:position pos:line="653" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="653" pos:column="44"/></parameter_list> <block pos:line="653" pos:column="45">{
			<return pos:line="654" pos:column="4">return <expr><call><name><name pos:line="654" pos:column="11">result<pos:position pos:line="654" pos:column="17"/></name><operator pos:line="654" pos:column="17">.<pos:position pos:line="654" pos:column="18"/></operator><name pos:line="654" pos:column="18">isError<pos:position pos:line="654" pos:column="25"/></name></name><argument_list pos:line="654" pos:column="25">()<pos:position pos:line="654" pos:column="27"/></argument_list></call> <operator pos:line="654" pos:column="28">&amp;&amp;<pos:position pos:line="654" pos:column="38"/></operator> <literal type="string" pos:line="654" pos:column="31">"propertyNotFound"<pos:position pos:line="654" pos:column="49"/></literal><operator pos:line="654" pos:column="49">.<pos:position pos:line="654" pos:column="50"/></operator><call><name pos:line="654" pos:column="50">equals<pos:position pos:line="654" pos:column="56"/></name><argument_list pos:line="654" pos:column="56">(<argument><expr><call><name><name pos:line="654" pos:column="57">result<pos:position pos:line="654" pos:column="63"/></name><operator pos:line="654" pos:column="63">.<pos:position pos:line="654" pos:column="64"/></operator><name pos:line="654" pos:column="64">getCode<pos:position pos:line="654" pos:column="71"/></name></name><argument_list pos:line="654" pos:column="71">()<pos:position pos:line="654" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="654" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="654" pos:column="75"/></return>
		}<pos:position pos:line="655" pos:column="4"/></block></function>
	}<pos:position pos:line="656" pos:column="3"/></block></class>

	<class><specifier pos:line="658" pos:column="2">private<pos:position pos:line="658" pos:column="9"/></specifier> <specifier pos:line="658" pos:column="10">static<pos:position pos:line="658" pos:column="16"/></specifier> class <name pos:line="658" pos:column="23">MappingError<pos:position pos:line="658" pos:column="35"/></name> <super><implements pos:line="658" pos:column="36">implements <name pos:line="658" pos:column="47">MappingResultsCriteria<pos:position pos:line="658" pos:column="69"/></name></implements></super> <block pos:line="658" pos:column="70">{
		<function><specifier pos:line="659" pos:column="3">public<pos:position pos:line="659" pos:column="9"/></specifier> <type><name pos:line="659" pos:column="10">boolean<pos:position pos:line="659" pos:column="17"/></name></type> <name pos:line="659" pos:column="18">test<pos:position pos:line="659" pos:column="22"/></name><parameter_list pos:line="659" pos:column="22">(<parameter><decl><type><name pos:line="659" pos:column="23">MappingResult<pos:position pos:line="659" pos:column="36"/></name></type> <name pos:line="659" pos:column="37">result<pos:position pos:line="659" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="659" pos:column="44"/></parameter_list> <block pos:line="659" pos:column="45">{
			<return pos:line="660" pos:column="4">return <expr><call><name><name pos:line="660" pos:column="11">result<pos:position pos:line="660" pos:column="17"/></name><operator pos:line="660" pos:column="17">.<pos:position pos:line="660" pos:column="18"/></operator><name pos:line="660" pos:column="18">isError<pos:position pos:line="660" pos:column="25"/></name></name><argument_list pos:line="660" pos:column="25">()<pos:position pos:line="660" pos:column="27"/></argument_list></call> <operator pos:line="660" pos:column="28">&amp;&amp;<pos:position pos:line="660" pos:column="38"/></operator> <operator pos:line="660" pos:column="31">!<pos:position pos:line="660" pos:column="32"/></operator><call><name><name pos:line="660" pos:column="32">PROPERTY_NOT_FOUND_ERROR<pos:position pos:line="660" pos:column="56"/></name><operator pos:line="660" pos:column="56">.<pos:position pos:line="660" pos:column="57"/></operator><name pos:line="660" pos:column="57">test<pos:position pos:line="660" pos:column="61"/></name></name><argument_list pos:line="660" pos:column="61">(<argument><expr><name pos:line="660" pos:column="62">result<pos:position pos:line="660" pos:column="68"/></name></expr></argument>)<pos:position pos:line="660" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="660" pos:column="70"/></return>
		}<pos:position pos:line="661" pos:column="4"/></block></function>
	}<pos:position pos:line="662" pos:column="3"/></block></class>

	<class><specifier pos:line="664" pos:column="2">private<pos:position pos:line="664" pos:column="9"/></specifier> <specifier pos:line="664" pos:column="10">static<pos:position pos:line="664" pos:column="16"/></specifier> class <name pos:line="664" pos:column="23">RequestParameterExpression<pos:position pos:line="664" pos:column="49"/></name> <super><implements pos:line="664" pos:column="50">implements <name pos:line="664" pos:column="61">Expression<pos:position pos:line="664" pos:column="71"/></name></implements></super> <block pos:line="664" pos:column="72">{

		<decl_stmt><decl><specifier pos:line="666" pos:column="3">private<pos:position pos:line="666" pos:column="10"/></specifier> <type><name pos:line="666" pos:column="11">String<pos:position pos:line="666" pos:column="17"/></name></type> <name pos:line="666" pos:column="18">parameterName<pos:position pos:line="666" pos:column="31"/></name></decl>;<pos:position pos:line="666" pos:column="32"/></decl_stmt>

		<constructor><specifier pos:line="668" pos:column="3">public<pos:position pos:line="668" pos:column="9"/></specifier> <name pos:line="668" pos:column="10">RequestParameterExpression<pos:position pos:line="668" pos:column="36"/></name><parameter_list pos:line="668" pos:column="36">(<parameter><decl><type><name pos:line="668" pos:column="37">String<pos:position pos:line="668" pos:column="43"/></name></type> <name pos:line="668" pos:column="44">parameterName<pos:position pos:line="668" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="668" pos:column="58"/></parameter_list> <block pos:line="668" pos:column="59">{
			<expr_stmt><expr><name><name pos:line="669" pos:column="4">this<pos:position pos:line="669" pos:column="8"/></name><operator pos:line="669" pos:column="8">.<pos:position pos:line="669" pos:column="9"/></operator><name pos:line="669" pos:column="9">parameterName<pos:position pos:line="669" pos:column="22"/></name></name> <operator pos:line="669" pos:column="23">=<pos:position pos:line="669" pos:column="24"/></operator> <name pos:line="669" pos:column="25">parameterName<pos:position pos:line="669" pos:column="38"/></name></expr>;<pos:position pos:line="669" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="670" pos:column="4"/></block></constructor>

		<function><specifier pos:line="672" pos:column="3">public<pos:position pos:line="672" pos:column="9"/></specifier> <type><name pos:line="672" pos:column="10">String<pos:position pos:line="672" pos:column="16"/></name></type> <name pos:line="672" pos:column="17">getExpressionString<pos:position pos:line="672" pos:column="36"/></name><parameter_list pos:line="672" pos:column="36">()<pos:position pos:line="672" pos:column="38"/></parameter_list> <block pos:line="672" pos:column="39">{
			<return pos:line="673" pos:column="4">return <expr><name pos:line="673" pos:column="11">parameterName<pos:position pos:line="673" pos:column="24"/></name></expr>;<pos:position pos:line="673" pos:column="25"/></return>
		}<pos:position pos:line="674" pos:column="4"/></block></function>

		<function><specifier pos:line="676" pos:column="3">public<pos:position pos:line="676" pos:column="9"/></specifier> <type><name pos:line="676" pos:column="10">Object<pos:position pos:line="676" pos:column="16"/></name></type> <name pos:line="676" pos:column="17">getValue<pos:position pos:line="676" pos:column="25"/></name><parameter_list pos:line="676" pos:column="25">(<parameter><decl><type><name pos:line="676" pos:column="26">Object<pos:position pos:line="676" pos:column="32"/></name></type> <name pos:line="676" pos:column="33">context<pos:position pos:line="676" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="676" pos:column="41"/></parameter_list> <throws pos:line="676" pos:column="42">throws <argument><expr><name pos:line="676" pos:column="49">EvaluationException<pos:position pos:line="676" pos:column="68"/></name></expr></argument></throws> <block pos:line="676" pos:column="69">{
			<decl_stmt><decl><type><name pos:line="677" pos:column="4">ParameterMap<pos:position pos:line="677" pos:column="16"/></name></type> <name pos:line="677" pos:column="17">parameters<pos:position pos:line="677" pos:column="27"/></name> <init pos:line="677" pos:column="28">= <expr><operator pos:line="677" pos:column="30">(<pos:position pos:line="677" pos:column="31"/></operator><name pos:line="677" pos:column="31">ParameterMap<pos:position pos:line="677" pos:column="43"/></name><operator pos:line="677" pos:column="43">)<pos:position pos:line="677" pos:column="44"/></operator> <name pos:line="677" pos:column="45">context<pos:position pos:line="677" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="677" pos:column="53"/></decl_stmt>
			<return pos:line="678" pos:column="4">return <expr><call><name><name pos:line="678" pos:column="11">parameters<pos:position pos:line="678" pos:column="21"/></name><operator pos:line="678" pos:column="21">.<pos:position pos:line="678" pos:column="22"/></operator><name pos:line="678" pos:column="22">asMap<pos:position pos:line="678" pos:column="27"/></name></name><argument_list pos:line="678" pos:column="27">()<pos:position pos:line="678" pos:column="29"/></argument_list></call><operator pos:line="678" pos:column="29">.<pos:position pos:line="678" pos:column="30"/></operator><call><name pos:line="678" pos:column="30">get<pos:position pos:line="678" pos:column="33"/></name><argument_list pos:line="678" pos:column="33">(<argument><expr><name pos:line="678" pos:column="34">parameterName<pos:position pos:line="678" pos:column="47"/></name></expr></argument>)<pos:position pos:line="678" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="678" pos:column="49"/></return>
		}<pos:position pos:line="679" pos:column="4"/></block></function>

		<function><specifier pos:line="681" pos:column="3">public<pos:position pos:line="681" pos:column="9"/></specifier> <type><name><name pos:line="681" pos:column="10">Class<pos:position pos:line="681" pos:column="15"/></name><argument_list type="generic" pos:line="681" pos:column="15">&lt;<argument><name pos:line="681" pos:column="16">?<pos:position pos:line="681" pos:column="17"/></name></argument>&gt;<pos:position pos:line="681" pos:column="21"/></argument_list></name></type> <name pos:line="681" pos:column="19">getValueType<pos:position pos:line="681" pos:column="31"/></name><parameter_list pos:line="681" pos:column="31">(<parameter><decl><type><name pos:line="681" pos:column="32">Object<pos:position pos:line="681" pos:column="38"/></name></type> <name pos:line="681" pos:column="39">context<pos:position pos:line="681" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="681" pos:column="47"/></parameter_list> <block pos:line="681" pos:column="48">{
			<return pos:line="682" pos:column="4">return <expr><name><name pos:line="682" pos:column="11">String<pos:position pos:line="682" pos:column="17"/></name><operator pos:line="682" pos:column="17">.<pos:position pos:line="682" pos:column="18"/></operator><name pos:line="682" pos:column="18">class<pos:position pos:line="682" pos:column="23"/></name></name></expr>;<pos:position pos:line="682" pos:column="24"/></return>
		}<pos:position pos:line="683" pos:column="4"/></block></function>

		<function><specifier pos:line="685" pos:column="3">public<pos:position pos:line="685" pos:column="9"/></specifier> <type><name pos:line="685" pos:column="10">void<pos:position pos:line="685" pos:column="14"/></name></type> <name pos:line="685" pos:column="15">setValue<pos:position pos:line="685" pos:column="23"/></name><parameter_list pos:line="685" pos:column="23">(<parameter><decl><type><name pos:line="685" pos:column="24">Object<pos:position pos:line="685" pos:column="30"/></name></type> <name pos:line="685" pos:column="31">context<pos:position pos:line="685" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="685" pos:column="40">Object<pos:position pos:line="685" pos:column="46"/></name></type> <name pos:line="685" pos:column="47">value<pos:position pos:line="685" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="685" pos:column="53"/></parameter_list> <throws pos:line="685" pos:column="54">throws <argument><expr><name pos:line="685" pos:column="61">EvaluationException<pos:position pos:line="685" pos:column="80"/></name></expr></argument></throws> <block pos:line="685" pos:column="81">{
			<throw pos:line="686" pos:column="4">throw <expr><operator pos:line="686" pos:column="10">new<pos:position pos:line="686" pos:column="13"/></operator> <call><name pos:line="686" pos:column="14">UnsupportedOperationException<pos:position pos:line="686" pos:column="43"/></name><argument_list pos:line="686" pos:column="43">(<argument><expr><literal type="string" pos:line="686" pos:column="44">"Setting request parameters is not allowed"<pos:position pos:line="686" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="686" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="686" pos:column="89"/></throw>
		}<pos:position pos:line="687" pos:column="4"/></block></function>

		<function><specifier pos:line="689" pos:column="3">public<pos:position pos:line="689" pos:column="9"/></specifier> <type><name pos:line="689" pos:column="10">String<pos:position pos:line="689" pos:column="16"/></name></type> <name pos:line="689" pos:column="17">toString<pos:position pos:line="689" pos:column="25"/></name><parameter_list pos:line="689" pos:column="25">()<pos:position pos:line="689" pos:column="27"/></parameter_list> <block pos:line="689" pos:column="28">{
			<return pos:line="690" pos:column="4">return <expr><literal type="string" pos:line="690" pos:column="11">"parameter:'"<pos:position pos:line="690" pos:column="24"/></literal> <operator pos:line="690" pos:column="25">+<pos:position pos:line="690" pos:column="26"/></operator> <name pos:line="690" pos:column="27">parameterName<pos:position pos:line="690" pos:column="40"/></name> <operator pos:line="690" pos:column="41">+<pos:position pos:line="690" pos:column="42"/></operator> <literal type="string" pos:line="690" pos:column="43">"'"<pos:position pos:line="690" pos:column="46"/></literal></expr>;<pos:position pos:line="690" pos:column="47"/></return>
		}<pos:position pos:line="691" pos:column="4"/></block></function>
	}<pos:position pos:line="692" pos:column="3"/></block></class>

}<pos:position pos:line="694" pos:column="2"/></block></class>
</unit>

