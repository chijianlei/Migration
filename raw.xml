<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="Java" filename="C:\Users\CHIJIA~1\AppData\Local\Temp\gumtree1656106000162111886" pos:tabs="1"><comment type="block" format="javadoc" pos:line="1" pos:column="1">/**
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package pos:line="17" pos:column="1">package <name><name pos:line="17" pos:column="9">org<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">apache<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">.<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">camel<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">.<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">component<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">jetty<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">javabody<pos:position pos:line="17" pos:column="50"/></name></name>;<pos:position pos:line="17" pos:column="51"/></package>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">org<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">apache<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">.<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="19">camel<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">.<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">CamelExecutionException<pos:position pos:line="19" pos:column="48"/></name></name>;<pos:position pos:line="19" pos:column="49"/></import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">org<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">apache<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">.<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">camel<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">Exchange<pos:position pos:line="20" pos:column="33"/></name></name>;<pos:position pos:line="20" pos:column="34"/></import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">org<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">apache<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">camel<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">Processor<pos:position pos:line="21" pos:column="34"/></name></name>;<pos:position pos:line="21" pos:column="35"/></import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">org<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">apache<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">camel<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">builder<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">RouteBuilder<pos:position pos:line="22" pos:column="45"/></name></name>;<pos:position pos:line="22" pos:column="46"/></import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">org<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">apache<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">camel<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">.<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">component<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">.<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">http<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">.<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">HttpComponent<pos:position pos:line="23" pos:column="53"/></name></name>;<pos:position pos:line="23" pos:column="54"/></import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">org<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">apache<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">.<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">camel<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">component<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">jetty<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">.<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">BaseJettyTest<pos:position pos:line="24" pos:column="54"/></name></name>;<pos:position pos:line="24" pos:column="55"/></import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">org<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">apache<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">camel<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">http<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">common<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">.<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="37">HttpCommonComponent<pos:position pos:line="25" pos:column="56"/></name></name>;<pos:position pos:line="25" pos:column="57"/></import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">org<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">apache<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">camel<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">http<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">.<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">common<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">.<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">HttpConstants<pos:position pos:line="26" pos:column="50"/></name></name>;<pos:position pos:line="26" pos:column="51"/></import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">org<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">apache<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">camel<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">.<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">http<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">common<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">.<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">HttpOperationFailedException<pos:position pos:line="27" pos:column="65"/></name></name>;<pos:position pos:line="27" pos:column="66"/></import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">org<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">junit<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">.<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">Test<pos:position pos:line="28" pos:column="22"/></name></name>;<pos:position pos:line="28" pos:column="23"/></import>

<comment type="block" format="javadoc" pos:line="30" pos:column="1">/**
 * @version 
 */</comment>
<class><specifier pos:line="33" pos:column="1">public<pos:position pos:line="33" pos:column="7"/></specifier> class <name pos:line="33" pos:column="14">HttpJavaBodyTest<pos:position pos:line="33" pos:column="30"/></name> <super><extends pos:line="33" pos:column="31">extends <name pos:line="33" pos:column="39">BaseJettyTest<pos:position pos:line="33" pos:column="52"/></name></extends></super> <block pos:line="33" pos:column="53">{

    <function><annotation pos:line="35" pos:column="5">@<name pos:line="35" pos:column="6">Override<pos:position pos:line="35" pos:column="14"/></name></annotation>
    <specifier pos:line="36" pos:column="5">public<pos:position pos:line="36" pos:column="11"/></specifier> <type><name pos:line="36" pos:column="12">boolean<pos:position pos:line="36" pos:column="19"/></name></type> <name pos:line="36" pos:column="20">isUseRouteBuilder<pos:position pos:line="36" pos:column="37"/></name><parameter_list pos:line="36" pos:column="37">()<pos:position pos:line="36" pos:column="39"/></parameter_list> <block pos:line="36" pos:column="40">{
        <return pos:line="37" pos:column="9">return <expr><literal type="boolean" pos:line="37" pos:column="16">false<pos:position pos:line="37" pos:column="21"/></literal></expr>;<pos:position pos:line="37" pos:column="22"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></function>

    <function><annotation pos:line="40" pos:column="5">@<name pos:line="40" pos:column="6">Test<pos:position pos:line="40" pos:column="10"/></name></annotation>
    <specifier pos:line="41" pos:column="5">public<pos:position pos:line="41" pos:column="11"/></specifier> <type><name pos:line="41" pos:column="12">void<pos:position pos:line="41" pos:column="16"/></name></type> <name pos:line="41" pos:column="17">testHttpSendJavaBodyAndReceiveString<pos:position pos:line="41" pos:column="53"/></name><parameter_list pos:line="41" pos:column="53">()<pos:position pos:line="41" pos:column="55"/></parameter_list> <throws pos:line="41" pos:column="56">throws <argument><expr><name pos:line="41" pos:column="63">Exception<pos:position pos:line="41" pos:column="72"/></name></expr></argument></throws> <block pos:line="41" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">HttpCommonComponent<pos:position pos:line="42" pos:column="28"/></name></type> <name pos:line="42" pos:column="29">jetty<pos:position pos:line="42" pos:column="34"/></name> <init pos:line="42" pos:column="35">= <expr><call><name><name pos:line="42" pos:column="37">context<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">.<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">getComponent<pos:position pos:line="42" pos:column="57"/></name></name><argument_list pos:line="42" pos:column="57">(<argument><expr><literal type="string" pos:line="42" pos:column="58">"jetty"<pos:position pos:line="42" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="67">HttpCommonComponent<pos:position pos:line="42" pos:column="86"/></name><operator pos:line="42" pos:column="86">.<pos:position pos:line="42" pos:column="87"/></operator><name pos:line="42" pos:column="87">class<pos:position pos:line="42" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="94"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="43" pos:column="9">jetty<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">.<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">setAllowJavaSerializedObject<pos:position pos:line="43" pos:column="43"/></name></name><argument_list pos:line="43" pos:column="43">(<argument><expr><literal type="boolean" pos:line="43" pos:column="44">true<pos:position pos:line="43" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="50"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="45" pos:column="9">HttpComponent<pos:position pos:line="45" pos:column="22"/></name></type> <name pos:line="45" pos:column="23">http<pos:position pos:line="45" pos:column="27"/></name> <init pos:line="45" pos:column="28">= <expr><call><name><name pos:line="45" pos:column="30">context<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">.<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">getComponent<pos:position pos:line="45" pos:column="50"/></name></name><argument_list pos:line="45" pos:column="50">(<argument><expr><literal type="string" pos:line="45" pos:column="51">"http"<pos:position pos:line="45" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="59">HttpComponent<pos:position pos:line="45" pos:column="72"/></name><operator pos:line="45" pos:column="72">.<pos:position pos:line="45" pos:column="73"/></operator><name pos:line="45" pos:column="73">class<pos:position pos:line="45" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="80"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="46" pos:column="9">http<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">.<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">setAllowJavaSerializedObject<pos:position pos:line="46" pos:column="42"/></name></name><argument_list pos:line="46" pos:column="42">(<argument><expr><literal type="boolean" pos:line="46" pos:column="43">true<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="48" pos:column="9">context<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">.<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="17">addRoutes<pos:position pos:line="48" pos:column="26"/></name></name><argument_list pos:line="48" pos:column="26">(<argument><expr><operator pos:line="48" pos:column="27">new<pos:position pos:line="48" pos:column="30"/></operator> <class><super><name pos:line="48" pos:column="31">RouteBuilder<pos:position pos:line="48" pos:column="43"/></name></super><argument_list pos:line="48" pos:column="43">()<pos:position pos:line="48" pos:column="45"/></argument_list> <block pos:line="48" pos:column="46">{
            <function><annotation pos:line="49" pos:column="13">@<name pos:line="49" pos:column="14">Override<pos:position pos:line="49" pos:column="22"/></name></annotation>
            <specifier pos:line="50" pos:column="13">public<pos:position pos:line="50" pos:column="19"/></specifier> <type><name pos:line="50" pos:column="20">void<pos:position pos:line="50" pos:column="24"/></name></type> <name pos:line="50" pos:column="25">configure<pos:position pos:line="50" pos:column="34"/></name><parameter_list pos:line="50" pos:column="34">()<pos:position pos:line="50" pos:column="36"/></parameter_list> <throws pos:line="50" pos:column="37">throws <argument><expr><name pos:line="50" pos:column="44">Exception<pos:position pos:line="50" pos:column="53"/></name></expr></argument></throws> <block pos:line="50" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">from<pos:position pos:line="51" pos:column="21"/></name><argument_list pos:line="51" pos:column="21">(<argument><expr><literal type="string" pos:line="51" pos:column="22">"jetty:http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="51" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="72"/></argument_list></call>
                    <operator pos:line="52" pos:column="21">.<pos:position pos:line="52" pos:column="22"/></operator><call><name pos:line="52" pos:column="22">process<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><operator pos:line="52" pos:column="30">new<pos:position pos:line="52" pos:column="33"/></operator> <class><super><name pos:line="52" pos:column="34">Processor<pos:position pos:line="52" pos:column="43"/></name></super><argument_list pos:line="52" pos:column="43">()<pos:position pos:line="52" pos:column="45"/></argument_list> <block pos:line="52" pos:column="46">{
                        <function><specifier pos:line="53" pos:column="25">public<pos:position pos:line="53" pos:column="31"/></specifier> <type><name pos:line="53" pos:column="32">void<pos:position pos:line="53" pos:column="36"/></name></type> <name pos:line="53" pos:column="37">process<pos:position pos:line="53" pos:column="44"/></name><parameter_list pos:line="53" pos:column="44">(<parameter><decl><type><name pos:line="53" pos:column="45">Exchange<pos:position pos:line="53" pos:column="53"/></name></type> <name pos:line="53" pos:column="54">exchange<pos:position pos:line="53" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="53" pos:column="63"/></parameter_list> <throws pos:line="53" pos:column="64">throws <argument><expr><name pos:line="53" pos:column="71">Exception<pos:position pos:line="53" pos:column="80"/></name></expr></argument></throws> <block pos:line="53" pos:column="81">{
                            <decl_stmt><decl><type><name pos:line="54" pos:column="29">MyCoolBean<pos:position pos:line="54" pos:column="39"/></name></type> <name pos:line="54" pos:column="40">cool<pos:position pos:line="54" pos:column="44"/></name> <init pos:line="54" pos:column="45">= <expr><call><name><name pos:line="54" pos:column="47">exchange<pos:position pos:line="54" pos:column="55"/></name><operator pos:line="54" pos:column="55">.<pos:position pos:line="54" pos:column="56"/></operator><name pos:line="54" pos:column="56">getIn<pos:position pos:line="54" pos:column="61"/></name></name><argument_list pos:line="54" pos:column="61">()<pos:position pos:line="54" pos:column="63"/></argument_list></call><operator pos:line="54" pos:column="63">.<pos:position pos:line="54" pos:column="64"/></operator><call><name pos:line="54" pos:column="64">getBody<pos:position pos:line="54" pos:column="71"/></name><argument_list pos:line="54" pos:column="71">(<argument><expr><name><name pos:line="54" pos:column="72">MyCoolBean<pos:position pos:line="54" pos:column="82"/></name><operator pos:line="54" pos:column="82">.<pos:position pos:line="54" pos:column="83"/></operator><name pos:line="54" pos:column="83">class<pos:position pos:line="54" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="89"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="90"/></decl_stmt>
                            <expr_stmt><expr><call><name pos:line="55" pos:column="29">assertNotNull<pos:position pos:line="55" pos:column="42"/></name><argument_list pos:line="55" pos:column="42">(<argument><expr><name pos:line="55" pos:column="43">cool<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>

                            <expr_stmt><expr><call><name pos:line="57" pos:column="29">assertEquals<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><literal type="number" pos:line="57" pos:column="42">123<pos:position pos:line="57" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="57" pos:column="47">cool<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">.<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="52">getId<pos:position pos:line="57" pos:column="57"/></name></name><argument_list pos:line="57" pos:column="57">()<pos:position pos:line="57" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="58" pos:column="29">assertEquals<pos:position pos:line="58" pos:column="41"/></name><argument_list pos:line="58" pos:column="41">(<argument><expr><literal type="string" pos:line="58" pos:column="42">"Camel"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="58" pos:column="51">cool<pos:position pos:line="58" pos:column="55"/></name><operator pos:line="58" pos:column="55">.<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="56">getName<pos:position pos:line="58" pos:column="63"/></name></name><argument_list pos:line="58" pos:column="63">()<pos:position pos:line="58" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="67"/></expr_stmt>

                            <comment type="line" pos:line="60" pos:column="29">// we send back plain test</comment>
                            <expr_stmt><expr><call><name><name pos:line="61" pos:column="29">exchange<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">.<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="38">getOut<pos:position pos:line="61" pos:column="44"/></name></name><argument_list pos:line="61" pos:column="44">()<pos:position pos:line="61" pos:column="46"/></argument_list></call><operator pos:line="61" pos:column="46">.<pos:position pos:line="61" pos:column="47"/></operator><call><name pos:line="61" pos:column="47">setHeader<pos:position pos:line="61" pos:column="56"/></name><argument_list pos:line="61" pos:column="56">(<argument><expr><name><name pos:line="61" pos:column="57">Exchange<pos:position pos:line="61" pos:column="65"/></name><operator pos:line="61" pos:column="65">.<pos:position pos:line="61" pos:column="66"/></operator><name pos:line="61" pos:column="66">CONTENT_TYPE<pos:position pos:line="61" pos:column="78"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="80">"text/plain"<pos:position pos:line="61" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="94"/></expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="62" pos:column="29">exchange<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">.<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="38">getOut<pos:position pos:line="62" pos:column="44"/></name></name><argument_list pos:line="62" pos:column="44">()<pos:position pos:line="62" pos:column="46"/></argument_list></call><operator pos:line="62" pos:column="46">.<pos:position pos:line="62" pos:column="47"/></operator><call><name pos:line="62" pos:column="47">setBody<pos:position pos:line="62" pos:column="54"/></name><argument_list pos:line="62" pos:column="54">(<argument><expr><literal type="string" pos:line="62" pos:column="55">"OK"<pos:position pos:line="62" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="61"/></expr_stmt>
                        }<pos:position pos:line="63" pos:column="26"/></block></function>
                    }<pos:position pos:line="64" pos:column="22"/></block></class></expr></argument>)<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="65" pos:column="14"/></block></function>
        }<pos:position pos:line="66" pos:column="10"/></block></class></expr></argument>)<pos:position pos:line="66" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="12"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="67" pos:column="9">context<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">.<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="17">start<pos:position pos:line="67" pos:column="22"/></name></name><argument_list pos:line="67" pos:column="22">()<pos:position pos:line="67" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="69" pos:column="9">MyCoolBean<pos:position pos:line="69" pos:column="19"/></name></type> <name pos:line="69" pos:column="20">cool<pos:position pos:line="69" pos:column="24"/></name> <init pos:line="69" pos:column="25">= <expr><operator pos:line="69" pos:column="27">new<pos:position pos:line="69" pos:column="30"/></operator> <call><name pos:line="69" pos:column="31">MyCoolBean<pos:position pos:line="69" pos:column="41"/></name><argument_list pos:line="69" pos:column="41">(<argument><expr><literal type="number" pos:line="69" pos:column="42">123<pos:position pos:line="69" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="47">"Camel"<pos:position pos:line="69" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="69" pos:column="56"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="71" pos:column="9">String<pos:position pos:line="71" pos:column="15"/></name></type> <name pos:line="71" pos:column="16">reply<pos:position pos:line="71" pos:column="21"/></name> <init pos:line="71" pos:column="22">= <expr><call><name><name pos:line="71" pos:column="24">template<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">.<pos:position pos:line="71" pos:column="33"/></operator><name pos:line="71" pos:column="33">requestBodyAndHeader<pos:position pos:line="71" pos:column="53"/></name></name><argument_list pos:line="71" pos:column="53">(<argument><expr><literal type="string" pos:line="71" pos:column="54">"http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="71" pos:column="97"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="99">cool<pos:position pos:line="71" pos:column="103"/></name></expr></argument>,
                <argument><expr><name><name pos:line="72" pos:column="17">Exchange<pos:position pos:line="72" pos:column="25"/></name><operator pos:line="72" pos:column="25">.<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">CONTENT_TYPE<pos:position pos:line="72" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="40">HttpConstants<pos:position pos:line="72" pos:column="53"/></name><operator pos:line="72" pos:column="53">.<pos:position pos:line="72" pos:column="54"/></operator><name pos:line="72" pos:column="54">CONTENT_TYPE_JAVA_SERIALIZED_OBJECT<pos:position pos:line="72" pos:column="89"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="91">String<pos:position pos:line="72" pos:column="97"/></name><operator pos:line="72" pos:column="97">.<pos:position pos:line="72" pos:column="98"/></operator><name pos:line="72" pos:column="98">class<pos:position pos:line="72" pos:column="103"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="104"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="105"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="74" pos:column="9">assertEquals<pos:position pos:line="74" pos:column="21"/></name><argument_list pos:line="74" pos:column="21">(<argument><expr><literal type="string" pos:line="74" pos:column="22">"OK"<pos:position pos:line="74" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="28">reply<pos:position pos:line="74" pos:column="33"/></name></expr></argument>)<pos:position pos:line="74" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="75" pos:column="6"/></block></function>

    <function><annotation pos:line="77" pos:column="5">@<name pos:line="77" pos:column="6">Test<pos:position pos:line="77" pos:column="10"/></name></annotation>
    <specifier pos:line="78" pos:column="5">public<pos:position pos:line="78" pos:column="11"/></specifier> <type><name pos:line="78" pos:column="12">void<pos:position pos:line="78" pos:column="16"/></name></type> <name pos:line="78" pos:column="17">testHttpSendJavaBodyAndReceiveJavaBody<pos:position pos:line="78" pos:column="55"/></name><parameter_list pos:line="78" pos:column="55">()<pos:position pos:line="78" pos:column="57"/></parameter_list> <throws pos:line="78" pos:column="58">throws <argument><expr><name pos:line="78" pos:column="65">Exception<pos:position pos:line="78" pos:column="74"/></name></expr></argument></throws> <block pos:line="78" pos:column="75">{
        <decl_stmt><decl><type><name pos:line="79" pos:column="9">HttpCommonComponent<pos:position pos:line="79" pos:column="28"/></name></type> <name pos:line="79" pos:column="29">jetty<pos:position pos:line="79" pos:column="34"/></name> <init pos:line="79" pos:column="35">= <expr><call><name><name pos:line="79" pos:column="37">context<pos:position pos:line="79" pos:column="44"/></name><operator pos:line="79" pos:column="44">.<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="45">getComponent<pos:position pos:line="79" pos:column="57"/></name></name><argument_list pos:line="79" pos:column="57">(<argument><expr><literal type="string" pos:line="79" pos:column="58">"jetty"<pos:position pos:line="79" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="67">HttpCommonComponent<pos:position pos:line="79" pos:column="86"/></name><operator pos:line="79" pos:column="86">.<pos:position pos:line="79" pos:column="87"/></operator><name pos:line="79" pos:column="87">class<pos:position pos:line="79" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="79" pos:column="94"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="80" pos:column="9">jetty<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">.<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">setAllowJavaSerializedObject<pos:position pos:line="80" pos:column="43"/></name></name><argument_list pos:line="80" pos:column="43">(<argument><expr><literal type="boolean" pos:line="80" pos:column="44">true<pos:position pos:line="80" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="50"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="82" pos:column="9">HttpComponent<pos:position pos:line="82" pos:column="22"/></name></type> <name pos:line="82" pos:column="23">http<pos:position pos:line="82" pos:column="27"/></name> <init pos:line="82" pos:column="28">= <expr><call><name><name pos:line="82" pos:column="30">context<pos:position pos:line="82" pos:column="37"/></name><operator pos:line="82" pos:column="37">.<pos:position pos:line="82" pos:column="38"/></operator><name pos:line="82" pos:column="38">getComponent<pos:position pos:line="82" pos:column="50"/></name></name><argument_list pos:line="82" pos:column="50">(<argument><expr><literal type="string" pos:line="82" pos:column="51">"http"<pos:position pos:line="82" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="59">HttpComponent<pos:position pos:line="82" pos:column="72"/></name><operator pos:line="82" pos:column="72">.<pos:position pos:line="82" pos:column="73"/></operator><name pos:line="82" pos:column="73">class<pos:position pos:line="82" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="80"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="83" pos:column="9">http<pos:position pos:line="83" pos:column="13"/></name><operator pos:line="83" pos:column="13">.<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="14">setAllowJavaSerializedObject<pos:position pos:line="83" pos:column="42"/></name></name><argument_list pos:line="83" pos:column="42">(<argument><expr><literal type="boolean" pos:line="83" pos:column="43">true<pos:position pos:line="83" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="85" pos:column="9">context<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">.<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="17">addRoutes<pos:position pos:line="85" pos:column="26"/></name></name><argument_list pos:line="85" pos:column="26">(<argument><expr><operator pos:line="85" pos:column="27">new<pos:position pos:line="85" pos:column="30"/></operator> <class><super><name pos:line="85" pos:column="31">RouteBuilder<pos:position pos:line="85" pos:column="43"/></name></super><argument_list pos:line="85" pos:column="43">()<pos:position pos:line="85" pos:column="45"/></argument_list> <block pos:line="85" pos:column="46">{
            <function><annotation pos:line="86" pos:column="13">@<name pos:line="86" pos:column="14">Override<pos:position pos:line="86" pos:column="22"/></name></annotation>
            <specifier pos:line="87" pos:column="13">public<pos:position pos:line="87" pos:column="19"/></specifier> <type><name pos:line="87" pos:column="20">void<pos:position pos:line="87" pos:column="24"/></name></type> <name pos:line="87" pos:column="25">configure<pos:position pos:line="87" pos:column="34"/></name><parameter_list pos:line="87" pos:column="34">()<pos:position pos:line="87" pos:column="36"/></parameter_list> <throws pos:line="87" pos:column="37">throws <argument><expr><name pos:line="87" pos:column="44">Exception<pos:position pos:line="87" pos:column="53"/></name></expr></argument></throws> <block pos:line="87" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">from<pos:position pos:line="88" pos:column="21"/></name><argument_list pos:line="88" pos:column="21">(<argument><expr><literal type="string" pos:line="88" pos:column="22">"jetty:http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="88" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="72"/></argument_list></call>
                    <operator pos:line="89" pos:column="21">.<pos:position pos:line="89" pos:column="22"/></operator><call><name pos:line="89" pos:column="22">process<pos:position pos:line="89" pos:column="29"/></name><argument_list pos:line="89" pos:column="29">(<argument><expr><operator pos:line="89" pos:column="30">new<pos:position pos:line="89" pos:column="33"/></operator> <class><super><name pos:line="89" pos:column="34">Processor<pos:position pos:line="89" pos:column="43"/></name></super><argument_list pos:line="89" pos:column="43">()<pos:position pos:line="89" pos:column="45"/></argument_list> <block pos:line="89" pos:column="46">{
                        <function><specifier pos:line="90" pos:column="25">public<pos:position pos:line="90" pos:column="31"/></specifier> <type><name pos:line="90" pos:column="32">void<pos:position pos:line="90" pos:column="36"/></name></type> <name pos:line="90" pos:column="37">process<pos:position pos:line="90" pos:column="44"/></name><parameter_list pos:line="90" pos:column="44">(<parameter><decl><type><name pos:line="90" pos:column="45">Exchange<pos:position pos:line="90" pos:column="53"/></name></type> <name pos:line="90" pos:column="54">exchange<pos:position pos:line="90" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="90" pos:column="63"/></parameter_list> <throws pos:line="90" pos:column="64">throws <argument><expr><name pos:line="90" pos:column="71">Exception<pos:position pos:line="90" pos:column="80"/></name></expr></argument></throws> <block pos:line="90" pos:column="81">{
                            <decl_stmt><decl><type><name pos:line="91" pos:column="29">MyCoolBean<pos:position pos:line="91" pos:column="39"/></name></type> <name pos:line="91" pos:column="40">cool<pos:position pos:line="91" pos:column="44"/></name> <init pos:line="91" pos:column="45">= <expr><call><name><name pos:line="91" pos:column="47">exchange<pos:position pos:line="91" pos:column="55"/></name><operator pos:line="91" pos:column="55">.<pos:position pos:line="91" pos:column="56"/></operator><name pos:line="91" pos:column="56">getIn<pos:position pos:line="91" pos:column="61"/></name></name><argument_list pos:line="91" pos:column="61">()<pos:position pos:line="91" pos:column="63"/></argument_list></call><operator pos:line="91" pos:column="63">.<pos:position pos:line="91" pos:column="64"/></operator><call><name pos:line="91" pos:column="64">getBody<pos:position pos:line="91" pos:column="71"/></name><argument_list pos:line="91" pos:column="71">(<argument><expr><name><name pos:line="91" pos:column="72">MyCoolBean<pos:position pos:line="91" pos:column="82"/></name><operator pos:line="91" pos:column="82">.<pos:position pos:line="91" pos:column="83"/></operator><name pos:line="91" pos:column="83">class<pos:position pos:line="91" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="89"/></argument_list></call></expr></init></decl>;<pos:position pos:line="91" pos:column="90"/></decl_stmt>
                            <expr_stmt><expr><call><name pos:line="92" pos:column="29">assertNotNull<pos:position pos:line="92" pos:column="42"/></name><argument_list pos:line="92" pos:column="42">(<argument><expr><name pos:line="92" pos:column="43">cool<pos:position pos:line="92" pos:column="47"/></name></expr></argument>)<pos:position pos:line="92" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="49"/></expr_stmt>

                            <expr_stmt><expr><call><name pos:line="94" pos:column="29">assertEquals<pos:position pos:line="94" pos:column="41"/></name><argument_list pos:line="94" pos:column="41">(<argument><expr><literal type="number" pos:line="94" pos:column="42">123<pos:position pos:line="94" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="94" pos:column="47">cool<pos:position pos:line="94" pos:column="51"/></name><operator pos:line="94" pos:column="51">.<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="52">getId<pos:position pos:line="94" pos:column="57"/></name></name><argument_list pos:line="94" pos:column="57">()<pos:position pos:line="94" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="61"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="95" pos:column="29">assertEquals<pos:position pos:line="95" pos:column="41"/></name><argument_list pos:line="95" pos:column="41">(<argument><expr><literal type="string" pos:line="95" pos:column="42">"Camel"<pos:position pos:line="95" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="95" pos:column="51">cool<pos:position pos:line="95" pos:column="55"/></name><operator pos:line="95" pos:column="55">.<pos:position pos:line="95" pos:column="56"/></operator><name pos:line="95" pos:column="56">getName<pos:position pos:line="95" pos:column="63"/></name></name><argument_list pos:line="95" pos:column="63">()<pos:position pos:line="95" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="67"/></expr_stmt>

                            <decl_stmt><decl><type><name pos:line="97" pos:column="29">MyCoolBean<pos:position pos:line="97" pos:column="39"/></name></type> <name pos:line="97" pos:column="40">reply<pos:position pos:line="97" pos:column="45"/></name> <init pos:line="97" pos:column="46">= <expr><operator pos:line="97" pos:column="48">new<pos:position pos:line="97" pos:column="51"/></operator> <call><name pos:line="97" pos:column="52">MyCoolBean<pos:position pos:line="97" pos:column="62"/></name><argument_list pos:line="97" pos:column="62">(<argument><expr><literal type="number" pos:line="97" pos:column="63">456<pos:position pos:line="97" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="68">"Camel rocks"<pos:position pos:line="97" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="97" pos:column="83"/></decl_stmt>
                            <expr_stmt><expr><call><name><name pos:line="98" pos:column="29">exchange<pos:position pos:line="98" pos:column="37"/></name><operator pos:line="98" pos:column="37">.<pos:position pos:line="98" pos:column="38"/></operator><name pos:line="98" pos:column="38">getOut<pos:position pos:line="98" pos:column="44"/></name></name><argument_list pos:line="98" pos:column="44">()<pos:position pos:line="98" pos:column="46"/></argument_list></call><operator pos:line="98" pos:column="46">.<pos:position pos:line="98" pos:column="47"/></operator><call><name pos:line="98" pos:column="47">setBody<pos:position pos:line="98" pos:column="54"/></name><argument_list pos:line="98" pos:column="54">(<argument><expr><name pos:line="98" pos:column="55">reply<pos:position pos:line="98" pos:column="60"/></name></expr></argument>)<pos:position pos:line="98" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="62"/></expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="99" pos:column="29">exchange<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">.<pos:position pos:line="99" pos:column="38"/></operator><name pos:line="99" pos:column="38">getOut<pos:position pos:line="99" pos:column="44"/></name></name><argument_list pos:line="99" pos:column="44">()<pos:position pos:line="99" pos:column="46"/></argument_list></call><operator pos:line="99" pos:column="46">.<pos:position pos:line="99" pos:column="47"/></operator><call><name pos:line="99" pos:column="47">setHeader<pos:position pos:line="99" pos:column="56"/></name><argument_list pos:line="99" pos:column="56">(<argument><expr><name><name pos:line="99" pos:column="57">Exchange<pos:position pos:line="99" pos:column="65"/></name><operator pos:line="99" pos:column="65">.<pos:position pos:line="99" pos:column="66"/></operator><name pos:line="99" pos:column="66">CONTENT_TYPE<pos:position pos:line="99" pos:column="78"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="80">HttpConstants<pos:position pos:line="99" pos:column="93"/></name><operator pos:line="99" pos:column="93">.<pos:position pos:line="99" pos:column="94"/></operator><name pos:line="99" pos:column="94">CONTENT_TYPE_JAVA_SERIALIZED_OBJECT<pos:position pos:line="99" pos:column="129"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="131"/></expr_stmt>
                        }<pos:position pos:line="100" pos:column="26"/></block></function>
                    }<pos:position pos:line="101" pos:column="22"/></block></class></expr></argument>)<pos:position pos:line="101" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="102" pos:column="14"/></block></function>
        }<pos:position pos:line="103" pos:column="10"/></block></class></expr></argument>)<pos:position pos:line="103" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="12"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="104" pos:column="9">context<pos:position pos:line="104" pos:column="16"/></name><operator pos:line="104" pos:column="16">.<pos:position pos:line="104" pos:column="17"/></operator><name pos:line="104" pos:column="17">start<pos:position pos:line="104" pos:column="22"/></name></name><argument_list pos:line="104" pos:column="22">()<pos:position pos:line="104" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="25"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="106" pos:column="9">MyCoolBean<pos:position pos:line="106" pos:column="19"/></name></type> <name pos:line="106" pos:column="20">cool<pos:position pos:line="106" pos:column="24"/></name> <init pos:line="106" pos:column="25">= <expr><operator pos:line="106" pos:column="27">new<pos:position pos:line="106" pos:column="30"/></operator> <call><name pos:line="106" pos:column="31">MyCoolBean<pos:position pos:line="106" pos:column="41"/></name><argument_list pos:line="106" pos:column="41">(<argument><expr><literal type="number" pos:line="106" pos:column="42">123<pos:position pos:line="106" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="47">"Camel"<pos:position pos:line="106" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="106" pos:column="56"/></decl_stmt>

        <decl_stmt><decl><type><name pos:line="108" pos:column="9">MyCoolBean<pos:position pos:line="108" pos:column="19"/></name></type> <name pos:line="108" pos:column="20">reply<pos:position pos:line="108" pos:column="25"/></name> <init pos:line="108" pos:column="26">= <expr><call><name><name pos:line="108" pos:column="28">template<pos:position pos:line="108" pos:column="36"/></name><operator pos:line="108" pos:column="36">.<pos:position pos:line="108" pos:column="37"/></operator><name pos:line="108" pos:column="37">requestBodyAndHeader<pos:position pos:line="108" pos:column="57"/></name></name><argument_list pos:line="108" pos:column="57">(<argument><expr><literal type="string" pos:line="108" pos:column="58">"http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="108" pos:column="101"/></literal></expr></argument>, <argument><expr><name pos:line="108" pos:column="103">cool<pos:position pos:line="108" pos:column="107"/></name></expr></argument>,
                <argument><expr><name><name pos:line="109" pos:column="17">Exchange<pos:position pos:line="109" pos:column="25"/></name><operator pos:line="109" pos:column="25">.<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="26">CONTENT_TYPE<pos:position pos:line="109" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="40">HttpConstants<pos:position pos:line="109" pos:column="53"/></name><operator pos:line="109" pos:column="53">.<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="54">CONTENT_TYPE_JAVA_SERIALIZED_OBJECT<pos:position pos:line="109" pos:column="89"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="91">MyCoolBean<pos:position pos:line="109" pos:column="101"/></name><operator pos:line="109" pos:column="101">.<pos:position pos:line="109" pos:column="102"/></operator><name pos:line="109" pos:column="102">class<pos:position pos:line="109" pos:column="107"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="108"/></argument_list></call></expr></init></decl>;<pos:position pos:line="109" pos:column="109"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="111" pos:column="9">assertEquals<pos:position pos:line="111" pos:column="21"/></name><argument_list pos:line="111" pos:column="21">(<argument><expr><literal type="number" pos:line="111" pos:column="22">456<pos:position pos:line="111" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="111" pos:column="27">reply<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">.<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="33">getId<pos:position pos:line="111" pos:column="38"/></name></name><argument_list pos:line="111" pos:column="38">()<pos:position pos:line="111" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="112" pos:column="9">assertEquals<pos:position pos:line="112" pos:column="21"/></name><argument_list pos:line="112" pos:column="21">(<argument><expr><literal type="string" pos:line="112" pos:column="22">"Camel rocks"<pos:position pos:line="112" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="37">reply<pos:position pos:line="112" pos:column="42"/></name><operator pos:line="112" pos:column="42">.<pos:position pos:line="112" pos:column="43"/></operator><name pos:line="112" pos:column="43">getName<pos:position pos:line="112" pos:column="50"/></name></name><argument_list pos:line="112" pos:column="50">()<pos:position pos:line="112" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block></function>

    <function><annotation pos:line="115" pos:column="5">@<name pos:line="115" pos:column="6">Test<pos:position pos:line="115" pos:column="10"/></name></annotation>
    <specifier pos:line="116" pos:column="5">public<pos:position pos:line="116" pos:column="11"/></specifier> <type><name pos:line="116" pos:column="12">void<pos:position pos:line="116" pos:column="16"/></name></type> <name pos:line="116" pos:column="17">testHttpSendStringAndReceiveJavaBody<pos:position pos:line="116" pos:column="53"/></name><parameter_list pos:line="116" pos:column="53">()<pos:position pos:line="116" pos:column="55"/></parameter_list> <throws pos:line="116" pos:column="56">throws <argument><expr><name pos:line="116" pos:column="63">Exception<pos:position pos:line="116" pos:column="72"/></name></expr></argument></throws> <block pos:line="116" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="117" pos:column="9">HttpCommonComponent<pos:position pos:line="117" pos:column="28"/></name></type> <name pos:line="117" pos:column="29">jetty<pos:position pos:line="117" pos:column="34"/></name> <init pos:line="117" pos:column="35">= <expr><call><name><name pos:line="117" pos:column="37">context<pos:position pos:line="117" pos:column="44"/></name><operator pos:line="117" pos:column="44">.<pos:position pos:line="117" pos:column="45"/></operator><name pos:line="117" pos:column="45">getComponent<pos:position pos:line="117" pos:column="57"/></name></name><argument_list pos:line="117" pos:column="57">(<argument><expr><literal type="string" pos:line="117" pos:column="58">"jetty"<pos:position pos:line="117" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="67">HttpCommonComponent<pos:position pos:line="117" pos:column="86"/></name><operator pos:line="117" pos:column="86">.<pos:position pos:line="117" pos:column="87"/></operator><name pos:line="117" pos:column="87">class<pos:position pos:line="117" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="117" pos:column="94"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="118" pos:column="9">jetty<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">.<pos:position pos:line="118" pos:column="15"/></operator><name pos:line="118" pos:column="15">setAllowJavaSerializedObject<pos:position pos:line="118" pos:column="43"/></name></name><argument_list pos:line="118" pos:column="43">(<argument><expr><literal type="boolean" pos:line="118" pos:column="44">true<pos:position pos:line="118" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="50"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="120" pos:column="9">HttpComponent<pos:position pos:line="120" pos:column="22"/></name></type> <name pos:line="120" pos:column="23">http<pos:position pos:line="120" pos:column="27"/></name> <init pos:line="120" pos:column="28">= <expr><call><name><name pos:line="120" pos:column="30">context<pos:position pos:line="120" pos:column="37"/></name><operator pos:line="120" pos:column="37">.<pos:position pos:line="120" pos:column="38"/></operator><name pos:line="120" pos:column="38">getComponent<pos:position pos:line="120" pos:column="50"/></name></name><argument_list pos:line="120" pos:column="50">(<argument><expr><literal type="string" pos:line="120" pos:column="51">"http"<pos:position pos:line="120" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="59">HttpComponent<pos:position pos:line="120" pos:column="72"/></name><operator pos:line="120" pos:column="72">.<pos:position pos:line="120" pos:column="73"/></operator><name pos:line="120" pos:column="73">class<pos:position pos:line="120" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="120" pos:column="80"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="121" pos:column="9">http<pos:position pos:line="121" pos:column="13"/></name><operator pos:line="121" pos:column="13">.<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="14">setAllowJavaSerializedObject<pos:position pos:line="121" pos:column="42"/></name></name><argument_list pos:line="121" pos:column="42">(<argument><expr><literal type="boolean" pos:line="121" pos:column="43">true<pos:position pos:line="121" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="123" pos:column="9">context<pos:position pos:line="123" pos:column="16"/></name><operator pos:line="123" pos:column="16">.<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="17">addRoutes<pos:position pos:line="123" pos:column="26"/></name></name><argument_list pos:line="123" pos:column="26">(<argument><expr><operator pos:line="123" pos:column="27">new<pos:position pos:line="123" pos:column="30"/></operator> <class><super><name pos:line="123" pos:column="31">RouteBuilder<pos:position pos:line="123" pos:column="43"/></name></super><argument_list pos:line="123" pos:column="43">()<pos:position pos:line="123" pos:column="45"/></argument_list> <block pos:line="123" pos:column="46">{
            <function><annotation pos:line="124" pos:column="13">@<name pos:line="124" pos:column="14">Override<pos:position pos:line="124" pos:column="22"/></name></annotation>
            <specifier pos:line="125" pos:column="13">public<pos:position pos:line="125" pos:column="19"/></specifier> <type><name pos:line="125" pos:column="20">void<pos:position pos:line="125" pos:column="24"/></name></type> <name pos:line="125" pos:column="25">configure<pos:position pos:line="125" pos:column="34"/></name><parameter_list pos:line="125" pos:column="34">()<pos:position pos:line="125" pos:column="36"/></parameter_list> <throws pos:line="125" pos:column="37">throws <argument><expr><name pos:line="125" pos:column="44">Exception<pos:position pos:line="125" pos:column="53"/></name></expr></argument></throws> <block pos:line="125" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="126" pos:column="17">from<pos:position pos:line="126" pos:column="21"/></name><argument_list pos:line="126" pos:column="21">(<argument><expr><literal type="string" pos:line="126" pos:column="22">"jetty:http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="126" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="72"/></argument_list></call>
                    <operator pos:line="127" pos:column="21">.<pos:position pos:line="127" pos:column="22"/></operator><call><name pos:line="127" pos:column="22">process<pos:position pos:line="127" pos:column="29"/></name><argument_list pos:line="127" pos:column="29">(<argument><expr><operator pos:line="127" pos:column="30">new<pos:position pos:line="127" pos:column="33"/></operator> <class><super><name pos:line="127" pos:column="34">Processor<pos:position pos:line="127" pos:column="43"/></name></super><argument_list pos:line="127" pos:column="43">()<pos:position pos:line="127" pos:column="45"/></argument_list> <block pos:line="127" pos:column="46">{
                        <function><specifier pos:line="128" pos:column="25">public<pos:position pos:line="128" pos:column="31"/></specifier> <type><name pos:line="128" pos:column="32">void<pos:position pos:line="128" pos:column="36"/></name></type> <name pos:line="128" pos:column="37">process<pos:position pos:line="128" pos:column="44"/></name><parameter_list pos:line="128" pos:column="44">(<parameter><decl><type><name pos:line="128" pos:column="45">Exchange<pos:position pos:line="128" pos:column="53"/></name></type> <name pos:line="128" pos:column="54">exchange<pos:position pos:line="128" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="128" pos:column="63"/></parameter_list> <throws pos:line="128" pos:column="64">throws <argument><expr><name pos:line="128" pos:column="71">Exception<pos:position pos:line="128" pos:column="80"/></name></expr></argument></throws> <block pos:line="128" pos:column="81">{
                            <decl_stmt><decl><type><name pos:line="129" pos:column="29">String<pos:position pos:line="129" pos:column="35"/></name></type> <name pos:line="129" pos:column="36">body<pos:position pos:line="129" pos:column="40"/></name> <init pos:line="129" pos:column="41">= <expr><call><name><name pos:line="129" pos:column="43">exchange<pos:position pos:line="129" pos:column="51"/></name><operator pos:line="129" pos:column="51">.<pos:position pos:line="129" pos:column="52"/></operator><name pos:line="129" pos:column="52">getIn<pos:position pos:line="129" pos:column="57"/></name></name><argument_list pos:line="129" pos:column="57">()<pos:position pos:line="129" pos:column="59"/></argument_list></call><operator pos:line="129" pos:column="59">.<pos:position pos:line="129" pos:column="60"/></operator><call><name pos:line="129" pos:column="60">getBody<pos:position pos:line="129" pos:column="67"/></name><argument_list pos:line="129" pos:column="67">(<argument><expr><name><name pos:line="129" pos:column="68">String<pos:position pos:line="129" pos:column="74"/></name><operator pos:line="129" pos:column="74">.<pos:position pos:line="129" pos:column="75"/></operator><name pos:line="129" pos:column="75">class<pos:position pos:line="129" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="129" pos:column="82"/></decl_stmt>
                            <expr_stmt><expr><call><name pos:line="130" pos:column="29">assertNotNull<pos:position pos:line="130" pos:column="42"/></name><argument_list pos:line="130" pos:column="42">(<argument><expr><name pos:line="130" pos:column="43">body<pos:position pos:line="130" pos:column="47"/></name></expr></argument>)<pos:position pos:line="130" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="49"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="131" pos:column="29">assertEquals<pos:position pos:line="131" pos:column="41"/></name><argument_list pos:line="131" pos:column="41">(<argument><expr><literal type="string" pos:line="131" pos:column="42">"Hello World"<pos:position pos:line="131" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="57">body<pos:position pos:line="131" pos:column="61"/></name></expr></argument>)<pos:position pos:line="131" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="63"/></expr_stmt>

                            <decl_stmt><decl><type><name pos:line="133" pos:column="29">MyCoolBean<pos:position pos:line="133" pos:column="39"/></name></type> <name pos:line="133" pos:column="40">reply<pos:position pos:line="133" pos:column="45"/></name> <init pos:line="133" pos:column="46">= <expr><operator pos:line="133" pos:column="48">new<pos:position pos:line="133" pos:column="51"/></operator> <call><name pos:line="133" pos:column="52">MyCoolBean<pos:position pos:line="133" pos:column="62"/></name><argument_list pos:line="133" pos:column="62">(<argument><expr><literal type="number" pos:line="133" pos:column="63">456<pos:position pos:line="133" pos:column="66"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="68">"Camel rocks"<pos:position pos:line="133" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="133" pos:column="83"/></decl_stmt>
                            <expr_stmt><expr><call><name><name pos:line="134" pos:column="29">exchange<pos:position pos:line="134" pos:column="37"/></name><operator pos:line="134" pos:column="37">.<pos:position pos:line="134" pos:column="38"/></operator><name pos:line="134" pos:column="38">getOut<pos:position pos:line="134" pos:column="44"/></name></name><argument_list pos:line="134" pos:column="44">()<pos:position pos:line="134" pos:column="46"/></argument_list></call><operator pos:line="134" pos:column="46">.<pos:position pos:line="134" pos:column="47"/></operator><call><name pos:line="134" pos:column="47">setBody<pos:position pos:line="134" pos:column="54"/></name><argument_list pos:line="134" pos:column="54">(<argument><expr><name pos:line="134" pos:column="55">reply<pos:position pos:line="134" pos:column="60"/></name></expr></argument>)<pos:position pos:line="134" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="62"/></expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="135" pos:column="29">exchange<pos:position pos:line="135" pos:column="37"/></name><operator pos:line="135" pos:column="37">.<pos:position pos:line="135" pos:column="38"/></operator><name pos:line="135" pos:column="38">getOut<pos:position pos:line="135" pos:column="44"/></name></name><argument_list pos:line="135" pos:column="44">()<pos:position pos:line="135" pos:column="46"/></argument_list></call><operator pos:line="135" pos:column="46">.<pos:position pos:line="135" pos:column="47"/></operator><call><name pos:line="135" pos:column="47">setHeader<pos:position pos:line="135" pos:column="56"/></name><argument_list pos:line="135" pos:column="56">(<argument><expr><name><name pos:line="135" pos:column="57">Exchange<pos:position pos:line="135" pos:column="65"/></name><operator pos:line="135" pos:column="65">.<pos:position pos:line="135" pos:column="66"/></operator><name pos:line="135" pos:column="66">CONTENT_TYPE<pos:position pos:line="135" pos:column="78"/></name></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="80">HttpConstants<pos:position pos:line="135" pos:column="93"/></name><operator pos:line="135" pos:column="93">.<pos:position pos:line="135" pos:column="94"/></operator><name pos:line="135" pos:column="94">CONTENT_TYPE_JAVA_SERIALIZED_OBJECT<pos:position pos:line="135" pos:column="129"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="131"/></expr_stmt>
                        }<pos:position pos:line="136" pos:column="26"/></block></function>
                    }<pos:position pos:line="137" pos:column="22"/></block></class></expr></argument>)<pos:position pos:line="137" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="138" pos:column="14"/></block></function>
        }<pos:position pos:line="139" pos:column="10"/></block></class></expr></argument>)<pos:position pos:line="139" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="12"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="140" pos:column="9">context<pos:position pos:line="140" pos:column="16"/></name><operator pos:line="140" pos:column="16">.<pos:position pos:line="140" pos:column="17"/></operator><name pos:line="140" pos:column="17">start<pos:position pos:line="140" pos:column="22"/></name></name><argument_list pos:line="140" pos:column="22">()<pos:position pos:line="140" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="25"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="142" pos:column="9">MyCoolBean<pos:position pos:line="142" pos:column="19"/></name></type> <name pos:line="142" pos:column="20">reply<pos:position pos:line="142" pos:column="25"/></name> <init pos:line="142" pos:column="26">= <expr><call><name><name pos:line="142" pos:column="28">template<pos:position pos:line="142" pos:column="36"/></name><operator pos:line="142" pos:column="36">.<pos:position pos:line="142" pos:column="37"/></operator><name pos:line="142" pos:column="37">requestBody<pos:position pos:line="142" pos:column="48"/></name></name><argument_list pos:line="142" pos:column="48">(<argument><expr><literal type="string" pos:line="142" pos:column="49">"http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="142" pos:column="92"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="94">"Hello World"<pos:position pos:line="142" pos:column="107"/></literal></expr></argument>, <argument><expr><name><name pos:line="142" pos:column="109">MyCoolBean<pos:position pos:line="142" pos:column="119"/></name><operator pos:line="142" pos:column="119">.<pos:position pos:line="142" pos:column="120"/></operator><name pos:line="142" pos:column="120">class<pos:position pos:line="142" pos:column="125"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="126"/></argument_list></call></expr></init></decl>;<pos:position pos:line="142" pos:column="127"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="144" pos:column="9">assertEquals<pos:position pos:line="144" pos:column="21"/></name><argument_list pos:line="144" pos:column="21">(<argument><expr><literal type="number" pos:line="144" pos:column="22">456<pos:position pos:line="144" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="144" pos:column="27">reply<pos:position pos:line="144" pos:column="32"/></name><operator pos:line="144" pos:column="32">.<pos:position pos:line="144" pos:column="33"/></operator><name pos:line="144" pos:column="33">getId<pos:position pos:line="144" pos:column="38"/></name></name><argument_list pos:line="144" pos:column="38">()<pos:position pos:line="144" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="144" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="145" pos:column="9">assertEquals<pos:position pos:line="145" pos:column="21"/></name><argument_list pos:line="145" pos:column="21">(<argument><expr><literal type="string" pos:line="145" pos:column="22">"Camel rocks"<pos:position pos:line="145" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="145" pos:column="37">reply<pos:position pos:line="145" pos:column="42"/></name><operator pos:line="145" pos:column="42">.<pos:position pos:line="145" pos:column="43"/></operator><name pos:line="145" pos:column="43">getName<pos:position pos:line="145" pos:column="50"/></name></name><argument_list pos:line="145" pos:column="50">()<pos:position pos:line="145" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="145" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="146" pos:column="6"/></block></function>

    <function><annotation pos:line="148" pos:column="5">@<name pos:line="148" pos:column="6">Test<pos:position pos:line="148" pos:column="10"/></name></annotation>
    <specifier pos:line="149" pos:column="5">public<pos:position pos:line="149" pos:column="11"/></specifier> <type><name pos:line="149" pos:column="12">void<pos:position pos:line="149" pos:column="16"/></name></type> <name pos:line="149" pos:column="17">testNotAllowedReceive<pos:position pos:line="149" pos:column="38"/></name><parameter_list pos:line="149" pos:column="38">()<pos:position pos:line="149" pos:column="40"/></parameter_list> <throws pos:line="149" pos:column="41">throws <argument><expr><name pos:line="149" pos:column="48">Exception<pos:position pos:line="149" pos:column="57"/></name></expr></argument></throws> <block pos:line="149" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="150" pos:column="9">HttpCommonComponent<pos:position pos:line="150" pos:column="28"/></name></type> <name pos:line="150" pos:column="29">jetty<pos:position pos:line="150" pos:column="34"/></name> <init pos:line="150" pos:column="35">= <expr><call><name><name pos:line="150" pos:column="37">context<pos:position pos:line="150" pos:column="44"/></name><operator pos:line="150" pos:column="44">.<pos:position pos:line="150" pos:column="45"/></operator><name pos:line="150" pos:column="45">getComponent<pos:position pos:line="150" pos:column="57"/></name></name><argument_list pos:line="150" pos:column="57">(<argument><expr><literal type="string" pos:line="150" pos:column="58">"jetty"<pos:position pos:line="150" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="67">HttpCommonComponent<pos:position pos:line="150" pos:column="86"/></name><operator pos:line="150" pos:column="86">.<pos:position pos:line="150" pos:column="87"/></operator><name pos:line="150" pos:column="87">class<pos:position pos:line="150" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="150" pos:column="94"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="151" pos:column="9">jetty<pos:position pos:line="151" pos:column="14"/></name><operator pos:line="151" pos:column="14">.<pos:position pos:line="151" pos:column="15"/></operator><name pos:line="151" pos:column="15">setAllowJavaSerializedObject<pos:position pos:line="151" pos:column="43"/></name></name><argument_list pos:line="151" pos:column="43">(<argument><expr><literal type="boolean" pos:line="151" pos:column="44">false<pos:position pos:line="151" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="51"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="153" pos:column="9">HttpComponent<pos:position pos:line="153" pos:column="22"/></name></type> <name pos:line="153" pos:column="23">http<pos:position pos:line="153" pos:column="27"/></name> <init pos:line="153" pos:column="28">= <expr><call><name><name pos:line="153" pos:column="30">context<pos:position pos:line="153" pos:column="37"/></name><operator pos:line="153" pos:column="37">.<pos:position pos:line="153" pos:column="38"/></operator><name pos:line="153" pos:column="38">getComponent<pos:position pos:line="153" pos:column="50"/></name></name><argument_list pos:line="153" pos:column="50">(<argument><expr><literal type="string" pos:line="153" pos:column="51">"http"<pos:position pos:line="153" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="59">HttpComponent<pos:position pos:line="153" pos:column="72"/></name><operator pos:line="153" pos:column="72">.<pos:position pos:line="153" pos:column="73"/></operator><name pos:line="153" pos:column="73">class<pos:position pos:line="153" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="153" pos:column="80"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="154" pos:column="9">http<pos:position pos:line="154" pos:column="13"/></name><operator pos:line="154" pos:column="13">.<pos:position pos:line="154" pos:column="14"/></operator><name pos:line="154" pos:column="14">setAllowJavaSerializedObject<pos:position pos:line="154" pos:column="42"/></name></name><argument_list pos:line="154" pos:column="42">(<argument><expr><literal type="boolean" pos:line="154" pos:column="43">true<pos:position pos:line="154" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="156" pos:column="9">context<pos:position pos:line="156" pos:column="16"/></name><operator pos:line="156" pos:column="16">.<pos:position pos:line="156" pos:column="17"/></operator><name pos:line="156" pos:column="17">addRoutes<pos:position pos:line="156" pos:column="26"/></name></name><argument_list pos:line="156" pos:column="26">(<argument><expr><operator pos:line="156" pos:column="27">new<pos:position pos:line="156" pos:column="30"/></operator> <class><super><name pos:line="156" pos:column="31">RouteBuilder<pos:position pos:line="156" pos:column="43"/></name></super><argument_list pos:line="156" pos:column="43">()<pos:position pos:line="156" pos:column="45"/></argument_list> <block pos:line="156" pos:column="46">{
            <function><annotation pos:line="157" pos:column="13">@<name pos:line="157" pos:column="14">Override<pos:position pos:line="157" pos:column="22"/></name></annotation>
            <specifier pos:line="158" pos:column="13">public<pos:position pos:line="158" pos:column="19"/></specifier> <type><name pos:line="158" pos:column="20">void<pos:position pos:line="158" pos:column="24"/></name></type> <name pos:line="158" pos:column="25">configure<pos:position pos:line="158" pos:column="34"/></name><parameter_list pos:line="158" pos:column="34">()<pos:position pos:line="158" pos:column="36"/></parameter_list> <throws pos:line="158" pos:column="37">throws <argument><expr><name pos:line="158" pos:column="44">Exception<pos:position pos:line="158" pos:column="53"/></name></expr></argument></throws> <block pos:line="158" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="159" pos:column="17">onException<pos:position pos:line="159" pos:column="28"/></name><argument_list pos:line="159" pos:column="28">(<argument><expr><name><name pos:line="159" pos:column="29">Exception<pos:position pos:line="159" pos:column="38"/></name><operator pos:line="159" pos:column="38">.<pos:position pos:line="159" pos:column="39"/></operator><name pos:line="159" pos:column="39">class<pos:position pos:line="159" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="45"/></argument_list></call><operator pos:line="159" pos:column="45">.<pos:position pos:line="159" pos:column="46"/></operator><call><name pos:line="159" pos:column="46">to<pos:position pos:line="159" pos:column="48"/></name><argument_list pos:line="159" pos:column="48">(<argument><expr><literal type="string" pos:line="159" pos:column="49">"mock:error"<pos:position pos:line="159" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="63"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="161" pos:column="17">from<pos:position pos:line="161" pos:column="21"/></name><argument_list pos:line="161" pos:column="21">(<argument><expr><literal type="string" pos:line="161" pos:column="22">"jetty:http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="161" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="72"/></argument_list></call>
                        <operator pos:line="162" pos:column="25">.<pos:position pos:line="162" pos:column="26"/></operator><call><name pos:line="162" pos:column="26">process<pos:position pos:line="162" pos:column="33"/></name><argument_list pos:line="162" pos:column="33">(<argument><expr><operator pos:line="162" pos:column="34">new<pos:position pos:line="162" pos:column="37"/></operator> <class><super><name pos:line="162" pos:column="38">Processor<pos:position pos:line="162" pos:column="47"/></name></super><argument_list pos:line="162" pos:column="47">()<pos:position pos:line="162" pos:column="49"/></argument_list> <block pos:line="162" pos:column="50">{
                            <function><specifier pos:line="163" pos:column="29">public<pos:position pos:line="163" pos:column="35"/></specifier> <type><name pos:line="163" pos:column="36">void<pos:position pos:line="163" pos:column="40"/></name></type> <name pos:line="163" pos:column="41">process<pos:position pos:line="163" pos:column="48"/></name><parameter_list pos:line="163" pos:column="48">(<parameter><decl><type><name pos:line="163" pos:column="49">Exchange<pos:position pos:line="163" pos:column="57"/></name></type> <name pos:line="163" pos:column="58">exchange<pos:position pos:line="163" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="163" pos:column="67"/></parameter_list> <throws pos:line="163" pos:column="68">throws <argument><expr><name pos:line="163" pos:column="75">Exception<pos:position pos:line="163" pos:column="84"/></name></expr></argument></throws> <block pos:line="163" pos:column="85">{
                                <decl_stmt><decl><type><name pos:line="164" pos:column="33">String<pos:position pos:line="164" pos:column="39"/></name></type> <name pos:line="164" pos:column="40">body<pos:position pos:line="164" pos:column="44"/></name> <init pos:line="164" pos:column="45">= <expr><call><name><name pos:line="164" pos:column="47">exchange<pos:position pos:line="164" pos:column="55"/></name><operator pos:line="164" pos:column="55">.<pos:position pos:line="164" pos:column="56"/></operator><name pos:line="164" pos:column="56">getIn<pos:position pos:line="164" pos:column="61"/></name></name><argument_list pos:line="164" pos:column="61">()<pos:position pos:line="164" pos:column="63"/></argument_list></call><operator pos:line="164" pos:column="63">.<pos:position pos:line="164" pos:column="64"/></operator><call><name pos:line="164" pos:column="64">getBody<pos:position pos:line="164" pos:column="71"/></name><argument_list pos:line="164" pos:column="71">(<argument><expr><name><name pos:line="164" pos:column="72">String<pos:position pos:line="164" pos:column="78"/></name><operator pos:line="164" pos:column="78">.<pos:position pos:line="164" pos:column="79"/></operator><name pos:line="164" pos:column="79">class<pos:position pos:line="164" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="164" pos:column="86"/></decl_stmt>
                                <expr_stmt><expr><call><name pos:line="165" pos:column="33">assertNotNull<pos:position pos:line="165" pos:column="46"/></name><argument_list pos:line="165" pos:column="46">(<argument><expr><name pos:line="165" pos:column="47">body<pos:position pos:line="165" pos:column="51"/></name></expr></argument>)<pos:position pos:line="165" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="53"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="166" pos:column="33">assertEquals<pos:position pos:line="166" pos:column="45"/></name><argument_list pos:line="166" pos:column="45">(<argument><expr><literal type="string" pos:line="166" pos:column="46">"Hello World"<pos:position pos:line="166" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="61">body<pos:position pos:line="166" pos:column="65"/></name></expr></argument>)<pos:position pos:line="166" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="67"/></expr_stmt>

                                <decl_stmt><decl><type><name pos:line="168" pos:column="33">MyCoolBean<pos:position pos:line="168" pos:column="43"/></name></type> <name pos:line="168" pos:column="44">reply<pos:position pos:line="168" pos:column="49"/></name> <init pos:line="168" pos:column="50">= <expr><operator pos:line="168" pos:column="52">new<pos:position pos:line="168" pos:column="55"/></operator> <call><name pos:line="168" pos:column="56">MyCoolBean<pos:position pos:line="168" pos:column="66"/></name><argument_list pos:line="168" pos:column="66">(<argument><expr><literal type="number" pos:line="168" pos:column="67">456<pos:position pos:line="168" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="72">"Camel rocks"<pos:position pos:line="168" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="168" pos:column="87"/></decl_stmt>
                                <expr_stmt><expr><call><name><name pos:line="169" pos:column="33">exchange<pos:position pos:line="169" pos:column="41"/></name><operator pos:line="169" pos:column="41">.<pos:position pos:line="169" pos:column="42"/></operator><name pos:line="169" pos:column="42">getOut<pos:position pos:line="169" pos:column="48"/></name></name><argument_list pos:line="169" pos:column="48">()<pos:position pos:line="169" pos:column="50"/></argument_list></call><operator pos:line="169" pos:column="50">.<pos:position pos:line="169" pos:column="51"/></operator><call><name pos:line="169" pos:column="51">setBody<pos:position pos:line="169" pos:column="58"/></name><argument_list pos:line="169" pos:column="58">(<argument><expr><name pos:line="169" pos:column="59">reply<pos:position pos:line="169" pos:column="64"/></name></expr></argument>)<pos:position pos:line="169" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="66"/></expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="170" pos:column="33">exchange<pos:position pos:line="170" pos:column="41"/></name><operator pos:line="170" pos:column="41">.<pos:position pos:line="170" pos:column="42"/></operator><name pos:line="170" pos:column="42">getOut<pos:position pos:line="170" pos:column="48"/></name></name><argument_list pos:line="170" pos:column="48">()<pos:position pos:line="170" pos:column="50"/></argument_list></call><operator pos:line="170" pos:column="50">.<pos:position pos:line="170" pos:column="51"/></operator><call><name pos:line="170" pos:column="51">setHeader<pos:position pos:line="170" pos:column="60"/></name><argument_list pos:line="170" pos:column="60">(<argument><expr><name><name pos:line="170" pos:column="61">Exchange<pos:position pos:line="170" pos:column="69"/></name><operator pos:line="170" pos:column="69">.<pos:position pos:line="170" pos:column="70"/></operator><name pos:line="170" pos:column="70">CONTENT_TYPE<pos:position pos:line="170" pos:column="82"/></name></name></expr></argument>, <argument><expr><name><name pos:line="170" pos:column="84">HttpConstants<pos:position pos:line="170" pos:column="97"/></name><operator pos:line="170" pos:column="97">.<pos:position pos:line="170" pos:column="98"/></operator><name pos:line="170" pos:column="98">CONTENT_TYPE_JAVA_SERIALIZED_OBJECT<pos:position pos:line="170" pos:column="133"/></name></name></expr></argument>)<pos:position pos:line="170" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="135"/></expr_stmt>
                            }<pos:position pos:line="171" pos:column="30"/></block></function>
                        }<pos:position pos:line="172" pos:column="26"/></block></class></expr></argument>)<pos:position pos:line="172" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="173" pos:column="14"/></block></function>
        }<pos:position pos:line="174" pos:column="10"/></block></class></expr></argument>)<pos:position pos:line="174" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="12"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="175" pos:column="9">context<pos:position pos:line="175" pos:column="16"/></name><operator pos:line="175" pos:column="16">.<pos:position pos:line="175" pos:column="17"/></operator><name pos:line="175" pos:column="17">start<pos:position pos:line="175" pos:column="22"/></name></name><argument_list pos:line="175" pos:column="22">()<pos:position pos:line="175" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="25"/></expr_stmt>

        <try pos:line="177" pos:column="9">try <block pos:line="177" pos:column="13">{
            <expr_stmt><expr><call><name><name pos:line="178" pos:column="13">template<pos:position pos:line="178" pos:column="21"/></name><operator pos:line="178" pos:column="21">.<pos:position pos:line="178" pos:column="22"/></operator><name pos:line="178" pos:column="22">requestBody<pos:position pos:line="178" pos:column="33"/></name></name><argument_list pos:line="178" pos:column="33">(<argument><expr><literal type="string" pos:line="178" pos:column="34">"http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="178" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="79">"Hello World"<pos:position pos:line="178" pos:column="92"/></literal></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="94">MyCoolBean<pos:position pos:line="178" pos:column="104"/></name><operator pos:line="178" pos:column="104">.<pos:position pos:line="178" pos:column="105"/></operator><name pos:line="178" pos:column="105">class<pos:position pos:line="178" pos:column="110"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="112"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="179" pos:column="13">fail<pos:position pos:line="179" pos:column="17"/></name><argument_list pos:line="179" pos:column="17">(<argument><expr><literal type="string" pos:line="179" pos:column="18">"Should fail"<pos:position pos:line="179" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="180" pos:column="10"/></block> <catch pos:line="180" pos:column="11">catch <parameter_list pos:line="180" pos:column="17">(<parameter><decl><type><name pos:line="180" pos:column="18">Exception<pos:position pos:line="180" pos:column="27"/></name></type> <name pos:line="180" pos:column="28">e<pos:position pos:line="180" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="180" pos:column="30"/></parameter_list> <block pos:line="180" pos:column="31">{
            <comment type="line" pos:line="181" pos:column="13">// expected</comment>
        }<pos:position pos:line="182" pos:column="10"/></block></catch></try>
    }<pos:position pos:line="183" pos:column="6"/></block></function>

    <function><annotation pos:line="185" pos:column="5">@<name pos:line="185" pos:column="6">Test<pos:position pos:line="185" pos:column="10"/></name></annotation>
    <specifier pos:line="186" pos:column="5">public<pos:position pos:line="186" pos:column="11"/></specifier> <type><name pos:line="186" pos:column="12">void<pos:position pos:line="186" pos:column="16"/></name></type> <name pos:line="186" pos:column="17">testNotAllowed<pos:position pos:line="186" pos:column="31"/></name><parameter_list pos:line="186" pos:column="31">()<pos:position pos:line="186" pos:column="33"/></parameter_list> <throws pos:line="186" pos:column="34">throws <argument><expr><name pos:line="186" pos:column="41">Exception<pos:position pos:line="186" pos:column="50"/></name></expr></argument></throws> <block pos:line="186" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="187" pos:column="9">HttpCommonComponent<pos:position pos:line="187" pos:column="28"/></name></type> <name pos:line="187" pos:column="29">jetty<pos:position pos:line="187" pos:column="34"/></name> <init pos:line="187" pos:column="35">= <expr><call><name><name pos:line="187" pos:column="37">context<pos:position pos:line="187" pos:column="44"/></name><operator pos:line="187" pos:column="44">.<pos:position pos:line="187" pos:column="45"/></operator><name pos:line="187" pos:column="45">getComponent<pos:position pos:line="187" pos:column="57"/></name></name><argument_list pos:line="187" pos:column="57">(<argument><expr><literal type="string" pos:line="187" pos:column="58">"jetty"<pos:position pos:line="187" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="67">HttpCommonComponent<pos:position pos:line="187" pos:column="86"/></name><operator pos:line="187" pos:column="86">.<pos:position pos:line="187" pos:column="87"/></operator><name pos:line="187" pos:column="87">class<pos:position pos:line="187" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="187" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="187" pos:column="94"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="188" pos:column="9">jetty<pos:position pos:line="188" pos:column="14"/></name><operator pos:line="188" pos:column="14">.<pos:position pos:line="188" pos:column="15"/></operator><name pos:line="188" pos:column="15">setAllowJavaSerializedObject<pos:position pos:line="188" pos:column="43"/></name></name><argument_list pos:line="188" pos:column="43">(<argument><expr><literal type="boolean" pos:line="188" pos:column="44">false<pos:position pos:line="188" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="51"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="190" pos:column="9">HttpComponent<pos:position pos:line="190" pos:column="22"/></name></type> <name pos:line="190" pos:column="23">http<pos:position pos:line="190" pos:column="27"/></name> <init pos:line="190" pos:column="28">= <expr><call><name><name pos:line="190" pos:column="30">context<pos:position pos:line="190" pos:column="37"/></name><operator pos:line="190" pos:column="37">.<pos:position pos:line="190" pos:column="38"/></operator><name pos:line="190" pos:column="38">getComponent<pos:position pos:line="190" pos:column="50"/></name></name><argument_list pos:line="190" pos:column="50">(<argument><expr><literal type="string" pos:line="190" pos:column="51">"http"<pos:position pos:line="190" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="190" pos:column="59">HttpComponent<pos:position pos:line="190" pos:column="72"/></name><operator pos:line="190" pos:column="72">.<pos:position pos:line="190" pos:column="73"/></operator><name pos:line="190" pos:column="73">class<pos:position pos:line="190" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="190" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="190" pos:column="80"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="191" pos:column="9">http<pos:position pos:line="191" pos:column="13"/></name><operator pos:line="191" pos:column="13">.<pos:position pos:line="191" pos:column="14"/></operator><name pos:line="191" pos:column="14">setAllowJavaSerializedObject<pos:position pos:line="191" pos:column="42"/></name></name><argument_list pos:line="191" pos:column="42">(<argument><expr><literal type="boolean" pos:line="191" pos:column="43">true<pos:position pos:line="191" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="193" pos:column="9">context<pos:position pos:line="193" pos:column="16"/></name><operator pos:line="193" pos:column="16">.<pos:position pos:line="193" pos:column="17"/></operator><name pos:line="193" pos:column="17">addRoutes<pos:position pos:line="193" pos:column="26"/></name></name><argument_list pos:line="193" pos:column="26">(<argument><expr><operator pos:line="193" pos:column="27">new<pos:position pos:line="193" pos:column="30"/></operator> <class><super><name pos:line="193" pos:column="31">RouteBuilder<pos:position pos:line="193" pos:column="43"/></name></super><argument_list pos:line="193" pos:column="43">()<pos:position pos:line="193" pos:column="45"/></argument_list> <block pos:line="193" pos:column="46">{
            <function><annotation pos:line="194" pos:column="13">@<name pos:line="194" pos:column="14">Override<pos:position pos:line="194" pos:column="22"/></name></annotation>
            <specifier pos:line="195" pos:column="13">public<pos:position pos:line="195" pos:column="19"/></specifier> <type><name pos:line="195" pos:column="20">void<pos:position pos:line="195" pos:column="24"/></name></type> <name pos:line="195" pos:column="25">configure<pos:position pos:line="195" pos:column="34"/></name><parameter_list pos:line="195" pos:column="34">()<pos:position pos:line="195" pos:column="36"/></parameter_list> <throws pos:line="195" pos:column="37">throws <argument><expr><name pos:line="195" pos:column="44">Exception<pos:position pos:line="195" pos:column="53"/></name></expr></argument></throws> <block pos:line="195" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="196" pos:column="17">from<pos:position pos:line="196" pos:column="21"/></name><argument_list pos:line="196" pos:column="21">(<argument><expr><literal type="string" pos:line="196" pos:column="22">"jetty:http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="196" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="72"/></argument_list></call>
                        <operator pos:line="197" pos:column="25">.<pos:position pos:line="197" pos:column="26"/></operator><call><name pos:line="197" pos:column="26">process<pos:position pos:line="197" pos:column="33"/></name><argument_list pos:line="197" pos:column="33">(<argument><expr><operator pos:line="197" pos:column="34">new<pos:position pos:line="197" pos:column="37"/></operator> <class><super><name pos:line="197" pos:column="38">Processor<pos:position pos:line="197" pos:column="47"/></name></super><argument_list pos:line="197" pos:column="47">()<pos:position pos:line="197" pos:column="49"/></argument_list> <block pos:line="197" pos:column="50">{
                            <function><specifier pos:line="198" pos:column="29">public<pos:position pos:line="198" pos:column="35"/></specifier> <type><name pos:line="198" pos:column="36">void<pos:position pos:line="198" pos:column="40"/></name></type> <name pos:line="198" pos:column="41">process<pos:position pos:line="198" pos:column="48"/></name><parameter_list pos:line="198" pos:column="48">(<parameter><decl><type><name pos:line="198" pos:column="49">Exchange<pos:position pos:line="198" pos:column="57"/></name></type> <name pos:line="198" pos:column="58">exchange<pos:position pos:line="198" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="198" pos:column="67"/></parameter_list> <throws pos:line="198" pos:column="68">throws <argument><expr><name pos:line="198" pos:column="75">Exception<pos:position pos:line="198" pos:column="84"/></name></expr></argument></throws> <block pos:line="198" pos:column="85">{
                                <decl_stmt><decl><type><name pos:line="199" pos:column="33">String<pos:position pos:line="199" pos:column="39"/></name></type> <name pos:line="199" pos:column="40">body<pos:position pos:line="199" pos:column="44"/></name> <init pos:line="199" pos:column="45">= <expr><call><name><name pos:line="199" pos:column="47">exchange<pos:position pos:line="199" pos:column="55"/></name><operator pos:line="199" pos:column="55">.<pos:position pos:line="199" pos:column="56"/></operator><name pos:line="199" pos:column="56">getIn<pos:position pos:line="199" pos:column="61"/></name></name><argument_list pos:line="199" pos:column="61">()<pos:position pos:line="199" pos:column="63"/></argument_list></call><operator pos:line="199" pos:column="63">.<pos:position pos:line="199" pos:column="64"/></operator><call><name pos:line="199" pos:column="64">getBody<pos:position pos:line="199" pos:column="71"/></name><argument_list pos:line="199" pos:column="71">(<argument><expr><name><name pos:line="199" pos:column="72">String<pos:position pos:line="199" pos:column="78"/></name><operator pos:line="199" pos:column="78">.<pos:position pos:line="199" pos:column="79"/></operator><name pos:line="199" pos:column="79">class<pos:position pos:line="199" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="199" pos:column="86"/></decl_stmt>
                                <expr_stmt><expr><call><name pos:line="200" pos:column="33">assertNotNull<pos:position pos:line="200" pos:column="46"/></name><argument_list pos:line="200" pos:column="46">(<argument><expr><name pos:line="200" pos:column="47">body<pos:position pos:line="200" pos:column="51"/></name></expr></argument>)<pos:position pos:line="200" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="53"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="201" pos:column="33">assertEquals<pos:position pos:line="201" pos:column="45"/></name><argument_list pos:line="201" pos:column="45">(<argument><expr><literal type="string" pos:line="201" pos:column="46">"Hello World"<pos:position pos:line="201" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="201" pos:column="61">body<pos:position pos:line="201" pos:column="65"/></name></expr></argument>)<pos:position pos:line="201" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="67"/></expr_stmt>

                                <decl_stmt><decl><type><name pos:line="203" pos:column="33">MyCoolBean<pos:position pos:line="203" pos:column="43"/></name></type> <name pos:line="203" pos:column="44">reply<pos:position pos:line="203" pos:column="49"/></name> <init pos:line="203" pos:column="50">= <expr><operator pos:line="203" pos:column="52">new<pos:position pos:line="203" pos:column="55"/></operator> <call><name pos:line="203" pos:column="56">MyCoolBean<pos:position pos:line="203" pos:column="66"/></name><argument_list pos:line="203" pos:column="66">(<argument><expr><literal type="number" pos:line="203" pos:column="67">456<pos:position pos:line="203" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="72">"Camel rocks"<pos:position pos:line="203" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="203" pos:column="87"/></decl_stmt>
                                <expr_stmt><expr><call><name><name pos:line="204" pos:column="33">exchange<pos:position pos:line="204" pos:column="41"/></name><operator pos:line="204" pos:column="41">.<pos:position pos:line="204" pos:column="42"/></operator><name pos:line="204" pos:column="42">getOut<pos:position pos:line="204" pos:column="48"/></name></name><argument_list pos:line="204" pos:column="48">()<pos:position pos:line="204" pos:column="50"/></argument_list></call><operator pos:line="204" pos:column="50">.<pos:position pos:line="204" pos:column="51"/></operator><call><name pos:line="204" pos:column="51">setBody<pos:position pos:line="204" pos:column="58"/></name><argument_list pos:line="204" pos:column="58">(<argument><expr><name pos:line="204" pos:column="59">reply<pos:position pos:line="204" pos:column="64"/></name></expr></argument>)<pos:position pos:line="204" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="66"/></expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="205" pos:column="33">exchange<pos:position pos:line="205" pos:column="41"/></name><operator pos:line="205" pos:column="41">.<pos:position pos:line="205" pos:column="42"/></operator><name pos:line="205" pos:column="42">getOut<pos:position pos:line="205" pos:column="48"/></name></name><argument_list pos:line="205" pos:column="48">()<pos:position pos:line="205" pos:column="50"/></argument_list></call><operator pos:line="205" pos:column="50">.<pos:position pos:line="205" pos:column="51"/></operator><call><name pos:line="205" pos:column="51">setHeader<pos:position pos:line="205" pos:column="60"/></name><argument_list pos:line="205" pos:column="60">(<argument><expr><name><name pos:line="205" pos:column="61">Exchange<pos:position pos:line="205" pos:column="69"/></name><operator pos:line="205" pos:column="69">.<pos:position pos:line="205" pos:column="70"/></operator><name pos:line="205" pos:column="70">CONTENT_TYPE<pos:position pos:line="205" pos:column="82"/></name></name></expr></argument>, <argument><expr><name><name pos:line="205" pos:column="84">HttpConstants<pos:position pos:line="205" pos:column="97"/></name><operator pos:line="205" pos:column="97">.<pos:position pos:line="205" pos:column="98"/></operator><name pos:line="205" pos:column="98">CONTENT_TYPE_JAVA_SERIALIZED_OBJECT<pos:position pos:line="205" pos:column="133"/></name></name></expr></argument>)<pos:position pos:line="205" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="135"/></expr_stmt>
                            }<pos:position pos:line="206" pos:column="30"/></block></function>
                        }<pos:position pos:line="207" pos:column="26"/></block></class></expr></argument>)<pos:position pos:line="207" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="208" pos:column="14"/></block></function>
        }<pos:position pos:line="209" pos:column="10"/></block></class></expr></argument>)<pos:position pos:line="209" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="12"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="210" pos:column="9">context<pos:position pos:line="210" pos:column="16"/></name><operator pos:line="210" pos:column="16">.<pos:position pos:line="210" pos:column="17"/></operator><name pos:line="210" pos:column="17">start<pos:position pos:line="210" pos:column="22"/></name></name><argument_list pos:line="210" pos:column="22">()<pos:position pos:line="210" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="25"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="212" pos:column="9">MyCoolBean<pos:position pos:line="212" pos:column="19"/></name></type> <name pos:line="212" pos:column="20">cool<pos:position pos:line="212" pos:column="24"/></name> <init pos:line="212" pos:column="25">= <expr><operator pos:line="212" pos:column="27">new<pos:position pos:line="212" pos:column="30"/></operator> <call><name pos:line="212" pos:column="31">MyCoolBean<pos:position pos:line="212" pos:column="41"/></name><argument_list pos:line="212" pos:column="41">(<argument><expr><literal type="number" pos:line="212" pos:column="42">123<pos:position pos:line="212" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="47">"Camel"<pos:position pos:line="212" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="212" pos:column="56"/></decl_stmt>

        <try pos:line="214" pos:column="9">try <block pos:line="214" pos:column="13">{
            <expr_stmt><expr><call><name><name pos:line="215" pos:column="13">template<pos:position pos:line="215" pos:column="21"/></name><operator pos:line="215" pos:column="21">.<pos:position pos:line="215" pos:column="22"/></operator><name pos:line="215" pos:column="22">requestBodyAndHeader<pos:position pos:line="215" pos:column="42"/></name></name><argument_list pos:line="215" pos:column="42">(<argument><expr><literal type="string" pos:line="215" pos:column="43">"http://localhost:{{port}}/myapp/myservice"<pos:position pos:line="215" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="88">cool<pos:position pos:line="215" pos:column="92"/></name></expr></argument>,
                    <argument><expr><name><name pos:line="216" pos:column="21">Exchange<pos:position pos:line="216" pos:column="29"/></name><operator pos:line="216" pos:column="29">.<pos:position pos:line="216" pos:column="30"/></operator><name pos:line="216" pos:column="30">CONTENT_TYPE<pos:position pos:line="216" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="44">HttpConstants<pos:position pos:line="216" pos:column="57"/></name><operator pos:line="216" pos:column="57">.<pos:position pos:line="216" pos:column="58"/></operator><name pos:line="216" pos:column="58">CONTENT_TYPE_JAVA_SERIALIZED_OBJECT<pos:position pos:line="216" pos:column="93"/></name></name></expr></argument>, <argument><expr><name><name pos:line="216" pos:column="95">MyCoolBean<pos:position pos:line="216" pos:column="105"/></name><operator pos:line="216" pos:column="105">.<pos:position pos:line="216" pos:column="106"/></operator><name pos:line="216" pos:column="106">class<pos:position pos:line="216" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="216" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="113"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="217" pos:column="13">fail<pos:position pos:line="217" pos:column="17"/></name><argument_list pos:line="217" pos:column="17">(<argument><expr><literal type="string" pos:line="217" pos:column="18">"Should fail"<pos:position pos:line="217" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="218" pos:column="10"/></block> <catch pos:line="218" pos:column="11">catch <parameter_list pos:line="218" pos:column="17">(<parameter><decl><type><name pos:line="218" pos:column="18">CamelExecutionException<pos:position pos:line="218" pos:column="41"/></name></type> <name pos:line="218" pos:column="42">e<pos:position pos:line="218" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="218" pos:column="44"/></parameter_list> <block pos:line="218" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="219" pos:column="13">HttpOperationFailedException<pos:position pos:line="219" pos:column="41"/></name></type> <name pos:line="219" pos:column="42">cause<pos:position pos:line="219" pos:column="47"/></name> <init pos:line="219" pos:column="48">= <expr><call><name pos:line="219" pos:column="50">assertIsInstanceOf<pos:position pos:line="219" pos:column="68"/></name><argument_list pos:line="219" pos:column="68">(<argument><expr><name><name pos:line="219" pos:column="69">HttpOperationFailedException<pos:position pos:line="219" pos:column="97"/></name><operator pos:line="219" pos:column="97">.<pos:position pos:line="219" pos:column="98"/></operator><name pos:line="219" pos:column="98">class<pos:position pos:line="219" pos:column="103"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="219" pos:column="105">e<pos:position pos:line="219" pos:column="106"/></name><operator pos:line="219" pos:column="106">.<pos:position pos:line="219" pos:column="107"/></operator><name pos:line="219" pos:column="107">getCause<pos:position pos:line="219" pos:column="115"/></name></name><argument_list pos:line="219" pos:column="115">()<pos:position pos:line="219" pos:column="117"/></argument_list></call></expr></argument>)<pos:position pos:line="219" pos:column="118"/></argument_list></call></expr></init></decl>;<pos:position pos:line="219" pos:column="119"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="220" pos:column="13">assertEquals<pos:position pos:line="220" pos:column="25"/></name><argument_list pos:line="220" pos:column="25">(<argument><expr><literal type="number" pos:line="220" pos:column="26">415<pos:position pos:line="220" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="220" pos:column="31">cause<pos:position pos:line="220" pos:column="36"/></name><operator pos:line="220" pos:column="36">.<pos:position pos:line="220" pos:column="37"/></operator><name pos:line="220" pos:column="37">getStatusCode<pos:position pos:line="220" pos:column="50"/></name></name><argument_list pos:line="220" pos:column="50">()<pos:position pos:line="220" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="220" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="221" pos:column="10"/></block></catch></try>
    }<pos:position pos:line="222" pos:column="6"/></block></function>

}<pos:position pos:line="224" pos:column="2"/></block></class>
</unit>

