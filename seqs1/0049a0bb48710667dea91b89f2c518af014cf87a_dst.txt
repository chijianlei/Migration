Set < Endpoint > endpoints = new LinkedHashSet < > ( nodeEndpoints . size ( ) )  
Endpoint endpoint = jsonNode . traverse ( jp . getCodec ( ) ) . readValueAs ( Endpoint . class )  
boolean added = endpoints . add ( endpoint )  
proxy . setEndpoints ( endpoints )  
proxy . setStripContextPath ( stripContextNode . asBoolean ( false ) )  
final Set < Endpoint > endpoints = proxy . getEndpoints ( )  
jgen . writeArrayFieldStart ( "endpoints" )  
endpoints . forEach ( endpoint -> { try { jgen . writeObject ( endpoint ) ; } catch ( IOException e ) { e . printStackTrace ( ) ; } } )  
jgen . writeObject ( endpoint )  
catch ( IOException e )  
e . printStackTrace ( )  
jgen . writeEndArray ( )  
Assert . assertFalse ( api . getProxy ( ) . getEndpoints ( ) . iterator ( ) . next ( ) . isBackup ( ) )  
Assert . assertFalse ( api . getProxy ( ) . getEndpoints ( ) . iterator ( ) . next ( ) . isBackup ( ) )  
Assert . assertEquals ( "europe" , api . getProxy ( ) . getEndpoints ( ) . iterator ( ) . next ( ) . getTenant ( ) )  
public Endpoint ( String name , String target )  
private Set < Endpoint > endpoints  
public Set < Endpoint > getEndpoints ( )  
public void setEndpoints ( Set < Endpoint > endpoints )  
