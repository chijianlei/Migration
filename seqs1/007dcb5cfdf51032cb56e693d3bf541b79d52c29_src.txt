final ReplaySubject < AwsDataCenterInfo > subject = ReplaySubject . create ( )  
public class PeriodicDataCenterInfoResolver extends ChainableSelfInfoResolver  
private static final Logger logger = LoggerFactory . getLogger ( PeriodicDataCenterInfoResolver . class )  
super ( Observable . timer ( 0 , config . getDataCenterResolveIntervalSec ( ) , TimeUnit . SECONDS ) . flatMap ( new Func1 < Long , Observable < ? extends DataCenterInfo >> ( ) { @ Override public Observable < ? extends DataCenterInfo > call ( Long aLong ) { logger . debug ( "Re-resolving datacenter info" ) ; return LocalDataCenterInfo . forDataCenterType ( config . getMyDataCenterType ( ) ) ; } } ) . map ( new Func1 < DataCenterInfo , InstanceInfo . Builder > ( ) { @ Override public InstanceInfo . Builder call ( DataCenterInfo dataCenterInfo ) { return new InstanceInfo . Builder ( ) . withDataCenterInfo ( dataCenterInfo ) ; } } ) )  
@ Override public Observable < ? extends DataCenterInfo > call ( Long aLong )  
logger . debug ( "Re-resolving datacenter info" )  
return LocalDataCenterInfo . forDataCenterType ( config . getMyDataCenterType ( ) )  
Func1 < DataCenterInfo , InstanceInfo . Builder > ( )  
@ Override public InstanceInfo . Builder call ( DataCenterInfo dataCenterInfo )  
return new InstanceInfo . Builder ( ) . withDataCenterInfo ( dataCenterInfo )  
