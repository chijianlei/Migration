if ( Utils . getAmount ( c . getInventory ( ) , shop . getProduct ( ) ) >= shop . getProduct ( ) . getAmount ( ) )  
if ( perm . has ( p , "shopchest.sell" ) )  
if ( ( shop . getShopType ( ) == ShopType . ADMIN ) || ( ! shop . getVendor ( ) . getUniqueId ( ) . equals ( p . getUniqueId ( ) ) ) )  
if ( Utils . getAmount ( p . getInventory ( ) , shop . getProduct ( ) ) >= shop . getProduct ( ) . getAmount ( ) )  
p . sendMessage ( Config . not_enough_items ( ) )  
if ( ( shop . getShopType ( ) == ShopType . ADMIN ) || ( ! shop . getVendor ( ) . getUniqueId ( ) . equals ( p . getUniqueId ( ) ) ) )  
e . setCancelled ( false )  
int amount = Utils . getAmount ( c . getInventory ( ) , shop . getProduct ( ) )  
ItemStack product = new ItemStack ( shop . getProduct ( ) )  
if ( item . isSimilar ( product ) )  
int amountInSlot = item . getAmount ( )  
slotFree . put ( i , amountToFullStack )  
if ( item == null )  
if ( item . isSimilar ( product ) )  
slotFree . put ( 40 , amountToFullStack )  
if ( freeAmount >= product . getAmount ( ) )  
EconomyResponse r2 = ( shop . getShopType ( ) != ShopType . ADMIN ) ? econ . depositPlayer ( shop . getVendor ( ) , shop . getBuyPrice ( ) ) : null  
( shop . getShopType ( ) != ShopType . ADMIN ) ? econ . depositPlayer ( shop . getVendor ( ) , shop . getBuyPrice ( ) ) : null  
r2 = ( shop . getShopType ( ) != ShopType . ADMIN ) ? econ . depositPlayer ( shop . getVendor ( ) , shop . getBuyPrice ( ) ) : null  
if ( r . transactionSuccess ( ) )  
if ( r2 != null )  
if ( r2 . transactionSuccess ( ) )  
for ( int i = 0 ; i < inventory . getSize ( ) ; i ++ )  
( shop . getShopType ( ) != ShopType . ADMIN ) ? econ . depositPlayer ( shop . getVendor ( ) , shop . getBuyPrice ( ) ) : null  
int removed = 0  
inventoryItems . put ( 40 , inventory . getItem ( 40 ) )  
executor . updateInventory ( )  
executor . sendMessage ( Config . buy_success ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getBuyPrice ( ) , shop . getVendor ( ) . getName ( ) ) )  
if ( shop . getVendor ( ) . isOnline ( ) )  
shop . getVendor ( ) . getPlayer ( ) . sendMessage ( Config . someone_bought ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getBuyPrice ( ) , executor . getName ( ) ) )  
executor . sendMessage ( Config . error_occurred ( r2 . errorMessage ) )  
ItemStack item = inventory . getItem ( slot )  
for ( int i = 0 ; i < inventory . getSize ( ) ; i ++ )  
int added = 0  
inventoryItems . put ( 40 , inventory . getItem ( 40 ) )  
inventoryItems . put ( 40 , inventory . getItem ( 40 ) )  
executor . updateInventory ( )  
executor . sendMessage ( Config . buy_success_admin ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getBuyPrice ( ) ) )  
executor . sendMessage ( Config . error_occurred ( r . errorMessage ) )  
private void sell ( Player executor , Shop shop )  
Block block = shop . getLocation ( ) . getBlock ( )  
Chest chest = ( Chest ) block . getState ( )  
HashMap < Integer , Integer > slotFree = new HashMap < > ( )  
ItemStack product = new ItemStack ( shop . getProduct ( ) )  
Inventory inventory = chest . getInventory ( )  
for ( int i = 0 ; i < inventory . getSize ( ) ; i ++ )  
ItemStack item = inventory . getItem ( i )  
if ( item == null )  
slotFree . put ( i , product . getMaxStackSize ( ) )  
if ( item . isSimilar ( product ) )  
int amountInSlot = item . getAmount ( )  
int amountToFullStack = product . getMaxStackSize ( ) - amountInSlot  
slotFree . put ( i , amountToFullStack )  
if ( freeAmount >= product . getAmount ( ) )  
int freeAmount = 0  
for ( int value : slotFree . values ( ) )  
freeAmount += value  
( shop . getShopType ( ) != ShopType . ADMIN ) ? econ . depositPlayer ( shop . getVendor ( ) , shop . getBuyPrice ( ) ) : null  
if ( econ . getBalance ( shop . getVendor ( ) ) >= shop . getSellPrice ( ) )  
if ( r . transactionSuccess ( ) )  
if ( r2 . transactionSuccess ( ) )  
newItemStack . setAmount ( 1 )  
removeFromInventory ( executor . getInventory ( ) , product )  
inventory . setItem ( slot , null )  
executor . updateInventory ( )  
executor . sendMessage ( Config . sell_success ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getSellPrice ( ) , shop . getVendor ( ) . getName ( ) ) )  
if ( shop . getVendor ( ) . isOnline ( ) )  
shop . getVendor ( ) . getPlayer ( ) . sendMessage ( Config . someone_sold ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getSellPrice ( ) , executor . getName ( ) ) )  
executor . sendMessage ( Config . error_occurred ( r2 . errorMessage ) )  
executor . sendMessage ( Config . error_occurred ( r . errorMessage ) )  
executor . sendMessage ( Config . vendor_not_enough_money ( ) )  
executor . sendMessage ( Config . chest_not_enough_inventory_space ( ) )  
executor . sendMessage ( Config . sell_success_admin ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getSellPrice ( ) ) )  
public static int getAmount ( Inventory inventory , ItemStack itemStack )  
int amount = 0  
amount += item . getAmount ( )  
