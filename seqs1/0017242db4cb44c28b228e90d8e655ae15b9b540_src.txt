public void setAndParseSource ( String directory , String previousHash , String currentHash , ModelDeveloper dev ) throws IOException  
System . out . println ( "\n****Parsing for addition at revision " + currentHash + "****\n" )  
setSourceFiles ( directory )  
for ( ModelSourceFile f : getSourceFiles ( ) )  
ModelParser parser = new ModelParser ( )  
ArrayList < List < String >> npes = parser . parseForNPEAvoidance ( f )  
List < String > catches = npes . get ( 2 )  
for ( String c : catches )  
addUsagePattern ( c )  
additionDiff ( directory , f , catches , previousHash , currentHash , dev )  
List < String > colls = npes . get ( 0 )  
for ( String coll : colls )  
addUsagePattern ( coll )  
additionDiff ( directory , f , colls , previousHash , currentHash , dev )  
List < String > opts = npes . get ( 1 )  
for ( String opt : opts )  
addUsagePattern ( opt )  
additionDiff ( directory , f , opts , previousHash , currentHash , dev )  
List < String > nodps = parser . parseForNODP ( f , currentHash )  
for ( String nodp : nodps )  
addUsagePattern ( nodp )  
additionDiff ( directory , f , nodps , previousHash , currentHash , dev )  
parser . parseForGenerics ( f )  
List < String > sFields = f . getSimpleGenerics ( ) . get ( "fields" )  
for ( String s : sFields )  
addUsagePattern ( s )  
genericsAdditionDiff ( directory , f , sFields , previousHash , currentHash , dev )  
List < String > aClass = f . getAdvancedGenerics ( ) . get ( "classes" )  
line = line . replaceAll ( "\t" , " " )  
System . out . println ( "Pattern --> " + pattern )  
if ( s . contains ( pattern ) )  
addedGenerics += 1  
System . setOut ( new PrintStream ( new FileOutputStream ( opFile ) ) )  
f1 = new File ( opFile )  
f2 = new File ( "./archived-output/02-01-2016/" + opFile )  
is = new FileInputStream ( f1 )  
os = new FileOutputStream ( f2 )  
byte [ ] buffer = new byte [ 1024 ]  
System . out . println ( rName + " -- " + uName + " -- " + dName )  
runAnalysis ( "" )  
int length  
while ( ( length = is . read ( buffer ) ) > 0 )  
os . write ( buffer , 0 , length )  
f1 . delete ( )  
System . out . println ( "File copied successfully!" )  
String github_url = "https://github.com/" + userName + "/" + repoName + ".git"  
String localRepoDir = "." + File . separator + repoName + File . separator  
