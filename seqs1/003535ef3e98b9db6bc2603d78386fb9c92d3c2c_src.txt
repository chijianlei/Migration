catch ( ClosedChannelException ignored )  
taskPool = new TaskPool ( threadCount , threadCount , builder . getWorkerKeepAlive ( ) , TimeUnit . MILLISECONDS , taskQueue , new WorkerThreadFactory ( builder . getThreadGroup ( ) , builder . getWorkerStackSize ( ) , markThreadAsDaemon ) , new ThreadPoolExecutor . AbortPolicy ( ) )  
public static ContextManager < XnioWorker > getContextManager ( )  
catch ( IOException e )  
if ( workQueue . peek ( ) != null )  
selector . selectNow ( )  
selector . select ( )  
selector . selectNow ( )  
Arrays . fill ( keys , selectedKeys . size ( ) , keys . length , null )  
if ( currentThread ( ) == this )  
key . interestOps ( key . interestOps ( ) | ops )  
catch ( CancelledKeyException ignored ) {  
final SynchTask task = new SynchTask ( )  
queueTask ( task )  
selector . wakeup ( )  
key . interestOps ( key . interestOps ( ) | ops )  
catch ( CancelledKeyException ignored )  
task . done ( )  
key . interestOps ( key . interestOps ( ) | ops )  
selector . wakeup ( )  
catch ( CancelledKeyException ignored )  
void clearOps ( final SelectionKey key , final int ops )  
key . interestOps ( key . interestOps ( ) & ~ ops )  
catch ( CancelledKeyException ignored ) {  
final SynchTask task = new SynchTask ( )  
queueTask ( task )  
selector . wakeup ( )  
key . interestOps ( key . interestOps ( ) & ~ ops )  
catch ( CancelledKeyException ignored )  
task . done ( )  
return identityHashCode ( this )  
TimeKey ( final long deadline , final Runnable command )  
int r = Long . signum ( deadline - o . deadline )  
