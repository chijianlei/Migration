ByteArrayInputStream in = new ByteArrayInputStream ( data )  
final LzwDictionary dictionary = getInitializedDictionary ( )  
final ByteArrayOutputStream out = new ByteArrayOutputStream ( )  
while ( ( buffer = in . read ( ) ) != - 1 )  
byteString = toHex ( buffer )  
out . write ( shortToByteArray ( dictionary . getCode ( sequence ) ) )  
out . write ( shortToByteArray ( dictionary . getCode ( sequence ) ) )  
out . close ( )  
return out . toByteArray ( )  
ByteArrayInputStream in = new ByteArrayInputStream ( data )  
final LzwDictionary dictionary = getInitializedDictionary ( )  
in . read ( checksum )  
final ByteArrayOutputStream out = new ByteArrayOutputStream ( )  
while ( in . read ( buffer ) != - 1 )  
final short k = byteArrayToShort ( buffer )  
if ( k > dictionary . getSize ( ) )  
if ( k == dictionary . getSize ( ) )  
dictionary . addData ( sequence + firstByte ( dictionary . getData ( k ) ) )  
out . write ( fromHexString ( dictionary . getData ( k ) ) )  
sequence = dictionary . getData ( k )  
final byte [ ] payload = out . toByteArray ( )  
