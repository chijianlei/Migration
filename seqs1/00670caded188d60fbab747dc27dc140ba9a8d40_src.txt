while ( true ) { if ( showHelp == true ) { System . out . println ( "Command list:\n" + "\t(q) quit\n" + "\t(h) help\n" + "\t(d) demo\n" + "\t(1) createUser\n" + "\t(2) initiateFriendship\n" + "\t(3) establishFriendship\n" + "\t(4) displayFriends\n" + "\t(5) createGroup\n" + "\t(6) addToGroup\n" + "\t(9) searchForUser\n" + "\t(11) topMessagers\n" + "\t(12) dropUser\n" + "\t(13) listUsers\n" + "\t(14) listFriendships\n" ) ; showHelp = false ; } System . out . print ( "Enter a command: " ) ; command = TestDriver . scanner . nextLine ( ) . toLowerCase ( ) ; if ( command . equals ( "quit" ) || command . equals ( "q" ) ) break ; System . out . println ( ) ; if ( command . equals ( "help" ) || command . equals ( "h" ) ) { showHelp = true ; } else if ( command . equals ( "createuser" ) || command . equals ( "1" ) ) { System . out . println ( "FUNCTION: createUser()\n" ) ; System . out . print ( "Enter a name: " ) ; String name = TestDriver . scanner . nextLine ( ) . trim ( ) ; if ( name . isEmpty ( ) ) { System . out . println ( "\nERROR: You must enter a name.\n" ) ; continue ; } else if ( name . length ( ) > 128 ) { System . out . println ( "\nERROR: Name cannot be more than 128 characters.\n" ) ; continue ; } System . out . print ( "Enter an email: " ) ; String email = TestDriver . scanner . nextLine ( ) . trim ( ) ; if ( email . isEmpty ( ) ) { System . out . println ( "\nERROR: You must enter an email.\n" ) ; continue ; } else if ( email . length ( ) > 254 ) { System . out . println ( "\nERROR: Email cannot be more than 254 characters.\n" ) ; continue ; } System . out . print ( "Enter a dob (format: YYYY-MM-DD): " ) ; String dob_str = TestDriver . scanner . nextLine ( ) ; Date dob ; SimpleDateFormat df = new SimpleDateFormat ( "yyyy-MM-dd" ) ; try { dob = new Date ( df . parse ( dob_str ) . getTime ( ) ) ; } catch ( ParseException e ) { System . out . println ( "\nInvalid date.\n" ) ; continue ; } System . out . println ( ) ; TestDriver . createUser ( name , email , dob ) ; } else if ( command . equals ( "initiatefriendship" ) || command . equals ( "2" ) ) { System . out . println ( "FUNCTION: initiateFriendship()\n" ) ; long initiator_id = TestDriver . inputUserID ( "Enter the initiator's ID: " ) ; if ( initiator_id == - 1 ) { continue ; } long receiver_id = TestDriver . inputUserID ( "Enter the receiver's ID: " ) ; if ( receiver_id == - 1 ) { continue ; } if ( initiator_id == receiver_id ) { System . out . println ( "\nERROR: A person cannot be friends with themselves.\n" ) ; continue ; } System . out . println ( ) ; TestDriver . initiateFriendship ( initiator_id , receiver_id ) ; } else if ( command . equals ( "establishfriendship" ) || command . equals ( "3" ) ) { System . out . println ( "FUNCTION: establishFriendship()\n" ) ; long first_id = TestDriver . inputUserID ( "Enter the first user's ID: " ) ; if ( first_id == - 1 ) { continue ; } long second_id = TestDriver . inputUserID ( "Enter the second user's ID: " ) ; if ( second_id == - 1 ) { continue ; } if ( first_id == second_id ) { System . out . println ( "\nERROR: A person cannot be friends with themselves.\n" ) ; continue ; } System . out . println ( ) ; TestDriver . establishFriendship ( first_id , second_id ) ; } else if ( command . equals ( "displayfriends" ) || command . equals ( "4" ) ) { System . out . println ( "FUNCTION: displayFriends()\n" ) ; long user_id = TestDriver . inputUserID ( "Enter the user's ID: " ) ; if ( user_id == - 1 ) { continue ; } System . out . println ( ) ; TestDriver . displayFriends ( user_id ) ; } else if ( command . equals ( "creategroup" ) || command . equals ( "5" ) ) { System . out . println ( "FUNCTION: createGroup()\n" ) ; System . out . print ( "Enter a group name: " ) ; String groupName = TestDriver . scanner . nextLine ( ) . trim ( ) ; if ( groupName . isEmpty ( ) ) { System . out . println ( "\nERROR: You must enter a group name.\n" ) ; continue ; } else if ( groupName . length ( ) > 64 ) { System . out . println ( "\nERROR: Name cannot be more than 64 characters.\n" ) ; continue ; } System . out . print ( "Enter a group description: " ) ; String groupDescription = TestDriver . scanner . nextLine ( ) . trim ( ) ; if ( groupDescription . isEmpty ( ) ) { System . out . println ( "\nERROR: You must enter a group description.\n" ) ; continue ; } else if ( name . length ( ) > 160 ) { System . out . println ( "\nERROR: Description cannot be more than 160 characters.\n" ) ; continue ; } System . out . print ( "Enter a group enrollment limit: " ) ; long groupEnrollLimit = TestDriver . scanner . nextLong ( ) ; if ( groupEnrollLimit <= 0 ) ) { System . out . println ( "\nERROR: Enroll limit must be greater than 0.\n" ) ; continue ; } else if ( groupEnrollLimit ) > 999999 ) { System . out . println ( "\nERROR: Enroll limit cannot be greater than 999999.\n" ) ; continue  
if ( command . equals ( "help" ) || command . equals ( "h" ) )  
if ( groupEnrollLimit <= 0 ) )  
System . out . println ( "\nERROR: Enroll limit must be greater than 0.\n" )  
System . out . println ( "\nERROR: Enroll limit cannot be greater than 999999.\n" )  
System . out . println ( )  
TestDriver . createGroup ( groupName , groupDescription , groupEnrollLimit )  
else if ( command . equals ( "addtogroup" ) || command . equals ( "6" ) )  
System . out . println ( "FUNCTION: addToGroup()\n" )  
long group_id = TestDriver . inputGroupID ( "Enter the group ID: " )  
if ( initiator_id == - 1 ) { continue ;  
long user_id = TestDriver . inputUserID ( "Enter the user ID: " )  
if ( receiver_id == - 1 ) { continue ;  
System . out . println ( )  
TestDriver . addToGroup ( group_id , user_id )  
if ( command . equals ( "searchforuser" ) || command . equals ( "9" ) )  
System . out . println ( "FUNCTION: searchForUser()\n" )  
System . out . print ( "Enter your search queries, separated by spaces: " )  
String search_str = TestDriver . scanner . nextLine ( )  
if ( search_str . isEmpty ( ) )  
System . out . println ( "ERROR: You must enter a query.\n" )  
System . out . println ( )  
TestDriver . searchForUser ( search_str )  
else if ( command . equals ( "topmessagers" ) || command . equals ( "11" ) )  
System . out . println ( "FUNCTION: topMessagers()\n" )  
System . out . print ( "Enter number of results to get back: " )  
long k = TestDriver . scanner . nextLong ( )  
if ( k < 0 )  
System . out . println ( "Error: Must be greater than or equal to 0.\n" )  
System . out . print ( "Enter number of months to include: " )  
long x = TestDriver . scanner . nextLong ( )  
if ( x < 1 )  
System . out . println ( "Error: Must be greater than or equal to 1.\n" )  
System . out . println ( )  
TestDriver . topMessagers ( k , x )  
if ( command . equals ( "dropuser" ) || command . equals ( "12" ) )  
System . out . println ( "FUNCTION: dropUser()\n" )  
long user_id = TestDriver . inputUserID ( "Enter the user's ID: " )  
if ( user_id == - 1 ) { continue ;  
System . out . print ( "\nAre you sure you want to delete user " + user_id + "? " + "Their data will be removed. (y/n) " )  
String yn = TestDriver . scanner . nextLine ( ) . toLowerCase ( )  
if ( ! yn . equals ( "y" ) )  
System . out . println ( "Aborting. User " + user_id + " will not be deleted.\n" )  
System . out . println ( )  
TestDriver . dropUser ( user_id )  
if ( command . equals ( "listusers" ) || command . equals ( "13" ) )  
TestDriver . listUsers ( )  
if ( command . equals ( "listfriendships" ) || command . equals ( "14" ) )  
TestDriver . listFriendships ( )  
if ( command . equals ( "demo" ) || command . equals ( "d" ) )  
TestDriver . demo ( )  
System . out . println ( "ERROR: Unknown command.\n" )  
TestDriver . connection . close ( )  
