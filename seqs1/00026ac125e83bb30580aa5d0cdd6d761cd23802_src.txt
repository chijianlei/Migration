Glide . with ( this ) . load ( URL ) . diskCacheStrategy ( DiskCacheStrategy . ALL ) . centerCrop ( ) . listener ( new GlidePalette < String , GlideDrawable > ( ) . use ( GlidePalette . Profile . VIBRANT ) . intoBackground ( textVibrant , GlidePalette . Swatch . RGB ) . intoTextColor ( textVibrant , GlidePalette . Swatch . BODY_TEXT_COLOR ) . crossfade ( true ) . use ( GlidePalette . Profile . VIBRANT_DARK ) . intoBackground ( textVibrantDark , GlidePalette . Swatch . RGB ) . intoTextColor ( textVibrantDark , GlidePalette . Swatch . BODY_TEXT_COLOR ) . crossfade ( false ) . use ( GlidePalette . Profile . VIBRANT_LIGHT ) . intoBackground ( textVibrantLight , GlidePalette . Swatch . RGB ) . intoTextColor ( textVibrantLight , GlidePalette . Swatch . BODY_TEXT_COLOR ) . crossfade ( true , 1000 ) . use ( GlidePalette . Profile . MUTED ) . intoBackground ( textMuted , GlidePalette . Swatch . RGB ) . intoTextColor ( textMuted , GlidePalette . Swatch . BODY_TEXT_COLOR ) . use ( GlidePalette . Profile . MUTED_DARK ) . intoBackground ( textMutedDark , GlidePalette . Swatch . RGB ) . intoTextColor ( textMutedDark , GlidePalette . Swatch . BODY_TEXT_COLOR ) . crossfade ( true , 2000 ) . use ( GlidePalette . Profile . MUTED_LIGHT ) . intoBackground ( textMutedLight , GlidePalette . Swatch . RGB ) . intoTextColor ( textMutedLight , GlidePalette . Swatch . BODY_TEXT_COLOR ) . intoCallBack ( new BitmapPalette . CallBack ( ) { @ Override public void onPaletteLoaded ( @ Nullable Palette palette ) { } } ) . setGlideListener ( new RequestListener < String , GlideDrawable > ( ) { @ Override public boolean onException ( Exception e , String model , Target < GlideDrawable > target , boolean isFirstResource ) { return false ; } @ Override public boolean onResourceReady ( GlideDrawable resource , String model , Target < GlideDrawable > target , boolean isFromMemoryCache , boolean isFirstResource ) { return false ; } } ) . setPaletteBuilderInterceptor ( new BitmapPalette . PaletteBuilderInterceptor ( ) { @ NonNull @ Override public Palette . Builder intercept ( Palette . Builder builder ) { return builder . resizeBitmapSize ( 100 ) ; } } ) ) . into ( imageView )  
