when ( configurationManagement . update ( configuration2 , configutation . getId ( ) , projectId ) ) . thenReturn ( configuration2 )  
configutation = configurationManagement . update ( configuration2 , configutation . getId ( ) , projectId )  
when ( vimRepository . findAll ( ) ) . thenReturn ( new ArrayList < VimInstance > ( ) { { add ( createVimInstance ( ) ) ; } } )  
nsdManagement . onboard ( nsd_exp , projectId )  
nsdManagement . delete ( id , nsd_exp . getId ( ) )  
nsdManagement . onboard ( nsd_exp , projectId )  
nsdManagement . delete ( id , nsd_exp . getId ( ) )  
add ( nsd_exp )  
nsdManagement . delete ( id , nsd_exp . getId ( ) )  
vnfmManagerEndpoint . setEnabled ( true )  
nsdManagement . update ( new_nsd , projectId )  
nsdManagement . delete ( id , nsd_exp . getId ( ) )  
Set < VirtualNetworkFunctionDescriptor > virtualNetworkFunctionDescriptors = new HashSet < VirtualNetworkFunctionDescriptor > ( )  
nsrManagement . delete ( nsd_exp . getId ( ) , projectId )  
nsrManagement . onboard ( nsd_exp )  
nsrManagement . onboard ( networkServiceDescriptor . getId ( ) )  
nsrManagement . onboard ( networkServiceDescriptor . getId ( ) )  
nsrManagement . update ( new_nsr , nsd_exp . getId ( ) , projectId )  
NetworkServiceRecord networkServiceRecord = nsrManagement . query ( nsr_exp . getId ( ) )  
vimInstance_exp = vimManagement . update ( vimInstance_new , vimInstance_exp . getId ( ) , projectId )  
VimInstance vimInstance_new = vimManagement . add ( vimInstance_exp , projectId )  
doNothing ( ) . when ( networkRepository ) . delete ( any ( Network . class ) )  
when ( vimRepository . findAll ( ) ) . thenReturn ( new ArrayList < VimInstance > ( ) )  
Assert . assertEquals ( false , vimManagement . query ( projectId , projectId ) . iterator ( ) . hasNext ( ) )  
VimInstance vimInstance_new = vimManagement . query ( vimInstance_exp . getId ( ) , projectId )  
Assert . assertEquals ( vimInstance_exp . getId ( ) , vimInstance_new . getId ( ) )  
vimManagement . delete ( vimInstance_exp . getId ( ) , projectId )  
