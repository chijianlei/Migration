public class AnnotationVariantStorageTest  
@ Rule public OpenCGATestExternalResource opencga = new OpenCGATestExternalResource ( )  
protected CatalogManager catalogManager  
protected String sessionId  
protected long studyId  
protected long outputId  
protected Logger logger = LoggerFactory . getLogger ( StatsVariantStorageTest . class )  
private final String userId = "user"  
private final String dbName = "opencga_variants_test"  
VariantStorage variantStorage = new VariantStorage ( catalogManager )  
@ Test public void testAnnotateRegion ( ) throws Exception  
public Set < String > checkAnnotation ( Function < Variant , Boolean > contains ) throws CatalogException , StorageManagerException  
VariantFetcher variantFetcher = new VariantFetcher ( catalogManager , opencga . getStorageManagerFactory ( ) )  
VariantDBIterator iterator = variantFetcher . iterator ( new Query ( VariantDBAdaptor . VariantQueryParams . STUDIES . key ( ) , studyId ) , new QueryOptions ( QueryOptions . SORT , true ) , sessionId )  
Set < String > customAnnotationKeySet = new LinkedHashSet < > ( )  
int c = 0  
while ( iterator . hasNext ( ) )  
c ++  
Variant next = iterator . next ( )  
if ( contains . apply ( next ) )  
Assert . assertNotNull ( next . getAnnotation ( ) )  
if ( next . getAnnotation ( ) . getAdditionalAttributes ( ) != null )  
customAnnotationKeySet . addAll ( next . getAnnotation ( ) . getAdditionalAttributes ( ) . keySet ( ) )  
Assert . assertNull ( next . getAnnotation ( ) )  
Assert . assertTrue ( c > 0 )  
