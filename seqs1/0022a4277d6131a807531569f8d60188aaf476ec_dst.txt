public class ViewHolder  
public TextView textView  
holder . textView = ( TextView ) convertView . findViewById ( R . id . trailerText )  
holder = new ViewHolder ( )  
convertView . setTag ( holder )  
View view = inflater . inflate ( R . layout . fragment_detail2 , container , false )  
LinearLayout list = ( LinearLayout ) getActivity ( ) . findViewById ( R . id . trailers )  
LinearLayout ll = ( LinearLayout ) getActivity ( ) . findViewById ( R . id . reviews )  
vi . setOnClickListener ( new View . OnClickListener ( ) { @ Override public void onClick ( View v ) { String url = model . getYoutubeURL ( ) ; if ( url != "" ) { Intent intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) ) ; if ( intent . resolveActivity ( getActivity ( ) . getPackageManager ( ) ) != null ) { startActivity ( intent ) ; } else { Toast . makeText ( getActivity ( ) , "No supported app to view trailer" , Toast . LENGTH_SHORT ) ; } } } } )  
View . OnClickListener ( )  
@ Override public void onClick ( View v )  
String url = model . getYoutubeURL ( )  
if ( url != "" )  
Intent intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) )  
if ( intent . resolveActivity ( getActivity ( ) . getPackageManager ( ) ) != null )  
startActivity ( intent )  
Toast . makeText ( getActivity ( ) , "No supported app to view trailer" , Toast . LENGTH_SHORT )  
vi . setOnClickListener ( new View . OnClickListener ( ) { @ Override public void onClick ( View v ) { String url = model . url ; if ( url != "" ) { Intent intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) ) ; if ( intent . resolveActivity ( getActivity ( ) . getPackageManager ( ) ) != null ) { startActivity ( intent ) ; } else { Toast . makeText ( getActivity ( ) , "No supported app to open reviews" , Toast . LENGTH_SHORT ) ; } } } } )  
View . OnClickListener ( )  
@ Override public void onClick ( View v )  
String url = model . url  
if ( url != "" )  
Intent intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) )  
if ( intent . resolveActivity ( getActivity ( ) . getPackageManager ( ) ) != null )  
startActivity ( intent )  
Toast . makeText ( getActivity ( ) , "No supported app to open reviews" , Toast . LENGTH_SHORT )  
private void fetchTrailers ( final List < VideoModel > models , double id )  
service . getTrailers ( String . valueOf ( id ) , MainFragment . API_KEY , new Callback < VideoResponseModel > ( ) { @ Override public void success ( VideoResponseModel videoResponseModel , Response response ) { models . addAll ( videoResponseModel . results ) ; LinearLayout list = ( LinearLayout ) getActivity ( ) . findViewById ( R . id . trailers ) ; int i = 1 ; for ( final VideoModel model : models ) { View vi = inflater . inflate ( R . layout . list_item , null ) ; TextView tv = ( TextView ) vi . findViewById ( R . id . trailerText ) ; tv . setText ( "Trailer " + i ) ; i ++ ; vi . setOnClickListener ( new View . OnClickListener ( ) { @ Override public void onClick ( View v ) { String url = model . getYoutubeURL ( ) ; if ( url != "" ) { Intent intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) ) ; if ( intent . resolveActivity ( getActivity ( ) . getPackageManager ( ) ) != null ) { startActivity ( intent ) ; } else { Toast . makeText ( getActivity ( ) , "No supported app to view trailer" , Toast . LENGTH_SHORT ) ; } } } } ) ; list . addView ( vi ) ; } } @ Override public void failure ( RetrofitError error ) { Toast . makeText ( getActivity ( ) , "Can't load trailers this time" , Toast . LENGTH_SHORT ) . show ( ) ; } } )  
Callback < VideoResponseModel > ( )  
@ Override public void success ( VideoResponseModel videoResponseModel , Response response )  
models . addAll ( videoResponseModel . results )  
list . addView ( vi )  
@ Override public void failure ( RetrofitError error )  
Toast . makeText ( getActivity ( ) , "Can't load trailers this time" , Toast . LENGTH_SHORT ) . show ( )  
service . getReviews ( idString , MainFragment . API_KEY , new Callback < ReviewResponseModel > ( ) { @ Override public void success ( ReviewResponseModel responseModel , Response response ) { models . addAll ( responseModel . reviews ) ; LinearLayout ll = ( LinearLayout ) getActivity ( ) . findViewById ( R . id . reviews ) ; int i = 1 ; for ( final ReviewModel model : models ) { View vi = inflater . inflate ( R . layout . review_list_item , null ) ; TextView tv = ( TextView ) vi . findViewById ( R . id . review_summary ) ; TextView author = ( TextView ) vi . findViewById ( R . id . reviewer ) ; author . setText ( model . author ) ; tv . setText ( model . content ) ; i ++ ; vi . setOnClickListener ( new View . OnClickListener ( ) { @ Override public void onClick ( View v ) { String url = model . url ; if ( url != "" ) { Intent intent = new Intent ( Intent . ACTION_VIEW , Uri . parse ( url ) ) ; if ( intent . resolveActivity ( getActivity ( ) . getPackageManager ( ) ) != null ) { startActivity ( intent ) ; } else { Toast . makeText ( getActivity ( ) , "No supported app to open reviews" , Toast . LENGTH_SHORT ) ; } } } } ) ; ll . addView ( vi ) ; } } @ Override public void failure ( RetrofitError error ) { Toast . makeText ( getActivity ( ) , "Can't load reviews this time" , Toast . LENGTH_SHORT ) . show ( ) ; } } )  
Callback < ReviewResponseModel > ( )  
@ Override public void success ( ReviewResponseModel responseModel , Response response )  
models . addAll ( responseModel . reviews )  
ll . addView ( vi )  
@ Override public void failure ( RetrofitError error )  
Toast . makeText ( getActivity ( ) , "Can't load reviews this time" , Toast . LENGTH_SHORT ) . show ( )  
