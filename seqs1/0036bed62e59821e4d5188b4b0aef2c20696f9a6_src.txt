@ Inject private DatasetInstanceMDSUpgrader ( final TransactionExecutorFactory executorFactory , @ Named ( "dsFramework" ) final DatasetFramework dsFramework )  
@ Inject private DatasetTypeMDSUpgrader ( final TransactionExecutorFactory executorFactory , @ Named ( "dsFramework" ) final DatasetFramework dsFramework , LocationFactory locationFactory , Configuration hConf , HBaseTableUtil tableUtil )  
@ Inject private DatasetUpgrader ( CConfiguration cConf , Configuration hConf , LocationFactory locationFactory , QueueAdmin queueAdmin , HBaseTableUtil hBaseTableUtil , @ Named ( "dsFramework" ) final DatasetFramework dsFramework , DatasetInstanceMDSUpgrader datasetInstanceMDSUpgrader , DatasetTypeMDSUpgrader datasetTypeMDSUpgrader )  
@ Inject private MDSUpgrader ( LocationFactory locationFactory , TransactionExecutorFactory executorFactory , @ Named ( "dsFramework" ) final DatasetFramework dsFramework , CConfiguration cConf , @ Named ( "defaultStore" ) final Store store )  
return Guice . createInjector ( new ConfigModule ( cConf , hConf ) , new LocationRuntimeModule ( ) . getDistributedModules ( ) , new ZKClientModule ( ) , new DiscoveryRuntimeModule ( ) . getDistributedModules ( ) , new StreamAdminModules ( ) . getDistributedModules ( ) , new NotificationFeedClientModule ( ) , new TwillModule ( ) , new ProgramRunnerRuntimeModule ( ) . getDistributedModules ( ) , new AbstractModule ( ) { @ Override protected void configure ( ) { install ( new DataFabricDistributedModule ( ) ) ; bind ( MetricsCollectionService . class ) . to ( NoOpMetricsCollectionService . class ) . in ( Scopes . SINGLETON ) ; bind ( Scheduler . class ) . toInstance ( createNoopScheduler ( ) ) ; bind ( DatasetFramework . class ) . to ( RemoteDatasetFramework . class ) ; bind ( DatasetTypeClassLoaderFactory . class ) . to ( DistributedDatasetTypeClassLoaderFactory . class ) ; install ( new FactoryModuleBuilder ( ) . implement ( DatasetDefinitionRegistry . class , DefaultDatasetDefinitionRegistry . class ) . build ( DatasetDefinitionRegistryFactory . class ) ) ; bind ( NamespaceAdmin . class ) . to ( DefaultNamespaceAdmin . class ) ; install ( new FactoryModuleBuilder ( ) . implement ( Store . class , DefaultStore . class ) . build ( StoreFactory . class ) ) ; bind ( ConfigStore . class ) . to ( DefaultConfigStore . class ) ; } @ Provides @ Singleton @ Named ( "dsFramework" ) public DatasetFramework getDSFramework ( CConfiguration cConf , DatasetDefinitionRegistryFactory registryFactory ) throws IOException , DatasetManagementException { return createRegisteredDatasetFramework ( cConf , registryFactory ) ; } @ Provides @ Singleton @ Named ( "defaultStore" ) public Store getStore ( @ Named ( "dsFramework" ) DatasetFramework dsFramework , CConfiguration cConf , LocationFactory locationFactory , TransactionExecutorFactory txExecutorFactory ) { return new DefaultStore ( cConf , locationFactory , txExecutorFactory , dsFramework ) ; } @ Provides @ Singleton @ Named ( "logSaverTableUtil" ) public LogSaverTableUtil getLogSaverTableUtil ( @ Named ( "dsFramework" ) DatasetFramework dsFramework , CConfiguration cConf ) { return new LogSaverTableUtil ( dsFramework , cConf ) ; } @ Provides @ Singleton @ Named ( "fileMetaDataManager" ) public FileMetaDataManager getFileMetaDataManager ( @ Named ( "logSaverTableUtil" ) LogSaverTableUtil tableUtil , @ Named ( "dsFramework" ) DatasetFramework dsFramework , TransactionExecutorFactory txExecutorFactory , LocationFactory locationFactory ) { return new FileMetaDataManager ( tableUtil , txExecutorFactory , locationFactory , dsFramework , cConf ) ; } } )  
@ Provides @ Singleton @ Named ( "dsFramework" ) public DatasetFramework getDSFramework ( CConfiguration cConf , DatasetDefinitionRegistryFactory registryFactory ) throws IOException , DatasetManagementException  
return createRegisteredDatasetFramework ( cConf , registryFactory )  
@ Provides @ Singleton @ Named ( "defaultStore" ) public Store getStore ( @ Named ( "dsFramework" ) DatasetFramework dsFramework , CConfiguration cConf , LocationFactory locationFactory , TransactionExecutorFactory txExecutorFactory )  
@ Provides @ Singleton @ Named ( "logSaverTableUtil" ) public LogSaverTableUtil getLogSaverTableUtil ( @ Named ( "dsFramework" ) DatasetFramework dsFramework , CConfiguration cConf )  
@ Provides @ Singleton @ Named ( "fileMetaDataManager" ) public FileMetaDataManager getFileMetaDataManager ( @ Named ( "logSaverTableUtil" ) LogSaverTableUtil tableUtil , @ Named ( "dsFramework" ) DatasetFramework dsFramework , TransactionExecutorFactory txExecutorFactory , LocationFactory locationFactory )  
private DatasetFramework createRegisteredDatasetFramework ( CConfiguration cConf , DatasetDefinitionRegistryFactory registryFactory ) throws DatasetManagementException , IOException  
DatasetFramework datasetFramework = new InMemoryDatasetFramework ( registryFactory , cConf )  
catch ( MasterNotRunningException e )  
