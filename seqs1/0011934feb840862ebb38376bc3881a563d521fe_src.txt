EnhancedVirtualNetwork EVNR1 = new EnhancedVirtualNetwork ( 8 , 4 , 4 , VNR1 )  
EVNR1 . AugmentNodeEdge4Survivability ( 4 , EVNR1 . FailureDependent )  
EnhancedVirtualNetwork EVNR2 = new EnhancedVirtualNetwork ( 8 , 4 , 4 , VNR1 )  
EVNR2 . AugmentNodeEdge4Survivability ( 4 , EVNR1 . FailureIndependent )  
public int ithUnionKnapsack [ ]  
public int capacityUnionKnapsack [ ]  
ithUnionKnapsack = new int [ col ]  
capacityUnionKnapsack = new int [ unionKnapsackSize ]  
conexpr1 [ this . ithUnionKnapsack [ i ] ] . addTerm ( this . capacityItem [ j ] , varx [ j ] [ i ] )  
model . addConstr ( conexpr1 [ i ] , GRB . LESS_EQUAL , this . capacityUnionKnapsack [ i ] , "constraint_col <" + i )  
for ( int i = 0 ; i < this . VNR . nodeSize ; i ++ )  
for ( int i = 0 ; i < Knapsacks . size ( ) ; i ++ )  
mKP . ithUnionKnapsack [ i ] = Knapsacks . elementAt ( i ) . starNodeEnhancedVNID  
for ( int i = 0 ; i < this . nodeSize ; i ++ )  
mKP . capacityUnionKnapsack [ i ] = this . nodeComputationCapacity [ i ]  
for ( int i = 0 ; i < this . VNR . nodeSize ; i ++ )  
if ( ( mKP . matchingMatrix [ i ] [ j ] / transformExistedNodeCost ) > 0 ) 
mKP . matchingMatrix [ i ] [ j ] = mKP . matchingMatrix [ i ] [ j ] % transformExistedNodeCost  
if ( ( mKP . matchingMatrix [ i ] [ j ] / addNodeComputaionCost ) > 0 ) 
System . out . print ( "(" + ( mKP . matchingMatrix [ i ] [ j ] / addNodeComputaionCost ) + ")+" )  
mKP . matchingMatrix [ i ] [ j ] = mKP . matchingMatrix [ i ] [ j ] % addNodeComputaionCost  
System . out . print ( mKP . matchingMatrix [ i ] [ j ] + "\t  " )  
public void computeUsedResource ( )  
int resource = 0  
public boolean AugmentNodeEdge4Survivability ( int failurenodenumber , boolean failurtype ) throws GRBException  
