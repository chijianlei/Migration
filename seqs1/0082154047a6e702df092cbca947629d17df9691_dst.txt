IDynamicNotationHandler notationHandler = handler . get ( editor )  
if ( notationHandler == null )  
notationHandler = new DefaultDynamicNotationHandler ( )  
IHighlightingSupport support = ( IHighlightingSupport ) editor . getAdapter ( IHighlightingSupport . class )  
if ( support == null ) 
notationHandler . setHighlightingSupport ( support )  
handler . put ( editor , notationHandler )  
notationHandler . display ( container . getExecutionContext ( ) )  
public void terminate ( boolean release )  
container = null  
if ( release && notationHandler . getHighlightingSupport ( ) . isLocked ( ) ) 
notationHandler . getHighlightingSupport ( ) . releaseEditor ( )  
public IEditorPart openEditor ( DebugElement debugElement , IWorkbenchPage page )  
activeSourceDisplay . terminate ( false )  
activeSourceDisplay . terminate ( true )  
