for ( int i = 0 ; i < events . length ( ) ; ++ i )  
eventData . add ( createEventFromEventJsonObject ( jsonObject ) )  
@ Override public View onCreateView ( LayoutInflater inflater , ViewGroup container , Bundle savedInstanceState )  
Log . d ( "Stop Register" , ( new Long ( System . currentTimeMillis ( ) ) . toString ( ) ) )  
View rootView = inflater . inflate ( layout . location_fragment , container , false )  
mMapView = ( MapView ) rootView . findViewById ( id . mapView )  
mMapView . onCreate ( savedInstanceState )  
mRequestingLocationUpdates = true  
buildGoogleApiClient ( )  
createLocationRequest ( )  
buildLocationSettingsRequest ( )  
mMapView . onResume ( ) ; 
MapsInitializer . initialize ( getActivity ( ) . getApplicationContext ( ) )  
catch ( Exception e )  
e . printStackTrace ( )  
mMapView . getMapAsync ( new OnMapReadyCallback ( ) { @ Override public void onMapReady ( GoogleMap mMap ) { if ( ! PermissionUtils . isLocationEnabled ( getContext ( ) ) || ContextCompat . checkSelfPermission ( getActivity ( ) , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED ) { PermissionUtils . PermissionDeniedDialog . newInstance ( true ) . show ( getFragmentManager ( ) , "dialog" ) ; } else { googleMap = mMap ; googleMap . setMyLocationEnabled ( true ) ; googleMap . setMinZoomPreference ( 9 ) ; googleMap . setMaxZoomPreference ( 17 ) ; googleMap . getUiSettings ( ) . setCompassEnabled ( false ) ; googleMap . getUiSettings ( ) . setRotateGesturesEnabled ( false ) ; googleMap . getUiSettings ( ) . setZoomControlsEnabled ( true ) ; } } } )  
OnMapReadyCallback ( )  
@ Override public void onMapReady ( GoogleMap mMap )  
if ( ! PermissionUtils . isLocationEnabled ( getContext ( ) ) || ContextCompat . checkSelfPermission ( getActivity ( ) , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED )  
PermissionUtils . PermissionDeniedDialog . newInstance ( true ) . show ( getFragmentManager ( ) , "dialog" )  
googleMap = mMap  
googleMap . setMyLocationEnabled ( true )  
googleMap . setMinZoomPreference ( 9 )  
googleMap . setMaxZoomPreference ( 17 )  
googleMap . getUiSettings ( ) . setCompassEnabled ( false )  
googleMap . getUiSettings ( ) . setRotateGesturesEnabled ( false )  
googleMap . getUiSettings ( ) . setZoomControlsEnabled ( true )  
if ( ContextCompat . checkSelfPermission ( getActivity ( ) , Manifest . permission . ACCESS_FINE_LOCATION ) != PackageManager . PERMISSION_GRANTED )  
PermissionUtils . PermissionDeniedDialog . newInstance ( true ) . show ( getFragmentManager ( ) , "dialog" )  
if ( mCurrentLocation == null )  
mCurrentLocation = LocationServices . FusedLocationApi . getLastLocation ( mGoogleApiClient )  
updateMap ( mCurrentLocation )  
Log . i ( TAG , "in onConnected(), starting location updates" )  
startLocationUpdates ( )  
CircleOptions options = new CircleOptions ( ) . center ( new LatLng ( mCurrentLocation . getLatitude ( ) , mCurrentLocation . getLongitude ( ) ) ) . radius ( milesToMeters ( 30 ) ) . fillColor ( 0x309392F2 ) . strokeWidth ( 0 )  
@ SuppressWarnings ( "rawtypes" ) private Class getNextActivityClass ( )  
if ( ! BeaconData . userHasLocallySavedLoginInformation ( this ) ) 
return LoginActivity . class  
if ( ! BeaconData . isQueueInitialized ( ) )  
BeaconData . initiateQueue ( this )  
if ( BeaconData . tryToLoadUserInfo ( this ) )  
BeaconData . retrieveLoginToken ( new BeaconConsumer < Integer > ( ) { @ Override public void accept ( Integer obj ) { Log . d ( "Token" , "Loaded Succesfully" ) ; } } , new Runnable ( ) { @ Override public void run ( ) { System . err . println ( "Failed to login..." ) ; } } , this )  
BeaconConsumer < Integer > ( )  
@ Override public void accept ( Integer obj )  
Log . d ( "Token" , "Loaded Succesfully" )  
Runnable ( )  
@ Override public void run ( )  
System . err . println ( "Failed to login..." )  
return MainActivity . class  
finish ( )  
