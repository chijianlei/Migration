for ( Leaf leaf : mutations )  
leaf . apply ( patch )  
int adjustment = findArrayMutationAdjustment ( fromLeaves , ent . getDeletedStart ( ) , ent . getDeletedEnd ( ) )  
ent = new IncavaEntry ( ent . getDeletedStart ( ) - adjustment , ent . getDeletedEnd ( ) - adjustment , ent . getAddedStart ( ) , ent . getAddedEnd ( ) )  
int adjustment = findArrayMutationAdjustment ( fromLeaves , ent . getDeletedStart ( ) , ent . getDeletedEnd ( ) )  
ent = new IncavaEntry ( ent . getDeletedStart ( ) - adjustment , ent . getDeletedEnd ( ) - adjustment , ent . getAddedStart ( ) , ent . getAddedEnd ( ) )  
int adjustment = findArrayMutationAdjustment ( toLeaves , ent . getAddedStart ( ) , ent . getAddedEnd ( ) )  
ent = new IncavaEntry ( ent . getDeletedStart ( ) , ent . getDeletedEnd ( ) , ent . getAddedStart ( ) - adjustment , ent . getAddedEnd ( ) - adjustment )  
int adjustment = findArrayMutationAdjustment ( toLeaves , ent . getAddedStart ( ) , ent . getAddedEnd ( ) )  
ent = new IncavaEntry ( ent . getDeletedStart ( ) , ent . getDeletedEnd ( ) , ent . getAddedStart ( ) - adjustment , ent . getAddedEnd ( ) - adjustment )  
i = i * 31 + ( val . isJsonPrimitive ( ) || val . isJsonNull ( ) ? val . hashCode ( ) : 0 )  
val . isJsonPrimitive ( ) || val . isJsonNull ( ) ? val . hashCode ( ) : 0 )  
= i * 31 + ( val . isJsonPrimitive ( ) || val . isJsonNull ( ) ? val . hashCode ( ) : 0 )  
: 0 )  
bld . append ( "\n" )  
