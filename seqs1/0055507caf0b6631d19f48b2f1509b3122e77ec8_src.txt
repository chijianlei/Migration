waitFor ( 80000 , new Predicate ( ) { @ Override public void evaluate ( ) throws Exception { Referenceable entity = atlasClient . getEntity ( typeName , property , value ) ; assertNotNull ( entity ) ; } } )  
waitFor ( 80000 , new HiveHookIT . Predicate ( ) { @ Override public void evaluate ( ) throws Exception { Referenceable entity = atlasClient . getEntity ( typeName , property , value ) ; assertNotNull ( entity ) ; if ( assertPredicate != null ) { assertPredicate . assertOnEntity ( entity ) ; } } } )  
waitFor ( 80000 , new Predicate ( ) { @ Override public void evaluate ( ) throws Exception { try { atlasClient . getEntity ( typeName , property , value ) ; } catch ( AtlasServiceException e ) { if ( e . getStatus ( ) == ClientResponse . Status . NOT_FOUND ) { return ; } } fail ( String . format ( "Entity was not supposed to exist for typeName = %s, attributeName = %s, " + "attributeValue = %s" , typeName , property , value ) ) ; } } )  
return new HierarchicalTypeDefinition < > ( ClassType . class , name , description , superTypes , attrDefs )  
HierarchicalTypeDefinition < ClassType > typeDefinition = TypesUtil . createClassTypeDef ( randomString ( ) , ImmutableSet . < String > of ( ) , TypesUtil . createUniqueRequiredAttrDef ( NAME , DataTypes . STRING_TYPE ) )  
typeDefinition = TypesUtil . createClassTypeDef ( typeDefinition . typeName , ImmutableSet . < String > of ( ) , TypesUtil . createUniqueRequiredAttrDef ( NAME , DataTypes . STRING_TYPE ) , createOptionalAttrDef ( DESCRIPTION , DataTypes . STRING_TYPE ) )  
