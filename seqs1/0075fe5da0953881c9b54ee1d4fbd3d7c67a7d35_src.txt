new GetMainQuoteTask ( ) . execute ( mQuoteId , dateKey )  
if ( Helper . isServerAccessible ( MainActivity . this ) )  
Switch notificationSwitch = ( Switch ) findViewById ( R . id . switch_notifications )  
notificationSwitch . setChecked ( notificationsEnabled )  
updateTextView ( mPreferences . getInt ( "notificationHour" , 9 ) , mPreferences . getInt ( "notificationMinute" , 0 ) )  
notificationSwitch . setOnCheckedChangeListener ( new CompoundButton . OnCheckedChangeListener ( ) { @ Override public void onCheckedChanged ( CompoundButton compoundButton , boolean isChecked ) { mPreferences . edit ( ) . putBoolean ( "notifications" , isChecked ) . apply ( ) ; AlarmManager alarmManager = ( AlarmManager ) SettingsActivity . this . getSystemService ( SettingsActivity . this . ALARM_SERVICE ) ; Intent intent = new Intent ( SettingsActivity . this , AlarmReceiver . class ) ; PendingIntent pendingIntent = PendingIntent . getBroadcast ( SettingsActivity . this , 0 , intent , PendingIntent . FLAG_UPDATE_CURRENT ) ; if ( isChecked ) { saveDesiredTimeToPreferences ( ) ; Calendar calendar = setCalendarForNotification ( ) ; if ( shouldHaveAlreadyNotified ( calendar ) ) calendar . add ( Calendar . DATE , 1 ) ; alarmManager . setRepeating ( AlarmManager . RTC , calendar . getTimeInMillis ( ) , AlarmManager . INTERVAL_DAY , pendingIntent ) ; } else { alarmManager . cancel ( pendingIntent ) ; updateTextView ( - 1 , - 1 ) ; mPreferences . edit ( ) . remove ( "notificationHour" ) . remove ( "notificationMinute" ) . apply ( ) ; } } } )  
mPreferences . edit ( ) . putBoolean ( "notifications" , isChecked ) . apply ( )  
updateTextView ( - 1 , - 1 )  
@ SuppressLint ( "SetTextI18n" ) private void updateTextView ( int hour , int minute )  
desiredTimeTextView . setText ( "At this time: " )  
