switch ( phase ) { case 2 : phase1description . cancelAnimation ( ) ; gameScreen . addAnimation ( phase2description ) ; Gdx . input . setInputProcessor ( roboticonMarket ) ; AnimationPhaseTimeout timeoutAnimation = new AnimationPhaseTimeout ( getPlayer ( ) , this , phase , 30 ) ; gameScreen . addAnimation ( timeoutAnimation ) ; roboticonMarket . actors ( ) . widgetUpdate ( ) ; gameScreen . getActors ( ) . setNextButtonVisibility ( false ) ; this . getPlayer ( ) . takeTurn ( 2 ) ; break ; case 3 : phase2description . cancelAnimation ( ) ; gameScreen . addAnimation ( phase3description ) ; Gdx . input . setInputProcessor ( gameScreen . getStage ( ) ) ; timeoutAnimation = new AnimationPhaseTimeout ( getPlayer ( ) , this , phase , 30 ) ; gameScreen . addAnimation ( timeoutAnimation ) ; timeoutAnimation . setAnimationFinish ( new IAnimationFinish ( ) { @ Override public void OnAnimationFinish ( ) { gameScreen . getActors ( ) . hideInstallRoboticon ( ) ; } } ) ; gameScreen . getActors ( ) . switchNextButton ( ) ; this . getPlayer ( ) . takeTurn ( 3 ) ; break ; case 4 : phase3description . cancelAnimation ( ) ; gameScreen . addAnimation ( phase4description ) ; Gdx . input . setInputProcessor ( genOverlay ) ; this . getPlayer ( ) . generateResources ( ) ; this . market . generateRoboticon ( ) ; this . roboticonMarket . actors ( ) . refreshRoboticonShop ( ) ; Timer timer = new Timer ( ) ; timer . scheduleTask ( new Timer . Task ( ) { @ Override public void run ( ) { if ( phase == 4 ) nextPhase ( ) ; } } , 3 ) ; timer . start ( ) ; gameScreen . getActors ( ) . switchNextButton ( ) ; break ; case 5 : phase4description . cancelAnimation ( ) ; gameScreen . addAnimation ( phase5description ) ; Gdx . input . setInputProcessor ( resourceMarket ) ; resourceMarket . actors ( ) . widgetUpdate ( ) ; resourceMarket . gambleStatisticsReset ( ) ; gameScreen . getActors ( ) . setNextButtonVisibility ( false ) ; this . getPlayer ( ) . takeTurn ( 5 ) ; break ; case 6 : if ( ! captureChancellor ( ) ) { cleanUpForNextTurn ( ) ; } break ; case 7 : cleanUpForNextTurn ( ) ; case 1 : Gdx . input . setInputProcessor ( gameScreen . getStage ( ) ) ; phase5description . cancelAnimation ( ) ; gameScreen . addAnimation ( phase1description ) ; setScreen ( gameScreen ) ; landBoughtThisTurn = 0 ; if ( turnNumber > 2 ) { clearEffects ( ) ; setEffects ( ) ; } System . out . println ( "Player: " + this . currentPlayerIndex + " Turn: " + this . getTurnNumber ( ) ) ; if ( getPlayer ( ) . getMoney ( ) < 10 ) { gameScreen . getActors ( ) . setNextButtonVisibility ( true ) ; } else { gameScreen . getActors ( ) . setNextButtonVisibility ( false ) ; } this . getPlayer ( ) . takeTurn ( 1 ) ; break  
if ( ! captureChancellor ( ) )  
cleanUpForNextTurn ( )  
