for ( Candidate candidate : candidates )  
for ( final Pair < byte [ ] , byte [ ] > epRange : getEPKeyRanges ( cuboidBaseShard , shardNum , totalShards ) )  
for ( int i = 0 ; i < scanRequests . size ( ) ; ++ i )  
executorService . submit ( new Runnable ( ) { @ Override public void run ( ) { for ( int i = 0 ; i < scanRequests . size ( ) ; ++ i ) { int scanIndex = i ; CubeVisitProtos . CubeVisitRequest . Builder builder = CubeVisitProtos . CubeVisitRequest . newBuilder ( ) ; builder . setGtScanRequest ( scanRequestByteStrings . get ( scanIndex ) ) . setHbaseRawScan ( rawScanByteStrings . get ( scanIndex ) ) ; for ( IntList intList : hbaseColumnsToGTIntList ) { builder . addHbaseColumnsToGT ( intList ) ; } builder . setRowkeyPreambleSize ( cubeSeg . getRowKeyPreambleSize ( ) ) ; builder . setBehavior ( toggle ) ; Map < byte [ ] , CubeVisitProtos . CubeVisitResponse > results ; try { results = getResults ( builder . build ( ) , conn . getTable ( cubeSeg . getStorageLocationIdentifier ( ) ) , epRange . getFirst ( ) , epRange . getSecond ( ) ) ; } catch ( Throwable throwable ) { throw new RuntimeException ( "Error when visiting cubes by endpoint:" , throwable ) ; } for ( Map . Entry < byte [ ] , CubeVisitProtos . CubeVisitResponse > result : results . entrySet ( ) ) { totalScannedCount . addAndGet ( result . getValue ( ) . getStats ( ) . getScannedRowCount ( ) ) ; logger . info ( getStatsString ( result ) ) ; try { epResultItr . append ( CompressionUtils . decompress ( HBaseZeroCopyByteString . zeroCopyGetBytes ( result . getValue ( ) . getCompressedRows ( ) ) ) ) ; } catch ( IOException | DataFormatException e ) { throw new RuntimeException ( "Error when decompressing" , e ) ; } } } } } )  
Runnable ( )  
@ Override public void run ( )  
CubeVisitProtos . CubeVisitRequest . Builder builder = CubeVisitProtos . CubeVisitRequest . newBuilder ( )  
builder . setGtScanRequest ( scanRequestByteStrings . get ( scanIndex ) ) . setHbaseRawScan ( rawScanByteStrings . get ( scanIndex ) )  
for ( IntList intList : hbaseColumnsToGTIntList )  
builder . addHbaseColumnsToGT ( intList )  
builder . setRowkeyPreambleSize ( cubeSeg . getRowKeyPreambleSize ( ) )  
builder . setBehavior ( toggle )  
Map < byte [ ] , CubeVisitProtos . CubeVisitResponse > results  
results = getResults ( builder . build ( ) , conn . getTable ( cubeSeg . getStorageLocationIdentifier ( ) ) , epRange . getFirst ( ) , epRange . getSecond ( ) )  
catch ( Throwable throwable )  
throw new RuntimeException ( "Error when visiting cubes by endpoint:" , throwable )  
for ( Map . Entry < byte [ ] , CubeVisitProtos . CubeVisitResponse > result : results . entrySet ( ) )  
totalScannedCount . addAndGet ( result . getValue ( ) . getStats ( ) . getScannedRowCount ( ) )  
logger . info ( getStatsString ( result ) )  
epResultItr . append ( CompressionUtils . decompress ( HBaseZeroCopyByteString . zeroCopyGetBytes ( result . getValue ( ) . getCompressedRows ( ) ) ) )  
catch ( IOException | DataFormatException e )  
throw new RuntimeException ( "Error when decompressing" , e )  
if ( cubeInstance . getStorageType ( ) == IStorageAware . ID_HBASE ) { 
cubeStorageQuery = overwriteStorageQuery  
