if ( mmsUri == null )  
mStatusListener . onAttachmentError ( FAILED_TO_QUERY_CONTACT )  
private static final boolean DEFER_LOADING_MESSAGES_AND_DRAFT = false  
switch ( error ) { case WorkingMessage . UNKNOWN_ERROR : message = res . getString ( R . string . failed_to_add_media , mediaType ) ; Toast . makeText ( ComposeMessageActivity . this , message , Toast . LENGTH_SHORT ) . show ( ) ; return ; case WorkingMessage . UNSUPPORTED_TYPE : title = res . getString ( R . string . unsupported_media_format , mediaType ) ; message = res . getString ( R . string . select_different_media , mediaType ) ; break ; case WorkingMessage . MESSAGE_SIZE_EXCEEDED : title = res . getString ( R . string . exceed_message_size_limitation , mediaType ) ; if ( mIsAttachmentErrorOnSend ) { message = res . getString ( R . string . media_size_limit ) ; mIsAttachmentErrorOnSend = false ; } else { message = res . getString ( R . string . failed_to_add_media , mediaType ) ; } break ; case WorkingMessage . IMAGE_TOO_LARGE : title = res . getString ( R . string . failed_to_resize_image ) ; message = res . getString ( R . string . resize_image_error_information ) ; break ; case WorkingMessage . NEGATIVE_MESSAGE_OR_INCREASE_SIZE : title = res . getString ( R . string . illegal_message_or_increase_size ) ; message = res . getString ( R . string . failed_to_add_media , mediaType ) ; break ; case WorkingMessage . FAILED_TO_QUERY_CONTACT : title = res . getString ( R . string . attach_add_contact_as_vcard ) ; message = res . getString ( R . string . failed_to_add_media , title ) ; Toast . makeText ( ComposeMessageActivity . this , message , Toast . LENGTH_SHORT ) . show ( ) ; deleteLastMms ( ) ; return ; default : 
if ( ! TextUtils . isEmpty ( text ) && mIsSmsEnabled )  
