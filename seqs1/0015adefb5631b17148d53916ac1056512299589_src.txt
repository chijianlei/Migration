if ( Utils . getAmount ( c . getInventory ( ) , shop . getProduct ( ) . clone ( ) . getType ( ) , shop . getProduct ( ) . clone ( ) . getDurability ( ) , shop . getProduct ( ) . getItemMeta ( ) ) >= shop . getProduct ( ) . getAmount ( ) )  
if ( perm . has ( p , "shopchest.sell" ) )  
if ( shop . getShopType ( ) == ShopType . ADMIN )  
if ( Utils . getAmount ( p . getInventory ( ) , shop . getProduct ( ) . getType ( ) , shop . getProduct ( ) . getDurability ( ) , shop . getProduct ( ) . getItemMeta ( ) ) >= shop . getProduct ( ) . getAmount ( ) )  
p . sendMessage ( Config . not_enough_items ( ) )  
if ( ! shop . getVendor ( ) . getUniqueId ( ) . equals ( p . getUniqueId ( ) ) )  
e . setCancelled ( false )  
int amount = Utils . getAmount ( c . getInventory ( ) , shop . getProduct ( ) . getType ( ) , shop . getProduct ( ) . getDurability ( ) , shop . getProduct ( ) . getItemMeta ( ) )  
ItemStack product = shop . getProduct ( ) . clone ( )  
if ( ( item . getType ( ) . equals ( product . getType ( ) ) ) && ( item . getDurability ( ) == product . getDurability ( ) ) && ( item . getItemMeta ( ) . equals ( product . getItemMeta ( ) ) ) && ( item . getData ( ) . equals ( product . getData ( ) ) ) )  
int amountInSlot = item . getAmount ( )  
slotFree . put ( i , amountToFullStack )  
if ( item == null )  
if ( ( item . getType ( ) . equals ( product . getType ( ) ) ) && ( item . getDurability ( ) == product . getDurability ( ) ) && ( item . getItemMeta ( ) . equals ( product . getItemMeta ( ) ) ) && ( item . getData ( ) . equals ( product . getData ( ) ) ) )  
slotFree . put ( 40 , amountToFullStack )  
int leftAmount = product . getAmount ( )  
EconomyResponse r2 = null  
if ( shop . getShopType ( ) != ShopType . ADMIN ) r2 = econ . depositPlayer ( shop . getVendor ( ) , shop . getBuyPrice ( ) )  
r2 = econ . depositPlayer ( shop . getVendor ( ) , shop . getBuyPrice ( ) )  
if ( r . transactionSuccess ( ) )  
if ( r2 != null )  
if ( r2 . transactionSuccess ( ) )  
for ( int i = amountInSlot ; i < product . getMaxStackSize ( ) ; i ++ )  
if ( shop . getShopType ( ) == ShopType . NORMAL ) 
int amount = 0  
if ( inventory . getItem ( 40 ) != null ) 
executor . updateInventory ( )  
executor . sendMessage ( Config . buy_success ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getBuyPrice ( ) , shop . getVendor ( ) . getName ( ) ) )  
if ( shop . getVendor ( ) . isOnline ( ) ) 
shop . getVendor ( ) . getPlayer ( ) . sendMessage ( Config . someone_bought ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getBuyPrice ( ) , executor . getName ( ) ) )  
executor . sendMessage ( Config . error_occurred ( r2 . errorMessage ) )  
int amountInSlot = product . getMaxStackSize ( ) - slotFree . get ( slot )  
for ( int i = amountInSlot ; i < product . getMaxStackSize ( ) ; i ++ )  
int amount = 0  
if ( inventory . getItem ( 40 ) != null ) amount = inventory . getItem ( 40 ) . getAmount ( )  
inventory . setItem ( 40 , is )  
executor . updateInventory ( )  
executor . sendMessage ( Config . buy_success_admin ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getBuyPrice ( ) ) )  
executor . sendMessage ( Config . error_occurred ( r . errorMessage ) )  
private void sell ( Player executor , Shop shop )  
Block block = shop . getLocation ( ) . getBlock ( )  
Chest chest = ( Chest ) block . getState ( )  
HashMap < Integer , Integer > slotFree = new HashMap < > ( )  
ItemStack product = shop . getProduct ( ) . clone ( )  
Inventory inventory = chest . getInventory ( )  
for ( int i = 0 ; i < chest . getInventory ( ) . getSize ( ) ; i ++ )  
ItemStack item = inventory . getItem ( i )  
if ( item == null )  
slotFree . put ( i , product . getMaxStackSize ( ) )  
if ( ( item . getType ( ) . equals ( product . getType ( ) ) ) && ( item . getDurability ( ) == product . getDurability ( ) ) && ( item . getItemMeta ( ) . equals ( product . getItemMeta ( ) ) ) && ( item . getData ( ) . equals ( product . getData ( ) ) ) )  
int amountInSlot = item . getAmount ( )  
int amountToFullStack = product . getMaxStackSize ( ) - amountInSlot  
slotFree . put ( i , amountToFullStack )  
int leftAmount = product . getAmount ( )  
int freeAmount = 0  
for ( int value : slotFree . values ( ) )  
freeAmount += value  
if ( shop . getShopType ( ) == ShopType . NORMAL )  
if ( econ . getBalance ( shop . getVendor ( ) ) >= shop . getSellPrice ( ) )  
if ( r . transactionSuccess ( ) )  
if ( r2 . transactionSuccess ( ) )  
ItemStack soldProduct = new ItemStack ( product . clone ( ) . getType ( ) , 1 , product . clone ( ) . getDurability ( ) )  
ItemStack is = executor . getInventory ( ) . getItem ( 40 )  
executor . getInventory ( ) . setItem ( 40 , null )  
executor . updateInventory ( )  
executor . sendMessage ( Config . sell_success ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getSellPrice ( ) , shop . getVendor ( ) . getName ( ) ) )  
if ( shop . getVendor ( ) . isOnline ( ) ) 
shop . getVendor ( ) . getPlayer ( ) . sendMessage ( Config . someone_sold ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getSellPrice ( ) , executor . getName ( ) ) )  
executor . sendMessage ( Config . error_occurred ( r2 . errorMessage ) )  
executor . sendMessage ( Config . error_occurred ( r . errorMessage ) )  
executor . sendMessage ( Config . vendor_not_enough_money ( ) )  
executor . sendMessage ( Config . chest_not_enough_inventory_space ( ) )  
executor . sendMessage ( Config . sell_success_admin ( product . getAmount ( ) , ItemNames . lookup ( product ) , shop . getSellPrice ( ) ) )  
public static int getAmount ( Inventory inventory , Material type , short damage , ItemMeta itemMeta )  
int amount = 0  
amount += item . getAmount ( )  
