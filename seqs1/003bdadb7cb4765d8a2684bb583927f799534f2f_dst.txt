switch ( this . botFile . getType ( ) ) { case DLL : src = this . botFile . getPath ( ) ; dest = Paths . get ( starcraftDirectory . toString ( ) , BWAPI . BWAPI_DATA_AI_PATH . toString ( ) , Paths . get ( this . botFile . toString ( ) ) . getFileName ( ) . toString ( ) ) ; AdakiteUtils . createDirectory ( dest . getParent ( ) ) ; Files . copy ( src , dest , StandardCopyOption . REPLACE_EXISTING ) ; LOGGER . info ( "Copy: \"" + src . toString ( ) + "\" -> \"" + dest . toString ( ) + "\"" ) ; this . botFile . setPath ( dest ) ; break ; case CLIENT : src = this . botFile . getPath ( ) ; dest = Paths . get ( starcraftDirectory . toString ( ) , this . botFile . getPath ( ) . getFileName ( ) . toString ( ) ) ; AdakiteUtils . createDirectory ( dest . getParent ( ) ) ; Files . copy ( src , dest , StandardCopyOption . REPLACE_EXISTING ) ; LOGGER . info ( "Copy: \"" + src . toString ( ) + "\" -> \"" + dest . toString ( ) + "\"" ) ; this . botFile . setPath ( dest ) ; break ; default : 
this . botFile . setPath ( dest )  
this . botFile . setPath ( dest )  
AdakiteUtils . createDirectory ( dest . getParent ( ) )  
Files . copy ( src , dest , StandardCopyOption . REPLACE_EXISTING )  
Path bwapiReadPath = Paths . get ( starcraftDirectory . toString ( ) , BWAPI . BWAPI_DATA_READ_PATH . toString ( ) ) . toAbsolutePath ( )  
Path bwapiWritePath = Paths . get ( starcraftDirectory . toString ( ) , BWAPI . BWAPI_DATA_WRITE_PATH . toString ( ) ) . toAbsolutePath ( )  
Path bwapiAiPath = Paths . get ( starcraftDirectory . toString ( ) , BWAPI . BWAPI_DATA_AI_PATH . toString ( ) ) . toAbsolutePath ( )  
AdakiteUtils . createDirectory ( bwapiReadPath )  
AdakiteUtils . createDirectory ( bwapiWritePath )  
AdakiteUtils . createDirectory ( bwapiAiPath )  
Files . copy ( path , Paths . get ( bwapiAiPath . toString ( ) , path . getFileName ( ) . toString ( ) ) , StandardCopyOption . REPLACE_EXISTING )  
Files . copy ( path , Paths . get ( bwapiWritePath . toString ( ) , path . getFileName ( ) . toString ( ) ) , StandardCopyOption . REPLACE_EXISTING )  
Files . copy ( path , Paths . get ( bwapiReadPath . toString ( ) , path . getFileName ( ) . toString ( ) ) , StandardCopyOption . REPLACE_EXISTING )  
this . ini . set ( DEFAULT_INI_SECTION_NAME , SettingsKey . BWAPI_DLL . toString ( ) , bwapiDll )  
public Controller ( )  
private void startBWHeadless ( )  
this . model . startBWHeadless ( )  
catch ( Exception ex )  
setState ( State . IDLE )  
LOGGER . error ( "directoryMonitor" , ex )  
setState ( State . RUNNING )  
private void stopBWHeadless ( )  
this . model . stopBWHeadless ( )  
catch ( Exception ex )  
setState ( State . RUNNING )  
LOGGER . error ( ex )  
setState ( State . IDLE )  
