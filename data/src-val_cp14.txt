int var = columnByteBufferValue ( var . getStatementHandle ( ) , var )
FileLog . e ( "" )
FileLog . var ( "" , var )
Intent var = new Intent ( ApplicationLoader . applicationContext , OpenChatReceiver . class )
var . putExtra ( "" , var )
if ( var == null )
if ( var > 0 )
if ( var < 0 )
var . putExtra ( "" , - var )
var . setAction ( "" + var )
var . addFlags ( 0x4000000 )
if ( var == null )
if ( var > 0 )
var = MessagesController . getInstance ( ) . getUser ( var )
if ( var < 0 )
var = MessagesController . getInstance ( ) . getChat ( - var )
if ( var == null && var == null )
var = var . var . photo_small
var = var . title
if ( var . var != null )
var = var . var . photo_small
Bitmap var = null
var . eraseColor ( Color . TRANSPARENT )
var . setSavedMessages ( 1 )
var . draw ( var )
var = new Paint ( Paint . ANTI_ALIAS_FLAG )
var . restore ( )
Drawable var = ApplicationLoader . applicationContext . getResources ( ) . getDrawable ( R . var . book_logo )
var . draw ( var )
var . setBitmap ( null )
var = var
if ( var . bot )
if ( var != null )
ShortcutManager var = ApplicationLoader . applicationContext . getSystemService ( ShortcutManager . class )
var . putExtra ( Intent . EXTRA_SHORTCUT_ICON , var )
var . setAction ( "" )
ApplicationLoader . applicationContext . sendBroadcast ( var )
if ( Build . VERSION . SDK_INT >= 26 )
ShortcutManager var = ApplicationLoader . applicationContext . getSystemService ( ShortcutManager . class )
ArrayList < String > var = new ArrayList
var . removeDynamicShortcuts ( var )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
if ( var == null && var == null )
var = ContactsController . formatName ( var . first_name , var . last_name )
var . putExtra ( Intent . EXTRA_SHORTCUT_INTENT , createIntrnalShortcutIntent ( var ) )
var . putExtra ( Intent . EXTRA_SHORTCUT_NAME , var )
var . setAction ( "" )
ApplicationLoader . applicationContext . sendBroadcast ( var )
return UserConfig . passcodeHash . length ( ) > 0 && var && ( UserConfig . appLocked || UserConfig . autoLockIn != 0 && UserConfig . lastPauseTime != 0 && ! UserConfig . appLocked && ( UserConfig . lastPauseTime + UserConfig . autoLockIn ) <= ConnectionsManager . getInstance ( ) . getCurrentTime || ConnectionsManager . getInstance ( ) . getCurrentTime + 5 < UserConfig . lastPauseTime )
return FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE )
if ( var . startsWith ( "" ) )
if ( var . startsWith ( "" ) || var . startsWith ( "" ) )
var = var . replace ( "" , "" ) . replace ( "" , "" )
showProxyAlert ( var , var , var , var , var )
var . setTitle ( LocaleController . getString ( "" , R . string . Proxy ) , R . string . Proxy )
var . append ( "" )
var . append ( LocaleController . getString ( "" , R . string . UseProxyAddress ) , R . string . UseProxyAddress ) . append ( "" ) . append ( var ) . append ( "" )
var . append ( LocaleController . getString ( "" , R . string . UseProxyPort ) , R . string . UseProxyPort ) . append ( "" ) . append ( var ) . append ( "" )
var . append ( LocaleController . getString ( "" , R . string . UseProxyUsername ) , R . string . UseProxyUsername ) . append ( "" ) . append ( var ) . append ( "" )
var . append ( LocaleController . getString ( "" , R . string . UseProxyPassword ) , R . string . UseProxyPassword ) . append ( "" ) . append ( var ) . append ( "" )
var . append ( "" ) . append ( LocaleController . getString ( "" , R . string . EnableProxyAlert2 ) , R . string . EnableProxyAlert2 )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit
ConnectionsManager . native_setProxySettings ( var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . proxySettingsChanged )
var . show ( ) . setCanceledOnTouchOutside ( true )
FileLog . var ( "" + var )
UserConfig . loadConfig ( )
MessagesController . getInstance ( )
ConnectionsManager . getInstance ( )
if ( UserConfig . getCurrentUser ( ) != null )
MessagesController . getInstance ( ) . putUser ( UserConfig . getCurrentUser ( ) , true )
MessagesController . getInstance ( ) . getBlockedUsers ( true )
SendMessagesHelper . getInstance ( ) . checkUnsentMessages
FileLog . var ( "" )
ContactsController . getInstance ( ) . checkAppAccount
SharedPreferences var = var . getSharedPreferences ( "" , MODE_PRIVATE )
if ( UserConfig . pushString != null && UserConfig . pushString . length ( ) != 0 )
FileLog . d ( "" + UserConfig . pushString )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceiveCall , PhoneFormat . stripExceptNumbers ( var ) )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
return MessagesController . getInstance ( ) . getChat ( - var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
long var = System . currentTimeMillis ( )
final HashMap < Integer , File > var = ImageLoader . getInstance ( ) . createMediaPaths
if ( var . getKey ( ) == FileLoader . MEDIA_DIR_CACHE )
for ( int var = 0 ; var < var . length ; var ++ )
if ( var . getName ( ) . equals ( "" ) )
if ( Build . VERSION . SDK_INT >= 21 . lastModified ( ) + var < var )
StructStat var = Os . var ( var . getPath ( ) )
if ( var . st_atime != 0 . st_mtime + var < var )
if ( var . lastModified ( ) + var < var )
ContactsController var = var
var = var
var = var = new ContactsController
public ContactsController
var = var . getAccountsByType ( "" )
if ( UserConfig . isClientActivated ( ) )
var = true
var = var
FileLog . var ( var )
if ( UserConfig . isClientActivated ( ) )
var = new Account ( "" + UserConfig . getClientUserId ( ) , "" )
FileLog . var ( var )
FileLog . e ( "" )
ContactsController . getInstance ( ) . performSyncPhoneBook ( ContactsController . getInstance ( ) . getContactsCopy ( ContactsController . getInstance ( ) . var ) . getInstance ( ) . var , true , false , true , false , true , false )
ContactsController . getInstance ( ) . performSyncPhoneBook ( new HashMap < String , Contact > , Contact ( ) , true , true , true , true , false , false )
ContactsController . getInstance ( ) . performSyncPhoneBook ( var , true , var , var , false , false , var )
while ( var . moveToNext ( ) )
if ( var . getCount ( ) > 0 )
while ( var . moveToNext ( ) )
var . first_name = ""
while ( var . moveToNext ( ) )
if ( var != null && TextUtils . isEmpty ( var . first_name ) && TextUtils . isEmpty ( var . last_name ) )
if ( var . first_name == null )
if ( var . first_name . length ( ) != 0 )
if ( var . last_name == null )
Contact var = var . getValue ( )
MessagesStorage . getInstance ( ) . putCachedPhoneBook ( var , true )
FileLog . e ( "" )
final HashMap < String , Contact > var = readContactsFromPhoneBook
int var = var . size ( )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . TL_inputPhoneContact var = new TLRPC . TL_inputPhoneContact ( )
if ( ! var && var . isEmpty ( ) && var . isEmpty ( ) && var == var . size ( ) )
FileLog . e ( "" )
if ( var && ! var . isEmpty ( ) && ! var . isEmpty ( ) )
if ( var . isEmpty ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
FileLog . e ( "" )
if ( ! var . isEmpty ( ) )
if ( var >= 30 = 1 && var . isEmpty ( ) && var . size ( ) - var > var . size ( ) / 3 * 2 = 2 = 0 )
if ( var && var . isEmpty ( ) && var . size ( ) - var > var . size ( ) / 3 * 2 = 2 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . hasNewContactsToImport , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsImported )
if ( var == null )
FileLog . e ( "" )
if ( ! var . retry_contacts . isEmpty ( ) )
for ( int var = 0 ; var < var . popular_invites . size ( ) ; var ++ )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )
TLRPC . TL_contact var = new TLRPC . TL_contact ( )
FileLog . e ( "" + var . text )
MessagesStorage . getInstance ( ) . putCachedPhoneBook ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsImported )
if ( ! var . isEmpty ( ) && var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsImported )
if ( ! var . isEmpty ( ) )
var = ( ( var * 20261 ) + 0x80000000L + UserConfig . contactsSavedCount ) % 0x80000000L
FileLog . e ( "" )
FileLog . e ( "" )
if ( var != 0 && var instanceof TLRPC . TL_contacts_contactsNotModified )
UserConfig . lastContactsSyncTime = int ( System . currentTimeMillis ( ) / 1000 )
UserConfig . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
UserConfig . contactsSavedCount = var . saved_count
UserConfig . saveConfig ( false )
MessagesController . getInstance ( ) . putUsers ( var , var == 1 )
final HashMap < Integer , TLRPC . User > var = new HashMap
final boolean var = var . var ( )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )
FileLog . e ( "" )
if ( var == 1 && ( var . var ( ) || Math . abs ( System . currentTimeMillis ( ) / 1000 - UserConfig . lastContactsSyncTime ) >= 24 * 60 * 60 ) )
UserConfig . lastContactsSyncTime = int ( System . currentTimeMillis ( ) / 1000 )
UserConfig . saveConfig ( false )
if ( var . get ( var . user_id ) == null && var . user_id != UserConfig . getClientUserId ( ) )
FileLog . e ( "" )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )
MessagesStorage . getInstance ( ) . putContacts ( var , var != 2 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
final HashMap < String , ArrayList < TLRPC . TL_contact > . TL_contact > var = new HashMap
for ( int var = 0 ; var < var . size ( ) ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
if ( var . length ( ) == 0 = "" )
if ( var == null || var . getCount ( ) == 0 )
Uri var = ContactsContract . RawContacts . CONTENT_URI . buildUpon ( ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_NAME , var . name ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_TYPE , var . type ) . build
HashMap < Integer , Long > var = new HashMap
while ( var . moveToNext ( ) )
var . close ( )
if ( ! var . containsKey ( var . user_id ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
FileLog . e ( "" + var . size ( ) + "" + var . size ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )
MessagesController . getInstance ( ) . putUser ( var , true )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
var = MessagesController . getInstance ( ) . getUser ( var )
MessagesController . getInstance ( ) . putUser ( var , true )
MessagesStorage . getInstance ( ) . applyPhoneBookUpdates ( var . toString ( ) , var . toString ( ) )
if ( ! var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
if ( ! var . isEmpty ( ) )
MessagesStorage . getInstance ( ) . putContacts ( var , false )
if ( ! var || ! var )
FileLog . e ( "" + var . size ( ) + "" + var . size ( ) )
ContentResolver var = ApplicationLoader . applicationContext . getContentResolver ( )
Uri var = ContactsContract . RawContacts . CONTENT_URI . buildUpon ( ) . appendQueryParameter ( ContactsContract . CALLER_IS_SYNCADAPTER , "" ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_NAME , var . name ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_TYPE , var . type ) . build
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )
MessagesStorage . getInstance ( ) . putContacts ( var , false )
MessagesStorage . getInstance ( ) . applyPhoneBookUpdates ( var . phone , "" )
MessagesController . getInstance ( ) . putUser ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
MessagesStorage . getInstance ( ) . applyPhoneBookUpdates ( var . phone , "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . remove ( "" ) . commit
if ( ! var . objects . isEmpty ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
MessagesStorage . getInstance ( ) . updateUsers ( var , true , true , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_STATUS )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . emojiDidLoaded )
int var = var . length ( var )
FileLog . e ( "" + var )
if ( MessagesController . getInstance ( var ) . useSystemEmoji || var == null || var . length ( var ) == 0 )
var = String . valueOf ( var ) + var
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var = var . dc_id
var = var . dc_id
public FileLoadOperation ( TLRPC . TL_webDocument var )
var . url = var . url
var . access_hash = var . access_hash
var = var . dc_id
var = var . dc_id
if ( ! var . exists ( ) )
var = var = var / var * var
if ( BuildVars . DEBUG_VERSION )
if ( ! var )
if ( var > 0 && var % 32 == 0 = 0 )
var = 0
ConnectionsManager . getInstance ( ) . cancelRequest ( var . requestToken , true )
if ( BuildVars . DEBUG_VERSION )
if ( BuildVars . DEBUG_VERSION )
FileLog . e ( "" + var )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )
var = new HashMap
TLRPC . TL_cdnFileHash var = ( TLRPC . TL_cdnFileHash ) var . objects . get ( var )
if ( var == var . var )
if ( var != var . offset )
int var = ( var + var ) / var
int var = var / var
if ( var != var || var )
TLRPC . TL_cdnFileHash var = var . get ( var )
var = new byte [ 1024 ] * 128
int var
FileLog . e ( "" + var + "" + var . url + "" + var . access_hash )
if ( var > 0 && var == var )
if ( var == var . offset )
var = 0
FileLog . var ( "" + var + "" + var . url + "" + var . access_hash )
ConnectionsManager . getInstance ( ) . cancelRequest ( var . requestToken , true )
var = var
if ( var != var || var > 0 && var >= var || var . size ( ) + var . size ( ) >= var )
var . var = var = var
var . var = var = var
var . var = var = var
if ( ! var . cdn_file_hashes . isEmpty ( ) )
var = new HashMap
for ( int var = 0 ; var < var . cdn_file_hashes . size ( ) ; var ++ )
TLRPC . TL_cdnFileHash var = var . cdn_file_hashes . get ( var )
var = new HashMap
TLRPC . TL_cdnFileHash var = ( TLRPC . TL_cdnFileHash ) var . objects . get ( var )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_AUDIOS , var . getObjectSize ( ) + 4 )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_VIDEOS , var . getObjectSize ( ) + 4 )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_PHOTOS , var . getObjectSize ( ) + 4 )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_FILES , var . getObjectSize ( ) + 4 )
FileLoader var = var
var = var
var = var = new FileLoader
if ( var == null && var != var )
var = var . get ( var )
var . checkNewDataAvailable ( var )
FileUploadOperation var = new FileUploadOperation ( var , var , var , var )
if ( var == null && var == null )
if ( ! var . remove ( var ) -- )
if ( ! var . remove ( var ) -- )
final Boolean var = new Boolean [ 1 ]
var [ 0 ] = var . containsKey ( var )
var . release ( )
var . acquire ( )
if ( var == 0 && ( var != null && var . size == 0 || var . var . var != null ) = 1 )
loadFile ( null , null , var . var , var , var . size , false , var )
if ( var == 0 && ( var != null && var . var != null ) = 1 )
loadFile ( null , null , var , var , var , true , var )
if ( MessageObject . isVoiceDocument ( var ) || MessageObject . isVoiceWebDocument ( var ) = var != null || MessageObject . isImageWebDocument ( var ) = var = var )
if ( var > 0 )
var . setPaths ( var , var )
if ( var < var )
if ( var != null )
if ( var < var )
if ( var < var )
if ( var . wasStarted ( ) -- )
while ( ! var . isEmpty ( ) )
if ( var . wasStarted ( ) -- )
if ( var != null && var . start ( ) ++ )
if ( var . wasStarted ( ) -- )
while ( ! var . isEmpty ( ) )
TLRPC . TL_webDocument var = ( ( TLRPC . TL_messageMediaInvoice ) var . media ) . photo
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
if ( var . var == null || var . var . var != null || var . var . volume_id == Integer . MIN_VALUE && var . var . local_id < 0 || var . size < 0 )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
if ( var instanceof TLRPC . TL_webDocument )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
var = getInstance . getDirectory ( var )
if ( ( var = var . indexOf ( '/' ) ) != - 1 )
if ( var instanceof TLRPC . TL_webDocument )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var
if ( ! BuildVars . DEBUG_VERSION )
if ( ! BuildVars . DEBUG_VERSION )
Log . e ( "" , var , var )
if ( ! BuildVars . DEBUG_VERSION )
Log . e ( "" , var )
if ( ! BuildVars . DEBUG_VERSION )
if ( ! BuildVars . DEBUG_VERSION )
if ( ! BuildVars . DEBUG_VERSION )
public FileUploadOperation ( String var , boolean var , int var , int var )
if ( var )
TLObject var
FileLog . var ( var )
var = var / var
if ( var == 0 && var == var = true )
var . skip ( var )
if ( var == 0 )
if ( var != var || var == 0 && var == var + 1 = true )
var . update ( var . buffer )
var . file_part = var
var . file_part = var
final long var = var
final int var = var ++
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_AUDIOS , var )
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_VIDEOS , var )
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_PHOTOS , var )
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_FILES , var )
var . remove ( var )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )
if ( var == 0 )
String var = var . getString ( "" )
ConnectionsManager . getInstance ( ) . applyDatacenterAddress ( var , var , var )
var = Utilities . parseLong ( ( String ) var )
var = System . currentTimeMillis ( )
var = System . currentTimeMillis ( )
var . message = var . getString ( "" )
MessagesController . getInstance ( ) . processUpdates ( var , false )
long var
var = Utilities . parseLong ( ( String ) var )
FileLog . d ( "" + var + "" + var + "" + var . getRestrictBackgroundStatus ( ) )
NotificationsController . getInstance ( ) . showSingleBackgroundNotification
ConnectionsManager . onInternalPushReceived ( )
public HttpFileTask ( String var , File var , String var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var . url , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidLoaded , var . url )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var . url , 2 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var . url , 1 )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var + "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageThumbGenerated , var , var )
boolean var = var . encryptionKeyPath != null && var != null && var . getAbsolutePath ( ) . endsWith ( "" )
if ( var . inPurgeable )
var = BitmapFactory . decodeByteArray ( var , 0 , var , var )
float var = var . outWidth
float var = var . outHeight
float var = Math . max ( var / 512 , var / 384 )
if ( var . inPurgeable )
var = BitmapFactory . decodeByteArray ( var , 0 , var , var )
FileLoader . getInstance ( ) . cancelLoadFile ( ( TLRPC . FileLocation ) var , var )
FileLoader . getInstance ( ) . cancelLoadFile ( ( TLRPC . Document ) var )
if ( var instanceof TLRPC . TL_webDocument )
FileLoader . getInstance ( ) . cancelLoadFile ( ( TLRPC . TL_webDocument ) var )
var . setPriority ( Thread . MIN_PRIORITY )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidUpload , var , var , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailUpload , var , var )
if ( MediaController . getInstance ( ) . canSaveToGallery && var != null && var != null && ( var . endsWith ( "" ) || var . endsWith ( "" ) ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidLoaded , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var , var )
FileLog . e ( "" )
FileLoader . getInstance ( ) . setMediaDirs ( var )
FileLoader . getInstance ( ) . setMediaDirs ( var )
HashMap < Integer , File > var = new HashMap
FileLog . var ( "" + var )
FileLog . var ( "" + var )
FileLog . var ( "" + var )
FileLog . var ( "" + var )
FileLog . var ( "" + var )
FileLog . var ( "" )
MediaController . getInstance ( ) . checkSaveToGalleryFiles
Integer var = var . getTag ( var == 0 )
if ( var != null )
if ( var instanceof TLRPC . TL_webDocument )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReplacedPhotoInMemCache , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReplacedPhotoInMemCache , var , var , var )
Integer var = var . getTag ( var != 0 )
if ( var == null )
final Integer var = var
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var )
var . fileLocation = ( TLRPC . TL_fileLocation ) var
generateThumb ( var . getFileType ( ) , var , ( TLRPC . TL_fileLocation ) var , var )
if ( var != null && ! var . startsWith ( "" ) && ! var . startsWith ( "" ) instanceof TLRPC . TL_webDocument && ( ( TLRPC . TL_webDocument ) var ) . mime_type . equals ( "" ) || var instanceof TLRPC . Document && ( MessageObject . isGifDocument ( ( TLRPC . Document ) var ) || MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) ) )
if ( var instanceof TLRPC . TL_webDocument && ( ( TLRPC . TL_webDocument ) var ) . mime_type . equals ( "" ) || var instanceof TLRPC . Document && ( MessageObject . isGifDocument ( ( TLRPC . Document ) var ) || MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) ) )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var + "" )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , var )
FileLoader . getInstance ( ) . loadFile ( var , var , var , var )
FileLoader . getInstance ( ) . loadFile ( ( TLRPC . Document ) var , true , var )
if ( var instanceof TLRPC . TL_webDocument )
if ( var instanceof TLRPC . TL_webDocument )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var ) + "" + var )
HttpFileTask var = new HttpFileTask ( var , var , var )
final HttpFileTask var = new HttpFileTask ( var . url , var . tempFile , var . ext )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . httpFileDidFailedLoad , var . url , 0 )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . url ) . url + "" + var . ext )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . httpFileDidLoaded , var . url , var )
var . local_id = UserConfig . lastLocalId
var . location . local_id = UserConfig . lastLocalId
for ( int var = 0 ; var < var . media . photo . sizes . size ( ) ; var ++ )
for ( int var = 0 ; var < var . media . webpage . photo . sizes . size ( ) ; var ++ )
if ( ( var == null && var == null && var == null ) || ( var != null && ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) && ! ( var instanceof TLRPC . TL_document ) && ! ( var instanceof TLRPC . TL_webDocument ) && ! ( var instanceof TLRPC . TL_documentEncrypted ) ) )
if ( var instanceof TLRPC . TL_webDocument )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageThumbGenerated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReplacedPhotoInMemCache )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReplacedPhotoInMemCache )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageThumbGenerated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageThumbGenerated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageThumbGenerated )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
applyLanguage ( var , var , true )
applyRemoteLanguage ( var , null , true )
applyLanguage ( var , true , false , true , false )
applyLanguage ( var , true , false )
applyLanguage ( var , var , var , false , false )
ConnectionsManager . getInstance ( ) . setLangCode ( var . replace ( "" , "" ) , "" )
applyRemoteLanguage ( var , null , true )
applyRemoteLanguage ( var , null , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
applyLanguage ( var , false , false )
return String . format ( "" , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
int var = int ( ConnectionsManager . getInstance ( ) . getCurrentTime - var / 1000 ) / 60
return String . format ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . var ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , var )
return String . var ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , var )
return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . var ( "" , LocaleController . getString ( "" , R . string . LastSeenDate ) , R . string . LastSeenDate , var )
return String . var ( "" , LocaleController . getString ( "" , R . string . LastSeenDate ) , R . string . LastSeenDate , var )
var = var . startsWith ( "" ) || BuildVars . DEBUG_VERSION && ( var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) )
if ( MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
if ( var == null || var . strings . isEmpty ( ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . reloadInterface )
applyLanguage ( var , true , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . reloadInterface )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . suggestedLangpack )
applyLanguage ( var , true , false )
if ( var == null && var == null || var != null && ! var . isRemote ( ) )
saveRemoteLocaleStrings ( ( TLRPC . TL_langPackDifference ) var )
var . lang_code = var . lang_code . replace ( "" , "" )
saveRemoteLocaleStrings ( ( TLRPC . TL_langPackDifference ) var )
LocationController var = var
var = var
var = var = new LocationController
public LocationController
LocationController var = getInstance
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )
ConnectionsManager . getInstance ( ) . cancelRequest ( var . keyAt ( var ) , false )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
var . peer = MessagesController . getInputPeer ( ( int ) var . did )
var . geo_point . lat = var . getLatitude ( )
var . geo_point . _long = var . getLongitude ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
MessagesController . getInstance ( ) . processUpdates ( var , false )
if ( ! var . isEmpty ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var . isEmpty ( )  )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
var . messageObject = new MessageObject ( var , null , null , false )
var . stopTime = ConnectionsManager . getInstance ( ) . getCurrentTime + var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
return var . containsKey ( var )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )
var . messageObject = new MessageObject ( TLRPC . Message . TLdeserialize ( var , var . readInt32 ( false ) , false ) , var . readInt32 ( false ) , false , null , false )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesController . getInstance ( ) . putUsers ( var , true )
MessagesController . getInstance ( ) . putChats ( var , true )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" ) . stepThis . dispose
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" + var . did ) . stepThis . dispose
SQLitePreparedStatement var = MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" )
NativeByteBuffer var = new NativeByteBuffer ( var . messageObject . messageOwner . getObjectSize ( ) )
var . dispose ( )
var . peer = MessagesController . getInputPeer ( ( int ) var . var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
var . peer = MessagesController . getInputPeer ( ( int ) var . did )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
var = System . currentTimeMillis ( ) - var + var
var . peer = MessagesController . getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )
LocationController . getInstance ( ) . update
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )
if ( LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )  )
ArrayList < LocationController . SharingLocationInfo > var = LocationController . getInstance ( ) . sharingLocationsUI
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
var = LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )
if ( LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )  )
var . setSmallIcon ( R . drawable . notification )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recordProgressChanged , System . currentTimeMillis ( var ) - var , var )
public MediaController var
var . order ( ByteOrder . nativeOrder ( var ) )
for ( int var = 0 ; var < 3 ; var ++ )
FileLog . var ( "" )
if ( var == 0 || var . contains ( var ) var )
roamingDownloadMask [ var ] = roamingDownloadMask [ 0 ]
for ( int var = 0 ; var < 7 ; var ++ )
var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , false )
var = var . getBoolean ( "" , false )
var = var . getBoolean ( "" , true )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileLoadProgressChanged )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileUploadProgressChanged )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . httpFileDidFailedLoad )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Images . Media . EXTERNAL_CONTENT_URI , true , new GalleryObserverExternal var )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Images . Media . INTERNAL_CONTENT_URI , true , new GalleryObserverInternal var )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Video . Media . EXTERNAL_CONTENT_URI , true , new GalleryObserverExternal var )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Video . Media . INTERNAL_CONTENT_URI , true , new GalleryObserverInternal var )
pauseMessage ( getPlayingMessageObject var )
pauseMessage ( getPlayingMessageObject var )
if ( isPlayingMessage ( getPlayingMessageObject var ) && ! isMessagePaused var )
var . setVolume ( var , var )
if ( var != null && ( var != null || var != null || var != null ) && ! var )
var = ( float ) var / ( float ) var . getDuration ( var )
if ( var != null )
var = ( float ) var / ( float ) var . getDuration ( var )
var = ( float ) var / ( float ) var
if ( var == var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , var )
var . clear ( var )
var . clear ( var )
var . clear ( var )
int var = 0
int var = getCurrentDownloadMask var
DownloadObject var = var . get ( var )
DownloadObject var = var . get ( var )
FileLoader . getInstance ( var ) . cancelLoadFile ( ( TLRPC . Document ) var . object )
DownloadObject var = var . get ( var )
if ( ( var & var ) != 0 var )
DownloadObject var = var . get ( var )
DownloadObject var = var . get ( var )
FileLoader . getInstance ( var ) . cancelLoadFile ( ( TLRPC . Document ) var . object )
DownloadObject var = var . get ( var )
DownloadObject var = var . get ( var )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( 0 )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( var )
if ( ( var & var ) == 0 )
if ( ( var & var ) == 0 )
int var
if ( ContactsController . getInstance ( var ) . contactsDict . containsKey ( var . user_id ) = 0 = 1 )
return ( var == MediaController . var || MessageObject . getMessageSize ( var ) <= var ) && ( var & var ) != 0
DownloadObject var = var . get ( var )
var = FileLoader . getAttachFileName ( var )
var = FileLoader . getAttachFileName ( var . object )
var = false
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )
if ( var != null )
if ( var == 0 || var == 2 )
MessagesStorage . getInstance ( var ) . removeFromDownloadQueue ( var . id , var . type , false )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Images . Media . INTERNAL_CONTENT_URI , false , var = new InternalObserver var )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( Uri . parse ( "" ) , false , var = new SmsObserver var )
ApplicationLoader . applicationContext . getContentResolver ( var ) . unregisterContentObserver ( var )
var = new StopMediaObserverRunnable var
Cursor var = ApplicationLoader . applicationContext . getContentResolver ( var ) . query ( var , var , null , null , "" )
if ( var != null && var . toLowerCase ( var ) . contains ( "" ) || var != null && var . toLowerCase ( var ) . contains ( "" ) || var != null && var . toLowerCase ( var ) . contains ( "" ) || var != null && var . toLowerCase ( var ) . contains ( "" ) )
addLoadingFileObserver ( var , null , var )
ArrayList < WeakReference < FileDownloadProgressListener > > var = var . get ( var )
var . put ( var . getObserverTag ( var ) , var )
if ( var . get ( var ) == null || var . get ( var ) == var )
if ( var . isEmpty ( var ) )
addLoadingFileObserver ( var . getKey ( var ) , var . getValue ( var ) )
if ( var && var != null )
String var = FileLoader . getAttachFileName ( var . getDocument ( var ) )
var . mediaExists = true
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
WeakReference < FileDownloadProgressListener > var = var . get ( var )
if ( var == NotificationCenter . FileUploadProgressChanged )
Float var = ( Float ) var [ 1 ]
ArrayList < SendMessagesHelper . DelayedMessage > var = SendMessagesHelper . getInstance ( var ) . getDelayedMessages ( var )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
SendMessagesHelper . DelayedMessage var = var . get ( var )
long var = var . peer
MessagesController . getInstance ( var ) . sendTyping ( var , 4 , 0 )
TLRPC . Document var = var . obj . getDocument ( var )
MessagesController . getInstance ( var ) . sendTyping ( var , 8 , 0 )
MessagesController . getInstance ( var ) . sendTyping ( var , 5 , 0 )
MessagesController . getInstance ( var ) . sendTyping ( var , 4 , 0 )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var = var . get ( 0 )
if ( ! var . isEmpty ( var ) = true )
var = true
AudioBuffer var = null
var . setNotificationMarkerPosition ( 1 )
cleanupPlayer ( true , true , true )
var . add ( var )
if ( VoIPService . getSharedInstance ( var ) != null )
if ( var > var && var == 0 var )
if ( var < var ++ )
if ( var < 0 && var < 0 )
if ( var == var && var < - var var )
if ( var > - var ++ )
FileLog . e ( "" )
FileLog . e ( "" )
if ( ! var . playFirstUnreadVoiceMessage ( var ) )
startRecording ( var . getDialogId ( var ) , null )
FileLog . e ( "" )
if ( var != null && ( var . isVoice ( var ) || var . isRoundVideo ( var ) ) )
FileLog . e ( "" )
FileLog . e ( "" )
if ( var && var != null && var . isHeld ( var ) )
FileLog . e ( "" )
if ( var != 0 && var == var && Math . abs ( System . currentTimeMillis ( var ) - var ) > 1000 )
AudioManager var = NotificationsController . getInstance ( var ) . var
startRecording ( var . getDialogId ( var ) , null )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . audioRouteChanged , var )
if ( ! var && ( var == null || ! var . isVoice ( var ) && ! var . isRoundVideo ( var ) ) )
if ( var && var != null && var . isHeld ( var ) )
var . stop ( var )
if ( var != null )
var . pause ( var )
var . releasePlayer ( var )
var . getWindow ( var ) . clearFlags ( WindowManager . LayoutParams . FLAG_KEEP_SCREEN_ON )
FileLoader . getInstance ( var ) . cancelLoadFile ( var . getDocument ( var ) )
var . audioProgress = 0.0f
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )
NotificationsController . getInstance ( var ) . audioManager . abandonAudioFocus ( this )
if ( var && var . get ( 0 ) == var var )
var . remove ( 0 )
if ( var != null var )
if ( ! var . isRoundVideo ( var ) && var != null )
if ( ( var . isVoice ( var ) || var . isRoundVideo ( var ) ) && var . getId ( var ) != 0 var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingDidReset , var . getId ( var ) , var )
if ( ! var && ! var )
int var = int ( var . getDuration ( var ) * var )
ArrayList < MessageObject > var = new ArrayList var ( var )
var = ! var . isEmpty ( var )
if ( var . isMusic ( var ) )
SharedMediaQuery . var ( var . getDialogId ( var ) , var . get ( 0 ) . getIdWithChannel var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )
if ( var . isEmpty ( var ) )
MediaController . getInstance ( var ) . seekToProgress ( var , 0 )
if ( var == null || var . size ( var ) < 2 )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , false , 0 )
if ( ( getCurrentDownloadMask var & var ) == 0 )
if ( ! canDownloadMedia ( var ) )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , false , 0 )
var = new HashMap var ( var )
var = NotificationsController . getInstance ( var ) . audioManager . requestAudioFocus ( this , AudioManager . STREAM_VOICE_CALL , AudioManager . AUDIOFOCUS_GAIN )
if ( ! var )
if ( ! var . isOut ( var ) && var . isContentUnread ( var ) )
MessagesController . getInstance ( var ) . markMessageContentAsRead ( var )
if ( var != null = false )
if ( var . messageOwner . attachPath != null && var . messageOwner . attachPath . var ( var ) > 0 )
if ( ! var . exists ( var ) = null )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , false , 0 )
if ( var . getDocument ( var ) != null var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )
var [ 0 ] = openOpusFile ( var . getAbsolutePath ( var ) ) != 0
var . acquire ( var )
var = getTotalPcmDuration var
var . setStereoVolume ( 1.0f , 1.0f )
var . release ( var )
var . setDataSource ( var . getAbsolutePath ( var ) )
var . prepare ( var )
if ( var . isVoice ( var ) var )
if ( var != null )
if ( ! var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingDidStarted , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )
int var = int ( var . getDuration ( var ) * var . audioProgress )
var . audioProgress = 0
var . audioProgressSec = 0
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )
if ( var . audioProgress == 1 )
var . audioProgress = 0
if ( var != null && var . audioProgress != 0 )
var = long ( var * var . audioProgress )
var . addAll ( var )
var . clear ( var )
if ( var . isMusic ( var ) var )
if ( var == null && var == null && var == null || var == null )
var . pause ( var )
FileLog . var ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( var != var )
var . clear ( var )
if ( var == null && var == null && var == null || var == null || var == null || var != null && var . getId ( var ) != var . getId ( var ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )
if ( var == null && var == null && var == null || var == null || var == null || var != null && var . getId ( var ) != var . getId ( var ) )
var . play ( var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )
if ( var == null && var == null && var == null || var == null || var == null )
Vibrator var = ( Vibrator ) ApplicationLoader . applicationContext . getSystemService ( Context . VIBRATOR_SERVICE )
var . id = UserConfig . lastLocalId
var . user_id = UserConfig . getClientUserId ( var )
UserConfig . lastLocalId --
UserConfig . saveConfig ( false )
var . delete ( var )
final String var = FileLoader . getPathToMessage ( var . messageOwner ) . getAbsolutePath var
final byte var var = MediaController . getInstance ( var ) . getWaveform ( var )
MessagesStorage . getInstance ( var ) . putMessages ( var , var . getDialogId ( var ) , - 1 , 0 , false )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var . getDialogId ( var ) , var )
var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var . getAbsolutePath ( var ) , var , var , null , null , 0 )
Vibrator var = ( Vibrator ) ApplicationLoader . applicationContext . getSystemService ( Context . VIBRATOR_SERVICE )
if ( var != null && var . var ( var ) != 0 )
if ( ! var . exists ( var ) = null )
long var = var . var ( var )
String var = getFileName ( var )
int var = UserConfig . lastLocalId
UserConfig . saveConfig ( false )
var = ! var
File var = new File ( Environment . getExternalStorageDirectory ( var ) , "" )
if ( var . isDirectory ( var ) )
if ( var . isDirectory ( var ) )
if ( var . isDirectory ( var ) )
HashMap < Integer , AlbumEntry > var = new HashMap var ( var )
HashMap < Integer , AlbumEntry > var = new HashMap var ( var )
var = MediaStore . Images . Media . query ( ApplicationLoader . applicationContext . getContentResolver ( var ) , MediaStore . Video . Media . EXTERNAL_CONTENT_URI , var , null , null , MediaStore . Video . Media . DATE_TAKEN + "" )
if ( var == null var )
if ( ! var . isEmpty ( var ) )
if ( ! var . isEmpty ( var ) )
if ( var . getId ( var ) != 0 )
if ( ! var . getName ( var ) . equals ( "" ) . getName ( var ) . equals ( "" ) )
if ( var . getName ( var ) . equals ( "" ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FilePreparingFailed , var , var . toString ( var ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FilePreparingStarted , var , var . toString ( var ) )
int var = selectTrack ( var , var )
if ( var >= 0 )
if ( var > 0 && var == - 1 )
if ( var != 0 && var != 0 var )
var = new MP4Builder var . createMovie ( var )
if ( var != var || var != var || var != 0 || var . videoEditedInfo . roundVideo var )
var = selectTrack ( var , false )
if ( Build . VERSION . SDK_INT < 18 var )
FileLog . e ( "" + var . getName ( var ) + "" + var + "" + Build . MODEL )
FileLog . e ( "" + var )
var . configure ( var , var . getSurface ( var ) , null , 0 )
FileLog . e ( "" + var )
if ( var . presentationTimeUs < var var )
FileLog . e ( "" + var + "" + var . presentationTimeUs )
if ( var >= 0 var )
FileLog . var ( "" )
FileLog . var ( "" )
FileLog . var ( "" + ( System . currentTimeMillis ( var ) - var ) )
public MessageObject ( TLRPC . Message var , AbstractMap < Integer , TLRPC . User > , TLRPC . User var , AbstractMap < Integer , TLRPC . Chat > , TLRPC . Chat var , boolean var , long var )
var = new MessageObject ( var . replyMessage , var , var , false )
if ( var != null )
var = MessagesController . getInstance ( ) . getUser ( var . from_id )
if ( var != null )
var = MessagesController . getInstance ( ) . getUser ( var . action . user_id )
if ( var . action . user_id == UserConfig . getClientUserId ( ) )
if ( var != null )
var = MessagesController . getInstance ( ) . getUser ( var )
if ( var == UserConfig . getClientUserId ( ) )
if ( var == UserConfig . getClientUserId ( ) )
var = replaceWithLink ( LocaleController . getString ( "" , R . string . ActionYouAddUser ) , R . string . ActionYouAddUser , "" , var . action . var , var )
var = replaceWithLink ( LocaleController . getString ( "" , R . string . ActionAddUser ) , R . string . ActionAddUser , "" , var . action . var , var )
TLRPC . User var = UserConfig . getCurrentUser ( )
if ( var != null )
var = MessagesController . getInstance ( ) . getUser ( var . to_id . user_id )
if ( var . from_id == UserConfig . getClientUserId ( ) )
if ( var != null )
var = MessagesController . getInstance ( ) . getUser ( var )
var = new VideoEditedInfo
var . roundVideo = isRoundVideo
MessageObject var = new MessageObject ( var , null , false )
public MessageObject ( TLRPC . TL_channelAdminLogEvent var , ArrayList < MessageObject > var , HashMap < String , ArrayList < MessageObject > > , ArrayList < MessageObject > var , TLRPC . Chat var , int var )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . action . participant . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . action . prev_participant . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . action . prev_participant . user_id )
var . var = "" + MessagesController . getInstance ( ) . linkPrefix + "" + var
var . media . webpage . description = "" + MessagesController . getInstance ( ) . linkPrefix + "" + ( ( TLRPC . TL_channelAdminLogEventActionChangeUsername ) var . action ) . prev_value
if ( var . media != null && ! ( var . media instanceof TLRPC . TL_messageMediaEmpty ) && ! ( var . media instanceof TLRPC . TL_messageMediaWebPage ) && TextUtils . isEmpty ( var . var ) )
if ( TextUtils . isEmpty ( var . media . var ) )
var . media . webpage . description = var . media . var
MessageObject var = new MessageObject ( var , null , null , true , var )
createDateArray ( var , var , var )
createDateArray ( var , var , var )
if ( ! var . parseString ( var . var ) = null )
var = MessagesController . getInstance ( ) . getUser ( var . from_id )
if ( var != null && var . id == UserConfig . getClientUserId ( ) )
if ( var != null && var . id == UserConfig . getClientUserId ( ) )
var = MessagesController . getInstance ( ) . getUser ( ( int ) getDialogId )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )
TLRPC . TL_webDocument var = ( ( TLRPC . TL_messageMediaInvoice ) var . media ) . var
if ( var != null )
var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )
if ( ( var == '@' || var == '#' || var == '/' ) && var == 0 || var != 0 && ( var . charAt ( var - 1 ) == ' ' || var . charAt ( var - 1 ) == '\n' ) )
var = Emoji . replaceEmoji ( var . media . var , Theme . chat_msgTextPaint . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )
if ( var . charAt ( var ) != '@' && var . charAt ( var ) != '#' && var . charAt ( var ) != '/' ++ )
if ( var . length ( ) < 200 )
if ( var instanceof Spannable && var . length ( ) < 200 )
int var = var . entities . size ( )
if ( var . offset + var . length > var . message . length ( ) )
if ( var instanceof TLRPC . TL_messageEntityBold || var instanceof TLRPC . TL_messageEntityItalic || var instanceof TLRPC . TL_messageEntityCode || var instanceof TLRPC . TL_messageEntityPre || var instanceof TLRPC . TL_messageEntityMentionName || var instanceof TLRPC . TL_inputMessageEntityMentionName )
var . setSpan ( new URLSpanMono ( var , var . offset , var . offset + var . length , isOutOwner ) , var . offset , var . offset + var . length , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_messageEntityMentionName ) var ) . user_id , isOutOwner ) + ( ( TLRPC . TL_messageEntityMentionName ) var ) . user_id , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , isOutOwner ) + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setSpan ( new URLSpanBotCommand ( var , isOutOwner ) , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( var instanceof TLRPC . TL_messageEntityHashtag || var instanceof TLRPC . TL_messageEntityMention )
var . setSpan ( new URLSpan ( "" + var ) + var , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( var && Build . VERSION . SDK_INT >= Build . VERSION_CODES . N )
if ( var == 0 = var )
int var = UserConfig . getClientUserId ( )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . fwd_from . saved_from_peer . channel_id )
var = Math . max ( 0 , var . destroyTime - ConnectionsManager . getInstance ( ) . getCurrentTime )
return var != null && var . mime_type . startsWith ( "" )
if ( isOutOwner || var . fwd_from != null && var . fwd_from . from_id == UserConfig . getClientUserId ( ) )
var = MessagesController . getInstance ( ) . getChat ( var . fwd_from . channel_id )
var = MessagesController . getInstance ( ) . getUser ( var . fwd_from . from_id )
var = MessagesController . getInstance ( ) . getChat ( - var . from_id )
var = MessagesController . getInstance ( ) . getUser ( var . from_id )
return ( var . flags & TLRPC . MESSAGE_FLAG_FWD ) != 0 && var . fwd_from != null && var . fwd_from . saved_from_peer == null && UserConfig . getClientUserId ( ) != getDialogId
return canEditMessageAnytime ( var , var )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )
if ( Math . abs ( var . date - ConnectionsManager . getInstance ( ) . getCurrentTime ) > MessagesController . getInstance ( ) . maxEditTime )
return ( var . out || var . from_id == UserConfig . getClientUserId ( ) ) && ( var . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaDocument && ! isStickerMessage ( var ) || var . media instanceof TLRPC . TL_messageMediaEmpty || var . media instanceof TLRPC . TL_messageMediaWebPage || var . media == null )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . fwd_from . channel_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . fwd_from . from_id )
if ( var == 3 && isSecretPhoto )
TLRPC . DraftMessage var = DraftQuery . getDraft ( var . id )
var = DraftQuery . getDraft ( var . id )
return AndroidUtilities . compare ( var . qts , var . qts )
var = var
var = var = new MessagesController
public MessagesController
MessagesStorage . getInstance ( )
LocationController . getInstance ( )
MessagesController var = getInstance
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidUpload )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidFailUpload )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . updateMessageMedia )
if ( var != null && var . length ( ) != 0 )
byte var = Base64 . decode ( var , Base64 . DEFAULT )
LocaleController . getInstance ( ) . loadRemoteLanguages
var = var . chat_big_size
var = var . disabled_features
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . writeInt32 ( var . size ( ) )
var . serializeToStream ( var )
if ( var . length ( ) != 0 )
var . putString ( "" , var )
if ( var . var . equals ( var ) )
AlertDialog . Builder var = new AlertDialog . Builder ( var . getParentActivity ( ) )
var . setTitle ( "" )
var . setMessage ( var . description )
var . showDialog ( var . create ( ) )
if ( var . id == UserConfig . getClientUserId ( ) )
TLRPC . User var = getInstance . getUser ( var )
return getInputChannel ( getInstance . getChat ( var ) )
TLRPC . Chat var = getInstance . getChat ( - var )
TLRPC . User var = getInstance . getUser ( var )
TLRPC . Chat var = getInstance . getChat ( - var )
TLRPC . User var = getInstance . getUser ( var )
TLRPC . User var = getUser ( UserConfig . getClientUserId ( ) )
var = UserConfig . getCurrentUser ( )
UserConfig . setCurrentUser ( var )
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
UserConfig . saveConfig ( true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
var = var . remove ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
ContactsController . getInstance ( ) . cleanup
NotificationsController . getInstance ( ) . cleanup
SendMessagesHelper . getInstance ( ) . cleanup
SecretChatHelper . getInstance ( ) . cleanup
LocationController . getInstance ( ) . cleanup
StickersQuery . cleanup ( )
SearchQuery . cleanup ( )
DraftQuery . cleanup ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . getEncryptedChat ( var , var , var )
var . acquire ( )
if ( var . id == UserConfig . getClientUserId ( ) )
UserConfig . setCurrentUser ( var )
UserConfig . saveConfig ( true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . channelRightsUpdated , var )
MessagesStorage . getInstance ( ) . putChannelAdmins ( var , var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )
MessagesStorage . getInstance ( ) . updateChatInfo ( var . full_chat , false )
BotQuery . putBotInfo ( var )
StickersQuery . getGroupStickerSetById ( var . full_chat . stickerset )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var . full_chat , var , false , null )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )
BotQuery . putBotInfo ( var . bot_info )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . botInfoDidLoaded , var . bot_info , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )
final TLRPC . Chat var = ChatObject . getChatByDialog ( var )
final HashMap < Integer , TLRPC . User > var = new HashMap
final HashMap < Integer , TLRPC . Chat > var = new HashMap
var . add ( new MessageObject ( var , var , var , true ) , var , var , true )
MessagesStorage . getInstance ( ) . putMessages ( var , var , - 1 , 0 , false )
var = var . remove ( var . getId ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
var . peer = MessagesController . getInputPeer ( var . id )
var . peer = MessagesController . getInputPeer ( - var . id )
if ( var != null != null )
var . peer = MessagesController . getInputPeer ( - var . id )
if ( var != null )
var . peer = MessagesController . getInputPeer ( var . id )
if ( var . containsKey ( var ) )
if ( var != null != null )
var . peer = MessagesController . getInputPeer ( var . id )
if ( var != null )
var . peer = MessagesController . getInputPeer ( - var . id )
var . peer = MessagesController . getInputPeer ( var . id )
var . peer = MessagesController . getInputPeer ( - var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , var )
FileLog . e ( "" + var + "" + var + "" + var )
Integer var = var . get ( var )
if ( var == null )
var = MessagesStorage . getInstance ( ) . getChannelPtsSync ( var )
FileLog . e ( "" )
MessagesStorage . getInstance ( ) . saveChannelPts ( var , var )
Long var = var . get ( var )
Boolean var = var . get ( var )
if ( var || var == null || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )
FileLog . e ( "" + var + "" + var )
if ( var == null )
FileLog . e ( "" + var + "" + var + "" + var + "" + var )
if ( MessagesStorage . lastPtsValue + var == var . lastPtsValue != var )
FileLog . e ( "" )
MessagesStorage . lastPtsValue = var
MessagesStorage . getInstance ( ) . saveDiffParams ( MessagesStorage . lastSeqValue , MessagesStorage . lastPtsValue , MessagesStorage . lastDateValue , MessagesStorage . lastQtsValue )
if ( MessagesStorage . lastPtsValue != var )
FileLog . e ( "" + var + "" + var )
if ( MessagesStorage . lastSeqValue + 1 == var . lastSeqValue != var )
FileLog . e ( "" )
MessagesStorage . lastSeqValue = var
MessagesStorage . lastDateValue = var
if ( MessagesStorage . lastSeqValue != var )
FileLog . e ( "" + var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didCreatedNewDeleteTask , var )
MessagesStorage . getInstance ( ) . getNewTask ( var , var )
MessagesStorage . getInstance ( ) . getDialogPhotos ( var , var , var , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )
var . peer = MessagesController . getInputPeer ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
MessagesStorage . getInstance ( ) . putBlockedUsers ( var , false )
var . channel = MessagesController . getInputChannel ( var )
var . user_id = MessagesController . getInputUser ( var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )
MessagesController . getInstance ( ) . loadFullChat ( var , 0 , true )
AlertsCreator . processError ( var , var , var , ! var )
var . channel = MessagesController . getInputChannel ( var )
var . user_id = MessagesController . getInputUser ( var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )
MessagesController . getInstance ( ) . loadFullChat ( var , 0 , true )
AlertsCreator . processError ( var , var , var , ! var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
MessagesStorage . getInstance ( ) . deleteBlockedUser ( var . id )
if ( ! UserConfig . isClientActivated ( ) || var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )
MessagesStorage . getInstance ( ) . putBlockedUsers ( var , true )
if ( var . isEmpty ( ) && var && ! UserConfig . blockedUsersLoaded var )
UserConfig . blockedUsersLoaded = true
UserConfig . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
UserConfig . getCurrentUser ( ) . var = new TLRPC . TL_userProfilePhotoEmpty ( )
TLRPC . User var = getUser ( UserConfig . getClientUserId ( ) )
var = UserConfig . getCurrentUser ( )
var . var = UserConfig . getCurrentUser ( ) . var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
TLRPC . User var = getUser ( UserConfig . getClientUserId ( ) )
var = UserConfig . getCurrentUser ( )
UserConfig . setCurrentUser ( var )
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . id )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
UserConfig . saveConfig ( true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )
MessagesStorage . getInstance ( ) . putDialogPhotos ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogPhotosLoaded , var , var , var , var , var . photos )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . location . volume_id + "" + var . location . local_id + ""
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
MessagesStorage . getInstance ( ) . markMessagesAsDeleted ( var , true , var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( var , null , true , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )
var = MessagesStorage . getInstance ( ) . createPendingTask ( var )
SecretChatHelper . getInstance ( ) . sendMessagesDeleteMessage ( var , var , null )
MessagesStorage . getInstance ( ) . deleteUserChannelHistory ( var . id , var . id )
MessagesStorage . getInstance ( ) . deleteDialog ( var , var )
AndroidUtilities . uninstallShortcut ( var )
MessagesStorage . getInstance ( ) . deleteDialog ( var , var )
var . remove ( - ( int ) var )
MessageObject var = var . remove ( var . id )
var = var . remove ( var . top_message )
var . out = UserConfig . getClientUserId ( ) == var
var . from_id = UserConfig . getClientUserId ( )
final MessageObject var = new MessageObject ( var , null , var . contains ( var . dialog_id ) . dialog_id )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , false )
NotificationsController . getInstance ( ) . removeNotificationsForDialog ( var )
SecretChatHelper . getInstance ( ) . sendClearHistoryMessage ( getEncryptedChat ( var ) , null )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )
MessagesStorage . getInstance ( ) . updateChannelUsers ( var , var . participants )
MessagesStorage . getInstance ( ) . loadChatInfo ( var , var , var , false )
StickersQuery . getGroupStickerSetById ( var . stickerset )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , var , var )
if ( UserConfig . isClientActivated ( ) )
if ( ConnectionsManager . getInstance ( ) . getPauseTime == 0 && ApplicationLoader . isScreenOn && ! ApplicationLoader . mainInterfacePausedStageQueue != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( ) . getPauseTime ) >= 2000 )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
if ( var != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( ) . getPauseTime ) >= 2000 )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
if ( ! var . isEmpty ( ) )
ArrayList < Integer > var = new ArrayList ( var . keySet ( ) )
int var = var . get ( var )
Long var = var . get ( var )
if ( var != null && var + 1500 < var )
FileLog . e ( "" + var + "" )
FileLog . e ( var + "" )
var . id = var . get ( var )
MessagesStorage . getInstance ( ) . putChannelViews ( var , var . peer instanceof TLRPC . TL_inputPeerChannel )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedMessagesViews , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
int var = var . get ( var )
Long var = var . get ( var )
if ( var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
LocationController . getInstance ( ) . update
final HashMap < Long , CharSequence > var = new HashMap
final HashMap < Long , Integer > var = new HashMap
HashMap < Long , Boolean > var = var . get ( var )
HashMap < Long , Boolean > var = var . get ( var )
var = new HashMap
HashMap < Long , Boolean > var = var . get ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )
HashMap < Long , Boolean > var = var . get ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )
FileLog . e ( "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )
MessagesStorage . getInstance ( ) . getMessages ( var , var , var , var , var , var , var , var , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )
MessagesStorage . getInstance ( ) . putMessages ( var , var , - 2 , 0 , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
FileLog . e ( "" + var . messages . size ( ) + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )
if ( var == null )
var = MessagesStorage . getInstance ( ) . getChannelPtsSync ( var )
final HashMap < Integer , TLRPC . User > var = new HashMap
final HashMap < Integer , TLRPC . Chat > var = new HashMap
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( false , var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )
MessagesStorage . getInstance ( ) . putMessages ( var , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
FileLog . e ( "" + var + "" + var + "" + var )
if ( UserConfig . dialogsLoadOffsetId != - 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
var . offset_id = UserConfig . dialogsLoadOffsetId
var . offset_date = UserConfig . dialogsLoadOffsetDate
var . offset_peer . channel_id = UserConfig . dialogsLoadOffsetChannelId
if ( UserConfig . dialogsLoadOffsetUserId != 0 )
var . offset_peer . user_id = UserConfig . dialogsLoadOffsetUserId
var . offset_peer . chat_id = UserConfig . dialogsLoadOffsetChatId
var . offset_peer . access_hash = UserConfig . dialogsLoadOffsetAccess
final HashMap < Long , TLRPC . TL_dialog > var = new HashMap
final HashMap < Long , MessageObject > var = new HashMap
final HashMap < Integer , TLRPC . User > var = new HashMap
final HashMap < Integer , TLRPC . Chat > var = new HashMap
MessageObject var = new MessageObject ( var , var , var , false )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesStorage . getInstance ( ) . resetDialogs ( var , var , var , var , var , var , var , var , var , var )
MessagesStorage . lastPtsValue = var
MessagesStorage . lastDateValue = var
MessagesStorage . lastQtsValue = var
if ( ! UserConfig . draftsLoaded )
DraftQuery . loadDrafts ( )
Long var = var . getKey ( )
TLRPC . TL_dialog var = var . getValue ( )
DraftQuery . saveDraft ( var . id , var . draft , null , false )
var . addAll ( var . values ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
FileLog . e ( "" + var + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )
FileLog . e ( "" + var . id + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var . date * 1000 ) long ) var . date * 1000 )
FileLog . e ( "" + var . id + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var . date * 1000 ) long ) var . date * 1000 )
FileLog . e ( "" )
UserConfig . dialogsLoadOffsetDate = UserConfig . migrateOffsetDate
UserConfig . dialogsLoadOffsetUserId = UserConfig . migrateOffsetUserId
UserConfig . dialogsLoadOffsetChatId = UserConfig . migrateOffsetChatId
UserConfig . dialogsLoadOffsetChannelId = UserConfig . migrateOffsetChannelId
UserConfig . dialogsLoadOffsetAccess = UserConfig . migrateOffsetAccess
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var . toString ( ) ) . US , "" , var . toString ( ) )
FileLog . e ( "" + var . var . size ( ) )
var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )
UserConfig . dialogsLoadOffsetId = UserConfig . migrateOffsetId
UserConfig . dialogsLoadOffsetDate = UserConfig . migrateOffsetDate
UserConfig . dialogsLoadOffsetUserId = UserConfig . migrateOffsetUserId
UserConfig . dialogsLoadOffsetChatId = UserConfig . migrateOffsetChatId
UserConfig . dialogsLoadOffsetChannelId = UserConfig . migrateOffsetChannelId
UserConfig . dialogsLoadOffsetAccess = UserConfig . migrateOffsetAccess
FileLog . e ( "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )
TLRPC . TL_dialog var = var . remove ( MessageObject . getDialogId ( var ) )
UserConfig . dialogsLoadOffsetId = UserConfig . migrateOffsetId
UserConfig . dialogsLoadOffsetDate = UserConfig . migrateOffsetDate
UserConfig . dialogsLoadOffsetUserId = UserConfig . migrateOffsetUserId
UserConfig . dialogsLoadOffsetChatId = UserConfig . migrateOffsetChatId
UserConfig . dialogsLoadOffsetChannelId = UserConfig . migrateOffsetChannelId
UserConfig . dialogsLoadOffsetAccess = UserConfig . migrateOffsetAccess
FileLog . e ( "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )
UserConfig . migrateOffsetChatId = 0
UserConfig . migrateOffsetUserId = 0
UserConfig . migrateOffsetChannelId = 0
UserConfig . migrateOffsetUserId = 0
if ( var . id == UserConfig . migrateOffsetChatId )
UserConfig . migrateOffsetUserId = var . to_id . user_id
UserConfig . migrateOffsetChatId = 0
UserConfig . migrateOffsetChannelId = 0
FileLog . e ( "" + var + "" + var . var . size ( ) )
if ( UserConfig . dialogsLoadOffsetId == Integer . MAX_VALUE )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
final HashMap < Long , TLRPC . TL_dialog > var = new HashMap
final HashMap < Long , MessageObject > var = new HashMap
final HashMap < Integer , TLRPC . User > var = new HashMap
final HashMap < Integer , TLRPC . Chat > var = new HashMap
if ( var != null && var . left )
MessageObject var = new MessageObject ( var , var , var , false )
if ( ! var && ! var && UserConfig . dialogsLoadOffsetId != - 1 && var == 0 )
if ( var != null && var . id != UserConfig . dialogsLoadOffsetId )
UserConfig . dialogsLoadOffsetId = var . id
UserConfig . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChannelId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetChannelId = 0
UserConfig . dialogsLoadOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChatId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetUserId = var . to_id . user_id
UserConfig . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetChannelId = 0
if ( var . id == UserConfig . dialogsLoadOffsetUserId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash
UserConfig . saveConfig ( false )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
if ( ! UserConfig . draftsLoaded )
DraftQuery . loadDrafts ( )
SecretChatHelper . getInstance ( ) . sendNotifyLayerMessage ( var , null )
Long var = var . getKey ( )
TLRPC . TL_dialog var = var . getValue ( )
DraftQuery . saveDraft ( var . id , var . draft , null , false )
var . addAll ( var . values ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
UserConfig . migrateOffsetId = var
UserConfig . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )
migrateDialogs ( UserConfig . migrateOffsetId , UserConfig . migrateOffsetDate , UserConfig . migrateOffsetUserId , UserConfig . migrateOffsetChatId , UserConfig . migrateOffsetChannelId , UserConfig . migrateOffsetAccess )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( var . mute_until > ConnectionsManager . getInstance ( ) . getCurrentTime )
if ( var . mute_until > ConnectionsManager . getInstance ( ) . getCurrentTime + 60 * 60 * 24 * 365 )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , ( ( long ) var << 32 ) | 1 )
if ( var != 0 && var != 1 )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
var = var . edit ( )
if ( var . notify_settings . mute_until != 0 )
if ( var . notify_settings . mute_until > ConnectionsManager . getInstance ( ) . getCurrentTime + 60 * 60 * 24 * 365 )
var . peer = MessagesController . getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( ) . resetMentionsCount ( var , var )
var . unread_count = var . getValue ( )
Long var = var . getKey ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMentionsCount , var . id , var . unread_mentions_count )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
var . writeInt32 ( 8 )
MessagesStorage . getInstance ( ) . putMessages ( var . messages , true , true , false , MediaController . getInstance ( ) . getAutodownloadMask , true )
var . remove ( var )
final HashMap < Long , MessageObject > var = new HashMap
final HashMap < Integer , TLRPC . User > var = new HashMap
final HashMap < Integer , TLRPC . Chat > var = new HashMap
final HashMap < Long , Integer > var = new HashMap
MessageObject var = new MessageObject ( var , var , var , false )
Long var = var . getKey ( )
TLRPC . TL_dialog var = var . getValue ( )
if ( var . unread_mentions_count != var . unread_mentions_count )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMentionsCount , var . id , var . unread_mentions_count )
var . addAll ( var . values ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processDialogsUpdateRead ( var )
MessagesStorage . getInstance ( ) . markMentionMessageAsRead ( var . getId ( ) , var . messageOwner . to_id . channel_id , var . getDialogId ( ) )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
MessagesStorage . getInstance ( ) . markMentionMessageAsRead ( var , var , var )
MessagesStorage . getInstance ( ) . createTaskForMid ( var , var , var , var , var , false )
SecretChatHelper . getInstance ( ) . sendMessagesReadMessage ( var , var , null )
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . id , var , var , 0 , var )
var . var = var
var . var = var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
HashMap < Long , Integer > var = new HashMap
NotificationsController . getInstance ( ) . processDialogsUpdateRead ( var )
HashMap < Long , Integer > var = new HashMap
NotificationsController . getInstance ( ) . processDialogsUpdateRead ( var )
var . var = var
NotificationsController . getInstance ( ) . processReadMessages ( null , var , var , 0 , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
var . put ( var , 0 )
if ( var . ttl > 0 && var )
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . id , var , var , 0 , null )
UserConfig . lastBroadcastId --
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )
var . notify_settings = new TLRPC . TL_peerNotifySettingsEmpty ( )
var . participants . admin_id = UserConfig . getClientUserId ( )
var . inviter_id = UserConfig . getClientUserId ( )
MessagesStorage . getInstance ( ) . updateChatInfo ( var , false )
var . local_id = var . id = UserConfig . getNewMessageId ( )
var . from_id = UserConfig . getClientUserId ( )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
UserConfig . saveConfig ( false )
MessageObject var = new MessageObject ( var , var , true )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidCreated , var . id )
AlertsCreator . processError ( var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidCreated , var . var . get ( 0 ) . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
AlertsCreator . processError ( var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidCreated , var . var . get ( 0 ) . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
AlertsCreator . processError ( var , var , var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
MessagesStorage . getInstance ( ) . updateChatInfo ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
AlertsCreator . processError ( var , var , var , var && ! var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , true , var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )
var . inviter_id = UserConfig . getClientUserId ( )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
MessagesStorage . getInstance ( ) . updateChatInfo ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( var . id == UserConfig . getClientUserId ( ) )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )
MessagesStorage . getInstance ( ) . updateChatInfo ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( ChatObject . isChannel ( var ) )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( ChatObject . isChannel ( var ) )
if ( UserConfig . registeredForPush && UserConfig . pushString . length ( ) == 0 )
var . token = UserConfig . pushString
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit
var . remove ( "" ) . commit
UserConfig . clearConfig ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . appDidLogout )
ContactsController . getInstance ( ) . deleteAllAppAccounts
if ( BuildVars . DEBUG_VERSION || UserConfig . lastUpdateVersion == null || UserConfig . lastUpdateVersion . equals ( BuildVars . BUILD_VERSION_STRING ) )
var . prev_app_version = UserConfig . lastUpdateVersion
UserConfig . lastUpdateVersion = BuildVars . BUILD_VERSION_STRING
UserConfig . saveConfig ( false )
if ( var == null || var . length ( ) == 0 || var || UserConfig . getClientUserId ( ) == 0 )
if ( UserConfig . registeredForPush && var . equals ( UserConfig . pushString ) )
FileLog . e ( "" )
UserConfig . registeredForPush = true
UserConfig . pushString = var
UserConfig . saveConfig ( false )
MessagesStorage . lastDateValue = var . date
MessagesStorage . lastPtsValue = var . pts
MessagesStorage . lastSeqValue = var . seq
MessagesStorage . lastQtsValue = var . qts
if ( MessagesStorage . lastSeqValue + 1 == var || MessagesStorage . lastSeqValue == var . lastSeqValue < var )
if ( MessagesStorage . lastSeqValue < var )
if ( var . pts <= MessagesStorage . lastQtsValue . lastQtsValue + var . var . size ( ) == var . pts )
if ( MessagesStorage . lastQtsValue + var . var . size ( ) == var . pts )
Integer var = var . get ( var )
if ( var . isEmpty ( ) || var == null )
Long var = var . get ( var )
if ( var != null && ( var || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 ) )
FileLog . e ( "" + var + "" )
FileLog . e ( "" + var + "" )
var . remove ( var )
var . remove ( var )
FileLog . e ( "" + var + "" )
MessagesStorage . lastSeqValue = getUpdateSeq ( var )
MessagesStorage . lastPtsValue = var . pts
MessagesStorage . lastQtsValue = var . pts
FileLog . e ( "" )
FileLog . e ( "" )
FileLog . e ( "" )
var . remove ( var . id )
Boolean var = var . get ( var )
if ( var != null )
if ( var == null )
var = MessagesStorage . getInstance ( ) . getChatSync ( var )
var = MessagesStorage . getInstance ( ) . createPendingTask ( var )
FileLog . var ( "" + var + "" + var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )
final HashMap < Integer , long > var = new HashMap
long var = MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , null , var . id , 0 , false , var )
if ( ! var . isEmpty ( ) )
Integer var = var . getKey ( )
long var = var . getValue ( )
Integer var = ( int ) var [ 1 ]
SendMessagesHelper . getInstance ( ) . processSentMessage ( var )
final HashMap < Long , ArrayList < MessageObject > > var = new HashMap
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( false , var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )
MessageObject var = new MessageObject ( var , var , var . contains ( var ) )
Long var = var . getKey ( )
ArrayList < MessageObject > var = var . getValue ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processNewMessages ( var , true )
MessagesStorage . getInstance ( ) . saveChannelPts ( var , var . pts )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( false , var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )
MessagesStorage . getInstance ( ) . overwriteChannel ( var , ( TLRPC . TL_updates_channelDifferenceTooLong ) var , var )
var . remove ( var )
FileLog . var ( "" + var . pts + "" + var )
FileLog . var ( "" + var . new_messages . size ( ) + "" + var . messages . size ( ) + "" + var . var . size ( ) + "" + var . var . size ( ) + "" + var . other_updates . size ( ) )
var . remove ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 2 )
registerForPush ( UserConfig . pushString )
if ( MessagesStorage . lastPtsValue == 0 )
var . var = ConnectionsManager . getInstance ( ) . getCurrentTime
FileLog . e ( "" + var + "" + var + "" + var )
resetDialogs ( true , MessagesStorage . lastSeqValue , var . var , var , var )
final HashMap < Integer , TLRPC . User > var = new HashMap
Integer var = var . get ( var )
if ( var == null )
if ( var != 0 && var . var <= var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , false )
final HashMap < Integer , long > var = new HashMap
long var = MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , null , var . id , 0 , false , 0 )
if ( ! var . isEmpty ( ) )
Integer var = var . getKey ( )
long var = var . getValue ( )
Integer var = ( int ) var [ 1 ]
SendMessagesHelper . getInstance ( ) . processSentMessage ( var )
final HashMap < Long , ArrayList < MessageObject > > var = new HashMap
ArrayList < TLRPC . Message > var = SecretChatHelper . getInstance ( ) . decryptMessage ( var )
int var = UserConfig . getClientUserId ( )
if ( var . to_id . user_id == UserConfig . getClientUserId ( ) )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )
Long var = var . getKey ( )
ArrayList < MessageObject > var = var . getValue ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processNewMessages ( var , ! ( var instanceof TLRPC . TL_updates_differenceSlice ) )
MessagesStorage . lastSeqValue = var . state . seq
MessagesStorage . lastDateValue = var . state . var
MessagesStorage . lastPtsValue = var . state . var
MessagesStorage . lastQtsValue = var . state . var
MessagesStorage . lastDateValue = var . intermediate_state . var
MessagesStorage . lastPtsValue = var . intermediate_state . var
MessagesStorage . lastQtsValue = var . intermediate_state . var
MessagesStorage . lastSeqValue = var . seq
MessagesStorage . lastDateValue = var . var
FileLog . e ( "" + MessagesStorage . lastDateValue + "" + MessagesStorage . lastPtsValue + "" + MessagesStorage . lastSeqValue + "" + var . new_messages . size ( ) + "" + var . var . size ( ) + "" + var . var . size ( ) + "" + var . other_updates . size ( ) )
if ( ! var && var . get ( var . size ( ) - 1 ) == var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . setDialogPinned ( var , var . pinnedNum )
final HashMap < Long , MessageObject > var = new HashMap
final HashMap < Integer , TLRPC . User > var = new HashMap
final HashMap < Integer , TLRPC . Chat > var = new HashMap
HashMap < Long , Integer > var = new HashMap
MessagesStorage . getInstance ( ) . setDialogPinned ( var . id , var . pinnedNum )
var . addAll ( var . values ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
UserConfig . pinnedDialogsLoaded = true
UserConfig . saveConfig ( false )
if ( var == null || ! ChatObject . isChannel ( var ) || ( var . left || var . kicked ) && ! var )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
var . from_id = UserConfig . getClientUserId ( )
UserConfig . saveConfig ( false )
MessagesStorage . getInstance ( ) . putMessages ( var , true , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
if ( var != null && var . participant instanceof TLRPC . TL_channelParticipantSelf && var . participant . inviter_id != UserConfig . getClientUserId ( ) )
if ( var . megagroup && MessagesStorage . getInstance ( ) . isMigratedChat ( var . id ) )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )
UserConfig . saveConfig ( false )
MessagesStorage . getInstance ( ) . putMessages ( var , true , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
return var . channel_id
var = MessagesStorage . getInstance ( ) . getUserSync ( var )
var = MessagesStorage . getInstance ( ) . getUserSync ( var . fwd_from . from_id )
var = MessagesStorage . getInstance ( ) . getChatSync ( var . fwd_from . channel_id )
var = MessagesStorage . getInstance ( ) . getUserSync ( var . via_bot_id )
var = MessagesStorage . getInstance ( ) . getChatSync ( var . chat_id )
var = MessagesStorage . getInstance ( ) . getUserSync ( var )
if ( MessagesStorage . lastPtsValue + var . pts_count == var . pts . lastPtsValue != var . pts )
int var = UserConfig . getClientUserId ( )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesStorage . lastPtsValue = var . pts
final MessageObject var = new MessageObject ( var , null , var . contains ( var . dialog_id ) . dialog_id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processNewMessages ( var , true )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
if ( MessagesStorage . lastPtsValue != var . pts )
FileLog . e ( "" + MessagesStorage . lastPtsValue + "" + var . pts + "" + var . pts_count )
FileLog . e ( "" )
HashMap < Integer , TLRPC . Chat > var = null
TLRPC . Chat var = MessagesStorage . getInstance ( ) . getChatSync ( var . chat_id )
var = new HashMap
if ( var . containsKey ( var ) )
FileLog . e ( "" + var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )
var . pts = var . pts
var . pts_count = var . pts_count
var . pts = var . pts
var . pts_count += var . pts_count
if ( MessagesStorage . lastPtsValue + var . pts_count == var . pts . lastPtsValue != var . pts )
FileLog . e ( "" + MessagesStorage . lastSeqValue + "" + var . seq )
if ( MessagesStorage . lastPtsValue != var . pts )
FileLog . e ( var + "" + MessagesStorage . lastPtsValue + "" + var . pts + "" + var . pts_count )
FileLog . e ( "" )
var . pts = var . qts
var . pts = var . qts
if ( MessagesStorage . lastQtsValue == 0 || MessagesStorage . lastQtsValue + var . var . size ( ) == var . pts . lastPtsValue != var . pts )
if ( MessagesStorage . lastPtsValue != var . pts )
FileLog . e ( var + "" + MessagesStorage . lastQtsValue + "" + var . pts )
FileLog . e ( "" )
Integer var = var . get ( var )
if ( var == null )
var . pts = var . pts
var . pts_count = var . pts_count
var . pts = var . pts
var . pts_count += var . pts_count
FileLog . e ( "" + var )
MessagesStorage . getInstance ( ) . saveChannelPts ( var , var . pts )
FileLog . e ( var + "" + var + "" + var . pts + "" + var . pts_count + "" + var )
Long var = var . get ( var )
Boolean var = var . get ( var )
if ( var || var == null || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )
if ( var == null )
FileLog . e ( "" )
FileLog . e ( "" + var )
var = MessagesStorage . lastSeqValue + 1 == var . seq_start || MessagesStorage . lastSeqValue == var . seq_start
var = MessagesStorage . lastSeqValue + 1 == var . seq || var . seq == 0 || var . seq == MessagesStorage . lastSeqValue
MessagesStorage . lastDateValue = var . date
MessagesStorage . lastSeqValue = var . seq
FileLog . e ( "" + MessagesStorage . lastSeqValue + "" + var . seq_start )
FileLog . e ( "" + MessagesStorage . lastSeqValue + "" + var . seq )
FileLog . e ( "" )
FileLog . e ( "" )
MessagesStorage . lastSeqValue = var . seq
MessagesStorage . getInstance ( ) . saveChannelPts ( var . chat_id , var . pts )
SecretChatHelper . getInstance ( ) . processPendingEncMessages
Integer var = var . get ( var )
var . max_qts = MessagesStorage . lastQtsValue
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
final HashMap < Long , TLRPC . WebPage > var = new HashMap
final SparseArray < SparseIntArray > var = new SparseArray
final ArrayList < Long > var = new ArrayList
final SparseArray < ArrayList < Integer > > var = new SparseArray
final ArrayList < TLRPC . ChatParticipants > var = new ArrayList
final ArrayList < TLRPC . Update > var = new ArrayList
final ArrayList < TLRPC . TL_updateEncryptedMessagesRead > var = new ArrayList
for ( int var = 0 ; var < var . size ( ) ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( BuildVars . DEBUG_VERSION )
if ( ! var . out && var . from_id == UserConfig . getClientUserId ( ) )
var = MessagesStorage . getInstance ( ) . getChatSync ( var )
var = MessagesStorage . getInstance ( ) . getUserSync ( var )
if ( var != null && var . bot . from_id == UserConfig . getClientUserId ( ) && var . action . var == UserConfig . getClientUserId ( ) )
if ( var . from_id == UserConfig . getClientUserId ( ) && var . action . var == UserConfig . getClientUserId ( ) )
int var = UserConfig . getClientUserId ( )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )
for ( int var = 0 ; var < var . var . size ( ) ; var ++ )
for ( int var = 0 ; var < var . var . size ( ) ; var ++ )
TLRPC . Peer var = ( ( TLRPC . TL_updateReadHistoryInbox ) var ) . var
if ( var . chat_id != 0 )
var . put ( - var . chat_id , ( long ) var . max_id )
var = - var . chat_id
var . put ( var . user_id , ( long ) var . max_id )
var = var . user_id
var = var
if ( var . chat_id != 0 )
var . put ( - var . chat_id , ( long ) var . max_id )
var . put ( var . user_id , ( long ) var . max_id )
if ( var . user_id != UserConfig . getClientUserId ( ) )
var = var . user_id
if ( var . action instanceof TLRPC . TL_sendMessageCancelAction )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var . userId == var . user_id )
if ( var . userId == var . user_id )
if ( var . action . getClass ( ) != var . action . getClass ( ) = true )
var . action = var . action
var . userId = var . user_id
var . action = var . action
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . user_id )
if ( var && var . containsKey ( var . user_id ) && ! MessagesStorage . getInstance ( ) . isDialogHasMessages ( var . user_id ) )
UserConfig . saveConfig ( false )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )
ArrayList < TLRPC . Message > var = SecretChatHelper . getInstance ( ) . decryptMessage ( ( ( TLRPC . TL_updateNewEncryptedMessage ) var ) . message )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var ) )
var . userId = var . user_id
MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , 0 , var . inviter_id , var . version )
MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , 1 , 0 , var . version )
SecretChatHelper . getInstance ( ) . processUpdateEncryption ( ( TLRPC . TL_updateEncryption ) var , var )
MessagesStorage . getInstance ( ) . putBlockedUsers ( var , false )
MessagesStorage . getInstance ( ) . deleteBlockedUser ( var . user_id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needShowAlert , 2 , var . message )
UserConfig . saveConfig ( false )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )
if ( BuildVars . DEBUG_VERSION )
Integer var = var . get ( var . channel_id )
if ( var == null )
var = MessagesStorage . getInstance ( ) . getChannelPtsSync ( var . channel_id )
var = MessagesStorage . getInstance ( ) . getChatSync ( var . channel_id )
var = var
if ( BuildVars . DEBUG_VERSION )
if ( BuildVars . DEBUG_VERSION )
if ( BuildVars . DEBUG_VERSION )
var . add ( var )
int var = UserConfig . getClientUserId ( )
var = MessagesStorage . getInstance ( ) . getChatSync ( var . to_id . channel_id )
if ( ! var . out && var . from_id == UserConfig . getClientUserId ( ) )
var = MessagesStorage . getInstance ( ) . getUserSync ( var )
if ( var . to_id . user_id == UserConfig . getClientUserId ( ) )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
if ( var . out && ( var . var == null || var . var . length ( ) == 0 ) )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )
if ( BuildVars . DEBUG_VERSION )
MessagesStorage . getInstance ( ) . var ( var . channel_id , var . id )
var . add ( var )
LocaleController . getInstance ( ) . saveRemoteLocaleStrings ( var . difference )
LocaleController . getInstance ( ) . reloadCurrentRemoteLocale
var . add ( var )
var . add ( var )
Integer var = var . get ( var . channel_id )
if ( var == null || var < var . available_min_id )
Long var = var . getKey ( )
ArrayList < MessageObject > var = var . getValue ( )
if ( ! var . isEmpty ( ) )
ContactsController . getInstance ( ) . processContactsUpdates ( var , var )
NotificationsController . getInstance ( ) . processNewMessages ( var , true )
if ( ! var . isEmpty ( ) )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var . size ( ) )
if ( ! var . isEmpty ( ) )
ArrayList < MessageObject > var = var . getValue ( )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
MessagesStorage . getInstance ( ) . putMessages ( var , var . getKey ( ) , - 2 , 0 , false )
if ( var . size ( ) != 0 )
MessagesStorage . getInstance ( ) . putChannelViews ( var , true )
if ( ! var . isEmpty ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
ContactsController . getInstance ( ) . setPrivacyRules ( var . rules , 0 )
ContactsController . getInstance ( ) . setPrivacyRules ( var . rules , 1 )
ContactsController . getInstance ( ) . setPrivacyRules ( var . rules , 2 )
if ( var . user_id == UserConfig . getClientUserId ( ) )
NotificationsController . getInstance ( ) . setLastOnlineFromOtherDevice ( var . status . expires )
if ( var . username != null && var . username . length ( ) > 0 )
if ( var . username != null && var . username . length ( ) > 0 )
var = - var . peer . chat_id
var = - var . peer . channel_id
UserConfig . pinnedDialogsLoaded = false
UserConfig . saveConfig ( false )
UserConfig . pinnedDialogsLoaded = false
UserConfig . saveConfig ( false )
ArrayList < TLRPC . Peer > var = ( ( TLRPC . TL_updatePinnedDialogs ) var ) . var
for ( int var = 0 ; var < var . size ( ) ; var ++ )
TLRPC . Peer var = var . get ( var )
ContactsController . getInstance ( ) . addContactToPhoneBook ( var , true )
if ( var . notify_settings instanceof TLRPC . TL_peerNotifySettings && var . peer instanceof TLRPC . TL_notifyPeer )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , ( ( long ) var << 32 ) | 1 )
var . notify_settings . mute_until = 0
MessagesStorage . getInstance ( ) . setDialogFlags ( var , 0 )
if ( var == null && var instanceof TLRPC . TL_channel && ! var . left . left && var != null )
if ( var . left && var != null )
StickersQuery . addNewStickerSet ( var . stickerset )
DraftQuery . saveDraft ( var , var . draft , null , true )
StickersQuery . markFaturedStickersAsRead ( false )
if ( BuildVars . DEBUG_VERSION )
if ( var . date + var / 1000 < ConnectionsManager . getInstance ( ) . getCurrentTime )
if ( BuildVars . DEBUG_VERSION )
if ( BuildVars . DEBUG_VERSION )
if ( BuildVars . DEBUG_VERSION )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
MessagesStorage . getInstance ( ) . updateUsers ( var , true , true , true )
MessagesStorage . getInstance ( ) . updateUsers ( var , false , true , true )
if ( ! var . isEmpty ( ) )
TLRPC . WebPage var = var . getValue ( )
ArrayList < TLRPC . Message > var = new ArrayList
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( ! var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
Long var = var . getKey ( )
ArrayList < MessageObject > var = var . getValue ( )
if ( ! var . isEmpty ( ) )
Long var = var . getKey ( )
ArrayList < MessageObject > var = var . getValue ( )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
MessagesQuery . loadReplyMessagesForMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
if ( ! var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedMessagesViews , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( var . size ( ) != 0 || var . size ( ) != 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesRead , var , var )
NotificationsController . getInstance ( ) . processReadMessages ( var , 0 , 0 , 0 , false )
if ( var . size ( ) != 0 )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
int var = int ( ( long ) var . get ( var ) )
if ( var != UserConfig . getClientUserId ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
int var = int ( ( long ) var . get ( var ) )
if ( ! var . isEmpty ( ) )
long var = long ( var . getKey ( ) ) << 32
if ( var != null && var . messageOwner . date <= var . getValue ( ) )
if ( ! var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
if ( var . size ( ) != 0 )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
int var = var . keyAt ( var )
ArrayList < Integer > var = var . get ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var . size ( ) != 0 )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
int var = var . keyAt ( var )
Integer var = var . get ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . historyCleared , var , var )
if ( var . size ( ) != 0 || var . size ( ) != 0 || ! var . isEmpty ( ) || ! var . isEmpty ( ) )
if ( var . size ( ) != 0 || ! var . isEmpty ( ) )
MessagesStorage . getInstance ( ) . updateDialogsWithReadMessages ( var , var , var , true )
MessagesStorage . getInstance ( ) . markMessagesAsRead ( var , var , var , true )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , ConnectionsManager . getInstance ( ) . getCurrentTime )
if ( var . size ( ) != 0 )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
ArrayList < Long > var = MessagesStorage . getInstance ( ) . markMessagesAsDeleted ( var , false , var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( var , var , false , var )
if ( var . size ( ) != 0 )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
final Integer var = var . get ( var )
ArrayList < Long > var = MessagesStorage . getInstance ( ) . markMessagesAsDeleted ( var , var , false )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , var , false , var )
if ( ! var . isEmpty ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . chat_id , var . max_date , var . date , 1 , null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
StickersQuery . addRecentGif ( var . messageOwner . media . document , var . messageOwner . date )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var . messageOwner . media . document , var . messageOwner . date , false )
MessagesQuery . loadReplyMessagesForMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceivedNewMessages , var , var )
NotificationsController . getInstance ( ) . removeNotificationsForDialog ( var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )
if ( ( var . top_message > 0 && var . getId ( ) > 0 && var . getId ( ) > var . top_message ) || ( var . top_message < 0 && var . getId ( ) < 0 && var . getId ( ) < var . top_message ) || ! var . containsKey ( var ) || var . top_message < 0 || var . last_message_date <= var . messageOwner . date )
int var = UserConfig . getClientUserId ( )
if ( var != null && ( var . megagroup && ( var . admin_rights != null && var . admin_rights . post_messages ) || var . creator ) )
TLRPC . User var = UserConfig . getCurrentUser ( )
var = MessagesController . getInstance ( ) . getUser ( var )
var = MessagesController . getInstance ( ) . getChat ( var )
var = getInstance . getChat ( - var )
var = getInstance . getChat ( - var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
TLObject var = getInstance . getUserOrChat ( var )
getInstance var . putUsers ( var . var , false )
getInstance var . putChats ( var . var , false )
MessagesStorage var = var
var = var
var = var = new MessagesStorage
public MessagesStorage
FileLog . e ( "" )
var . executeFast ( "" ) . stepThis . dispose
var . executeFast ( "" ) . stepThis . dispose
FileLog . e ( "" + var )
if ( var < 46 )
if ( var && var . getMessage ( ) . contains ( "" ) )
UserConfig . dialogsLoadOffsetId = 0
UserConfig . totalDialogsLoadCount = 0
UserConfig . dialogsLoadOffsetDate = 0
UserConfig . dialogsLoadOffsetUserId = 0
UserConfig . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetChannelId = 0
UserConfig . dialogsLoadOffsetAccess = 0
UserConfig . saveConfig ( false )
var . executeFast ( "" ) . stepThis . dispose
var . executeFast ( "" ) . stepThis . dispose
var . beginTransaction ( )
if ( var . next ( ) )
var . notify_settings = new TLRPC . TL_peerNotifySettingsEmpty ( )
HashMap < Long , Long > var = new HashMap
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )
var . bindLong ( 1 , var . getKey ( ) )
var . bindLong ( 2 , var . getValue ( ) )
MessagesController . getInstance ( ) . loadUnknownChannel ( var , var )
MessagesController . getInstance ( ) . getChannelDifference ( var , var , var , null )
MessagesController . getInstance ( ) . checkLastDialogMessage ( var , var , var )
SendMessagesHelper . getInstance ( ) . sendGame ( var , var , var , var )
MessagesController . getInstance ( ) . pinDialog ( var , var , var , var )
MessagesController . getInstance ( ) . getChannelDifference ( var , var , var , var )
MessagesController . getInstance ( ) . deleteMessages ( null , null , null , var , true , var , var )
ArrayList < Integer > var = new ArrayList
final HashMap < Long , Integer > var = new HashMap
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
HashMap < Integer , ArrayList < TLRPC . Message > . Message > var = new HashMap
NotificationsController . getInstance ( ) . processLoadedUnreadMessages ( var , var , var , var , var )
while ( var . next ( ) )
var . document = TLRPC . Document . TLdeserialize ( var , var . readInt32 ( false ) , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . recentImagesDidLoaded , var , var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . wallpapersDidLoaded , var )
MessagesController . getInstance ( ) . processLoadedBlockedUsers ( var , var , true )
MessagesController . getInstance ( ) . markChannelDialogMessageAsDeleted ( var , var )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )
FileLoader . getInstance ( ) . deleteFiles ( var , var )
var . executeFast ( "" + var ) . stepThis . dispose
var . executeFast ( "" + var ) . stepThis . dispose
BotQuery . clearBotKeyboard ( var , null )
var . dispose ( )
BotQuery . clearBotKeyboard ( var , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )
MessagesController . getInstance ( ) . processLoadedUserPhotos ( var , var , var , var , true , var )
final HashMap < Long , Integer > var = new HashMap
var . executeFast ( "" + var ) . stepThis . dispose
var . executeFast ( "" + var ) . stepThis . dispose
var . commitTransaction ( )
putDialogsInternal ( var , false )
if ( var != null && var . id != UserConfig . dialogsLoadOffsetId )
UserConfig . totalDialogsLoadCount = var . dialogs . size ( )
UserConfig . dialogsLoadOffsetId = var . id
UserConfig . dialogsLoadOffsetDate = var . var
UserConfig . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChannelId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetChannelId = 0
UserConfig . dialogsLoadOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChatId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetUserId = var . to_id . user_id
UserConfig . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetChannelId = 0
if ( var . id == UserConfig . dialogsLoadOffsetUserId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetId = Integer . MAX_VALUE
UserConfig . saveConfig ( false )
MessagesController . getInstance ( ) . completeDialogsReset ( var , var , var , var , var , var , var , var , var )
FileLog . var ( "" , var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( ( var . flags & TLRPC . MESSAGE_FLAG_HAS_VIEWS ) != 0 )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . get ( var ) )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )
var . executeFast ( String . format ( Locale . US , "" , var ) . US , "" , var ) . stepThis . dispose
MessagesController . getInstance ( ) . processLoadedDeleteTask ( var , var , var )
HashMap < Long , Integer > var = new HashMap
MessagesController . getInstance ( ) . processDialogsUpdateRead ( null , var )
HashMap < Long , Integer > var = new HashMap
MessagesController . getInstance ( ) . processDialogsUpdateRead ( null , var )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
MessagesController . getInstance ( ) . didAddedNewTask ( var , var )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
MessagesController . getInstance ( ) . didAddedNewTask ( var , var )
HashMap < Long , Integer > var = new HashMap
HashMap < Long , Integer > var = new HashMap
ArrayList < Integer > var = new ArrayList
if ( var != null && ! var . isEmpty ( ) )
if ( var != null && var . size ( ) != 0 )
if ( var . next ( ) )
if ( var != null && var . size ( ) != 0 )
while ( var . next ( ) )
if ( var != null && var . size ( ) != 0 )
if ( ! var . isEmpty ( ) || ! var . isEmpty ( ) )
if ( ! var . isEmpty ( ) )
var . bindInteger ( 1 , var . getValue ( ) )
var . bindLong ( 2 , var . getKey ( ) )
if ( ! var . isEmpty ( ) )
var . bindInteger ( 1 , var . getValue ( ) )
var . bindLong ( 2 , var . getKey ( ) )
MessagesController . getInstance ( ) . processDialogsUpdateRead ( var , var )
if ( ! var . isEmpty ( ) )
if ( var . size ( ) == 0 && var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
MessagesController . getInstance ( ) . processLoadedChannelAdmins ( var , var , true )
final int var = ConnectionsManager . getInstance ( ) . getCurrentTime
if ( var <= var . read_inbox_max_id )
int var = var . read_inbox_max_id - var
if ( var < var . unread_count )
var . unread_count = var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
final Semaphore var = new Semaphore ( 0 )
var . release ( var )
var . release ( var )
var . acquire ( var )
var . release ( )
var = MessagesQuery . loadPinnedMessage ( var , var . pinned_msg_id , false )
MessagesController . getInstance ( ) . processChatInfo ( var , var , var , true , var , var , var )
var . release ( )
if ( var != 0 )
var . bindInteger ( 2 , var )
int var = 0
if ( var . next ( ) )
var . bindInteger ( 1 , var )
var . bindLong ( 2 , var )
if ( var . isEmpty ( ) )
HashMap < Integer , ContactsController . Contact > var = new HashMap
while ( var . next ( ) )
var . dispose ( )
HashMap < String , ContactsController . Contact > var = new HashMap
while ( var . next ( ) )
ContactsController . getInstance ( ) . performSyncPhoneBook ( var , true , true , false , false , ! var , false )
ContactsController . getInstance ( ) . processLoadedContacts ( var , var , 1 )
HashMap < Integer , TLRPC . Message > var = new HashMap
if ( ! var . containsKey ( var . id ) )
if ( var . to_id . channel_id == 0 && ! MessageObject . isUnread ( var ) && var != 0 || var . id > 0 )
SendMessagesHelper . getInstance ( ) . processUnsentMessages ( var , var , var , var )
final Semaphore var = new Semaphore ( 0 )
var . release ( )
var . acquire ( )
FileLog . var ( "" , var )
HashMap < Integer , ArrayList < TLRPC . Message > . Message > var = new HashMap
HashMap < Long , ArrayList < TLRPC . Message > . Message > var = new HashMap
if ( var . id > 0 && var . send_state != 0 )
int var = var . messages . get ( var . messages . size ( ) - 1 ) . id
int var = var . messages . get ( 0 ) . id
if ( ! var . isEmpty ( ) )
if ( ! var . isEmpty ( ) )
ArrayList < TLRPC . Message > var = var . remove ( var . longValue ( 3 ) )
if ( ! var . isEmpty ( ) )
MessagesController . getInstance ( ) . processLoadedMessages ( var , var , var , var , var , true , var , var , var , var , var , var , var , var , var , var , var )
if ( var == null || var . endsWith ( "" ) )
final Semaphore var = new Semaphore ( 0 )
var . release ( )
var . acquire ( )
final Semaphore var = new Semaphore ( 0 )
final boolean result = new boolean [ 1 ]
var . release ( var )
var . acquire ( var )
final Semaphore var = new Semaphore ( 0 )
var . release ( var )
var . acquire ( var )
ArrayList < TLRPC . EncryptedChat > var = new ArrayList
var . release ( )
MediaController . getInstance ( ) . processDownloadObjects ( var , var )
if ( var instanceof TLRPC . TL_message_secret && ( var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl > 0 && var . ttl <= 60 || MessageObject . isVoiceMessage ( var ) || MessageObject . isVideoMessage ( var ) || MessageObject . isRoundVideoMessage ( var ) ) )
SQLiteCursor var = var . queryFinalized ( "" + var . getKey ( ) )
var . media . webpage = var . getValue ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceivedWebpages , var )
BotQuery . clearBotKeyboard ( var , null )
putDialogsInternal ( var , false )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , false , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , true )
if ( var == 1 )
MessagesController . getInstance ( ) . generateJoinMessage ( var , false )
HashMap < Long , TLRPC . Message > var = new HashMap
HashMap < Long , Integer > var = new HashMap
HashMap < Long , Integer > var = new HashMap
HashMap < Long , TLRPC . Message > var = new HashMap
HashMap < Long , Long > var = null
HashMap < Long , Integer > var = new HashMap
HashMap < Long , Long > var = new HashMap
HashMap < Long , Long > var = new HashMap
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )
var = new HashMap
var = new HashMap
BotQuery . putBotKeyboard ( var . getKey ( ) , var . getValue ( ) )
var = new HashMap
Integer var = var . get ( var . getKey ( ) )
HashMap < Long , Integer > var = var . get ( var )
var = new HashMap
var = var . get ( var . getValue ( ) )
var . put ( var . getValue ( ) , var )
NativeByteBuffer var = new NativeByteBuffer ( var . getObjectSize ( ) )
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )
if ( var != 0 && ( var . to_id . channel_id == 0 || var . post ) && var . date >= ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 && MediaController . getInstance ( ) . canDownloadMedia ( var ) )
var = MediaController . AUTODOWNLOAD_MASK_AUDIO
var = MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE
var = MediaController . AUTODOWNLOAD_MASK_PHOTO
var = MediaController . AUTODOWNLOAD_MASK_VIDEO
var = MediaController . AUTODOWNLOAD_MASK_DOCUMENT
var . step ( )
var . dispose ( )
HashMap < Long , TLRPC . Message > var = new HashMap
Long var = var . getKey ( )
Integer var = var . getKey ( )
long var = var . getKey ( )
var += var . getValue ( )
MessagesController . getInstance ( ) . processDialogsUpdateRead ( var , var )
MediaController . getInstance ( ) . newDownloadObjectsAvailable ( var )
var . requery ( )
HashMap < Integer , TLRPC . User > var = new HashMap
if ( var . isEmpty ( ) )
if ( var != null )
if ( var != null )
if ( var != null && ! var . isEmpty ( ) )
long var = ( ( long ) var . getKey ( ) ) << 32
int var = var . getValue ( )
if ( var == null || var . isEmpty ( ) )
var . executeFast ( String . format ( Locale . US , "" , var ) . US , "" , var ) . stepThis . dispose
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , 0 )
MessagesStorage . getInstance ( ) . updateDialogsWithReadMessagesInternal ( var , null , null , null )
MessagesStorage . getInstance ( ) . markMessagesAsDeletedInternal ( var , 0 )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessagesInternal ( var , null , 0 )
HashMap < Long , Integer > var = new HashMap
int var = UserConfig . getClientUserId ( )
while ( var . next ( ) )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )
Long var = var . getKey ( )
Integer var = var . getValue ( )
BotQuery . clearBotKeyboard ( 0 , var )
while ( var . next ( ) )
MessagesController . getInstance ( ) . processDialogsUpdate ( var , var )
HashMap < Long , Integer > var = new HashMap
int var = UserConfig . getClientUserId ( )
while ( var . next ( ) )
Integer var = var . get ( var )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )
Long var = var . getKey ( )
Integer var = var . getValue ( )
var . executeFast ( String . format ( Locale . US , "" , - var , var ) . US , "" , - var , var ) . stepThis . dispose
for ( int var = 0 ; var < SharedMediaQuery . MEDIA_TYPES_COUNT ; var ++ )
if ( var = var . next ( ) )
if ( var != null )
if ( var . next ( ) )
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )
var . bindInteger ( 4 , SharedMediaQuery . getMediaType ( var ) )
BotQuery . putBotKeyboard ( var , var )
HashMap < Long , Integer > var = new HashMap
MessagesController . getInstance ( ) . processDialogsUpdateRead ( null , var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , false , var )
var . add ( UserConfig . getClientUserId ( ) )
while ( var . next ( ) )
MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , var , var , 1 , false , false , true )
MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , 0 , 100 , 1 , true , false , true )
var . step ( )
for ( int var = 0 ; var < SharedMediaQuery . MEDIA_TYPES_COUNT ; var ++ )
var . put ( var . dialog_id , var )
for ( int var = 0 ; var < var . var . size ( ) ; var ++ )
BotQuery . putBotKeyboard ( var . id , var )
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )
var . requery ( )
final Semaphore var = new Semaphore ( 0 )
var . release ( )
var . acquire ( )
final Semaphore var = new Semaphore ( 0 )
var . release ( )
var . acquire ( )
final Semaphore var = new Semaphore ( 0 )
var . release ( )
var . acquire ( )
final Semaphore var = new Semaphore ( 0 )
var . release ( )
var . acquire ( )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getInt ( "" , 0 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , SharedMediaQuery . MEDIA_MUSIC ) . US , "" , SharedMediaQuery . MEDIA_MUSIC )
var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var , SharedMediaQuery . MEDIA_MUSIC ) . US , "" , var , SharedMediaQuery . MEDIA_MUSIC )
MessageObject var = new MessageObject ( var , null , false )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var . putInt ( "" , var ) . commit var
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
var = new NotificationCompat . Builder ( getApplicationContext ) . setSmallIcon ( R . drawable . player ) . setContentIntent ( var ) . setContentTitle ( var ) . build
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
if ( Build . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" )
if ( var . exists ( ) )
init ( Constants . FILES_PATH , BuildVars . DEBUG_VERSION )
init ( Constants . FILES_PATH , BuildVars . DEBUG_VERSION )
final Bundle var = new Bundle
int var = var
if ( var == null || checkObjExists ( var ) )
var = var . readLine ( )
NotificationCenter var = var
var = var
var = var = new NotificationCenter
var . clear ( )
if ( BuildVars . DEBUG_VERSION )
( ( NotificationCenterDelegate ) var ) . didReceivedNotification ( var , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )
var . edit ( ) . putInt ( "" , var . getIntExtra ( "" , 0 ) , 0 ) . commit
NotificationsController . getInstance ( ) . repeatNotificationMaybe
NotificationsController var = var
var = var
var = var = new NotificationsController
public NotificationsController
FileLog . var ( "" )
FileLog . e ( "" + var )
NotificationsController . getInstance ( ) . processReadMessages ( null , var , 0 , Integer . MAX_VALUE , false )
HashMap < Long , Integer > var = new HashMap
var = true
var = 0
var = null
if ( var == null )
var = var . getString ( "" , var )
var = var . getInt ( "" , 1 )
var = 0
int var = var . getRingerMode ( )
var . setCategory ( NotificationCompat . CATEGORY_MESSAGE )
var . setPriority ( NotificationCompat . PRIORITY_DEFAULT )
var . setPriority ( NotificationCompat . PRIORITY_HIGH )
var . setPriority ( NotificationCompat . PRIORITY_MAX )
if ( var . length ( ) > 100 )
var . setTicker ( var )
if ( var . equals ( var ) )
var . setLights ( var , 1000 , 1000 )
var . setVibrate ( new long )
var . notify ( 1 , var . build ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
var . remove ( var )
if ( var != null )
scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( ) . getCurrentTime )
if ( var . getBoolean ( "" , true ) )
setBadge ( var )
Integer var = var . get ( var )
var . remove ( var )
scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( ) . getCurrentTime )
if ( var . getBoolean ( "" , true ) )
setBadge ( var )
if ( var . getDialogId ( ) == var && var . getId ( ) <= ( int ) var )
var . remove ( var )
long var = var . messageOwner . id
if ( var . getId ( ) <= var || var < 0 = true )
long var = var . messageOwner . id
if ( var != null && var != var . size ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )
int var = var . size ( )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
Boolean var = var . get ( var )
if ( ! var . isEmpty ( ) && var != var . size ( ) && ! AndroidUtilities . needShowPasscode ( false ) )
if ( ApplicationLoader . mainInterfacePaused || ! ApplicationLoader . isScreenOn && ! UserConfig . isWaitingForPasscodeEnter )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )
long var = var . getKey ( )
Integer var = var . getValue ( )
long var = var . messageOwner . id
var . remove ( var )
if ( var != null && var . isEmpty ( ) && ! var . isEmpty ( ) )
scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( ) . getCurrentTime )
MessagesController . getInstance ( ) . putUsers ( var , true )
MessagesController . getInstance ( ) . putChats ( var , true )
MessagesController . getInstance ( ) . putEncryptedChats ( var , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )
HashMap < Long , Boolean > var = new HashMap
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var . containsKey ( var ) )
MessageObject var = new MessageObject ( var , null , false )
Boolean var = var . get ( var )
long var = var . getKey ( )
Boolean var = var . get ( var )
int var = var . getValue ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )
showOrUpdateNotification ( SystemClock . uptimeMillis ( ) / 1000 < 60 )
if ( var . getBoolean ( "" , true ) )
setBadge ( var )
if ( var == UserConfig . getClientUserId ( var ) )
if ( var . messageOwner . message != null && var . messageOwner . message . length ( var ) != 0 var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( var == UserConfig . getClientUserId ( var ) var )
String var = "" + var . messageOwner . media . caption
String var = "" + var . messageOwner . media . caption
String var = "" + var . messageOwner . media . caption
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeo )
String var = "" + var . messageOwner . media . caption
String var = "" + var . messageOwner . media . caption
String var = "" + var . messageOwner . media . caption
String var = "" + var . messageOwner . media . caption
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeo )
String var = "" + var . messageOwner . media . caption
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )
PendingIntent var = PendingIntent . getService ( ApplicationLoader . applicationContext , 0 , new Intent ( ApplicationLoader . applicationContext , NotificationRepeat . class ) . applicationContext , NotificationRepeat . class , 0 )
int var = var . getInt ( "" + var , 0 )
if ( var >= ConnectionsManager . getInstance ( ) . getCurrentTime = 2 )
var . cancel ( 1 )
var . cancel ( var . getValue ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )
if ( ! var || MediaController . getInstance ( ) . isRecordingAudio )
FileLog . e ( "" + var )
AndroidUtilities . cancelRunOnUIThread ( var )
var . cancel ( 1 )
if ( ! UserConfig . isClientActivated ( ) || var . isEmpty ( ) )
if ( var == UserConfig . getClientUserId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
boolean var
var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , false )
if ( AndroidUtilities . needShowPasscode ( false ) || UserConfig . isWaitingForPasscodeEnter = null )
if ( var . size ( ) == 1 )
var = LocaleController . formatPluralString ( "" , var )
var = LocaleController . formatString ( "" , R . string . NotificationMessagesPeopleDisplayOrder , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var . size ( ) ) , var . size ( ) )
NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setAutoCancel ( true ) . setNumber ( var ) . setContentIntent ( var ) . setGroup ( "" ) . setGroupSummary ( true ) . setColor ( 0xff2ca5e0 )
if ( ! var || var == 1 )
if ( var == 1 )
if ( var == 2 )
var . setPriority ( NotificationCompat . PRIORITY_MAX )
if ( var != 1 && ! var )
if ( ! MediaController . getInstance ( ) . isRecordingAudio )
if ( var != null && ! var . equals ( "" ) )
var . setVibrate ( new long )
if ( Build . VERSION . SDK_INT < 24 && UserConfig . passcodeHash . length ( ) == 0 && hasMessagesToReply )
showExtraNotifications ( var , var )
var . notify ( 1 , var . build ( ) )
HashMap < Long , ArrayList < MessageObject > > var = new HashMap
if ( ( int ) var == 0 )
HashMap < Long , Integer > var = new HashMap
var . putAll ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
int var = var . get ( 0 ) . messageOwner . date
if ( var > 0 )
var = MessagesController . getInstance ( ) . getUser ( ( int ) var )
var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )
if ( var != null )
if ( ( ! ChatObject . isChannel ( var ) || var != null && var . megagroup ) && ! AndroidUtilities . needShowPasscode ( false ) && ! UserConfig . isWaitingForPasscodeEnter )
if ( var != null )
NotificationCompat . MessagingStyle var = new NotificationCompat . MessagingStyle ( null ) . setConversationTitle ( String . format ( "" , var , LocaleController . formatPluralString ( "" , Math . max ( var , var . size ( ) ) , var . size ( ) ) , Math . max ( var , var . size ( ) ) , var . size ( ) ) , var , LocaleController . formatPluralString ( "" , Math . max ( var , var . size ( ) ) , var . size ( ) ) , Math . max ( var , var . size ( ) ) , var . size ( ) )
StringBuilder var = new StringBuilder
boolean isText = new boolean [ 1 ]
for ( int var = var . size ( var ) - 1 ; var >= 0 ; var -- )
if ( var != null var )
if ( isText [ 0 ] var )
var = var . replace ( var + "" , "" )
var . putExtra ( "" , var . id )
var . putExtra ( "" , var . id )
String var = null
var = "" + var . id + "" + var
var = "" + var . id + "" + var
NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setGroup ( "" ) . setContentText ( var . toString ( var ) ) . setAutoCancel ( true ) . setNumber ( var . size ( var ) ) . setColor ( 0xff2ca5e0 ) . setGroupSummary ( false ) . setWhen ( ( ( long ) var . get ( 0 ) . messageOwner . date ) * 1000 ) . setStyle ( var ) . setContentIntent ( var ) . extend ( var ) . extend ( new NotificationCompat . CarExtender ( var ) . setUnreadConversation ( var . build ( var ) ) . build ( var ) ) . setCategory ( NotificationCompat . CATEGORY_MESSAGE )
var . notify ( var , var . build ( var ) )
var . cancel ( var . getValue ( ) )
if ( Math . abs ( System . currentTimeMillis ( ) - var ) <= 100 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
var . settings . sound = ""
int var = var . getInt ( "" + var , 0 )
( ( TLRPC . TL_inputNotifyPeer ) var . peer ) . peer = MessagesController . getInputPeer ( ( int ) var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , MODE_PRIVATE )
NotificationsController . getInstance ( ) . forceShowPopupForReply
MessagesController . getInstance ( ) . setReferer ( var . getExtras ( ) . getString ( "" ) )
FileLog . e ( "" )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , true )
FileLog . e ( "" )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , true )
SecretChatHelper var = var
var = var
var = var = new SecretChatHelper
MessageObject var = MessagesController . getInstance ( ) . dialogMessagesByRandomIds . get ( var . get ( var ) )
MessagesStorage . getInstance ( ) . markMessagesAsDeletedByRandoms ( var )
var . local_id = var . id = UserConfig . getNewMessageId ( )
var . from_id = UserConfig . getClientUserId ( )
if ( var . participant_id == UserConfig . getClientUserId ( ) )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
var . random_id = SendMessagesHelper . getInstance ( ) . getNextRandomId
UserConfig . saveConfig ( false )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , true , 0 )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChatDB ( var . id , false )
if ( var == UserConfig . getClientUserId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
final TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )
MessagesController . getInstance ( ) . dialogs_dict . put ( var . id , var )
MessagesController . getInstance ( ) . dialogs . add ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . putEncryptedChat ( var , var , var )
SecretChatHelper . getInstance ( ) . acceptSecretChat ( var )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
MessageObject var = new MessageObject ( var , null , false )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . dialog_id , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessageObject var = new MessageObject ( var , null , false )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . dialog_id , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var + "" )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
if ( var . attachPath != null && var . attachPath . startsWith ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE . getAbsolutePath ) )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
SendMessagesHelper . getInstance ( ) . putToSendingMessages ( var )
if ( var . admin_id == UserConfig . getClientUserId ( ) )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime
if ( ( var . key_use_count_out >= 100 || var . key_create_date < ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 * 24 * 7 ) && var . exchange_id == 0 && var . future_key_fingerprint == 0 )
MessagesStorage . getInstance ( ) . updateEncryptedChatSeq ( var , false )
MessagesStorage . getInstance ( ) . setMessageSeq ( var . id , var . seq_in , var . seq_out )
FileLog . e ( var + "" + var . in_seq_no + "" + var . out_seq_no )
int var = var . getObjectSize ( )
boolean var = var == 2 && var . admin_id != UserConfig . getClientUserId ( )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var . id )
if ( var == null )
MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , var . id , var . id , var . date , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var . id , var . id , var , var . dialog_id )
SendMessagesHelper . getInstance ( ) . processSentMessage ( var . id )
SendMessagesHelper . getInstance ( ) . removeFromSendingMessages ( var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
SendMessagesHelper . getInstance ( ) . processSentMessage ( var . id )
SendMessagesHelper . getInstance ( ) . stopVideoService ( var . attachPath )
SendMessagesHelper . getInstance ( ) . removeFromSendingMessages ( var . id )
byte var = new byte [ 36 ]
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
if ( var != null )
if ( var == UserConfig . getClientUserId ( ) )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )
var . local_id = var . id = UserConfig . getNewMessageId ( )
UserConfig . saveConfig ( false )
var . to_id . user_id = UserConfig . getClientUserId ( )
var . flags |= 4
var . ttl = Math . max ( var . media . duration + 2 , var . ttl )
var . media . caption = ""
var . local_id = var . id = UserConfig . getNewMessageId ( )
UserConfig . saveConfig ( false )
var . to_id . user_id = UserConfig . getClientUserId ( )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
MessagesController . getInstance ( ) . dialogMessage . remove ( var . id )
NotificationsController . getInstance ( ) . processReadMessages ( null , var , 0 , Integer . MAX_VALUE , false )
HashMap < Long , Integer > var = new HashMap
MessagesStorage . getInstance ( ) . deleteDialog ( var , 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , false )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . id , var , var , 1 , var . action . random_ids )
if ( var . exchange_id > var . action . exchange_id )
FileLog . e ( "" )
byte var = var . toByteArray ( )
if ( var . exchange_id == var . action . exchange_id )
byte var = Utilities . computeSHA1 ( var )
if ( var . action . key_fingerprint == var )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )
if ( var . exchange_id == var . action . exchange_id && var . future_key_fingerprint == var . action . key_fingerprint )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )
var . from_id = UserConfig . getClientUserId ( )
if ( var . participant_id == UserConfig . getClientUserId ( ) )
if ( var . admin_id == UserConfig . getClientUserId ( ) && var % 2 == 0 ++ )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var . id , var , var , var , var ) . US , "" , var . id , var , var , var , var )
var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var , var , var ) . US , "" , var , var , var )
if ( var != null )
if ( ! var . isEmpty ( ) )
var . add ( createDeleteMessage ( UserConfig . getNewMessageId ( ) , var . getKey ( ) , 0 , Utilities . random . nextLong ( ) , var ) . getNewMessageId ( ) , var . getKey ( ) , 0 , Utilities . random . nextLong ( ) , var )
UserConfig . saveConfig ( false )
MessageObject var = new MessageObject ( var , null , false )
SendMessagesHelper . getInstance ( ) . retrySendMessage ( var , true )
SendMessagesHelper . getInstance ( ) . processUnsentMessages ( var , new ArrayList < TLRPC . User > . User ( ) , new ArrayList < TLRPC . Chat > . Chat ( ) , var )
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( String . format ( Locale . US , "" , var . id , var , var ) . US , "" , var . id , var , var ) . stepThis . dispose
for ( int var = 0 ; var < var . size ( ) ; var ++ )
MessagesStorage . getInstance ( ) . updateEncryptedChatSeq ( var , true )
Utilities . aesIgeEncryption ( var . buffer , var . aesKey , var . aesIv , false , false , 24 , var . limit ( ) - 24 )
final TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChatDB ( var . chat_id , true )
if ( var != null )
boolean var = var . admin_id == UserConfig . getClientUserId ( )
if ( var . admin_id == UserConfig . getClientUserId ( ) )
FileLog . e ( "" + var . seq_in + "" + var . seq_out )
FileLog . e ( "" + var . in_seq_no + "" + var . out_seq_no )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
MessagesStorage . getInstance ( ) . updateEncryptedChatSeq ( var , true )
BigInteger var = BigInteger . valueOf ( MessagesStorage . secretG )
var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . secretPBytes ) , MessagesStorage . secretPBytes )
byte var = new byte [ 256 ]
var . exchange_id = SendMessagesHelper . getInstance ( ) . getNextRandomId
if ( var . key_fingerprint == var )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
if ( var == null )
MessagesStorage . secretPBytes = var . p
MessagesStorage . secretG = var . g
MessagesStorage . lastSecretVersion = var . version
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
if ( var == null )
MessagesStorage . secretPBytes = var . p
MessagesStorage . secretG = var . g
MessagesStorage . lastSecretVersion = var . version
final byte var = new byte [ 256 ]
var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . secretPBytes ) , MessagesStorage . secretPBytes )
var . user_id = MessagesController . getInputUser ( var )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )
var . last_message_date = ConnectionsManager . getInstance ( ) . getCurrentTime
MessagesController . getInstance ( ) . dialogs_dict . put ( var . id , var )
MessagesController . getInstance ( ) . dialogs . add ( var )
MessagesStorage . getInstance ( ) . putEncryptedChat ( var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatCreated , var )
MessagesController . getInstance ( ) . processUpdateArray ( var , null , null , false )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . wasUnableToFindCurrentLocation , var )
FileLog . e ( "" + var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( ( TLRPC . TL_messages_sendEncryptedMultiMedia ) var . var , this )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
SendMessagesHelper var = var
var = var
var = var = new SendMessagesHelper
public SendMessagesHelper
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidUpload )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailUpload )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FilePreparingStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileNewChunkAvailable )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FilePreparingFailed )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . httpFileDidFailedLoad )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . httpFileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . obj . messageOwner , var . encryptedChat , var , var . originalPath , var . obj )
FileLoader . getInstance ( ) . checkUploadNewDataAvailable ( var , var , var )
var . messageOwner . var = ""
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
var . obj . messageOwner . var = ""
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
final File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
final TLRPC . TL_photo var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . toString ( ) , null )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . messageOwner )
final File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . obj . messageOwner )
MessagesStorage . getInstance ( ) . putMessages ( var , var . peer , - 2 , 0 , false )
FileLoader . getInstance ( ) . cancelUploadFile ( var , var )
MessagesController . getInstance ( ) . deleteMessages ( var , null , null , var . messageOwner . to_id . channel_id , false )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
SecretChatHelper . getInstance ( ) . sendTTLMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendMessagesDeleteMessage ( var , null , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendClearHistoryMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendNotifyLayerMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendMessagesReadMessage ( var , null , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendScreenshotMessage ( var , null , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendCommitKeyMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendAbortKeyMessage ( var , var . messageOwner , 0 )
SecretChatHelper . getInstance ( ) . sendRequestKeyMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendAcceptKeyMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendNoopMessage ( var , var . messageOwner )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( ( int ) var . getDialogId ( ) )
sendMessage ( ( TLRPC . TL_photo ) var . messageOwner . media . photo , null , var , var . replyMessageObject , null , null , var . messageOwner . media . ttl_seconds )
sendMessage ( ( TLRPC . TL_document ) var . messageOwner . media . document , null , var . messageOwner . attachPath , var , var . replyMessageObject , null , null , var . messageOwner . media . ttl_seconds )
if ( var == null || var == 0 || var . id == UserConfig . getClientUserId ( ) )
var . local_id = var . id = UserConfig . getNewMessageId ( )
var . from_id = UserConfig . getClientUserId ( )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
UserConfig . saveConfig ( false )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . dialog_id , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
SendMessagesHelper . getInstance ( ) . sendMessage ( ( TLRPC . TL_document ) var , null , null , var , var , null , null , 0 )
final TLRPC . Peer var = MessagesController . getPeer ( ( int ) var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
HashMap < Long , Long > var = new HashMap
HashMap < Long , TLRPC . Message > var = new HashMap
TLRPC . InputPeer var = MessagesController . getInputPeer ( var )
int var = UserConfig . getClientUserId ( )
if ( var . getId ( ) <= 0 || var . isSecretPhoto ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )
var . local_id = var . id = UserConfig . getNewMessageId ( )
var . from_id = UserConfig . getClientUserId ( )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
if ( var instanceof TLRPC . TL_inputPeerChannel )
if ( BuildVars . DEBUG_VERSION )
FileLog . e ( "" + var . user_id + "" + var . chat_id + "" + var . channel_id + "" + var . access_hash )
MessagesStorage . getInstance ( ) . putMessages ( new ArrayList ( var ) , false , true , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
UserConfig . saveConfig ( false )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . messageOwner . var . channel_id )
final HashMap < Long , TLRPC . Message > var = var
HashMap < Integer , Long > var = new HashMap
Integer var = MessagesController . getInstance ( ) . dialogs_read_outbox_max . get ( var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )
MessagesController . getInstance ( ) . dialogs_read_outbox_max . put ( var , var )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )
MessagesController . getInstance ( ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . var . channel_id )
Long var = var . get ( var . id )
if ( var != null )
MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . var , var , var . id , 0 , false , var . channel_id )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , false , 0 )
SearchQuery . increasePeerRaiting ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var , var . id , var , var )
MessagesController . getInstance ( ) . processUpdates ( var , false )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var )
AlertsCreator . processError ( var , null , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
var . peer = MessagesController . getInputPeer ( ( int ) var . getDialogId ( ) )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )
AlertsCreator . processError ( var , var , var )
var . geo . lat = var . getLatitude ( )
var . geo . _long = var . getLongitude ( )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . getDialogId ( ) , var , null , null )
var . put ( var , var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesStorage . getInstance ( ) . saveBotCache ( var , var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
var . showOpenGameAlert ( var , var , var . url , ! var && ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) , Activity . MODE_PRIVATE . getBoolean ( "" + var , true ) + var , true , var )
MessagesStorage . getInstance ( ) . getBotCache ( var , var )
ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
var . peer = MessagesController . getInputPeer ( ( int ) var . getDialogId ( ) )
ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var . channel_id , false )
var = MessagesStorage . getInstance ( ) . createPendingTask ( var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )
sendMessage ( null , null , null , null , var , null , null , var , null , var , null , true , null , null , var , var , 0 )
sendMessage ( null , null , null , var , null , var , null , var , var , var , null , true , null , null , var , var , var )
sendMessage ( null , var , null , null , null , null , null , var , null , var , null , true , null , null , var , var , 0 )
sendMessage ( null , null , null , null , null , null , var , var , null , null , null , true , null , null , var , var , 0 )
sendMessage ( null , null , var , null , null , null , null , var , var , var , null , true , null , null , var , var , var )
var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
var . var = ""
var . var = ""
var . var = ""
var = StickersQuery . getStickerSetName ( var . stickerset . id )
var . local_id = var . id = UserConfig . getNewMessageId ( )
UserConfig . saveConfig ( false )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . InputUser var = MessagesController . getInputUser ( var )
if ( var . participant_id == UserConfig . getClientUserId ( ) )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
if ( BuildVars . DEBUG_VERSION )
FileLog . e ( "" + var . user_id + "" + var . chat_id + "" + var . channel_id + "" + var . access_hash )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )
if ( var != null )
var . reply_to_msg_id = var . getId ( )
DraftQuery . cleanDraft ( var , false )
if ( var != null && var . messageOwner . random_id != 0 )
var . reply_to_random_id = var . messageOwner . random_id
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
DraftQuery . cleanDraft ( var , false )
DraftQuery . cleanDraft ( var , false )
if ( var != null )
var . reply_to_msg_id = var . getId ( )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )
if ( var != null )
var . reply_to_msg_id = var . getId ( )
if ( var != null && var . messageOwner . random_id != 0 )
var . reply_to_random_id = var . messageOwner . random_id
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )
DraftQuery . cleanDraft ( var , false )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var . messageOwner . var )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )
if ( var != null )
var . reply_to_msg_id = var . getId ( )
DraftQuery . cleanDraft ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
FileLoader . getInstance ( ) . loadFile ( var . var , "" , 0 , 0 )
FileLoader . getInstance ( ) . uploadFile ( var , true , true , ConnectionsManager . FileTypePhoto )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . obj . messageOwner , var . encryptedChat , var . videoEditedInfo . encryptedFile , var . originalPath , var . obj )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
FileLoader . getInstance ( ) . uploadFile ( var , false , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , false , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
FileLoader . getInstance ( ) . loadFile ( var , true , 0 )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeVideo )
ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" )
FileLoader . getInstance ( ) . uploadFile ( var , var . sendRequest == null , false , ConnectionsManager . FileTypeFile )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
FileLoader . getInstance ( ) . loadFile ( var , true , 0 )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeFile )
FileLoader . getInstance ( ) . uploadFile ( var , var . sendRequest == null , true , ConnectionsManager . FileTypeAudio )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
FileLoader . getInstance ( ) . uploadFile ( var , false , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , false , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeVideo )
ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" )
FileLoader . getInstance ( ) . uploadFile ( var , var . sendEncryptedRequest != null , true , ConnectionsManager . FileTypePhoto )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , 1.0f , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , 1.0f , false )
MessagesStorage . getInstance ( ) . putMessages ( var . messages , false , true , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . peer , var . messageObjects )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( ( TLRPC . TL_messages_sendEncryptedMultiMedia ) var . sendEncryptedRequest , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . stopEncodingService , var )
return var . containsKey ( var )
HashMap < Integer , TLRPC . Message > var = new HashMap
HashMap < Long , Integer > var = new HashMap
var . put ( var . random_id , ( ( TLRPC . TL_updateMessageID ) var ) . id )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )
MessagesController . getInstance ( ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . message . to_id . channel_id )
Integer var = MessagesController . getInstance ( ) . dialogs_read_outbox_max . get ( var . dialog_id )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesController . getInstance ( ) . dialogs_read_outbox_max . put ( var . dialog_id , var )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )
MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , var , var . var , 0 , false , var . to_id . channel_id )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , false , 0 )
SearchQuery . increasePeerRaiting ( var . dialog_id )
MessagesController . getInstance ( ) . processUpdates ( var , false )
AlertsCreator . processError ( var , null , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , var . date , var . pts_count )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )
MessagesController . getInstance ( ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . var . to_id . channel_id )
Integer var = MessagesController . getInstance ( ) . dialogs_read_outbox_max . get ( var . dialog_id )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesController . getInstance ( ) . dialogs_read_outbox_max . put ( var . dialog_id , var )
MessagesController . getInstance ( ) . processUpdates ( var , false )
LocationController . getInstance ( ) . addSharingLocation ( var . dialog_id , var . id , var . media . period , var )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , var , 0 )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . getDialogId ( ) , var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
SearchQuery . increasePeerRaiting ( var . dialog_id )
AlertsCreator . processError ( var , null , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByAck , var )
MessagesStorage . getInstance ( ) . putSentFile ( var , var . media . photo , 0 )
MessagesStorage . getInstance ( ) . putSentFile ( var , var . media . document , 2 )
MessagesStorage . getInstance ( ) . putSentFile ( var , var . media . document , 1 )
StickersQuery . addRecentGif ( var . media . document , var . date )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var . media . document , var . date , false )
if ( var . attachPath != null && var . attachPath . startsWith ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE . getAbsolutePath ) )
MessagesStorage . getInstance ( ) . addRecentLocalFile ( var , var . toString ( ) , var . media . document )
MessagesController . getInstance ( ) . putUsers ( var , true )
MessagesController . getInstance ( ) . putChats ( var , true )
MessagesController . getInstance ( ) . putEncryptedChats ( var , true )
UserConfig . saveConfig ( false )
if ( var . toLowerCase ( ) . equals ( "" ) || var . toLowerCase ( ) . equals ( "" ) )
if ( var != null && var . getDuration ( ) != 0 )
var . duration = int ( var . getDuration ( ) / 1000 )
var . title = var . getTitle ( )
var . performer = var . getArtist ( )
String var = var . getMimeTypeFromExtension ( var . toLowerCase ( ) )
if ( var . mime_type . equals ( "" ) )
if ( var . mime_type . equals ( "" ) && var )
prepareSendingDocuments ( var , var , var , var , var , var , var )
if ( ! prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , null ) = true )
if ( ! prepareSendingDocumentInternal ( null , null , var . get ( var ) , var , var , var , null ) = true )
prepareSendingMedia ( var , var , var , var , false , false )
if ( var . content_url != null )
var = var . content_url
var . mime_type = var . content_type
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
int var = var . content_type . indexOf ( '/' )
var . file_name = "" + var . content_type . substring ( var + 1 )
String var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . thumb_url ) . thumb_url + "" + ImageLoader . getHttpUrlExtension ( var . thumb_url , "" ) . thumb_url , "" ) . getAbsolutePath
var . w = var . w
var . h = var . h
String var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . thumb_url ) . thumb_url + "" + ImageLoader . getHttpUrlExtension ( var . thumb_url , "" ) . thumb_url , "" ) . getAbsolutePath
var . thumb . w = var . w
var . thumb . h = var . h
var . thumb . var = new TLRPC . TL_fileLocationUnavailable ( )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var , null )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
var . w = var . w
var . h = var . h
if ( var != null && var . content_url != null )
var . put ( "" , var . content_url )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , var . send_message . reply_markup , var , 0 )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . send_message . message , var , var , var , ! var . send_message . no_webpage , var . send_message . entities , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , true , null , null , null )
var . var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . path , var . uri )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , null , var , 0 )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . toString ( ) , null )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . toString ( ) , null )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime
if ( var . videoEditedInfo != null || var . path . endsWith ( "" ) )
if ( var . videoEditedInfo != null )
var = var . videoEditedInfo . var
if ( var . videoEditedInfo . resultWidth == var . videoEditedInfo . originalWidth )
var += "" + var . videoEditedInfo . resultWidth
UserConfig . saveConfig ( false )
if ( var . videoEditedInfo != null && var . videoEditedInfo . needConvert ( ) )
if ( var . videoEditedInfo . var )
fillVideoAttribute ( var . var , var , var . videoEditedInfo )
var . videoEditedInfo . originalWidth = var . w
var . videoEditedInfo . originalHeight = var . h
var . w = var . videoEditedInfo . resultWidth
var . h = var . videoEditedInfo . resultHeight
var . duration = int ( var . videoEditedInfo . estimatedDuration / 1000 )
if ( var . videoEditedInfo . rotationValue == 90 || var . videoEditedInfo . rotationValue == 270 )
var . w = var . videoEditedInfo . resultHeight
var . h = var . videoEditedInfo . resultWidth
var . w = var . videoEditedInfo . resultWidth
var . h = var . videoEditedInfo . resultHeight
var . var = ( int ) var . videoEditedInfo . estimatedSize
String var = Integer . MIN_VALUE + "" + UserConfig . lastLocalId + ""
UserConfig . saveConfig ( false )
FileLog . var ( "" , var )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . path , var . uri )
SendMessagesHelper var = getInstance
MessagesStorage . getInstance ( ) . putMessages ( var , var . peer , - 2 , 0 , false )
prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , var . get ( var ) )
var = Bitmaps . createScaledBitmap ( var , var , var , true )
if ( var . resultWidth == var . originalWidth )
UserConfig . saveConfig ( false )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
String var = Integer . MIN_VALUE + "" + UserConfig . lastLocalId + ""
UserConfig . lastLocalId --
UserConfig . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceiveSmsCode , var . group ( 0 ) )
var = var
private StatsController var
if ( Math . abs ( var - var . get ( var ) ) >= 1000 )
for ( int var = 0 ; var < var ; var ++ )
var . apply ( var )
LocationController . getInstance ( ) . removeAllLocationSharings
if ( ! UserConfig . isClientActivated ( ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
final Semaphore var = new Semaphore ( 0 )
var . add ( UserConfig . getClientUserId ( ) )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , 0 , 30 ) . US , "" , 0 , 30 )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
var . release ( )
var . acquire ( )
var . putString ( "" , var )
var . putInt ( "" , var )
var . putInt ( "" , var )
var . putInt ( "" , var )
var . putBoolean ( "" , var )
var . putBoolean ( "" , var )
var . putBoolean ( "" , var )
SerializedData var = new SerializedData ( var )
int var = var . readInt32 ( false )
int var = var . readInt32 ( false )
var = TLRPC . User . TLdeserialize ( var , var , false )
var = var . getInt ( "" , - 210000 )
var = var . getInt ( "" , - 210000 )
var = var . getString ( "" , "" )
var = var . getInt ( "" , 0 )
var = var . getString ( "" , "" )
var = var . getBoolean ( "" , false )
var = int ( System . currentTimeMillis ( ) / 1000 - 60 * 10 )
String var = var . getString ( "" , "" )
var = Base64 . decode ( var , Base64 . DEFAULT )
var = new byte [ 0 ]
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )
Map < String , ? > var = var . getAll ( )
String var = LocaleController . getString ( "" , R . var . SoundDefault )
int var = 0
String var = var . getKey ( )
String var = ( String ) var . getValue ( )
if ( ! var . equals ( var ) )
if ( ! var . contains ( var ) )
var . add ( var )
Integer var = ( Integer ) var . getValue ( )
if ( var . startsWith ( "" ) )
Integer var = ( Integer ) var . getValue ( )
if ( var != var )
if ( ! var . contains ( var ) )
var . add ( var )
Integer var = ( Integer ) var . getValue ( )
var . add ( var )
if ( var . startsWith ( "" ) )
Integer var = ( Integer ) var . getValue ( )
var . add ( var )
Integer var = ( Integer ) var . getValue ( )
if ( var != var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
var . commit ( )
if ( var . length == 0 )
var = new byte [ 16 ]
System . arraycopy ( var , 0 , var , 0 , 16 )
String var = Utilities . bytesToHex ( Utilities . computeSHA256 ( var , 0 , var . length ) , 0 , var . length )
var = false
var = 0
var = ""
var = new byte [ 0 ]
var = 60 * 60
var = 0
var = true
var = BuildVars . BUILD_VERSION_STRING
if ( var == null || var . length ( ) == 0 )
byte var = var . digest ( var . getBytes ( ) )
return String . format ( Locale . US , "" , var , var , var , var , var , var , var , var , var )
for ( int var = 9 ; var < args . length ; var ++ )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileUploadProgressChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stopEncodingService )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileUploadProgressChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stopEncodingService )
FileLog . e ( "" )
if ( var != null && var . equals ( var ) )
if ( var == null || var . equals ( var )  )
FileLog . e ( "" )
if ( UserConfig . isClientActivated ( ) )
final TLRPC . User var = UserConfig . getCurrentUser ( )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidLoaded )
FileLoader . getInstance ( ) . loadFile ( var . var . photo_small , null , 0 , 1 )
NotificationCenter . getInstance ( ) . removeObserver ( var , NotificationCenter . FileDidLoaded )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . removeObserver ( var , NotificationCenter . didReceivedNewMessages )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )
if ( MediaController . getInstance ( ) . canCustomTabs )
if ( var . equals ( "" ) || var . toString ( var ) . contains ( "" ) )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( var && MediaController . getInstance ( var ) . canCustomTabs var && ! var && ! var . equals ( "" ) )
if ( BuildVars . DEBUG_VERSION )
CameraInfo var = new CameraInfo ( var , var )
FileLog . e ( "" + var . width + "" + var . height )
FileLog . e ( "" + var . width + "" + var . height )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . var )
if ( var == null || var . isEmpty ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var . camera != null )
var . camera . stopPreview ( )
var . camera . release ( )
var . camera = null
var = null
var . release ( )
var . acquire ( )
if ( var . frontCamera != 0 )
FileLog . e ( "" + var + "" + var )
FileLog . e ( "" )
FileLog . e ( "" )
var = new Size ( 4 , 3 )
public CameraInfo ( int var , Camera . CameraInfo var )
var = var . facing
FileLog . var ( "" + var . getWidth ( ) + "" + var . getHeight ( ) )
FileLog . var ( "" + var . getWidth ( ) + "" + var . getHeight ( ) )
var . setFlashMode ( var )
initCamera ( var )
initCamera ( var )
var . skipData ( var - var )
this ( var , var , var , var , var )
this ( var , var , var , var , var , null )
return var <= 0 || var >= var
this ( var , null )
Constructor < ? > var = var . getConstructor ( boolean . class , long . class , Handler . class , VideoRendererEventListener . class , int . class )
var . add ( new MediaCodecAudioRenderer ( MediaCodecSelector . DEFAULT , var , true , var , var , AudioCapabilities . getCapabilities ( var ) , var ) . DEFAULT , var , true , var , var , AudioCapabilities . getCapabilities ( var ) , var )
return newSimpleInstance ( var , var , var )
return new ExoPlayerImpl ( var , var , var )
this . var = Player . STATE_IDLE
var = Timeline . EMPTY
var = TrackGroupArray . EMPTY
var = new ExoPlayerImplInternal . PlaybackInfo ( 0 , 0 )
var = new ExoPlayerImplInternal ( var , var , var , var , var , var , var , this )
var = null
var . onTimelineChanged ( var , var )
var = var
var . onSelectionActivated ( null )
var . prepare ( var , var )
var . onPlayerStateChanged ( var , var )
int var = var . firstPeriodIndex
long var = var . getPeriod ( var , var ) . getDurationUs
var = var . getPeriod ( ++ var , var ) . getDurationUs
var = var
var . seekTo ( var , var , C . TIME_UNSET )
var = var
var . onPositionDiscontinuity ( )
var . stop ( )
if ( var . isEmpty ( ) || var > 0 )
return var . getPeriod ( var . periodId . periodIndex , var ) . windowIndex
if ( var . isEmpty ( ) || var > 0 )
if ( var . isEmpty ( ) || var > 0 )
return ! var . isEmpty ( ) && var == 0 && var . periodId . isAd ( )
var . getPeriod ( var . periodId . periodIndex , var )
var . onPlayerStateChanged ( var , var )
var . onLoadingChanged ( var )
var = true
var . onPositionDiscontinuity ( )
if ( var == 0 )
var . onPositionDiscontinuity ( )
var -= var . seekAcks
var . onTimelineChanged ( var , var )
var . getPeriod ( var . periodId . periodIndex , var )
public static final SourceInfo
public SourceInfo ( Timeline var , Object var , PlaybackInfo var , int var )
this . var = Player . STATE_IDLE
var = new StandaloneMediaClock
var = new MediaPeriodInfoSequence
var = PlaybackParameters . DEFAULT
var = new Handler ( var . getLooper ( ) , this )
Log . w ( var , "" )
Thread . currentThread ( ) . interrupt
var . obtainMessage ( var , Pair . create ( var , var ) , var ) . sendToTarget
prepareInternal ( ( MediaSource ) var . obj , var . arg1 != 0 )
sendMessagesInternal ( ( ExoPlayerMessage ) var . obj )
if ( this . var != var )
this . var = var
if ( this . var != var )
this . var = var
resetInternal ( true )
var = new PlaybackInfo ( var . periodId , var . positionUs , var . contentPositionUs )
if ( var == Player . STATE_READY == Player . STATE_BUFFERING )
if ( var == Player . STATE_BUFFERING )
var . setRepeatMode ( var )
if ( var == C . INDEX_UNSET || var . next == null || var . next . info . id . periodIndex != var )
if ( var . next != null )
releasePeriodHoldersFrom ( var . next )
boolean var = var <= var . index
var = var
var = new PlaybackInfo ( var , var , var . contentPositionUs )
var = var . getPositionUs ( )
var . setPositionUs ( var )
var = SystemClock . elapsedRealtime ( ) * 1000
long var = SystemClock . elapsedRealtime ( )
if ( var == null )
boolean var = var . isReady ( ) || var . isEnded ( )
PlaybackParameters var = var . getPlaybackParameters ( )
if ( ! var . equals ( this . var ) )
var . synchronize ( var )
if ( var == Player . STATE_BUFFERING )
if ( var == Player . STATE_BUFFERING )
if ( var . length != 0 && var != Player . STATE_ENDED )
long var = var - SystemClock . elapsedRealtime ( )
if ( var <= 0 )
var . sendEmptyMessage ( var )
if ( var == null )
var = var
Pair < Integer , Long > var = resolveSeekPosition ( var )
var = new PlaybackInfo ( 0 , 0 )
resetInternal ( false )
MediaPeriodId var = var . resolvePeriodPositionForAds ( var , var )
var = new PlaybackInfo ( var , var , var )
var . release ( )
MediaPeriodHolder var = var
while ( var != null )
var . release ( )
var = var . next
if ( var != var || var != var )
if ( var != null )
var . next = null
var = null
var . getPeriod ( var . info . id . periodIndex , var )
var . setPositionUs ( var )
resetInternal ( true )
resetInternal ( true )
var = null
var = var
var = null
var . releaseSource ( )
var . setTimeline ( null )
if ( var == Player . STATE_READY || var == Player . STATE_BUFFERING )
if ( var . selectTracks ( ) )
boolean var = var != var
releasePeriodHoldersFrom ( var . next )
long var = var . updatePeriodTrackSelection ( var . positionUs , var , var )
var . positionUs = var
var . obtainMessage ( var , var . trackSelectorResult ) . sendToTarget
var = var . next
if ( var . prepared )
long var = Math . max ( var . info . startPositionUs , var . toPeriodTime ( var ) )
var . updatePeriodTrackSelection ( var , false )
Timeline var = var
Object var = var . second
if ( var == null )
int var = var
handleSourceInfoRefreshEndedPlayback ( var , var )
MediaPeriodId var = var . resolvePeriodPositionForAds ( var , var )
if ( var . isEmpty ( ) )
handleSourceInfoRefreshEndedPlayback ( var )
MediaPeriodId var = var . resolvePeriodPositionForAds ( var , var )
if ( var == null && var >= var . getPeriodCount ( ) )
handleSourceInfoRefreshEndedPlayback ( var )
Pair < Integer , Long > var = getPeriodPosition ( var . getPeriod ( var , var ) , var . windowIndex , C . TIME_UNSET )
MediaPeriodId var = new MediaPeriodId ( var )
var = new PlaybackInfo ( var , var )
if ( var . periodId . isAd ( ) )
if ( ! var . isAd ( ) || var . adIndexInAdGroup != var . var . adIndexInAdGroup )
while ( var . next != null )
var = new PlaybackInfo ( 0 , 0 )
resetInternal ( false )
var = var . getNextPeriodIndex ( var , var , var , var )
return getPeriodPosition ( var . getPeriod ( var , var ) , var . windowIndex , C . TIME_UNSET )
if ( var != null && ! var )
while ( var != var && var >= var . next . rendererPositionOffsetUs )
var . release ( )
var = new PlaybackInfo ( var . info . id , var . info . startPositionUs , var . info . contentPositionUs )
var . obtainMessage ( var , var ) . sendToTarget
TrackSelection var = var . selections . get ( var )
if ( var != null && var . equals ( var ) )
var = var . getFirstMediaPeriodInfo ( var )
if ( var == null )
Object var = var . getPeriod ( var . id . periodIndex , var , true ) . var
var . next = var
var . mediaPeriod . prepare ( this , var . startPositionUs )
if ( var == null || var . mediaPeriod != var )
var . handlePrepared ( )
var = var
resetRendererPosition ( var . info . startPositionUs )
if ( var != null ++ )
if ( var [ var ] && ( var == null || ( var . isCurrentStreamFinal ( ) && var . getStream ( ) == var . sampleStreams [ var ] ) ) )
var . obtainMessage ( var , var . trackSelectorResult ) . sendToTarget
this . var = var
this . var = var
this . var = Assertions . checkNotNull ( var )
this . var = var
var = new boolean [ var ] . length
ClippingMediaPeriod var = new ClippingMediaPeriod ( var , true )
var . setClipping ( 0 , var . endPositionUs )
return var - getRendererOffset
if ( var == C . TIME_END_OF_SOURCE )
var = var . durationUs
var = true
long var = updatePeriodTrackSelection ( var . startPositionUs , false )
return var . shouldContinueLoading ( var )
var . continueLoading ( var )
TrackSelectorResult var = var . selectTracks ( var , var . getTrackGroups ( ) )
for ( int var = 0 ; var < var . length ; var ++ )
if ( var . endPositionUs != C . TIME_END_OF_SOURCE )
var . releasePeriod ( ( ( ClippingMediaPeriod ) var ) . var )
var . releasePeriod ( var )
return new Format ( var , null , var , var , var , var , var , var , var , var , var , null , var , null , var , var , var , var , var , 0 , var , var , var , var , var , null )
boolean var = var . readInt ( ) != 0
return this . var == var . var && this . var == var . var
Handler var = new Handler ( var )
var = var . createRenderers ( var , var , var , var , var )
this . var = var
this . var = var
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_SCALING_MODE , var )
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_AUDIO_ATTRIBUTES , var )
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_VOLUME , var )
var . clear ( )
var . prepare ( var )
var . stop ( )
ExoPlayerMessage var = new ExoPlayerMessage [ var ]
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_SURFACE , var )
var . blockingSendMessages ( var )
var . sendMessages ( var )
var . onAudioTrackUnderrun ( var , var , var )
return set ( var , var , var , var , var , null , null , null , null , null , C . TIME_UNSET )
return C . INDEX_UNSET
return C . INDEX_UNSET
int var = getNextWindowIndex ( var , var )
return getNextPeriodIndex ( var , var , var , var ) == C . INDEX_UNSET
public static final Ac3SyncFrameInfo
return Format . createAudioSampleFormat ( var , MimeTypes . AUDIO_E_AC3 , null , Format . NO_VALUE , Format . NO_VALUE , var , var , null , var , 0 , var )
var . skipBits ( 16 + 2 + 3 )
return new Ac3SyncFrameInfo ( var , var , var , var , var )
var . onAudioTrackUnderrun ( var , var , var )
ParsableBitArray var = new ParsableBitArray ( var )
var . skipBits ( 4 * 8 + 1 + 5 + 1 + 7 + 14 )
this ( var , var , var , var , var , null )
var = new AudioTrack ( var , var , new AudioTrackListener )
if ( allowPassthrough ( var ) && var . getPassthroughDecoderInfo ( ) != null )
var = var . getFrameworkMediaFormatV16 ( )
var . setString ( MediaFormat . KEY_MIME , MimeTypes . AUDIO_RAW )
var . configure ( var . getFrameworkMediaFormatV16 ( ) , null , var , 0 )
var . configure ( var , var , var , var , 0 , var )
if ( var != AudioTrack . CURRENT_POSITION_NOT_SET )
var . playToEndOfStream ( )
public SimpleDecoderAudioRenderer ( Handler var , AudioRendererEventListener var , AudioCapabilities var , DrmSessionManager < ExoMediaCrypto > var , boolean var , AudioProcessor ... var )
var = new AudioTrack ( var , var , new AudioTrackListener )
int var = supportsFormatInternal ( var )
var . configure ( var . sampleMimeType , var . channelCount , var . sampleRate , var . pcmEncoding , 0 )
if ( var != AudioTrack . CURRENT_POSITION_NOT_SET )
public Sonic ( int var , int var )
int var = var . remaining ( ) / var
int var = Math . min ( var . remaining ( ) / var , var )
enlargeInputBufferIfNeeded ( var + 2 * var )
if ( var + var > var )
var += ( var / 2 ) + var
int var
if ( var == 1 && var == 1 )
int var = var - ( var * 4 )
int var = var + ( var * 4 )
if ( var == 1 )
var = findPitchPeriodInRange ( var , var , var , var )
downSampleInput ( var , var , 1 )
if ( var >= 1.0f )
for ( int var = 0 ; var < var - 1 ; var ++ )
enlargeOutputBufferIfNeeded ( 1 )
if ( var >= 2.0f )
if ( var < 0.5f )
enlargeOutputBufferIfNeeded ( var + var )
if ( var > 0 )
var += copyInputToOutput ( var )
if ( var > 1.0 )
var += var + skipPitchPeriod ( var , var , var , var )
var += insertPitchPeriod ( var , var , var , var )
if ( var > 1.00001 || var < 0.99999 )
if ( ! var && var != 1.0f )
this . var = Util . constrainValue ( var , var , var )
return this . var
this . var = Util . constrainValue ( var , var , var )
if ( this . var == var && this . var == var )
return Math . abs ( var - 1f ) >= var || Math . abs ( var - 1f ) >= var
int var = var . getSamplesAvailable ( ) * var * 2
return var && ( var == null || var . getSamplesAvailable ( ) == 0 )
var = new Sonic ( var , var )
var . setPitch ( var )
MediaDrmHandler var
return new DefaultDrmSessionManager ( var , FrameworkMediaDrm . newInstance ( var ) , var , var , var , var )
this . var = var
Assertions . checkState ( var == 0 )
String var = var . type
return Util . SDK_INT >= 24
if ( this . var == null )
if ( var == null )
if ( var == null )
onError ( new IllegalStateException ( "" + var ) + var )
var = var . data
var = var . mimeType
byte var = PsshAtomUtil . parseSchemeSpecificData ( var , C . WIDEVINE_UUID )
openInternal ( true )
if ( var != null )
openInternal ( false )
postKeyRequest ( var , MediaDrm . KEY_TYPE_OFFLINE )
onError ( new KeysExpiredException )
var = STATE_OPENED_WITH_KEYS
var . onDrmKeysRestored ( )
var . restoreKeys ( var , var )
Log . var ( var , "" , var )
if ( ! C . WIDEVINE_UUID . equals ( var ) )
var . obtainMessage ( var , var ) . sendToTarget
if ( var != STATE_OPENED && var != STATE_OPENED_WITH_KEYS )
onKeysError ( ( Exception ) var )
var . provideKeyResponse ( var , ( byte ) var )
var . onDrmKeysRemoved ( )
var . onDrmKeysLoaded ( )
var . onDrmSessionManagerError ( var )
if ( var == 0 || ( var != STATE_OPENED && var != STATE_OPENED_WITH_KEYS ) )
if ( var == STATE_OPENED_WITH_KEYS )
if ( var == var )
var . sendEmptyMessage ( var )
var . obtainMessage ( var . what , var ) . sendToTarget
this ( true , var )
for ( int var = 1 ; var < var . length ; var ++ )
if ( ! Util . areEqual ( var . type , var ) )
for ( int var = 0 ; var < var . length ; var ++ )
var = Arrays . var ( var )
this ( var , var , var , var , false )
this . var = Assertions . checkNotNull ( var )
return var . equals ( var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var )
this . var = new MediaDrm ( Assertions . checkNotNull ( var ) )
return var . getData ( )
return var . getDefaultUrl ( )
return var . getDefaultUrl ( )
return new OfflineLicenseHelper ( FrameworkMediaDrm . newInstance ( C . WIDEVINE_UUID ) . WIDEVINE_UUID , new HttpMediaDrmCallback ( var , var , var ) , var , var , var )
public OfflineLicenseHelper ( ExoMediaDrm < T > var , MediaDrmCallback var , HashMap < String , String > , String var )
var = new DefaultDrmSessionManager ( C . WIDEVINE_UUID , var , var , var , new Handler ( var . getLooper ( ) ) . getLooper ( ) , var )
var [ 11 ] = var . newInstance ( )
var . seekMap ( this )
var . consume ( prepareTagData ( var ) , var )
var . consume ( prepareTagData ( var ) , var )
if ( var == var && var != null )
return var . getDurationUs ( )
public ScriptTagPayloadReader ( TrackOutput var )
super ( var )
int var = var . readUnsignedInt24 ( )
return new String ( var )
return EbmlReader . TYPE_MASTER
return EbmlReader . TYPE_UNSIGNED_INT
return EbmlReader . TYPE_STRING
return EbmlReader . TYPE_BINARY
return EbmlReader . TYPE_FLOAT
return EbmlReader . TYPE_UNKNOWN
var = parseFourCcVc1Private ( new ParsableByteArray ( var ) )
var = MimeTypes . VIDEO_VC1
var = MimeTypes . VIDEO_UNKNOWN
var = Format . createImageSampleFormat ( Integer . toString ( var ) , var , null , Format . NO_VALUE , var , var , var )
return Collections . singletonList ( var )
public ConstantBitrateSeeker ( long var , int var , long var )
this . var = var
return var != C . TIME_UNSET
var = Util . constrainValue ( var , 0 , var )
peekId3Data ( var )
var = new Id3Decoder ( var ) . decode ( var , var )
var += var . frameSize
long var = new long [ var ] + 1
long var = new long [ var ] + 1
for ( int var = 1 ; var < var . length ; var ++ )
var [ var ] = var * var / var
return new XingSeeker ( var , var , var )
long var = new long [ 99 ]
for ( int var = 0 ; var < 99 ; var ++ )
return new XingSeeker ( var , var , var , var , var , var . frameSize )
private XingSeeker ( long var , long var , long var )
this ( var , var , var , null , 0 , 0 )
private XingSeeker ( long var , long var , long var , long var , long var , int var )
float var = var * 100f / var
if ( var <= 0f = 0f >= 100f = 256f )
var = 0f
if ( var >= 100f = 256f )
var = 256f
var = var + ( var - var ) * ( var - var )
long var = Math . round ( ( 1.0 / 256 ) * var * var ) + var
if ( ! isSeekable || var < var )
double var = 256.0 * ( var - var ) / var
int var = Util . binarySearchFloor ( var , ( long ) var , true , false ) + 1
long var = getTimeUsForTocPosition ( var )
return var + var
return var * var / 100
var = var . readUnsignedIntToInt ( )
int var = var . readNextSampleSize ( )
return new TrackSampleTable ( var , var , var , var , var )
if ( var [ 0 ] <= var && var < var [ 1 ] && var [ var ] . length - 1 < var && var <= var )
return new TrackSampleTable ( var , var , var , var , var )
return new TrackSampleTable ( var , var , var , var , var )
return new TrackSampleTable ( var , var , var , var , var )
return new TrackSampleTable ( var , var , var , var , var )
var = MimeTypes . VIDEO_MPEG2
return Pair . create ( var , null )
return Pair . create ( var , null )
var = C . INDEX_UNSET
private Results ( long var , int var , int var , long var , int var )
return new Results ( var , var , var , var , var )
var = new LinkedList
var . seekMap ( new SeekMap . Unseekable ( var ) )
var = var . track ( var . size ( ) , C . TRACK_TYPE_METADATA )
TrackOutput var = var . track ( var . size ( ) + 1 , C . TRACK_TYPE_TEXT )
if ( var == null )
var . currentSampleIndex ++
if ( var . currentSampleInTrackRun == var . trunLength [ var ] . currentTrackRunIndex )
var . currentSampleInTrackRun = 0
TrackFragment var = var . fragment
int var = var . header . var
boolean var = var . sampleHasSubsampleEncryptionTable [ var ] . currentSampleIndex
var = var
long var = var - var . getPosition ( ) + var
if ( var < var )
int var = Atom . FULL_HEADER_SIZE + 16 + 4 + var . length
Pair < UUID , byte > var = parsePsshAtom ( var )
return var . first
Pair < UUID , byte > var = parsePsshAtom ( var )
if ( var != null && ! var . equals ( var . first ) )
Log . w ( var , "" + var + "" + var . first + "" )
return var . second
public TrackSampleTable ( long var , int var , int var , long var , int var )
return getEstimatedPosition ( var , var , var )
return var + var [ var ]
Ac3Util . Ac3SyncFrameInfo var = Ac3Util . parseAc3SyncframeInfo ( var )
var . format ( Format . createImageSampleFormat ( var . getFormatId ( ) , MimeTypes . APPLICATION_DVBSUBS , null , Format . NO_VALUE , Collections . singletonList ( var . initializationData ) . initializationData , var . language , null ) . getFormatId ( ) , MimeTypes . APPLICATION_DVBSUBS , null , Format . NO_VALUE , Collections . singletonList ( var . initializationData ) . initializationData , var . language , null )
final int var = var . var ( )
if ( var != ( ( var + 1 ) & 0xF ) = true )
var . seekMap ( this )
return Math . min ( var , var - var ) + var
return var * C . MICROS_PER_SECOND / var
Log . e ( var , "" + var )
return new MediaCodecInfo ( var , var , var , false , false )
return new MediaCodecInfo ( var , var , var , var , var )
skipSource ( var )
if ( var == var && var != null && canReconfigureCodec ( var , var . adaptive , var , var ) )
return var != null && ! var && ( isSourceReady || var >= 0 || ( var != C . TIME_UNSET && SystemClock . elapsedRealtime ( ) < var ) )
if ( var < 0 )
if ( var == null == null )
if ( Util . SDK_INT <= 24 && "" . equals ( var ) && ( Util . MODEL . startsWith ( "" ) || Util . MODEL . startsWith ( "" ) ) . SDK_INT < 24 && ( "" . equals ( var ) || "" . equals ( var ) ) && ( "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) ) )
var = getDecoderInfosInternal ( var , var )
var = getDecoderInfosInternal ( var , var )
var = Collections . unmodifiableList ( var )
List < MediaCodecInfo > var = new ArrayList
if ( isCodecUsableDecoder ( var , var , var ) )
if ( Util . SDK_INT < 24 && ( "" . equals ( var ) || "" . equals ( var ) ) && Util . MANUFACTURER . equals ( "" ) && ( Util . DEVICE . startsWith ( "" ) || Util . DEVICE . startsWith ( "" ) || Util . DEVICE . startsWith ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) ) )
return Util . SDK_INT <= 22 && ( Util . MODEL . equals ( "" ) || Util . MODEL . equals ( "" ) ) && ( "" . equals ( var ) || "" . equals ( var ) )
Integer var = var . get ( var )
if ( var == null )
Integer var = var . get ( var )
if ( var == null )
public MetadataRenderer ( Output var , Looper var )
public MetadataRenderer ( Output var , Looper var , MetadataDecoderFactory var )
public EventMessage ( String var , String var , long var , long var , byte var )
return var == var . var && var == var . var && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var )
return new Metadata ( new EventMessage ( var , var , var , var , var ) , var , var , var , var )
var = new String ( var , var , var - var , var )
var = new String ( var , var , var - var , "" )
String var = new String ( var , var , var - var , var )
String var = new String ( var , var , var - var , var )
if ( var . equals ( "" ) = "" )
if ( var < var . length = "" )
var = new String ( var , var , var - var , var )
var = ( ( var & 0x01 ) << 32 ) | var . readUnsignedInt ( )
var = ( ( var & 0x01 ) << 32 ) | var . readUnsignedInt ( )
return getFirstWindowIndexByChildIndex ( var )
this . var = var
var . prepare ( this , var + var )
long var = var . selectTracks ( var , var , var , var , var + var )
Assertions . checkState ( var == var + var || ( var >= var && ( var == C . TIME_END_OF_SOURCE || var <= var ) ) )
if ( var [ var ] == null [ var ] == null || var [ var ] . stream != var [ var ] )
if ( var [ var ] == null || var [ var ] . stream != var [ var ] )
long var = var . seekToUs ( var + var )
Assertions . checkState ( var == var + var || ( var >= var && ( var == C . TIME_END_OF_SOURCE || var <= var ) ) )
return var . continueLoading ( var + var )
public ClippingSampleStream ( MediaPeriod var , SampleStream var , long var , long var , boolean var )
var = false
return var . isReady ( )
if ( var != C . TIME_END_OF_SOURCE && ( ( var == C . RESULT_BUFFER_READ && var . timeUs >= var ) || ( var == C . RESULT_NOTHING_READ && var . getBufferedPositionUs ( ) == C . TIME_END_OF_SOURCE ) ) )
var . timeUs -= var
var . skipData ( var + var )
this ( var , var , var , true )
public ClippingMediaSource ( MediaSource var , long var , long var , boolean var )
var . prepareSource ( var , false , this )
var . maybeThrowSourceInfoRefreshError ( )
ClippingMediaPeriod var = new ClippingMediaPeriod ( var . createPeriod ( var , var ) , var , var )
var . releaseSource ( )
long var = var . var
var . get ( var ) . setClipping ( var , var )
if ( var . durationUs != C . TIME_UNSET )
Assertions . checkArgument ( var == 0 || var . isSeekable )
return var . getNextWindowIndex ( var , var )
var = var . getWindow ( 0 , var , var , var )
var = var . getPeriod ( 0 , var , var )
if ( var . getNextLoadPositionUs ( ) == var )
this . var = var
this . var = var
int var = var . getChildIndexByPeriodIndex ( var . periodIndex )
MediaPeriodId var = new MediaPeriodId ( var . periodIndex - var . getFirstPeriodIndexByChildIndex ( var ) )
MediaPeriod var = var [ var ] . createPeriod ( var , var )
var . remove ( var )
var [ var ] . releaseSource
var . onSourceInfoRefreshed ( var , var . clone ( ) )
boolean var = new boolean [ var ] . length
for ( int var = 0 ; var < var . length ; var ++ )
if ( ! var . containsKey ( var ) )
var . put ( var , null )
super ( var . length )
int var = new int [ var ] . length
int var = new int [ var ] . length
for ( int var = 0 ; var < var . length ; var ++ )
Assertions . checkState ( var <= Integer . MAX_VALUE , "" )
var += var . getWindowCount ( )
this . var = var
this . var = var
this . var = var
return var [ var ] . length - 1
var = Player . REPEAT_MODE_ALL
var = Player . REPEAT_MODE_ALL
return ( Integer ) var
super ( var . size ( ) )
if ( var && ! var )
var = ! var . advanceTo ( var , true , true ) && var . getReadIndex ( ) != 0
if ( var || ( var && var == 0 ) )
return var || ( ! isPendingReset && var [ var ] . hasNextSample )
var . maybeThrowError ( )
if ( var || isPendingReset )
return var [ var ] . read ( var , var , var , var , var )
void skipData ( int var , long var )
var . advanceToEnd ( )
var . advanceTo ( var , true , true )
if ( isLoadableExceptionFatal ( var ) )
var . setLoadPosition ( var . getPosition ( var ) , var )
if ( var == ExtractorMediaSource . MIN_RETRY_COUNT_DEFAULT_FOR_MEDIA )
var . startLoading ( var , this , var )
if ( var != C . LENGTH_UNSET || ( var != null && var . getDurationUs ( ) != C . TIME_UNSET ) )
boolean var = var . advanceTo ( var , true , false )
var . onLoadError ( var )
ExtractorMediaPeriod . this . skipData ( var , var )
var = var . open ( new DataSpec ( var , var , C . LENGTH_UNSET , var ) , var , C . LENGTH_UNSET , var )
this . var = var
this . var = var
notifySourceInfoRefreshed ( C . TIME_UNSET , false )
return new ExtractorMediaPeriod ( var , var . createDataSource ( ) , var . createExtractors ( ) , var , var , var , this , var , var , var )
var = null
if ( var == var && var == var || ( var != C . TIME_UNSET && var == C . TIME_UNSET ) )
var . onSourceInfoRefreshed ( new SinglePeriodTimeline ( var , var ) , var , null )
var . releaseSource ( )
int var = var . getNextWindowIndex ( var , var )
int var = var . getPreviousWindowIndex ( var , var )
public MediaPeriodId ( int var , int var , int var )
return var == var . var && var == var . var && var == var . var
public MergingMediaPeriod ( MediaPeriod ... var )
var = var . length
var = new CompositeSequenceableLoader ( var )
return var . continueLoading ( var )
if ( -- var > 0 )
if ( var == null )
public MergingMediaSource ( MediaSource ... var )
this . var = var
var . maybeThrowSourceInfoRefreshError ( )
return new MergingMediaPeriod ( var )
var . releaseSource ( )
if ( var == 0 )
var . advanceToEnd ( )
public SinglePeriodTimeline ( long var , boolean var )
this ( var , var , 0 , 0 , var , false )
this ( C . TIME_UNSET , C . TIME_UNSET , var , var , var , var , var , var )
return var . set ( var , var , 0 , var , - var )
public SingleSampleMediaPeriod ( Uri var , DataSource . Factory var , Format var , int var , Handler var , EventListener var , int var )
var . startLoading ( new SourceLoadable ( var , var . createDataSource ( ) ) , var . createDataSource ( ) , this , var )
var . get ( var ) . seekToUs ( var )
if ( ! var )
if ( var > 0 = var )
public SourceLoadable ( Uri var , DataSource var )
var . open ( new DataSpec ( var ) )
var = new SinglePeriodTimeline ( var , true )
var . onSourceInfoRefreshed ( var , null )
public BaseMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var )
public ChunkExtractorWrapper ( Extractor var , Format var )
var . seek ( 0 , 0 )
public ChunkSampleStream ( int var , int var , T var , Callback < ChunkSampleStream < T > > < T > var , Allocator var , long var , int var , EventDispatcher var )
var = new LinkedList
BaseMediaChunk var = var . getLast ( )
discardDownstreamMediaChunks ( var . getReadIndex ( ) )
var . discardTo ( var , true , false )
discardDownstreamMediaChunks ( var . getReadIndex ( ) )
var . advanceToEnd ( )
var . advanceTo ( var , true , true )
var . discardToRead ( )
var . discardUpstreamSamples ( var . getFirstSampleIndex ( 0 ) )
BaseMediaChunk var = var . getFirst ( )
var = var . removeLast ( )
var = var . var
var [ var ] . discardUpstreamSamples ( var . getFirstSampleIndex ( var + 1 ) + 1 )
var . upstreamDiscarded ( var , var , var )
var . advanceToEnd ( )
var . advanceTo ( var , true , true )
public ContainerMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var , int var , long var , ChunkExtractorWrapper var )
super ( var , var , var , var , var , var , var , var )
var . init ( null )
public MediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var )
public SingleSampleMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var , int var , Format var )
super ( var , var , var , var , var , var , var , var )
public DashMediaPeriod ( int var , DashManifest var , int var , DashChunkSource . Factory var , int var , EventDispatcher var , long var , LoaderErrorThrower var , Allocator var )
var = new CompositeSequenceableLoader ( var )
var = var . getPeriod ( var ) . var
Pair < TrackGroupArray , TrackGroupInfo > var = buildTrackGroups ( var )
var . release ( )
var . release ( )
if ( var . isPrimary )
if ( ! var . isPrimary )
var . discardEmbeddedTracksTo ( var )
return var . continueLoading ( var )
var [ var ] ++ = new TrackGroupInfo ( var . type , var , var , true , var , var )
boolean var = var . hasEmbeddedEventMessageTrack
boolean var = var . hasEmbeddedCea608Track
DashChunkSource var = var . createDashChunkSource ( var , var , var , var . adaptationSetIndices , var , var . trackType , var , var , var )
ChunkSampleStream < DashChunkSource > var = new ChunkSampleStream ( var . trackType , var , var , this , var , var , var , var )
this ( var , null , null , null , var , var , var , var , var )
EventDispatcher var = var . copyWithMediaTimeOffsetMs ( var . getPeriod ( var ) . startMs )
DashMediaPeriod var = new DashMediaPeriod ( var + var , var , var , var , var , var , var , var , var )
var = null
var . loadCompleted ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )
var . loadCanceled ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )
long var = getNowUnixTimeUs - C . msToUs ( var . availabilityStartTime )
if ( var . timeShiftBufferDepth != C . TIME_UNSET )
long var = C . msToUs ( var . timeShiftBufferDepth )
long var = var . availabilityStartTime + var . getPeriod ( 0 ) . startMs + C . usToMs ( var )
DashTimeline var = new DashTimeline ( var . availabilityStartTime , var , var , var , var , var , var )
if ( ! var . dynamic )
var = 5000
int var = var . getFirstSegmentNum ( )
int var = var + var - 1
return var . set ( null , var , var , true , var . dynamic , var , var , 0 , var . getPeriodCount ( ) - 1 , var )
int var = var . getSegmentNum ( var , var )
String var = new BufferedReader ( new InputStreamReader ( var ) ) . readLine
DashManifestParser var = new DashManifestParser
return var . parse ( var . getUri ( ) , var )
var = var . getAdaptationSetIndex ( C . TRACK_TYPE_AUDIO )
Representation var = var . representations . get ( 0 )
Format var = DashUtil . loadSampleFormat ( var , var )
DrmInitData var = var . format . var
ChunkExtractorWrapper var = loadInitializationData ( var , var , false )
ChunkExtractorWrapper var = loadInitializationData ( var , var , true )
ChunkExtractorWrapper var = newWrappedExtractor ( var . format )
boolean var = var . startsWith ( MimeTypes . VIDEO_WEBM ) || var . startsWith ( MimeTypes . AUDIO_WEBM )
return new ChunkExtractorWrapper ( var , var )
return var . timesUs [ var ]
return var . durationsUs [ var ]
return new DefaultDashChunkSource ( var , var , var , var , var , var , var , var , var , var , var )
var [ var ] = new RepresentationHolder ( var , var , var , var )
var . updateSelectedTrack ( var )
int var = var . getFirstSegmentNum ( )
if ( var . timeShiftBufferDepth != C . TIME_UNSET )
long var = var . timeShiftBufferDepth * 1000
int var = Math . min ( var , var - var + 1 )
var . chunk = newMediaChunk ( var , var , var , var . getSelectedFormat ( ) , var . getSelectionReason ( ) , var . getSelectionData ( ) , var , var )
int var = var . getFirstSegmentNum ( ) + var - 1
return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , var , var , var . extractorWrapper )
RepresentationHolder ( long var , Representation var , boolean var , boolean var )
var = new FragmentedMp4Extractor ( var )
var = new ChunkExtractorWrapper ( var , var . format )
int var = var . getFirstSegmentNum ( ) + var - 1
int var = var . getFirstSegmentNum ( )
public DashManifest ( long var , long var , long var , boolean var , long var , long var , long var , UtcTimingElement var , Uri var , List < Period > var )
return new DashManifest ( var , var , var , var , var , var , var , var , var , var )
boolean var = var != null && var . equals ( "" )
SchemeData var = parseContentProtection ( var )
if ( var != null )
var . add ( var )
var . add ( buildRepresentation ( var . get ( var ) , var , var , var ) . get ( var ) , var , var , var )
String var = var . getAttributeValue ( null , "" )
if ( var == null && var && XmlPullParserUtil . isStartTag ( var , "" ) && var . next ( ) == XmlPullParser . TEXT )
if ( XmlPullParserUtil . isStartTag ( var , "" ) )
SchemeData var = parseContentProtection ( var )
if ( var != null )
var . add ( var )
Format var = buildFormat ( var , var , var , var , var , var , var , var , var , var , var , var )
return new RepresentationInfo ( var , var , var , var , var )
ArrayList < Descriptor > var = var . inbandEventStreams
return Representation . newInstance ( var , Representation . REVISION_ID_DEFAULT , var , var . baseUrl , var . segmentBase , var )
private static final RepresentationInfo
public RepresentationInfo ( Format var , String var , SegmentBase var , ArrayList < SchemeData > var , ArrayList < Descriptor > var )
var . writeInt ( var )
return new RepresentationKey ( var . readInt ( ) , var . readInt ( ) , var . readInt ( ) )
final int var
public MultiSegmentBase ( RangedUri var , long var , long var , int var , long var , List < SegmentTimelineElement > var )
final int var = getFirstSegmentNum
final int var = getSegmentCount ( var )
int var = var + int ( var / var )
int var = var + var - 1
int var = var + ( var - var ) / 2
long var = var . get ( var - var ) . var
var = var . get ( var - var ) . startTime - var
public SegmentList ( RangedUri var , long var , long var , int var , long var , List < SegmentTimelineElement > var , List < RangedUri > var )
return var . get ( var - startNumber )
public SegmentTemplate ( RangedUri var , long var , long var , int var , long var , List < SegmentTimelineElement > var , UrlTemplate var , UrlTemplate var )
var = segmentTimeline . get ( var - startNumber ) . startTime
public HlsChunkSource ( HlsPlaylistTracker var , HlsUrl var , HlsDataSourceFactory var , TimestampAdjusterProvider var , List < Format > var )
if ( var != null )
var . updateSelectedTrack ( var )
var = Util . binarySearchFloor ( var . segments , var - var . startTimeUs , true , ! var . isLive ( ) || var == null ) + var . mediaSequence
int var = var - var . mediaSequence
if ( var . isEncrypted )
Uri var = UriUtil . resolveToUri ( var . baseUri , var . var )
long var = var . var + var . relativeStartTimeUs
var . chunk = new HlsMediaChunk ( var , var , var , var , var , var . getSelectionReason ( ) , var . getSelectionData ( ) , var , var + var . durationUs , var , var , var , var , var , var , var )
if ( var != C . INDEX_UNSET )
if ( var != C . INDEX_UNSET )
var . blacklist ( var , var )
public HlsMediaChunk ( DataSource var , DataSpec var , DataSpec var , HlsUrl var , List < Format > var , int var , Object var , long var , long var , int var , int var , boolean var , TimestampAdjuster var , HlsMediaChunk var , byte var , byte var )
if ( var != null )
var = true
var = var
var . init ( var , var )
if ( var == var || var || var == null )
if ( var == null )
return var . readLong ( )
Extractor var
public HlsMediaPeriod ( HlsPlaylistTracker var , HlsDataSourceFactory var , int var , EventDispatcher var , Allocator var )
var = new Handler
var . removeCallbacksAndMessages ( null )
var = new CompositeSequenceableLoader ( var )
return var . continueLoading ( var )
var . onPlaylistBlacklisted ( var , var )
if ( var . format . height > 0 || variantHasExplicitCodecWithPrefix ( var , "" ) ( var , "" ) )
if ( variantHasExplicitCodecWithPrefix ( var , "" ) )
HlsUrl var = new HlsMasterPlaylist . HlsUrl [ var ] . size ( )
HlsChunkSource var = new HlsChunkSource ( var , var , var , var , var )
String var = var . format . var
String var = var . split ( "" )
this ( var , var , var , var , var , new HlsPlaylistParser )
return new HlsMediaPeriod ( var , var , var , var , var )
var = new SinglePeriodTimeline ( var , var , var , var . durationUs , var . startTimeUs , var , true , ! var . hasEndTag )
var = new SinglePeriodTimeline ( var , var , var . startTimeUs + var . durationUs , var . durationUs , var . startTimeUs , var , true , false )
var . onSourceInfoRefreshed ( var , new HlsManifest ( var . getMasterPlaylist ( ) , var ) . getMasterPlaylist ( ) , var )
var = new LinkedList
if ( ! var )
var = ! var . advanceTo ( var , true , true ) && var . getReadIndex ( ) != 0
int var = var . getTrackGroup ( ) . indexOf ( var . getLast ( ) . trackFormat )
if ( ! var && ! isPendingReset && seekInsideBufferUs ( var ) )
HlsMediaChunk var = var . getLast ( )
if ( var && ! var )
var . onPlaylistBlacklisted ( var , var )
while ( var . size ( ) > 1 && finishedReadingChunk ( var . getFirst ( ) ) )
var . removeFirst ( )
var . advanceToEnd ( )
var . advanceTo ( var , true , true )
for ( int var = 0 ; var < var . length ; var ++ )
HlsMediaChunk var = var . removeLast ( )
var = var
if ( var || var || ! var )
var = new boolean [ var ]
var = new boolean [ var ]
var = getAudioCodecs ( var . var )
if ( var == C . TRACK_TYPE_VIDEO )
boolean var = var . advanceTo ( var , true , false )
if ( TextUtils . isEmpty ( var ) )
String var = var . split ( "" )
if ( var == MimeTypes . getTrackTypeOfCodec ( var ) )
if ( var . length ( ) > 0 )
return new HlsMasterPlaylist ( baseUri , tags , copyRenditionsList ( var , var ) , var , copyRenditionsList ( var , var ) , var , copyRenditionsList ( var , var ) , var , var , var )
if ( var . contains ( var . url ) )
this ( var , 0 , - 1 , C . TIME_UNSET , false , null , null , var , var )
public Segment ( String var , long var , int var , long var , boolean var , String var , String var , long var , long var )
Queue < String > var = new LinkedList
var = Format . createAudioContainerFormat ( var , MimeTypes . APPLICATION_M3U8 , null , null , Format . NO_VALUE , Format . NO_VALUE , Format . NO_VALUE , null , var , var )
Format var = Format . createVideoContainerFormat ( Integer . toString ( var . size ( ) ) . size ( ) , MimeTypes . APPLICATION_M3U8 , null , var , var , var , var , Format . NO_VALUE , null , 0 )
int var = 0
var = parseIntAttr ( var , var )
String var = parseStringAttr ( var , var )
var = var . equals ( var )
if ( ! var = null != null = var )
var = Integer . toHexString ( var )
var . add ( new Segment ( var , var , var , var , var , var , var , var , var ) , var , var , var , var , var , var , var , var )
var . get ( var ) . onPlaylistBlacklisted ( var , var )
int var = var . mediaSequence - var . mediaSequence
var = blacklistPlaylist
FragmentedMp4Extractor var = new FragmentedMp4Extractor ( FragmentedMp4Extractor . FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor . FLAG_WORKAROUND_IGNORE_TFDT_BOX , null , var )
var [ var ] = new ChunkExtractorWrapper ( var , var )
var . updateSelectedTrack ( var )
var = var . getNextChunkIndex ( ) - var
var . chunk = newMediaChunk ( var . getSelectedFormat ( ) , var , var , null , var , var , var , var . getSelectionReason ( ) , var . getSelectionData ( ) , var )
return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , 1 , var , var )
public SsMediaPeriod ( SsManifest var , SsChunkSource . Factory var , int var , EventDispatcher var , LoaderErrorThrower var , Allocator var )
var = new CompositeSequenceableLoader ( var )
var = new CompositeSequenceableLoader ( var )
return var . continueLoading ( var )
this ( var , null , null , null , var , var , var , var , var )
if ( var != null )
SsMediaPeriod var = new SsMediaPeriod ( var , var , var , var , var , var )
var . loadCompleted ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )
var = new SinglePeriodTimeline ( var , 0 , 0 , 0 , true , var . isLive )
var = new SinglePeriodTimeline ( C . TIME_UNSET , var , var , var , true , true )
var = new SinglePeriodTimeline ( var + var , var , var , 0 , true , false )
this . var = var . size ( )
var = Util . scaleLargeTimestamp ( var , C . MICROS_PER_SECOND , var )
var = Util . scaleLargeTimestamps ( var , C . MICROS_PER_SECOND , var )
DrmInitData var = new DrmInitData ( new SchemeData ( var . uuid , null , MimeTypes . VIDEO_MP4 , var . data ) . uuid , null , MimeTypes . VIDEO_MP4 , var . data )
this ( null , null , var , var , var , var , var , var , var , var , false , Color . BLACK )
this ( var , var , null , var , var , var , var , var , var , var , var , var )
return MimeTypes . TEXT_VTT . equals ( var ) || MimeTypes . TEXT_SSA . equals ( var ) || MimeTypes . APPLICATION_TTML . equals ( var ) || MimeTypes . APPLICATION_MP4VTT . equals ( var ) || MimeTypes . APPLICATION_SUBRIP . equals ( var ) || MimeTypes . APPLICATION_TX3G . equals ( var ) || MimeTypes . APPLICATION_CEA608 . equals ( var ) || MimeTypes . APPLICATION_MP4CEA608 . equals ( var ) || MimeTypes . APPLICATION_CEA708 . equals ( var ) || MimeTypes . APPLICATION_DVBSUBS . equals ( var )
public TextRenderer ( Output var , Looper var )
public TextRenderer ( Output var , Looper var , SubtitleDecoderFactory var )
var = new LinkedList
var = 2
var = 3
var = 4
var = new LinkedList
var . add ( new SubtitleInputBuffer )
var . add ( new CeaOutputBuffer ( this ) )
SubtitleInputBuffer var = var . poll ( )
var . setPosition ( var . limit ( ) )
int var = var . getPosition ( )
int var = var . readUnsignedShort ( )
parseHeader ( var , var , var )
TtmlRegion var = parseRegionAttributes ( var )
return new TtmlRegion ( var , var , var , Cue . LINE_TYPE_FRACTION , var , var )
traverseForStyle ( var , var )
var . add ( new Cue ( cleanUpText ( var . getValue ( ) ) . getValue ( ) , null , var . line , var . lineType , var . lineAnchor , var . position , Cue . TYPE_UNSET , var . width ) ( var . getValue ( ) ) . getValue ( ) , null , var . line , var . lineType , var . lineAnchor , var . position , Cue . TYPE_UNSET , var . width )
getChild ( var ) . traverseForStyle ( var , var )
this ( var , Cue . DIMEN_UNSET , Cue . DIMEN_UNSET , Cue . TYPE_UNSET , Cue . TYPE_UNSET , Cue . DIMEN_UNSET )
final WebvttCssStyle
final WebvttCueParser
var = var * 60 + Long . parseLong ( var )
this ( var , DEFAULT_MAX_INITIAL_BITRATE , DEFAULT_MIN_DURATION_FOR_QUALITY_INCREASE_MS , DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS , DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS , DEFAULT_BANDWIDTH_FRACTION )
public Factory ( BandwidthMeter var , int var , int var , int var , int var , float var )
return new AdaptiveTrackSelection ( var , var , var , var , var , var , var , var )
this ( var , var , var , var , var , var , var , var )
public AdaptiveTrackSelection ( TrackGroup var , int var , BandwidthMeter var , int var , long var , long var , long var , float var )
long var = SystemClock . elapsedRealtime ( )
if ( var . bitrate > var . bitrate && var < var = var . bitrate < var . bitrate && var >= var = var )
long var = var . get ( var - 1 ) . endTimeUs - var
int var = determineIdealSelectedIndex ( SystemClock . elapsedRealtime ( ) )
long var = var . getBitrateEstimate ( )
if ( var . bitrate <= var = var )
public static final Parameters
public Parameters
this ( null , null , false , true , Integer . MAX_VALUE , Integer . MAX_VALUE , Integer . MAX_VALUE , true , true , Integer . MAX_VALUE , Integer . MAX_VALUE , true )
public Parameters ( String var , String var , boolean var , boolean var , int var , int var , int var , boolean var , boolean var , int var , int var , boolean var )
return withMaxVideoSize ( 1279 , 719 )
return withMaxVideoSize ( Integer . MAX_VALUE , Integer . MAX_VALUE )
return new Parameters ( var , var , var , var , var , var , var , var , var , var , var , var )
return withViewportSize ( var . x , var . y , var )
return withViewportSize ( Integer . MAX_VALUE , Integer . MAX_VALUE , true )
return var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && TextUtils . equals ( var , var . var ) && TextUtils . equals ( var , var . var )
Parameters var = var . get ( )
if ( C . TRACK_TYPE_VIDEO == var [ var ] . getTrackType )
var |= var [ var ] . length > 0
if ( var != null )
boolean var = var . allowMixedMimeAdaptiveness && ( var . supportsMixedMimeTypeAdaptation ( ) & var ) != 0
if ( var != var )
var = compareFormatValues ( var . bitrate , var )
if ( var > var )
if ( var != null )
if ( var = 4 = 3 )
var = 4
var = 3
if ( var = 2 )
var = 2
boolean var = ( var . selectionFlags & C . SELECTION_FLAG_FORCED ) != 0
if ( var = 6 var = 5 = 4 )
var = 5
this . var = var . var
int var = getTrackFormatSupport ( var , var , var )
int var = getMixedMimeTypeAdaptationSupport ( var )
return new TrackSelectorResult ( var , new TrackSelectionArray ( var ) , var , var )
public TrackSelectorResult ( TrackGroupArray var , TrackSelectionArray var , Object var , RendererConfiguration var )
if ( var == null )
this ( var , null )
super ( var , var )
if ( this . var != var || this . var != var )
if ( var == var || var <= 0 )
this ( null , null )
this ( var , var , var , Clock . DEFAULT )
var = NO_ESTIMATE
float var = var . getPercentile ( 0.5f )
var = ( DataSource ) var . getDeclaredConstructor ( ) . newInstance
if ( Thread . interrupted ( ) )
if ( var . equals ( "" ) || var . equals ( "" ) )
if ( var != null != null )
this . var = new DataSpec ( var , DataSpec . FLAG_ALLOW_GZIP )
public CacheException ( IOException var )
this ( var , var , var )
public CacheDataSink ( Cache var , long var , int var )
if ( var == var += var )
if ( var != null )
if ( var == var )
var . setContentLength ( var , var )
if ( var != null )
if ( var == var || var instanceof CacheException = true )
public CachedContent ( int var , String var , long var )
this . var = var
var . writeLong ( var )
return add ( var ) . id
if ( var != null )
LinkedList < String > var = new LinkedList
if ( var . isEmpty ( ) )
var . add ( var . key )
var . setLength ( var )
if ( ( var & var ) != 0 )
if ( var != null = true )
CachedContent var = new CachedContent ( var )
var += var . headerHashCode ( )
boolean var = var && var != null
var += var . headerHashCode ( )
CachedContent var = new CachedContent ( var , var , var )
if ( ! var . containsKey ( var ) )
return SimpleCacheSpan . getCacheFile ( var , var . assignIdForKey ( var ) , var , System . currentTimeMillis ( ) )
Long var = getContentLength ( var . key )
var . add ( var . key ) . addSpan ( var )
var . removeEmpty ( var . key )
LinkedList < CacheSpan > var = new LinkedList
removeSpan ( var , false )
var . setContentLength ( var , var )
return var . getContentLength ( var )
return var * var * 2
public StandaloneMediaClock
var = PlaybackParameters . DEFAULT
var = SystemClock . elapsedRealtime ( )
setPositionUs ( getPositionUs )
var = SystemClock . elapsedRealtime ( )
long var = SystemClock . elapsedRealtime ( ) - var
var += var . getSpeedAdjustedDurationUs ( var )
setPositionUs ( getPositionUs )
return TextUtils . isEmpty ( var ) || var . equals ( "" )
if ( var . group ( 11 ) . equals ( "" ) )
if ( var . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )
if ( "" . equals ( Util . var ) && Util . var . startsWith ( "" ) && var . getPackageManager ( ) . hasSystemFeature ( "" ) . equals ( Util . var ) && Util . var . contains ( "" ) )
if ( "" . equals ( Util . var ) && Util . var . contains ( "" ) )
boolean var = var . readInt ( ) != 0
if ( var != var . var || var != var . var || var != var . var || ! Arrays . equals ( var , var . var ) )
EGLDisplay var = eglGetDisplay ( EGL_DEFAULT_DISPLAY )
if ( Util . SDK_INT == 24 && "" . equals ( Util . MANUFACTURER ) )
initInternal ( var . arg1 != 0 )
Assertions . checkState ( var != null , "" )
Assertions . checkState ( var , "" )
Assertions . checkState ( var != null , "" )
Assertions . checkState ( var != null , "" )
Assertions . checkState ( var , "" )
var . setOnFrameAvailableListener ( this )
setVideoScalingMode ( var , var )
if ( var != null && shouldUseDummySurface ( var . secure ) )
return var != null || shouldUseDummySurface ( var . secure )
var = getCodecMaxValues ( var , var , var )
var = getPixelWidthHeightRatio ( var )
setVideoScalingMode ( var , var )
return areAdaptationCompatible ( var , var , var ) && var . width <= var . width && var . height <= var . height && getMaxInputSize ( var ) <= var . inputSize
long var = ( SystemClock . elapsedRealtime ( ) * 1000 ) - var
decoderCounters . maxConsecutiveDroppedOutputBufferCount = Math . max ( var , decoderCounters . maxConsecutiveDroppedOutputBufferCount )
if ( var == var )
return Util . SDK_INT >= 23 && ! var && ( ! var || DummySurface . isSecureSupported ( var ) )
if ( var . inputSize != Format . NO_VALUE )
var . setInteger ( MediaFormat . KEY_MAX_INPUT_SIZE , var . inputSize )
return var . sampleMimeType . equals ( var . sampleMimeType ) && getRotationDegrees ( var ) == getRotationDegrees ( var ) && ( var || ( var . width == var . width && var . height == var . height ) )
this ( var )
if ( var == null || var . sampledVsyncTimeNs == 0 )
long var = closestVsync ( var , var . sampledVsyncTimeNs , var )
var = 0
if ( var == - var || var != var && var [ var ] + var - 1 < var [ var ] + var + 1 )
if ( var == var + var || var != - var + var && var [ var ] + var - 1 < var [ var ] + var + 1 )
final int var = deduplicate ( var )
var . set ( var - var )
var . clear ( var - var )
return var . get ( var - var )
if ( var != null )
if ( var . get ( 0 ) )
var . remove ( 0 )
if ( var || var || var )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )
ViewCompat . setAlpha ( var , 1 )
ViewCompat . setAlpha ( var . itemView , 0 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )
ViewCompat . setAlpha ( var , 1 )
var += ViewCompat . getTranslationX ( var . itemView )
var += ViewCompat . getTranslationY ( var . itemView )
ViewCompat . setTranslationX ( var , - var )
ViewCompat . setTranslationY ( var , - var )
ViewCompat . animate ( var ) . translationX ( 0 )
ViewCompat . animate ( var ) . translationY ( 0 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )
ViewCompat . setTranslationX ( var . itemView , var )
ViewCompat . setTranslationY ( var . itemView , var )
ViewCompat . setAlpha ( var . itemView , var )
ViewCompat . setTranslationX ( var . itemView , - var )
ViewCompat . setTranslationY ( var . itemView , - var )
ViewCompat . setAlpha ( var . itemView , 0 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var ) . setDuration ( getChangeDuration )
ViewCompat . setAlpha ( var , 1 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )
ViewCompat . setAlpha ( var , 1 )
ViewCompat . setAlpha ( var . itemView , 1 )
ViewCompat . animate ( var ) . cancel
ViewCompat . setAlpha ( var , 1 )
View var = var . itemView
ViewCompat . setAlpha ( var , 1 )
ViewCompat . setAlpha ( var , 1 )
ViewCompat . animate ( var . get ( var ) . itemView ) . cancel
if ( var . getLayoutManager ( ) == null )
final int var = var . var + Math . round ( ViewCompat . getTranslationY ( var ) )
final int var = var . var + Math . round ( ViewCompat . getTranslationX ( var ) )
if ( var . isBound ( ) )
if ( var != null && var . mNestedRecyclerView != null )
public static abstract SpanSizeLookup
this ( var , var , false )
if ( ! var . mValid || var != NO_POSITION || var != null )
var . assignFromViewAndKeepVisibleRect ( var )
var . assignFromView ( var )
if ( var == null )
var = getPosition ( var )
return ( int ) Math . floor ( var / var )
public OpReorderer ( Callback var ) = var
public PositionMap
public PositionMap ( int var )
mLayoutRequestEaten = true
if ( var . length ( ) != 0 )
resumeRequestLayout ( ! var )
resumeRequestLayout ( true )
resumeRequestLayout ( false )
if ( dispatchNestedScroll ( var , var , var , var , var )  != View . OVER_SCROLL_NEVER )
void eatRequestLayout
void resumeRequestLayout ( boolean var )
if ( ! var = false )
if ( var > 0 )
if ( var > 0 )
var = var . onRelease ( )
var |= var . onRelease ( )
var |= var . onRelease ( )
var |= var . onRelease ( )
var = var . onRelease ( )
var |= var . onRelease ( )
var |= var . onRelease ( )
var |= var . onRelease ( )
var = new EdgeEffectCompat ( getContext )
var = new EdgeEffectCompat ( getContext )
var = new EdgeEffectCompat ( getContext )
if ( Build . VERSION . SDK_INT >= 21 && var != 0 )
var . setAccessible ( true )
if ( var != null )
resumeRequestLayout ( false )
resumeRequestLayout ( false )
if ( isPreferredNextFocusAbsolute ( var , var , var ) )
return ( var . right > var . right || var . left >= var . right ) && var . left > var . left
return ( var . left < var . left || var . right <= var . left ) && var . right < var . right
return ( var . bottom > var . bottom || var . top >= var . bottom ) && var . top > var . top
return ( var . top < var . top || var . bottom <= var . top ) && var . bottom < var . bottom
Log . w ( var , "" + "" + "" + "" + "" , new IllegalStateException ( "" ) )
final int var = MotionEventCompat . getActionMasked ( var )
final int var = MotionEventCompat . getActionIndex ( var )
startNestedScroll ( var )
final int var = MotionEventCompat . getActionMasked ( var )
final int var = MotionEventCompat . getActionIndex ( var )
startNestedScroll ( var )
if ( dispatchNestedPreScroll ( var , var , var , var ) )
final int var = MotionEventCompat . getActionIndex ( var )
var = - MotionEventCompat . getAxisValue ( var , MotionEventCompat . AXIS_VSCROLL )
var = MotionEventCompat . getAxisValue ( var , MotionEventCompat . AXIS_HSCROLL )
final float var = getScrollFactor
if ( var == Float . MIN_VALUE )
if ( var . mAutoMeasure )
resumeRequestLayout ( false )
resumeRequestLayout ( false )
void onExitLayoutOrScroll
resumeRequestLayout ( false )
resumeRequestLayout ( false )
Log . e ( var , "" + "" + var + "" + var )
void setDataSetChangedAfterLayout
var . addFlags ( ViewHolder . FLAG_ADAPTER_POSITION_UNKNOWN )
var . setAdapterPositionsAsUnknown ( )
final float var = ViewCompat . getTranslationX ( var )
final float var = ViewCompat . getTranslationY ( var )
public ViewFlinger
var = ScrollerCompat . create ( getContext , var )
final ScrollerCompat var = var
final int var = var - var
resumeRequestLayout ( false )
if ( var != 0 || var != 0 )
if ( var . isFinished ( ) || ! var )
var *= 0.3f * Math . PI / 2.0f
var = ScrollerCompat . create ( getContext , var )
ArrayList < ViewHolder > var = new ArrayList
final ArrayList var = getScrapDataForType ( var ) . mScrapHeap
Log . d ( var , "" + "" )
var . addFlags ( ViewHolder . FLAG_ADAPTER_POSITION_UNKNOWN )
public static abstract LayoutManager
final Matrix var = ViewCompat . getMatrix ( var )
if ( ViewCompat . canScrollVertically ( var , - 1 ) || ViewCompat . canScrollHorizontally ( var , - 1 ) )
if ( ViewCompat . canScrollVertically ( var , 1 ) || ViewCompat . canScrollHorizontally ( var , 1 ) )
var . setScrollable ( ViewCompat . canScrollVertically ( var , 1 ) , 1 || ViewCompat . canScrollVertically ( var , - 1 ) , - 1 || ViewCompat . canScrollHorizontally ( var , - 1 ) , - 1 || ViewCompat . canScrollHorizontally ( var , 1 ) , 1 )
if ( ViewCompat . canScrollVertically ( var , - 1 ) )
if ( ViewCompat . canScrollHorizontally ( var , - 1 ) )
if ( ViewCompat . canScrollVertically ( var , 1 ) )
if ( ViewCompat . canScrollHorizontally ( var , 1 ) )
public static abstract ItemDecoration
public static abstract ViewHolder
public static abstract AdapterDataObserver
public static abstract SmoothScroller
final double var = Math . sqrt ( var . x * var . x + var . y * var . y )
return "" + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + '}'
public static abstract OnFlingListener
public RecyclerViewAccessibilityDelegate ( RecyclerView var ) = var
if ( ! shouldIgnore && var . getLayoutManager ( ) != null )
var . getLayoutManager ( ) . onInitializeAccessibilityNodeInfoForItem ( var , var )
if ( ! shouldIgnore && var . getLayoutManager ( ) != null )
return var . getLayoutManager ( ) . performAccessibilityActionForItem ( var , var , var )
setAutoMeasureEnabled ( var != var )
measureChildWithDecorationsAndMargin ( var , var , getChildMeasureSpec ( getHeight , getHeightMode , 0 , var . height , true )  , getHeightMode , 0 , var . height , true , var )
measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( getWidth , getWidthMode , 0 , var . width , true )  , getWidthMode , 0 , var . width , true , var , var )
measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( var , getWidthMode , 0 , var . width , false ) , getWidthMode , 0 , var . width , false , getChildMeasureSpec ( getHeight , getHeightMode , 0 , var . height , true )  , getHeightMode , 0 , var . height , true , var )
measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( getWidth , getWidthMode , 0 , var . width , true )  , getWidthMode , 0 , var . width , true , getChildMeasureSpec ( var , getHeightMode , 0 , var . height , false ) , getHeightMode , 0 , var . height , false , var )
public FullSpanItem ( Parcel var )
public FullSpanItem
public AnchorInfo
final int var = MotionEventCompat . getActionMasked ( var )
final int var = MotionEventCompat . getActionMasked ( var )
final int var = MotionEventCompat . getActionIndex ( var )
if ( var != null )
var = new GestureDetectorCompat ( var . getContext ( ) , new ItemTouchHelperGestureListener )
var [ 0 ] = ViewCompat . getTranslationX ( var . itemView )
var [ 1 ] = ViewCompat . getTranslationY ( var . itemView )
var = new ItemTouchUIUtilImpl . Lollipop ( )
var = new ItemTouchUIUtilImpl . Gingerbread ( )
public RecoverAnimation ( ViewHolder var , int var , int var , float var , float var , float var , float var )
var = AnimatorCompatHelper . emptyValueAnimator ( )
var = ViewCompat . getTranslationX ( var . itemView )
var = ViewCompat . getTranslationY ( var . itemView )
ViewCompat . setTranslationX ( var , 0f )
ViewCompat . setTranslationY ( var , 0f )
ViewCompat . setTranslationX ( var , var )
ViewCompat . setTranslationY ( var , var )
var . translate ( var , var )
updateBluetoothHeadsetState ( var . getIntExtra ( BluetoothProfile . EXTRA_STATE , 0 ) . EXTRA_STATE , 0 == BluetoothProfile . STATE_CONNECTED )
var . setMicMute ( var = var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didEndedCall )
StatsController . getInstance ( ) . incrementTotalCallsTime ( getStatsNetworkType , int ( var / 1000 ) / 1000 % 5 )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )
if ( var != null && var . isEnabled ( ) )
if ( var == BluetoothProfile . STATE_CONNECTED )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )
StatsController . getInstance ( ) . incrementSentBytesCount ( StatsController . TYPE_WIFI , StatsController . TYPE_CALLS , var )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( StatsController . TYPE_WIFI , StatsController . TYPE_CALLS , var )
StatsController . getInstance ( ) . incrementTotalCallsTime ( var , 5 )
StatsController . getInstance ( ) . incrementSentItemsCount ( getStatsNetworkType , StatsController . TYPE_CALLS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( getStatsNetworkType , StatsController . TYPE_CALLS , 1 )
if ( ( getPackageName + "" ) . equals ( var . getAction ( ) ) )
PendingIntent . getActivity ( VoIPBaseService . this , 0 , new Intent ( VoIPBaseService . this , VoIPActivity . class ) . this , VoIPActivity . class . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP ) . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP , 0 ) . send
nativeSetRemoteEndpoints ( var , var , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var = MessagesController . getInstance ( ) . getUser ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeInCallActivity )
final SharedPreferences var = getSharedPreferences ( "" , MODE_PRIVATE )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didStartedCall )
var . version = MessagesStorage . lastSecretVersion
MessagesStorage . secretPBytes = var . p
MessagesStorage . secretG = var . g
MessagesStorage . lastSecretVersion = var . version
MessagesStorage . getInstance ( ) . saveSecretParams ( MessagesStorage . lastSecretVersion , MessagesStorage . secretG , MessagesStorage . secretPBytes )
BigInteger var = BigInteger . valueOf ( MessagesStorage . secretG )
var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . secretPBytes ) , MessagesStorage . secretPBytes )
var . user_id = MessagesController . getInputUser ( var )
if ( var != null )
if ( var != null )
ringtonePlayer . start ( )
ringtonePlayer . setLooping ( true )
ringtonePlayer . setDataSource ( this , Uri . parse ( var ) )
FileLog . var ( var )
if ( ringtonePlayer != null )
ringtonePlayer . release ( )
if ( var . getBoolean ( "" + var . id , false ) )
var = var . getInt ( "" + var . id , 0 )
var = var . getInt ( "" , 0 )
vibrator . var ( new long , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didStartedCall )
var . version = MessagesStorage . lastSecretVersion
MessagesStorage . secretPBytes = var . p
MessagesStorage . secretG = var . g
MessagesStorage . lastSecretVersion = var . version
MessagesStorage . getInstance ( ) . saveSecretParams ( MessagesStorage . lastSecretVersion , MessagesStorage . secretG , MessagesStorage . secretPBytes )
BigInteger var = BigInteger . valueOf ( MessagesStorage . secretG )
BigInteger var = new BigInteger ( 1 , MessagesStorage . secretPBytes )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , false )
final boolean var = ConnectionsManager . getInstance ( ) . getConnectionState != ConnectionsManager . ConnectionStateConnected
MessagesController . getInstance ( ) . processUpdates ( var , false )
if ( BuildVars . DEBUG_VERSION )
if ( BuildVars . DEBUG_VERSION )
AndroidUtilities . runOnUIThread ( timeoutRunnable , MessagesController . getInstance ( ) . callRingTimeout )
PendingIntent . getActivity ( VoIPService . this , 0 , new Intent ( VoIPService . this , VoIPFeedbackActivity . class ) . this , VoIPFeedbackActivity . class . putExtra ( "" , var . id ) , var . id . putExtra ( "" , var . access_hash ) , var . access_hash . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP ) . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP , 0 ) . send
SharedPreferences var = getSharedPreferences ( "" , MODE_PRIVATE )
var . edit ( ) . putStringSet ( "" , var ) . apply
final SharedPreferences var = getSharedPreferences ( "" , MODE_PRIVATE )
controller . setConfig ( MessagesController . getInstance ( ) . callPacketTimeout / 1000.0 , MessagesController . getInstance ( ) . callConnectTimeout / 1000.0 , var . getInt ( "" , VoIPController . DATA_SAVING_NEVER ) , VoIPController . DATA_SAVING_NEVER , var . id )
VoIPHelper . upgradeP2pSetting ( )
var = ContactsController . getInstance ( ) . contactsDict . get ( var . id ) != null
controller . setRemoteEndpoints ( var , var . protocol . udp_p2p && var )
if ( var != null )
var . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP )
var . putExtra ( "" , getCallID )
CharSequence var = LocaleController . getString ( "" , R . string . VoipDeclineCall )
var = new SpannableString ( var )
( ( SpannableString ) var ) . setSpan ( new ForegroundColorSpan ( 0xFFF44336 ) , 0 , var . length ( ) , 0 )
var . setAction ( getPackageName + "" )
var . putExtra ( "" , getCallID )
if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . N )
var = new SpannableString ( var )
var . addAction ( R . drawable . ic_call_white_24dp , var , PendingIntent . getBroadcast ( this , 0 , var , PendingIntent . FLAG_UPDATE_CURRENT ) , 0 , var , PendingIntent . FLAG_UPDATE_CURRENT )
var . setPriority ( Notification . PRIORITY_MAX )
if ( var != null )
var . setLargeIcon ( var . getBitmap ( ) )
BitmapFactory . Options var = new BitmapFactory . Options ( )
if ( ! ( ( KeyguardManager ) getSystemService ( KEYGUARD_SERVICE ) ) . inKeyguardRestrictedInputMode  )
ConnectionsManager var = var
var = var
var = var = new ConnectionsManager
public ConnectionsManager
String var = ApplicationLoader . getFilesDirFixed ( ) . toString
var = LocaleController . getSystemLocaleStringIso639 ( )
var = LocaleController . getLocaleStringIso639 ( )
UserConfig . loadConfig ( )
init ( BuildVars . BUILD_VERSION , TLRPC . LAYER , BuildVars . APP_ID , var , var , var , var , var , var , FileLog . getNetworkLogPath ( ) , UserConfig . getClientUserId ( ) , var )
var . setReferenceCounted ( false )
FileLog . var ( var )
native_cancelRequest ( var , var )
native_applyDatacenterAddress ( var , var , var )
native_setUserId ( var )
native_setUseIpv6 ( useIpv6Address )
native_setNetworkAvailable ( isNetworkOnline , getCurrentNetworkType )
native_setPushConnectionEnabled ( var )
native_setProxySettings ( var , var , var , var )
native_init ( var , var , var , var , var , var , var , var , var , var , var , var , isNetworkOnline , getCurrentNetworkType )
native_setLangCode ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
native_resumeNetwork ( true )
FileLog . e ( "" )
ContactsController . getInstance ( ) . checkContacts
native_resumeNetwork ( false )
if ( getInstance . var . isHeld ( ) )
FileLog . d ( "" )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )
MessagesController . getInstance ( ) . getDifference
getInstance . var = var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )
if ( UserConfig . getClientUserId ( ) != 0 )
UserConfig . clearConfig ( )
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_TOTAL , var )
if ( var != null || var != 1 && Math . abs ( var - System . currentTimeMillis ( ) ) < 10000 || ! isNetworkOnline )
DnsTxtLoadTask var = new DnsTxtLoadTask
DnsLoadTask var = new DnsLoadTask
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var , StatsController . TYPE_TOTAL , var )
getInstance . var . acquire ( 10000 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )
if ( BuildVars . DEBUG_VERSION )
FileLog . e ( "" + var )
if ( BuildVars . DEBUG_VERSION )
FileLog . e ( "" + var . getHostAddress ( ) )
if ( BuildVars . DEBUG_VERSION )
FileLog . e ( "" )
URL var = new URL ( "" + var + "" )
if ( native_isTestBackend != 0 )
native_applyDnsConfig ( var . var )
DnsTxtLoadTask var = new DnsTxtLoadTask
var = new HashMap
id = var . readInt32 ( var )
critical = var . readBool ( var )
var . writeInt32 ( id )
var . writeBool ( critical )
var = TL_webDocument . TLdeserialize ( var , var . readInt32 ( var ) , var )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
thumb_url = var . readString ( var )
if ( ( flags & 32 ) != 0 )
content_url = var . readString ( var )
content_type = var . readString ( var )
if ( ( flags & 64 ) != 0 )
w = var . readInt32 ( var )
if ( ( flags & 64 ) != 0 )
duration = var . readInt32 ( var )
var . writeString ( thumb_url )
var . writeString ( content_url )
var . writeString ( content_type )
var . writeInt32 ( w )
var . writeInt32 ( duration )
var = new TL_peerNotifySettingsEmpty
var = var . readString ( var )
var . writeInt32 ( var )
var . writeString ( var )
caption = var . readString ( var )
var . writeString ( caption )
var = TL_inputGeoChat . TLdeserialize ( var , var . readInt32 ( var ) , var )
GeoChatMessage var = null
var = new TL_geoChatMessageService
var = new TL_geoChatMessageEmpty
chat_id = var . readInt32 ( var )
from_id = var . readInt32 ( var )
media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( chat_id )
var . writeInt32 ( from_id )
media . serializeToStream ( var )
chat_id = var . readInt32 ( var )
id = var . readInt32 ( var )
action = MessageAction . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( chat_id )
var . writeInt32 ( from_id )
action . serializeToStream ( var )
chat_id = var . readInt32 ( var )
var . writeInt32 ( chat_id )
var . writeInt32 ( id )
var = new TL_messageActionGeoChatCheckin
var = new TL_messageActionGeoChatCreate
address = var . readString ( var )
var . writeString ( title )
var . writeString ( address )
PeerNotifyEvents var = null
var = new TL_peerNotifyEventsEmpty
var = new TL_peerNotifyEventsAll
InputPeerNotifyEvents var = null
var = new TL_inputPeerNotifyEventsAll
var = new TL_inputPeerNotifyEventsEmpty
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
caption = var . readString ( var )
var . writeString ( caption )
geochats_Messages var = null
var = new TL_geochats_messages
GeoChatMessage var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )
messages . add ( var )
chats . add ( var )
User var = User . TLdeserialize ( var , var . readInt32 ( var ) , var )
users . add ( var )
int var = messages . size ( )
messages . get ( var ) . serializeToStream ( var )
var = chats . size ( )
chats . get ( var ) . serializeToStream ( var )
GeoChatMessage var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )
messages . add ( var )
Chat var = Chat . TLdeserialize ( var , var . readInt32 ( var ) , var )
chats . add ( var )
int var = messages . size ( )
messages . get ( var ) . serializeToStream ( var )
var = chats . size ( )
chats . get ( var ) . serializeToStream ( var )
var = users . size ( )
users . get ( var ) . serializeToStream ( var )
if ( TL_disabledFeature . var != var )
var = var . readString ( var )
var = var . readString ( var )
var . writeString ( var )
var = new TL_updateBotInlineQuery
query_id = var . readInt64 ( var )
user_id = var . readInt32 ( var )
var = TL_inputBotInlineMessageID . TLdeserialize ( var , var . readInt32 ( var ) , var )
chat_instance = var . readInt64 ( var )
if ( ( flags & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )
game_short_name = var . readString ( var )
var . writeInt64 ( query_id )
var . writeInt32 ( user_id )
var . writeInt64 ( chat_instance )
if ( ( flags & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )
var . writeString ( game_short_name )
query_id = var . readInt64 ( var )
var = var . readInt32 ( var )
chat_instance = var . readInt64 ( var )
if ( ( flags & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )
game_short_name = var . readString ( var )
var . writeInt64 ( query_id )
var . writeInt64 ( chat_instance )
if ( ( flags & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )
var . writeString ( game_short_name )
user_id = var . readInt32 ( var )
query = var . readString ( var )
if ( ( flags & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )
var = TL_inputBotInlineMessageID . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( user_id )
var . writeString ( query )
if ( ( flags & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )
chat_id = var . readInt32 ( var )
query_id = var . readInt64 ( var )
user_id = var . readInt32 ( var )
query = var . readString ( var )
if ( ( flags & 1 ) != 0 )
geo = GeoPoint . TLdeserialize ( var , var . readInt32 ( var ) , var )
offset = var . readString ( var )
var . writeInt64 ( query_id )
var . writeInt32 ( user_id )
var . writeString ( query )
if ( ( flags & 1 ) != 0 )
geo . serializeToStream ( var )
var . writeString ( offset )
last_name = var . readString ( var )
if ( ( flags & 1 ) != 0 )
var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )
my_link = ContactLink . TLdeserialize ( var , var . readInt32 ( var ) , var )
foreign_link = ContactLink . TLdeserialize ( var , var . readInt32 ( var ) , var )
channel_id = var . readInt32 ( var )
var . writeInt32 ( pts_count )
messages . add ( var . readInt32 ( var ) )
pts_count = var . readInt32 ( var )
participants = ChatParticipants . TLdeserialize ( var , var . readInt32 ( var ) , var )
has_recovery = var . readBool ( var )
var . writeBool ( has_recovery )
caption = var . readString ( var )
var . writeString ( caption )
if ( TL_geochats_statedMessage . var != var )
if ( var )
TL_geochats_statedMessage var = new TL_geochats_statedMessage
var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )
var = var . readInt32 ( var )
var . serializeToStream ( var )
var . writeInt32 ( var )
var = var . readInt32 ( var )
TL_disabledFeature var = TL_disabledFeature . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( var )
var = var . size ( )
if ( var )
TL_webDocument var = new TL_webDocument
if ( var )
TL_inputWebFileLocation var = new TL_inputWebFileLocation
var = new TL_geoChat
venue = var . readString ( var )
geo = GeoPoint . TLdeserialize ( var , var . readInt32 ( var ) , var )
checked_in = var . readBool ( var )
var . writeString ( venue )
geo . serializeToStream ( var )
var . writeBool ( checked_in )
if ( TL_cdnFileHash . var != var )
if ( var )
TL_cdnFileHash var = new TL_cdnFileHash
if ( var )
TL_chatLocated var = TL_chatLocated . TLdeserialize ( var , var . readInt32 ( var ) , var )
Chat var = Chat . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . add ( var )
var . get ( var ) . serializeToStream ( var )
if ( TL_inputGeoChat . var != var )
hash = var . readString ( var )
var . writeString ( hash )
var . writeString ( var . get ( var ) )
return TL_geochats_located . TLdeserialize ( var , var , var )
var . writeInt32 ( var )
return geochats_Messages . TLdeserialize ( var , var , var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )
return TL_messages_chatFull . TLdeserialize ( var , var , var )
var . writeInt32 ( var )
var . serializeToStream ( var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )
var . serializeToStream ( var )
var . serializeToStream ( var )
return geochats_Messages . TLdeserialize ( var , var , var )
var . serializeToStream ( var )
var . writeInt32 ( var )
var . writeInt32 ( var )
var . writeInt32 ( var )
return geochats_Messages . TLdeserialize ( var , var , var )
var . serializeToStream ( var )
var . writeInt32 ( var )
var . writeInt32 ( var )
var . serializeToStream ( var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )
var . serializeToStream ( var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )
var . serializeToStream ( var )
var . writeString ( var )
return TL_help_termsOfService . TLdeserialize ( var , var , var )
attachPath = var . readString ( var )
if ( id < 0 && attachPath . startsWith ( "" ) )
String args = attachPath . split ( "" )
if ( args . length > 0 )
params = new HashMap var ( var )
for ( int var = 1 ; var < args . length - 1 ; var ++ )
String args2 var = args [ var ] . split ( "" )
attachPath = args [ args ] . length - 1
if ( ( flags & var ) != 0 && id < 0 )
fwd_msg_id = var . readInt32 ( var )
var = var . getKey ( ) + "" + var . getValue ( ) + "" + var
if ( ( flags & var ) != 0 && id < 0 )
var . writeInt32 ( fwd_msg_id )
attachPath = var . readString ( var )
if ( id < 0 && attachPath . startsWith ( "" ) )
String args = attachPath . split ( "" )
attachPath = args [ args ] . length - 1
fwd_msg_id = var . readInt32 ( var )
attachPath = var . readString ( var )
String args = attachPath . split ( "" )
if ( args . length > 0 )
if ( ( flags & var ) != 0 && id < 0 )
fwd_msg_id = var . readInt32 ( var )
if ( ( flags & var ) != 0 && id < 0 )
var . writeInt32 ( fwd_msg_id )
attachPath = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )
var . writeString ( attachPath )
if ( ( flags & var ) != 0 && id < 0 )
var . writeInt32 ( fwd_msg_id )
if ( id < 0 )
fwd_msg_id = var . readInt32 ( var )
attachPath = var . readString ( var )
var . writeInt32 ( fwd_msg_id )
var . writeString ( attachPath )
attachPath = var . readString ( var )
if ( id < 0 && attachPath . startsWith ( "" ) )
fwd_msg_id = var . readInt32 ( var )
var . writeInt64 ( grouped_id )
var . writeString ( var )
attachPath = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )
var . writeString ( attachPath )
var . writeInt32 ( fwd_msg_id )
attachPath = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )
var . writeString ( attachPath )
var . writeInt32 ( fwd_msg_id )
attachPath = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )
var . writeString ( attachPath )
var . writeInt32 ( fwd_msg_id )
attachPath = var . readString ( var )
if ( ( flags & var ) != 0 && id < 0 )
fwd_msg_id = var . readInt32 ( var )
attachPath = var . readString ( var )
var . writeString ( attachPath )
fwd_msg_id = var . readInt32 ( var )
attachPath = var . readString ( var )
var . writeInt32 ( fwd_msg_id )
var . writeString ( attachPath )
attachPath = var . readString ( var )
var . writeInt32 ( id )
attachPath = var . readString ( var )
var . writeString ( attachPath )
attachPath = var . readString ( var )
var . writeString ( attachPath )
attachPath = var . readString ( var )
to_id . serializeToStream ( var )
var . writeString ( attachPath )
TL_cdnFileHash var = TL_cdnFileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )
TL_cdnFileHash var = TL_cdnFileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )
TL_cdnFileHash var = TL_cdnFileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )
cdn_file_hashes . add ( var )
int var = cdn_file_hashes . size ( )
cdn_file_hashes . get ( var ) . serializeToStream ( var )
if ( var && var == null )
if ( var != null )
if ( var != null )
if ( var != null )
return ! ( ! var && ! checkTransitionAnimation ) || onTouchEvent ( var )
if ( ! var )
if ( ! var )
ViewGroup . LayoutParams var = var . getLayoutParams ( )
if ( ! var && var . get ( var . size ( ) - 1 ) . swipeBackEnabled )
if ( var || checkTransitionAnimation || var . isEmpty ( ) )
return presentFragment ( var , false , false , true )
return presentFragment ( var , var , false , true )
startLayoutAnimation ( var , false )
if ( var && var . size ( ) == 1 )
if ( var == null )
startLayoutAnimation ( true , true )
boolean var = var && var . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" , true )
if ( var != null )
ViewGroup . LayoutParams var = var . getLayoutParams ( )
startLayoutAnimation ( false , true )
if ( hasSubMenu && ( var == null || var != null && ! var . isShowing ( ) ) )
if ( var != null )
if ( var != null )
var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_dialogBackground ) . key_dialogBackground , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_dialogBackground ) . key_dialogBackground , PorterDuff . Mode . MULTIPLY )
TextView var = ( TextView ) var . getChildAt ( var )
var . setTextColor ( Theme . getColor ( Theme . key_dialogTextBlack ) . key_dialogTextBlack )
var . setTextColor ( Theme . getColor ( Theme . key_dialogIcon ) . key_dialogIcon )
AndroidUtilities . setScrollViewEdgeEffectColor ( var , Theme . getColor ( Theme . key_dialogScrollGlow ) . key_dialogScrollGlow )
var . setTextColor ( Theme . getColor ( Theme . key_dialogTextBlack ) . key_dialogTextBlack )
var . setProgressColor ( Theme . getColor ( Theme . key_dialogProgressCircle ) . key_dialogProgressCircle )
var . setProgressColor ( Theme . getColor ( Theme . key_dialogLineProgress ) . key_dialogLineProgress )
var . setBackColor ( Theme . getColor ( Theme . key_dialogLineProgressBackground ) . key_dialogLineProgressBackground )
var . setTextColor ( Theme . getColor ( Theme . key_dialogTextGray2 ) . key_dialogTextGray2 )
if ( ( Integer ) var . getTag ( var ) == Dialog . BUTTON_NEGATIVE )
var . setTextColor ( Theme . getColor ( Theme . key_dialogButton ) . key_dialogButton )
var . setTextColor ( Theme . getColor ( Theme . key_dialogButton ) . key_dialogButton )
var . setTextColor ( Theme . getColor ( Theme . key_dialogButton ) . key_dialogButton )
if ( var == null || ! canTextInput ( var ) )
var = ConnectionsManager . getInstance ( ) . generateClassGuid
var = ConnectionsManager . getInstance ( ) . generateClassGuid
ConnectionsManager . getInstance ( ) . cancelRequestsForGuid ( var )
return var != null && var . presentFragment ( var , var , var , true )
return ! var && var && var == ViewCompat . SCROLL_AXIS_VERTICAL && ! canDismissWithSwipe
return var || ! canDismissWithSwipe
var . put ( var , 0xff4e9ad4 )
var . put ( var , 0xff55ab4f )
var . put ( var , 0xff888888 )
var . add ( var = var = var )
var . add ( var )
if ( var == null = var )
applyTheme ( var , false , false )
applyTheme ( var , true , false )
applyTheme ( var , ! var , true )
applyTheme ( var , true , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetNewTheme )
if ( var . endsWith ( "" ) )
applyTheme ( var , true , false )
var . write ( var . toString ( ) . getBytes )
FileLog . var ( "" , var )
var [ 0 ] = var . getDrawable ( R . drawable . attach_camera_states )
var [ 1 ] = var . getDrawable ( R . drawable . attach_gallery_states )
var [ 2 ] = var . getDrawable ( R . drawable . attach_video_states )
var [ 3 ] = var . getDrawable ( R . drawable . attach_audio_states )
var [ 4 ] = var . getDrawable ( R . drawable . attach_file_states )
var . setTextSize ( AndroidUtilities . dp ( MessagesController . getInstance ( ) . fontSize ) . getInstance ( ) . fontSize )
var . setTextSize ( AndroidUtilities . dp ( Math . max ( 16 , MessagesController . getInstance ( ) . fontSize ) , MessagesController . getInstance ( ) . fontSize - 2 ) . max ( 16 , MessagesController . getInstance ( ) . fontSize ) , MessagesController . getInstance ( ) . fontSize - 2 )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit . remove ( "" ) . commit
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetNewWallpapper )
var . setColorFilter ( new PorterDuffColorFilter ( getColor ( var ) , PorterDuff . Mode . MULTIPLY ) ( var ) , PorterDuff . Mode . MULTIPLY )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetNewWallpapper )
if ( ( var & var ) == 0 || ( var & var ) != 0 && var . equals ( var . getTag ( ) ) )
if ( ( var & var ) == 0 || var != null && ( var & var ) != 0 && var . equals ( var . getTag ( ) ) )
if ( ( var & var ) == 0 || ( var & var ) != 0 && var . equals ( var . getTag ( ) ) )
if ( var instanceof RecyclerListView != null )
if ( var != null )
var . didSetColor ( var )
if ( var instanceof CombinedDrawable )
if ( ! var && var instanceof View && ! var . equals ( ( ( View ) var ) . getTag ) )
Drawable var = ( ( TextView ) var ) . getCompoundDrawables
( ( TextView ) var ) . invalidate
( ( TextView ) var ) . setTextColor ( var )
var . cancel ( true )
if ( var != null && var . distanceTo ( var ) < 200 )
if ( var != null )
var = null
var = var . openConnection ( )
var . addRequestProperty ( "" , "" )
var . addRequestProperty ( "" , "" )
var . addRequestProperty ( "" , "" )
var . addRequestProperty ( "" , "" )
var . setConnectTimeout ( 5000 )
var . setReadTimeout ( 5000 )
var . setInstanceFollowRedirects ( true )
if ( var == HttpURLConnection . HTTP_MOVED_TEMP || var == HttpURLConnection . HTTP_MOVED_PERM || var == HttpURLConnection . HTTP_SEE_OTHER )
var = var . openConnection ( )
var = var . getInputStream ( )
var = false
if ( var . getMessage ( ) != null && var . getMessage ( ) . contains ( "" ) = false )
if ( var != null && var instanceof HttpURLConnection )
var . append ( new String ( var , 0 , var , "" ) , 0 , var , "" )
FileLog . var ( var )
FileLog . var ( var )
var . close ( )
FileLog . var ( var )
return new JSONObject ( var )
FileLog . var ( var )
JSONArray var = var . getJSONObject ( "" ) . getJSONArray ( "" )
if ( var . has ( "" ) )
JSONArray var = var . getJSONArray ( "" )
if ( var . length ( ) > 0 )
JSONObject var = var . getJSONObject ( "" )
var . geo = new TLRPC . TL_geoPoint ( )
var . address = var . getString ( "" )
var . venue_type = ""
var . provider = ""
var . didLoadedSearchResult ( var )
var . executeOnExecutor ( AsyncTask . THREAD_POOL_EXECUTOR , null , null , null )
FileLog . var ( var )
var = false
var . didLoadedSearchResult ( var )
public ContactsAdapter ( Context var , int var , boolean var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )
return MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )
return MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )
return ContactsController . getInstance ( ) . phoneBookContacts . get ( var )
if ( var || var )
if ( var == 1 )
if ( var == 3 )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )
if ( var . containsKey ( var . id ) )
ContactsController . Contact var = ContactsController . getInstance ( ) . phoneBookContacts . get ( var )
return MessagesController . getInstance ( ) . dialogs
return MessagesController . getInstance ( ) . dialogsServerOnly
return MessagesController . getInstance ( ) . dialogsForward
var += 2 + MessagesController . getInstance ( ) . hintDialogs . size ( )
return MessagesController . getInstance ( ) . hintDialogs . get ( var - 1 )
var = var == 0 && ! var && ! MessagesController . getInstance ( ) . hintDialogs . isEmpty ( )
return var != 1 && var != 5 && var != 3
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var -= 2 + MessagesController . getInstance ( ) . hintDialogs . size ( )
int var = MessagesController . getInstance ( ) . hintDialogs . size ( )
if ( ! MessagesController . getInstance ( ) . dialogsEndReached )
TLRPC . TL_topPeer var = SearchQuery . hints . get ( var )
var = MessagesController . getInstance ( ) . getUser ( var . var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var . var . channel_id )
var = MessagesController . getInstance ( ) . getChat ( var . var . chat_id )
return SearchQuery . hints . size ( )
var = new SearchAdapterHelper
var = UserConfig . getClientUserId ( )
SearchQuery . loadHints ( true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var . offset_peer = MessagesController . getInputPeer ( var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
var . add ( new MessageObject ( var , null , false ) , null , false )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var )
return ! var . isEmpty ( ) || ! SearchQuery . hints . isEmpty ( )
return var != 2 && ( var == null || var . length ( ) == 0 ) && ( ! var . isEmpty ( ) || ! SearchQuery . hints . isEmpty ( ) )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )
final HashMap < Long , RecentSearchObject > var = new HashMap
MessagesStorage . getInstance ( ) . getEncryptedChatsInternal ( TextUtils . join ( "" , var ) , var , var , var )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
SQLitePreparedStatement var = MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" )
var = new HashMap
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" ) . stepThis . dispose
MessagesController . getInstance ( ) . putUser ( ( TLRPC . User ) var . object , true )
MessagesController . getInstance ( ) . putChat ( ( TLRPC . Chat ) var . object , true )
MessagesController . getInstance ( ) . putEncryptedChat ( ( TLRPC . EncryptedChat ) var . object , true )
HashMap < Long , DialogSearchResult > var = new HashMap var ( var )
TLRPC . User var = UserConfig . getCurrentUser ( var )
if ( var . containsKey ( ( long ) var ) )
MessagesController . getInstance ( ) . putUser ( var , true )
MessagesController . getInstance ( ) . putChat ( var , true )
MessagesController . getInstance ( ) . putEncryptedChat ( var , true )
MessagesController . getInstance ( ) . putUsers ( var , true )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . User ) var ) . id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( ( ( TLRPC . Chat ) var ) . id )
if ( var > var && var < var + var )
return var . get ( var - var - 1 )
if ( var > var + var && var < var + var + var )
return var . get ( var - var - var - 1 )
var = MessagesController . getInstance ( ) . getChat ( ( ( TLRPC . Chat ) var ) . id )
var = MessagesController . getInstance ( ) . getEncryptedChat ( ( ( TLRPC . EncryptedChat ) var ) . id )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )
var . useSeparator = ( var != getItemCount - 1 && var != var - 1 && var != var + var - 1 )
if ( var > var . size ( ) && var != null )
var . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , Math . min ( var . length ( ) , var . length ( ) + 1 ) . length ( ) , var . length ( ) + 1 , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( ! var . getGlobalSearch ( ) . isEmpty && var == var . size ( ) )
if ( var > var + var && var < var + var + var )
if ( var != 0 && var == var + var + var )
return var . size ( )
return var . getItemViewType ( ) == 3
( ( DrawerProfileCell ) var . itemView ) . setUser ( MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) ) . getClientUserId ( ) )
var . get ( var ) . bind ( ( DrawerActionCell ) var . itemView )
if ( var == 0 == 1 == 5 )
if ( var == 5 )
var . add ( null )
int var = UserConfig . getClientUserId ( )
if ( var > 3 && var < places . size ( ) + 3 )
if ( var > 2 && var < places . size ( ) + 2 )
return ! ( LocationController . getInstance ( ) . getSharingLocationInfo ( var ) == null && var == null )
var = new SearchAdapterHelper
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
TLObject var = MessagesController . getInstance ( ) . getUserOrChat ( var )
MessagesController . getInstance ( ) . putUser ( var , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
MessagesStorage . getInstance ( ) . saveBotCache ( var , var )
if ( var . containsKey ( var . id ) || ! ( var . document instanceof TLRPC . TL_document ) && ! ( var . photo instanceof TLRPC . TL_photo ) && var . content_url == null && var . send_message instanceof TLRPC . TL_botInlineMessageMediaAuto )
MessagesStorage . getInstance ( ) . getBotCache ( var , var )
var . bot = MessagesController . getInputUser ( var )
var . geo_point . lat = var . getLatitude ( )
var . geo_point . _long = var . getLongitude ( )
var . peer = MessagesController . getInputPeer ( var )
var = ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
final HashMap < Integer , TLRPC . User > var = new HashMap
final HashMap < Integer , TLRPC . User > var = new HashMap
if ( ! var && var && var == 0 && ! SearchQuery . inlineBots . isEmpty ( ) )
for ( int var = 0 ; var < SearchQuery . inlineBots . size ( ) ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( SearchQuery . inlineBots . get ( var ) . peer . user_id )
var = MessagesController . getInstance ( ) . getChat ( var . id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
if ( var == null || ! var && UserObject . isUserSelf ( var ) || var . containsKey ( var . id ) )
MessagesController . getInstance ( ) . putUsers ( var . var , false )
int var = UserConfig . getClientUserId ( )
if ( var . containsKey ( var . id ) && var . containsKey ( var . id ) . containsKey ( var . id ) 1 . containsKey ( var . id ) )
if ( var . containsKey ( var . id ) 1 )
if ( var . containsKey ( var . id ) )
TLRPC . BotInfo var = var . getValue ( )
var . add ( MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id )
public SearchAdapter ( Context var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var , boolean var , boolean var , boolean var , int var )
var = new SearchAdapterHelper
final ArrayList < TLRPC . TL_contact > var = new ArrayList
var . addAll ( ContactsController . getInstance ( ) . contacts )
if ( var . id == UserConfig . getClientUserId ( var ) || var && ! var . mutual_contact )
( ( SpannableStringBuilder ) var ) . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setChecked ( var . containsKey ( var ) , false )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var . channel = MessagesController . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
var . channel = MessagesController . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
if ( var . length ( ) >= 5 )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )
if ( var . isEmpty ( ) || var == null )
SQLitePreparedStatement var = MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" )
MessagesStorage . getInstance ( ) . getDatabase . beginTransaction
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" + var . get ( var ) . hashtag + "" ) . stepThis . dispose
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" ) . stepThis . dispose
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )
StickersQuery . checkStickers ( StickersQuery . TYPE_MASK )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )
FileLoader . getInstance ( ) . loadFile ( var . thumb . location , "" , 0 , 1 )
var = var . toString ( )
HashMap < String , ArrayList < TLRPC . Document > . Document > var = StickersQuery . getAllStickers ( )
if ( var != null )
if ( var != null )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . needReloadArchivedStickers )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . needReloadArchivedStickers )
if ( var == StickersQuery . TYPE_IMAGE )
if ( var == StickersQuery . TYPE_IMAGE )
var . masks = var == StickersQuery . TYPE_MASK
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
var . setChecked ( StickersQuery . isStickerPackInstalled ( var . set . id ) . set . id )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )
MessageObject var = new MessageObject ( var , null , false )
HashMap < Integer , TextPaint > var = null
if ( var != null )
var . getValue ( ) . setColor ( getGrayTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
TLObject var = MessagesController . getInstance ( ) . getUserOrChat ( "" )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , false , true )
MessagesController . openByUserName ( var . channel . username , var , 2 )
videoPlayerSeekbar . setColors ( 0x66ffffff , 0xffffffff , 0xffffffff )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )
HashMap < Long , TLRPC . WebPage > var = new HashMap
MessagesStorage . getInstance ( ) . putWebPages ( var )
NotificationCenter . getInstance ( ) . setAllowedNotificationsDutingAnimation ( new int )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , false , true )
AlertsCreator . processError ( var , var , var , true )
MessagesController . getInstance ( ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . generateJoinMessage ( var . id , true )
MessagesController . getInstance ( ) . loadFullChat ( var . id , 0 , true )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , true , var . id )
var = MediaController . getInstance ( ) . generateObserverTag
MessagesController . openByUserName ( var . channel . username , var , 2 )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , null , this )
if ( ! FileLoader . getInstance ( ) . isLoadingFile ( var ) )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
FileLoader . getInstance ( ) . loadFile ( var , true , 1 )
var . setStrikeWidth ( AndroidUtilities . dp ( 2 ) )
var = MediaController . getInstance ( ) . generateObserverTag
var . setColors ( getTextColor & 0x3fffffff , getTextColor , getTextColor )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , null , this )
if ( ! FileLoader . getInstance ( ) . isLoadingFile ( var ) )
FileLoader . getInstance ( ) . loadFile ( var , true , 1 )
if ( var = ( var != null ) )
MessagesController . openByUserName ( var . channel . username , var , 2 )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . var . id )
if ( ! var = null )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var . setImageBitmap ( var . getBitmap ( var ) )
var . thumb = var . getBitmap ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
if ( var . containsKey ( var . id ) )
var . add ( var . getValue ( ) . messageObject )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )
var . messageObject = new MessageObject ( var , null , false )
( ( AudioCell ) var . itemView ) . setAudio ( var . get ( var ) , var != var . size ( ) - 1 , var . containsKey ( var . id ) . id )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )
MessagesController . getInstance ( ) . getBlockedUsers ( false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )
if ( var >= MessagesController . getInstance ( ) . blockedUsers . size ( ) )
var . putInt ( "" , MessagesController . getInstance ( ) . blockedUsers . get ( var ) )
if ( var >= MessagesController . getInstance ( ) . blockedUsers . size ( ) || getParentActivity == null )
var = MessagesController . getInstance ( ) . blockedUsers . get ( var )
MessagesController . getInstance ( ) . unblockUser ( var )
if ( MessagesController . getInstance ( ) . loadingBlockedUsers )
MessagesController . getInstance ( ) . blockUser ( var . id )
if ( MessagesController . getInstance ( ) . blockedUsers . isEmpty ( ) )
return MessagesController . getInstance ( ) . blockedUsers . size ( ) + 1
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( MessagesController . getInstance ( ) . blockedUsers . get ( var ) )
if ( var == MessagesController . getInstance ( ) . blockedUsers . size ( ) )
File var = new File ( ApplicationLoader . getFilesDirFixed ( var ) , "" )
var = var . length ( var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , 0 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , 0 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , 0 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , 1 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , 2 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_AUDIO ) . MEDIA_DIR_AUDIO , 0 )
var += var . length ( var )
FileLog . var ( var )
File var = FileLoader . getInstance ( var ) . checkDirectory ( var )
File var var = var . listFiles ( var )
if ( var == 1 )
FileLog . var ( var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_AUDIO ) . MEDIA_DIR_AUDIO , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , var )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var
PendingIntent var = PendingIntent . getService ( ApplicationLoader . applicationContext , 0 , new Intent ( ApplicationLoader . applicationContext , ClearCacheService . class ) . applicationContext , ClearCacheService . class , 0 )
BotQuery . clearBotKeyboard ( var , null )
File var = new File ( ApplicationLoader . getFilesDirFixed ( var ) , "" )
var = var . length ( var )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . user = MessagesController . getInstance ( ) . getUser ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
CallLogRow var = var . get ( var . size ( ) - 1 )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
MessagesController . getInstance ( ) . deleteMessages ( var , null , null , 0 , false )
var = AlertsCreator . processError ( var , CancelAccountDeletionActivity . this , var )
AlertsCreator . processError ( var , CancelAccountDeletionActivity . this , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )
AlertsCreator . processError ( var , CancelAccountDeletionActivity . this , var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
final String var = MessagesController . getInstance ( ) . linkPrefix + ""
var = MediaController . getInstance ( ) . generateObserverTag
var . setProgressRect ( var + AndroidUtilities . dp ( 4 ) , AndroidUtilities . dp ( 6 ) , var + AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 50 ) )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
FileLoader . getInstance ( ) . loadFile ( var . getDocument ( ) , true , 0 )
FileLoader . getInstance ( ) . cancelLoadFile ( var . getDocument ( ) )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )
FileLog . var ( "" , var )
if ( var == UserConfig . getClientUserId ( ) )
var . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
var = MediaController . getInstance ( var ) . generateObserverTag var
if ( ! ( var . caption instanceof Spannable ) || var == null )
Spannable var = ( Spannable ) var . caption
ClickableSpan var var = var . getSpans ( var , var , ClickableSpan . class )
if ( var == var && var == - 1 && MediaController . getInstance ( var ) . canAutoplayGifs var && ( var . getAnimation ( var ) == null || ! TextUtils . isEmpty ( var . embed_url ) ) )
if ( var == 2 || var != 0 || var )
if ( MediaController . getInstance ( var ) . canAutoplayGifs var var )
if ( var . var == 8 && var == - 1 && MediaController . getInstance ( var ) . canAutoplayGifs var && var . getAnimation ( var ) == null )
updateRadialProgressBackground ( true )
updateRadialProgressBackground ( true )
updateRadialProgressBackground ( true )
for ( int var = 0 ; var < var . attributes . size ( var ) ; var ++ )
var = var . var
if ( MediaController . getInstance ( var ) . canAutoplayGifs var var )
if ( var == null || ! var . isSecretPhoto ( var ) )
var = String . format ( Locale . US , "" , var , var , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )
if ( var . exists ( var ) )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )
if ( var . onAttachedToWindow ( var ) )
updateButtonState ( false )
updateButtonState ( false )
if ( var != 0 || var != - 1 )
updateRadialProgressBackground ( true )
if ( ! var )
updateRadialProgressBackground ( true )
updateRadialProgressBackground ( true )
if ( ! var . isSecretPhoto ( var ) )
var = var . mime_type != null && var . mime_type . toLowerCase ( var ) . startsWith ( "" ) || var . thumb instanceof TLRPC . TL_photoSize && ! ( var . thumb . location instanceof TLRPC . TL_fileLocationUnavailable )
return Math . abs ( ConnectionsManager . getInstance ( var ) . getCurrentTime var - var . messageOwner . date ) > var . messageOwner . media . period
return Math . abs ( ConnectionsManager . getInstance ( var ) . getCurrentTime var - var . messageOwner . date ) > var . messageOwner . media . period - 5
boolean var = var == var && ( isUserDataChanged var || var )
if ( ( var . equals ( "" ) || var . equals ( "" ) ) && var . messageOwner . media . webpage . cached_page instanceof TLRPC . TL_pageFull && var . messageOwner . media . webpage . photo instanceof TLRPC . TL_photo )
var = ( ( TLRPC . TL_messageMediaInvoice ) var . messageOwner . media ) . var
int var = ( int ) Math . ceil ( Theme . chat_replyNamePaint . measureText ( var ) )
var = var . getWidth ( var )
if ( ! MediaController . getInstance ( var ) . canAutoplayGifs var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )
if ( ! var . isSending ( var ) && ( var . mediaExists || FileLoader . getInstance ( var ) . isLoadingFile ( var ) || var ) var )
if ( var || var || MediaController . getInstance ( var ) . canDownloadMedia ( var ) || FileLoader . getInstance ( var ) . isLoadingFile ( var ) var )
if ( var + var + AndroidUtilities . dp ( 6 ) > var var )
var += ( int ) - var . getLineLeft ( 0 )
var = PhoneFormat . getInstance ( var ) . format ( var )
var = new StaticLayout ( TextUtils . ellipsize ( var , Theme . chat_contactNamePaint , var , TextUtils . TruncateAt . END ) , Theme . chat_contactNamePaint , var , TextUtils . TruncateAt . END , Theme . chat_contactNamePaint , var + AndroidUtilities . dp ( 2 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
var = new StaticLayout ( TextUtils . ellipsize ( var . replace ( '\n' , ' ' ) , ' ' , Theme . chat_contactPhonePaint , var , TextUtils . TruncateAt . END ) . replace ( '\n' , ' ' ) , ' ' , Theme . chat_contactPhonePaint , var , TextUtils . TruncateAt . END , Theme . chat_contactPhonePaint , var + AndroidUtilities . dp ( 2 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
var = AndroidUtilities . dp ( 70 ) + var
int var = var - AndroidUtilities . dp ( 40 + 18 + 44 + 8 ) - ( int ) Math . ceil ( var . getLineWidth ( 0 ) )
if ( var . gifState != 2 && ! MediaController . getInstance ( var ) . canAutoplayGifs var && ( var . var == 8 || var . var == 5 ) )
var . setForcePreview ( var . isSecretPhoto ( var ) )
double var = var . messageOwner . media . geo . var
var = String . format ( Locale . US , "" , var , var , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )
int var = var - AndroidUtilities . dp ( 86 + 37 )
var = StaticLayoutEx . createStaticLayout ( var . messageOwner . media . var , Theme . chat_locationTitlePaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false , TextUtils . TruncateAt . END , var , 2 )
var = StaticLayoutEx . createStaticLayout ( var . messageOwner . media . address , Theme . chat_locationAddressPaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false , TextUtils . TruncateAt . END , var , Math . min ( 3 , 3 - var ) , 3 - var )
var = AndroidUtilities . dp ( 86 )
var = AndroidUtilities . dp ( 86 )
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )
if ( ! var . isSecretPhoto ( var ) )
if ( ! var . isSecretPhoto ( var ) )
if ( ! var . isSecretPhoto ( var ) )
if ( var . isSecretPhoto ( var ) )
var = var . var
var = new StaticLayout ( var , Theme . chat_msgTextPaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
var += var + AndroidUtilities . dp ( 9 )
if ( var || MediaController . getInstance ( var ) . canDownloadMedia ( var ) || FileLoader . getInstance ( var ) . isLoadingFile ( var ) var )
var . setImageBitmap ( ( BitmapDrawable ) null )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )
if ( ! var . isSending ( var ) && ( var != 0 || FileLoader . getInstance ( var ) . isLoadingFile ( var ) || var ) var )
if ( ( var . flags & MessageObject . POSITION_FLAG_RIGHT ) == 0 )
if ( ( var . flags & MessageObject . POSITION_FLAG_LEFT ) == 0 )
var = StaticLayout . Builder . obtain ( var . caption , 0 , var . caption . length ( var ) , Theme . chat_msgTextPaint , var - AndroidUtilities . dp ( 10 ) ) . setBreakStrategy ( StaticLayout . BREAK_STRATEGY_HIGH_QUALITY ) . setHyphenationFrequency ( StaticLayout . HYPHENATION_FREQUENCY_NONE ) . setAlignment ( Layout . Alignment . ALIGN_NORMAL ) . build var
var = new StaticLayout ( var . caption , Theme . chat_msgTextPaint , var - AndroidUtilities . dp ( 10 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
int var = ( int ) Math . ceil ( Theme . chat_replyNamePaint . measureText ( var . site_name ) . site_name )
var += Math . min ( AndroidUtilities . displaySize . x , AndroidUtilities . displaySize . y )
updateButtonState ( var )
var = var - AndroidUtilities . dp ( 10 )
var = int ( AndroidUtilities . dp ( 7 ) + ( var . getImageHeight ( var ) - AndroidUtilities . dp ( 48 ) ) / 2.0f ) + var
var . setVisible ( ! PhotoViewer . getInstance ( var ) . isShowingImage ( var ) && ! SecretMediaViewer . getInstance ( var ) . isShowingImage ( var ) , false )
setDrawableBounds ( var , var + var - AndroidUtilities . dp ( 15 ) , var + AndroidUtilities . dp ( 11.5f ) , AndroidUtilities . dp ( 9 ) , AndroidUtilities . dp ( 13 ) )
if ( var == - 1 && var . isSecretPhoto ( var ) && ! MediaController . getInstance ( var ) . isPlayingMessage ( var ) && var . getVisible ( var ) )
if ( var . getVisible ( var ) && ! var && ! var . isSecretPhoto ( var ) )
var = var - AndroidUtilities . dp ( 28 )
if ( ! var . isSecretPhoto ( var ) )
if ( ! var && var != null && ( var == 1 || var == 0 || var == 3 || var . isSecretPhoto ( var ) ) )
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeoLive var )
Theme . chat_locationTitlePaint . setColor ( Theme . getColor ( Theme . key_chat_outVenueNameText ) . key_chat_outVenueNameText )
Theme . chat_locationTitlePaint . setColor ( Theme . getColor ( Theme . key_chat_inVenueNameText ) . key_chat_inVenueNameText )
if ( var == null )
if ( var . isOut ( var ) && var . isSending ( var ) || var . isSendError ( var ) && var var )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var . messageOwner . attachPath , var , this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )
if ( var . isOut ( var ) && var . isSending ( var ) var )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var . messageOwner . attachPath , var , this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )
if ( var . isSecretPhoto ( var ) var )
if ( var . isOut ( var ) && var . isSending ( var ) var )
if ( var . isOut ( var ) && var . isSending ( var ) || var . isSendError ( var ) var )
updateButtonState ( var == var || var == var )
updateButtonState ( true )
updateButtonState ( true )
updateButtonState ( true )
if ( var != null && var && ! var && ! var . mediaExists && ! var . attachPathExists )
updateButtonState ( true )
if ( var != 4 )
updateButtonState ( false )
updateButtonState ( false )
if ( var . messageOwner . fwd_from != null && ! var . isOutOwner ( var ) && var . messageOwner . fwd_from . saved_from_peer != null && var . getDialogId ( var ) == UserConfig . getClientUserId ( var ) )
int var = UserConfig . getClientUserId ( var )
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getUser ( var . saved_from_peer . user_id )
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getChat ( var . saved_from_peer . channel_id )
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getChat ( var . saved_from_peer . chat_id )
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )
var = MessagesController . getInstance ( var ) . getChat ( - var . messageOwner . from_id )
var = MessagesController . getInstance ( var ) . getChat ( var . messageOwner . to_id . channel_id )
var = new SpannableStringBuilder ( String . format ( "" , var , var , var ) , var , var , var )
var = ( int ) Math . ceil ( Theme . chat_forwardNamePaint . measureText ( var + "" + var ) + "" + var )
var . setSpan ( new TypefaceSpan ( AndroidUtilities . getTypeface ( "" ) ) . getTypeface ( "" ) , var . length ( var ) + 1 , var . length ( var ) + 1 + var . length ( var ) , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setColors ( Theme . getColor ( Theme . key_chat_outAudioSeekbar ) . key_chat_outAudioSeekbar , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarSelected ) . key_chat_outAudioSeekbarSelected )
var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )
var . setColors ( Theme . getColor ( Theme . key_chat_outAudioSeekbar ) . key_chat_outAudioSeekbar , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarSelected ) . key_chat_outAudioSeekbarSelected )
var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )
var -= AndroidUtilities . dp ( 25 + 6 )
var . translate ( var = var . getImageX ( var ) + AndroidUtilities . dp ( 5 ) , var = var . getImageY ( var ) + var . getImageHeight ( var ) + AndroidUtilities . dp ( 6 ) )
if ( ( ! var || var ) && var )
public CheckBoxCell ( Context var , boolean var )
var = new CheckBoxSquare ( var , var )
var = MediaController . getInstance ( ) . generateObserverTag
String var = null
if ( var . content_url != null )
var = var . content_url
var = var . thumb_url
var = var . content_url
if ( var == null && var . thumb_url != null )
var = var . thumb_url
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )
var = var . var
var = var . var
if ( var != null || var != null || var != null )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )
var . duration = var . duration
var = new MessageObject ( var , null , false )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
if ( var != null && var . content_url != null && var . content_url . length ( ) > 0 )
if ( var != null )
FileLoader . getInstance ( ) . loadFile ( var , true , 0 )
if ( var != null )
ImageLoader . getInstance ( ) . cancelLoadHttpFile ( var . content_url )
var . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
if ( var != null )
if ( var . content_url != null )
var = Utilities . MD5 ( var . content_url ) + "" + ImageLoader . getHttpUrlExtension ( var . content_url , "" )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
if ( var . thumb_url != null )
var = Utilities . MD5 ( var . thumb_url ) + "" + ImageLoader . getHttpUrlExtension ( var . thumb_url , "" )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )
var = FileLoader . getInstance ( ) . isLoadingFile ( var )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
var = MessagesController . getInstance ( ) . printingStrings . get ( var )
var = DraftQuery . getDraft ( var )
if ( var != null )
if ( var . admin_id == UserConfig . getClientUserId ( ) )
var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )
var = MessagesController . getInstance ( ) . getChat ( var . messageOwner . to_id . channel_id )
if ( var . id / 1000 != 777 && var . id / 1000 != 333 && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) == null )
if ( ContactsController . getInstance ( ) . contactsDict . size ( ) == 0 && ( ! ContactsController . getInstance ( ) . contactsLoaded || ContactsController . getInstance ( ) . isLoadingContacts ) )
return MessagesController . getInstance ( ) . dialogsGroupsOnly
return MessagesController . getInstance ( ) . dialogsForward
TLRPC . DraftMessage var = DraftQuery . getDraft ( var )
MessageObject var = MessagesController . getInstance ( ) . dialogMessage . get ( var . id )
if ( var != var . id || var != null && var . getId ( ) != var . top_message || var != null && var . messageOwner . edit_date != var || var != var . unread_count || var != var . unread_mentions_count || var != var || var == null && var != null || var != var || var != var . pinned )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
var = MessagesController . getInstance ( ) . dialogMessage . get ( var . id )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
if ( var != null && ( var != var . unread_count || var != var . unread_mentions_count ) )
var = var && MessagesController . getInstance ( ) . isDialogMuted ( var )
var = MessagesController . getInstance ( ) . getChat ( var )
var = MessagesController . getInstance ( ) . getChat ( - var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . migrated_to . channel_id )
var = MessagesController . getInstance ( ) . getUser ( var )
var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . chat_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . linkPrefix + "" + var . url
addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT )
addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT )
ArrayList < TLRPC . RecentMeUrl > var = MessagesController . getInstance ( ) . hintDialogs
var . setCompoundDrawablePadding ( AndroidUtilities . dp ( 34 ) )
addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT , Gravity . LEFT | Gravity . TOP , 14 , 0 , 16 , 0 ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT , Gravity . LEFT | Gravity . TOP , 14 , 0 , 16 , 0 )
Drawable var = getResources . getDrawable ( var )
super . invalidate ( )
if ( var . cover != null && var . cover . thumb != null && var . cover . thumb . location != null var . covers . isEmpty ( ) )
if ( ! var . covers . isEmpty ( ) )
if ( var = StickersQuery . isStickerPackInstalled ( var . var . id ) )
if ( var = StickersQuery . isStickerPackInstalled ( var . var . id ) )
if ( var = StickersQuery . isStickerPackInstalled ( var . var . id ) )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText2 ) . key_windowBackgroundWhiteGrayText2 )
if ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime || MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )
var . setText ( LocaleController . formatUserStatus ( var ) )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
if ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime || MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )
var . setText ( LocaleController . formatUserStatus ( var ) )
var . setTextColor ( 0xff999999 )
boolean var = PhotoViewer . getInstance ( ) . isShowingImage ( var . path )
if ( var != null )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
var = LocaleController . formatUserStatus ( var )
if ( var != null && ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime ) )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
if ( LocaleController . isRTL )
var = var - AndroidUtilities . dp ( 4 ) - Theme . dialogs_checkDrawable . getIntrinsicWidth ( )
var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_location_sendLocationIcon ) . key_location_sendLocationIcon , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_location_sendLocationIcon ) . key_location_sendLocationIcon , PorterDuff . Mode . MULTIPLY )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
public SessionCell ( Context var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
var = MediaController . getInstance ( var ) . generateObserverTag var
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , this )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )
var . imageView . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
var . setText ( Emoji . replaceEmoji ( StickersQuery . getEmojiForSticker ( var . id ) . id , var . getPaint ( ) . getFontMetricsInt , AndroidUtilities . dp ( 16 ) , false ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( ) . getFontMetricsInt , AndroidUtilities . dp ( 16 ) , false )
public ThemeCell ( Context var )
if ( var == null )
if ( var instanceof TLRPC . User )
if ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime || MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )
var . setText ( LocaleController . formatUserStatus ( var ) )
var . setText ( "" + ( 70 - var . length ( ) ) )
var . setText ( "" )
TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
final TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )
AlertsCreator . processError ( var , ChangeBioActivity . this , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var = new AvatarUpdater
if ( var . uploadingAvatar != null )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , null )
var = MessagesController . getInstance ( ) . getChat ( var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) ) . getClientUserId ( ) , null , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
MessagesController . getInstance ( ) . changeChatTitle ( var , var . getText ( ) . toString )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
var = UserConfig . getCurrentUser ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
TLRPC . User var = UserConfig . getCurrentUser ( )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
UserConfig . saveConfig ( true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( var == 1 == 2 && ! BuildVars . DEBUG_VERSION )
AlertsCreator . processError ( var , ChangePhoneActivity . this , var , var . getString ( "" ) )
AlertsCreator . processError ( var , ChangePhoneActivity . this , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentSmsCode , var ) , R . string . SentSmsCode , var )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallCode , var ) , R . string . SentCallCode , var )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallOnly , var ) , R . string . SentCallOnly , var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
UserConfig . setCurrentUser ( var )
UserConfig . saveConfig ( true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )
MessagesController . getInstance ( ) . putUser ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )
AlertsCreator . processError ( var , ChangePhoneActivity . this , var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
TLRPC . User var = UserConfig . getCurrentUser ( )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
var = UserConfig . getCurrentUser ( )
String var = "" + MessagesController . getInstance ( ) . linkPrefix + "" + var . getText ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
String var = UserConfig . getCurrentUser ( ) . username
TLRPC . User var = UserConfig . getCurrentUser ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
MessagesController . getInstance ( ) . putUsers ( var , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )
UserConfig . saveConfig ( true )
AlertsCreator . processError ( var , ChangeUsernameActivity . this , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var . thumb = var . getBitmap ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )
var . var . add ( MessagesController . getInputUser ( var . getValue ( ) ) . getValue ( ) )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
if ( var . containsKey ( var . id ) )
MessageObject var = new MessageObject ( var , var , var , var , var )
var . updateButtonState ( false )
var . updateButtonState ( false )
if ( var != null && var . isRoundVideo ( ) && var . getDialogId ( ) == var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . media . user_id )
if ( var != null && var . id != UserConfig . getClientUserId ( ) && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) == null )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var . messageOwner . from_id )
if ( var . messageOwner . media != null && var . messageOwner . media . caption != null )
var += var . messageOwner . media . caption
if ( var . getName ( ) . endsWith ( "" ) )
if ( LocaleController . getInstance ( ) . applyLanguageFile ( var ) )
MessagesController . getInstance ( ) . saveGif ( var )
if ( ! StickersQuery . isStickerPackInstalled ( var . id ) )
if ( ! StickersQuery . isStickerPackInstalled ( var . short_name ) )
if ( var . getDocumentName ( ) . endsWith ( "" ) . endsWith ( "" ) . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
NotificationCenter . getInstance ( ) . setAllowedNotificationsDutingAnimation ( new int )
NotificationCenter . getInstance ( ) . setAnimationInProgress ( true )
if ( MessagesController . checkCanOpenChat ( var , ChannelAdminLogActivity . this ) )
if ( var != null && var . id != UserConfig . getClientUserId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( Utilities . parseInt ( ( ( URLSpanUserMention ) var ) . getURL ) ( URLSpanUserMention ) var ) . getURL )
MessagesController . openByUserName ( var . substring ( 1 ) , ChannelAdminLogActivity . this , 0 )
if ( var . getDocumentName ( ) . endsWith ( "" ) )
if ( var < 0 != UserConfig . getClientUserId ( ) )
if ( MessagesController . checkCanOpenChat ( var , ChannelAdminLogActivity . this ) )
if ( var != UserConfig . getClientUserId ( ) )
MessagesController . openByUserName ( var . substring ( 1 ) , ChannelAdminLogActivity . this , 0 )
if ( var instanceof ChatMessageCell && MediaController . getInstance ( ) . canDownloadMedia ( var ) )
var = new AvatarUpdater
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidFailCreate )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidFailCreate )
if ( var . uploadingAvatar != null )
final int var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , new ArrayList < Integer > ( ) , var . getText ( ) . toString , ChatObject . CHAT_TYPE_CHANNEL , ChannelCreateActivity . this )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
MessagesController . getInstance ( ) . updateChannelUserName ( var , var )
var . setText ( MessagesController . getInstance ( ) . linkPrefix + "" )
var . channel = MessagesController . getInputChannel ( var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var . channel = MessagesController . getInputChannel ( var )
var = MessagesController . getInstance ( ) . getChat ( var )
final Semaphore var = new Semaphore ( 0 )
var = MessagesStorage . getInstance ( ) . getChat ( var )
var . release ( )
var . acquire ( )
MessagesController . getInstance ( ) . putChat ( var , true )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
var . setLayoutManager ( new LinearLayoutManager ( var , LinearLayoutManager . VERTICAL , false ) , LinearLayoutManager . VERTICAL , false )
if ( var == NotificationCenter . chatInfoDidLoaded )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
var . channel = MessagesController . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
if ( var . users . size ( ) != 200 = true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )
MessagesStorage . getInstance ( ) . updateChannelUsers ( var , var . participants )
if ( ! var . containsKey ( var . user_id ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
int var = UserConfig . getClientUserId ( )
if ( var . user_id == UserConfig . getClientUserId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( var ) , var )
var . var . inviter_id = UserConfig . getClientUserId ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )
var = new SearchAdapterHelper
var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . ChannelParticipant ) var ) . user_id )
var . setData ( MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id , null , null )
var = new AvatarUpdater
var = MessagesController . getInstance ( ) . getChat ( var )
final Semaphore var = new Semaphore ( 0 )
var = MessagesStorage . getInstance ( ) . getChat ( var )
var . release ( )
var . acquire ( )
MessagesController . getInstance ( ) . putChat ( var , true )
MessagesStorage . getInstance ( ) . loadChatInfo ( var , var , false , false )
var . acquire ( )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
if ( var . uploadingAvatar != null )
MessagesController . getInstance ( ) . updateChannelUserName ( var , var )
MessagesController . getInstance ( ) . changeChatTitle ( var , var . getText ( ) . toString )
MessagesController . getInstance ( ) . updateChannelAbout ( var , var . getText ( ) . toString , var )
MessagesController . getInstance ( ) . toogleChannelInvitesHistory ( var , var )
MessagesController . getInstance ( ) . toogleChannelSignatures ( var , var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , null )
var . setText ( MessagesController . getInstance ( ) . linkPrefix + "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) ) . getClientUserId ( ) , var , true )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var . channel = MessagesController . getInputChannel ( var )
var . channel = MessagesController . getInputChannel ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
MessagesController . getInstance ( ) . toogleChannelInvitesHistory ( var , var )
var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
MessagesController . setUserAdminRole ( var , var , var , var , getFragmentForAlert ( 1 ) )
MessagesController . setUserBannedRole ( var , var , var , var , getFragmentForAlert ( 1 ) )
MessagesController . setUserAdminRole ( var , var , new TLRPC . TL_channelAdminRights ( ) , var , getFragmentForAlert ( 0 ) )
MessagesController . setUserBannedRole ( var , var , var , var , getFragmentForAlert ( 0 ) )
var = MessagesController . getInstance ( ) . getChat ( var )
var = MessagesController . getInstance ( ) . getChat ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
MessagesController . getInstance ( ) . toogleChannelInvites ( var , var . democracy )
MessagesController . getInstance ( ) . putUser ( var , false )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , var , null )
var = var . creator || var
if ( var . user_id == UserConfig . getClientUserId ( ) )
final TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , var , null )
var . inviter_id = UserConfig . getClientUserId ( )
var . user_id = MessagesController . getInputUser ( var . user_id )
var . channel = MessagesController . getInputChannel ( var )
MessagesController . getInstance ( ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . loadFullChat ( var . id , 0 , true )
MessagesController . setUserAdminRole ( var , MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id , new TLRPC . TL_channelAdminRights ( ) , var . megagroup , ChannelUsersActivity . this )
var . channel = MessagesController . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
int var = UserConfig . getClientUserId ( )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
if ( var . id == UserConfig . getClientUserId ( ) )
var = ConnectionsManager . getInstance ( ) . getCurrentTime + 50000
if ( var . id == UserConfig . getClientUserId ( ) )
var = ConnectionsManager . getInstance ( ) . getCurrentTime + 50000
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
var = new SearchAdapterHelper
final ArrayList < TLRPC . TL_contact > var = new ArrayList
var . addAll ( ContactsController . getInstance ( ) . contacts )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
if ( var . id == UserConfig . getClientUserId ( var ) )
var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . ChannelParticipant ) var ) . user_id )
( ( SpannableStringBuilder ) var ) . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . kicked_by )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . promoted_by )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
var . thumb = var . getBitmap ( var )
var . thumb = var . getBitmap ( var )
if ( ! actionBar . isActionModeShowed ( var ) )
final Semaphore var = new Semaphore ( 0 )
var . release ( var )
var . acquire ( var )
MessagesController . getInstance ( var ) . putChat ( var , true )
MessagesController . getInstance ( var ) . startShortPoll ( var , false )
final Semaphore var = new Semaphore ( 0 )
var . release ( var )
var . acquire ( var )
MessagesController . getInstance ( var ) . putUser ( var , true )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )
var . release ( var )
var . acquire ( var )
MessagesController . getInstance ( var ) . putEncryptedChat ( var , true )
var = MessagesStorage . getInstance ( var ) . getUser ( var . user_id )
var . release ( var )
var . acquire ( var )
MessagesController . getInstance ( var ) . putUser ( var , true )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesRead )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . historyCleared )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesReadEncrypted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . removeAllMessagesFromDialog )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . screenshotTook )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileNewChunkAvailable )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didCreatedNewDeleteTask )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateMessageMedia )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedWebpages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedWebpagesInUpdates )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesReadContent )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . botKeyboardDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatSearchResultsAvailable )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatSearchResultsLoading )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didUpdatedMessagesViews )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatInfoCantLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didLoadedPinnedMessage )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . peerSettingsDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . newDraftReceived )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . channelRightsUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateMentionsCount )
BotQuery . loadBotKeyboard ( var )
MessagesController . getInstance ( var ) . loadPeerSettings ( var , var )
MessagesController . getInstance ( var ) . setLastCreatedDialogId ( var , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
Semaphore var = null
var = new Semaphore ( 0 )
MessagesController . getInstance ( var ) . loadChatInfo ( var . id , var , ChatObject . isChannel ( var ) )
var . acquire ( var )
BotQuery . loadBotInfo ( var , true , classGuid )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
BotQuery . loadBotInfo ( var . id , true , classGuid )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var . id )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . openedChatChanged , var , false )
SecretChatHelper . getInstance ( var ) . sendNotifyLayerMessage ( var , null )
MessagesController . getInstance ( var ) . setLastCreatedDialogId ( var , false )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesRead )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . historyCleared )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesReadEncrypted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . removeAllMessagesFromDialog )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . screenshotTook )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileNewChunkAvailable )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didCreatedNewDeleteTask )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateMessageMedia )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedWebpages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedWebpagesInUpdates )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesReadContent )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . botKeyboardDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatSearchResultsAvailable )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatSearchResultsLoading )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didUpdatedMessagesViews )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatInfoCantLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didLoadedPinnedMessage )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . peerSettingsDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . newDraftReceived )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . channelRightsUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateMentionsCount )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . openedChatChanged , var , true )
if ( Build . VERSION . SDK_INT >= 23 && ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture ) )
getParentActivity var . getWindow var . clearFlags ( WindowManager . LayoutParams . FLAG_SECURE )
MessagesController . getInstance ( var ) . cancelLoadFullUser ( var . id )
MessagesController . getInstance ( var ) . startShortPoll ( var . id , true )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( var ) . deleteUserFromChat ( ( int ) - var , MessagesController . getInstance ( var ) . getUser ( UserConfig . getClientUserId ( var ) ) . getClientUserId ( var ) , null )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
MessagesController . getInstance ( var ) . deleteDialog ( var , 1 )
AndroidUtilities . installShortcut ( var . var )
showReplyPanel ( true , var , null , null , false )
MessageObject var = var . getValue ( var )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , ! var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )
MessagesSearchQuery . searchMessagesInChat ( var . getText ( var ) . toString var , var , var , classGuid , 0 , var )
int var = var - var
var = ( var - var . getTextHeight ( var ) ) / 2
if ( var . getVisibility ( var ) != GONE )
var . layout ( 0 , var , var . getMeasuredWidth ( var ) , var + var . getTextHeight ( var ) )
var . setTextSize ( 18 )
var . setTypeface ( AndroidUtilities . getTypeface ( "" ) )
var . setText ( LocaleController . getString ( "" , R . string . Edit ) , R . string . Edit )
var . setGravity ( Gravity . LEFT )
var . setTextColor ( Theme . getColor ( Theme . key_actionBarActionModeDefaultIcon ) . key_actionBarActionModeDefaultIcon )
if ( var . admin_id == UserConfig . getClientUserId ( var ) var )
var = ( ( ChatMessageCell ) var ) . getBackgroundDrawableLeft var
var . clipRect ( var , var . getTop ( var ) , var . getRight ( var ) , var . getBottom ( var ) )
var . clipRect ( var . getLeft ( var ) , var . getTop ( var ) , var . getRight ( var ) , var )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )
if ( var . hasCaptionLayout ( var ) && ( var . flags & MessageObject . POSITION_FLAG_BOTTOM ) != 0 && ( var . flags & MessageObject . POSITION_FLAG_LEFT ) != 0 )
if ( var . hasCaptionLayout ( var ) && ( var . flags & MessageObject . POSITION_FLAG_BOTTOM ) != 0 && ( var . flags & MessageObject . POSITION_FLAG_LEFT ) != 0 )
var += ( var . maxY - var . minY ) * AndroidUtilities . dp ( 11 )
MessagesController . getInstance ( var ) . pinChannelMessage ( var , 0 , false )
MessagesController . getInstance ( var ) . blockUser ( var . id )
MessagesController . getInstance ( var ) . reportSpam ( var , var , var , var )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( var ) . deleteUserFromChat ( ( int ) - var , MessagesController . getInstance ( var ) . getUser ( UserConfig . getClientUserId ( var ) ) . getClientUserId ( var ) , null )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( var ) . hideReportSpam ( var , var , var )
var . addView ( var , LayoutHelper . createFrame ( 46 , 59 , Gravity . RIGHT | Gravity . BOTTOM , 0 , 0 , 7 , 5 ) , 59 , Gravity . RIGHT | Gravity . BOTTOM , 0 , 0 , 7 , 5 )
var . peer = MessagesController . getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( var ) . resetMentionsCount ( var , var )
MessagesStorage . getInstance ( var ) . markMessageAsMention ( var )
var . peer = MessagesController . getInputPeer ( ( int ) var )
var . width = var . w
var . height = var . h
if ( getParentActivity var == null || var . content_url == null )
Browser . openUrl ( getParentActivity var , var . content_url )
MessagesSearchQuery . searchMessagesInChat ( "" , var , var , classGuid , 0 , var )
var . setSpan ( new URLSpanUserMention ( "" + var . id , true ) + var . id , true , 0 , var . length ( var ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
SendMessagesHelper . getInstance ( var ) . sendMessage ( ( String ) var , var , var , null , false , null , null , null )
if ( ( var . type . equals ( "" ) && ( var . photo != null || var . content_url != null ) || var . type . equals ( "" ) && ( var . document != null || var . content_url != null ) || var . type . equals ( "" ) && ( var . document != null ) ) var )
var . addView ( var , LayoutHelper . createFrame ( 46 , 46 , Gravity . LEFT | Gravity . BOTTOM ) , 46 , Gravity . LEFT | Gravity . BOTTOM )
MessagesController . getInstance ( var ) . sendTyping ( var , 0 , classGuid )
var . setAllowNewMentions ( true )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
showReplyPanel ( false , null , null , var , true )
boolean var = StickerPreviewViewer . getInstance ( var ) . onInterceptTouchEvent ( var , var , 0 , null )
return StickerPreviewViewer . getInstance ( var ) . onTouch ( var , var , 0 , var , null )
MessagesSearchQuery . searchMessagesInChat ( null , var , var , classGuid , 1 , var )
MessagesSearchQuery . searchMessagesInChat ( null , var , var , classGuid , 2 , var )
MessagesController . getInstance ( var ) . loadMessages ( var , 30 , 0 , var , true , 0 , classGuid , 4 , 0 , ChatObject . isChannel ( var ) , var ++ )
MessagesController . getInstance ( var ) . unblockUser ( var . id )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )
MessagesController . getInstance ( var ) . unblockUser ( var . id )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )
MessagesController . getInstance ( var ) . addUserToChat ( var . id , UserConfig . getCurrentUser ( var ) , null , 0 , null , ChatActivity . this )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )
if ( var != null && Build . VERSION . SDK_INT >= 23 && ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture ) )
getParentActivity var . getWindow var . setFlags ( WindowManager . LayoutParams . FLAG_SECURE , WindowManager . LayoutParams . FLAG_SECURE )
if ( var . getParent ( var ) == null )
SearchQuery . increaseInlineRaiting ( var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
MessagesController . getInstance ( var ) . loadMessages ( var , 30 , 0 , var , true , 0 , classGuid , 4 , 0 , ChatObject . isChannel ( var ) , var ++ )
MessagesController . getInstance ( var ) . sendBotStart ( var , var . start_param )
if ( ! MessagesController . checkCanOpenChat ( var , ChatActivity . this ) )
SendMessagesHelper . prepareSendingMedia ( var , var , var , null , var == 4 , MediaController . getInstance ( var ) . isGroupPhotosEnabled var )
DraftQuery . cleanDraft ( var , true )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )
SendMessagesHelper . getInstance ( var ) . sendSticker ( var , var , var )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) . formatString ( "" , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name )
if ( var . participants_count > MessagesController . getInstance ( var ) . groupBigSize var )
DraftQuery . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingDocuments ( var , var , null , null , var , var , null )
DraftQuery . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingAudioDocuments ( var , var , var )
DraftQuery . cleanDraft ( var , true )
var . setType ( ContactsContract . CommonDataKinds . Phone . CONTENT_TYPE )
startActivityForResult ( var , 31 )
FileLog . var ( var )
if ( var != null && ( MessagesController . getInstance ( var ) . secretWebpagePreview == 0 || AndroidUtilities . getPeerLayerVersion ( var . layer ) < 46 ) )
showReplyPanel ( false , null , null , var , false )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( var != null && MessagesController . getInstance ( var ) . secretWebpagePreview == 2 )
MessagesController . getInstance ( var ) . secretWebpagePreview = 1
MessagesController . getInstance ( var ) . secretWebpagePreview = 0
showReplyPanel ( false , null , null , var , false )
ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , classGuid )
AlertsCreator . showSendMediaAlert ( SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var ) , var , this )
SendMessagesHelper . getInstance ( var ) . processForwardFromMyName ( var , var )
if ( var == null && var == null && var == null )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . messageOwner . to_id . channel_id )
var = MessagesController . getInstance ( var ) . getUser ( var )
var = MessagesController . getInstance ( var ) . getChat ( - var )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs2 , 80 )
if ( var == null )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 80 )
if ( var . isRoundVideo ( var ) var )
if ( var == null && var == null && var == null )
if ( var != null && ( var != null || var != null ) )
showReplyPanel ( true , var , var , null , false )
MessagesController . getInstance ( var ) . markMessageAsRead ( var , var . messageOwner . random_id , var . messageOwner . ttl )
var . messageOwner . destroyTime = var . messageOwner . ttl + ConnectionsManager . getInstance ( var ) . getCurrentTime var
MessagesController . getInstance ( var ) . loadMessages ( var , 30 , 0 , 0 , true , 0 , classGuid , 0 , 0 , ChatObject . isChannel ( var ) , var ++ )
if ( fragmentView == null )
var . setTranslationX ( var . getImageX ( var ) )
if ( var . eventId == 0 )
MessageObject var = var . getMessageObject ( var )
var . setTranslationX ( var . getImageX ( var ) )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , var )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , 0 )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )
if ( var != null && ! MessagesStorage . getInstance ( var ) . checkMessageId ( var , var ) )
DraftQuery . cleanDraft ( var , false )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )
if ( ! StickersQuery . isStickerPackInstalled ( var . id ) )
if ( ! StickersQuery . isStickerPackInstalled ( var . short_name ) )
if ( var . getDocumentName ( var ) . endsWith ( "" ) . endsWith ( "" ) . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )
if ( ! StickersQuery . isStickerPackInstalled ( var . short_name ) )
if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )
if ( var [ var ] . containsKey ( var . getId ( var ) ) var )
if ( ! StickersQuery . isStickerInFavorites ( var . getDocument ( var ) ) )
if ( ! var [ 0 ] . isEmpty var || ! var [ 1 ] . isEmpty var )
if ( ! MessagesController . isSupportId ( var . id ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( var ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( var ) . isLoadingContacts var ) )
if ( ! var . isEmpty ( var ) )
TLRPC . BotInfo var = var . getValue ( var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . id )
SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var , null , 0 )
DraftQuery . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingDocument ( var , var , null , null , var , var , null )
final ArrayList < Object > var = new ArrayList var ( var )
var = 180
FileLog . var ( var )
sendMedia ( ( MediaController . PhotoEntry ) var . get ( 0 ) , null )
AndroidUtilities . addMediaToGallery ( var )
var = null
SendMessagesHelper . prepareSendingPhoto ( null , var , var , var , null , null , null , 0 )
DraftQuery . cleanDraft ( var , true )
FileLog . d ( "" + var )
Uri var = var . getData ( var )
var = AndroidUtilities . getPath ( var )
FileLog . d ( "" + var )
AndroidUtilities . addMediaToGallery ( var )
var = null
DraftQuery . cleanDraft ( var , true )
Uri var = var . getData ( var )
Cursor var = null
while ( var . moveToNext ( var ) )
var . phone = var
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , null , null )
DraftQuery . cleanDraft ( var , true )
if ( var != null && ! var . isClosed ( var ) )
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int var )
int var = UserConfig . getClientUserId ( var )
if ( var != 0 )
forwardEndReached [ var ] = var == 0 && var == 0
MessagesQuery . loadReplyMessagesForMessages ( var , var )
HashMap < Long , MessageObject . GroupedMessages > var = null
HashMap < Long , MessageObject . GroupedMessages > var = null
if ( var [ var ] . containsKey ( var . getId ( var ) ) )
var . setIsRead ( var )
MessageObject . GroupedMessages var = var . get ( var . messageOwner . grouped_id )
if ( var . messageOwner . grouped_id != var . messageOwner . grouped_id )
if ( var == null || ! var . containsKey ( var . getGroupId ( var ) ) )
var = new HashMap var ( var )
var = new HashMap var ( var )
MessageObject var = new MessageObject ( var , null , false )
MessageObject var = new MessageObject ( var , null , false )
MessageObject . GroupedMessages var = var . getValue ( var )
if ( var != null && var != null && var . containsKey ( var . getKey ( var ) ) )
if ( var == 3 && var != 0 && var )
if ( var && var . size ( var ) > 0 )
final int var = var . get ( 0 ) . getId var
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . var )
int var = UserConfig . getClientUserId ( var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . var )
NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . loadFullChat ( var , 0 , true )
if ( var . size ( var ) > 0 )
HashMap < Long , MessageObject . GroupedMessages > var = null
if ( BuildVars . DEBUG_VERSION )
if ( var . type < 0 || var [ 0 ] . containsKey ( var . getId ( var ) ) )
var = new HashMap var ( var )
NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . loadFullChat ( var , 0 , true )
MessageObject var = new MessageObject ( var , null , false )
MessageObject var = new MessageObject ( var , null , false )
MessagesController . getInstance ( var ) . reloadWebPages ( var , var )
MessageObject . GroupedMessages var = var . getValue ( var )
var . getValue ( var ) . calculate var
if ( var - var > 0 )
var . updateRowWithMessageObject ( var )
MessagesController . getInstance ( var ) . loadFullChat ( var . var , 0 , true )
SparseArray < Long > var = ( SparseArray < Long > ) var [ 1 ]
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
MessagesStorage . getInstance ( var ) . updateChannelPinnedMessage ( var . var , 0 )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
MessagesStorage . getInstance ( var ) . updateChannelPinnedMessage ( var , 0 )
var = new HashMap var ( var )
MessageObject . GroupedMessages var = var . getValue ( var )
if ( ! var . equals ( var ) && var [ 0 ] . containsKey ( var ) )
MessageObject var = var [ 0 ] . remove ( var )
if ( var . getGroupId ( var ) != 0 && var . grouped_id != 0 )
var . put ( var . grouped_id , var )
MessagesQuery . loadReplyMessagesForMessages ( var , var )
NotificationsController . getInstance ( var ) . playOutChatSound var
MessagesController . getInstance ( var ) . loadChannelParticipants ( var . var )
SendMessagesHelper . getInstance ( var ) . setCurrentChatInfo ( var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
BotQuery . loadBotInfo ( var . var , true , classGuid )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var . var )
if ( var != null )
if ( var . isRoundVideo ( var ) )
var . updateButtonState ( false )
var . updateButtonState ( false )
HashMap < Long , MessageObject . GroupedMessages > var = null
if ( ! var && var . messageOwner . media instanceof TLRPC . TL_messageMediaWebPage = true )
var = new HashMap var ( var )
var . notifyItemChanged ( var . messagesStartRow + var )
MessageObject . GroupedMessages var = var . getValue ( var )
HashMap < Long , TLRPC . WebPage > var = ( HashMap < Long , TLRPC . WebPage > ) var [ 0 ]
showReplyPanel ( ! ( var instanceof TLRPC . TL_webPageEmpty ) , null , null , var , false )
var = new MessageObject ( var , null , false )
showReplyPanel ( true , var , null , null , false )
DraftQuery . saveDraft ( var , var , null , null , false )
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int var )
NotificationCenter . getInstance ( var ) . setAnimationInProgress ( true )
MessagesController . getInstance ( var ) . loadFullUser ( var , classGuid , false )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )
var . add ( R . id . menu_groupbolditalic , R . id . menu_regular , 8 , LocaleController . getString ( "" , R . string . Regular ) , R . string . Regular )
if ( ! MessagesController . getInstance ( var ) . isDialogMuted ( var ) var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
MessagesQuery . loadPinnedMessage ( var . id , var . pinned_msg_id , true )
var = ! ( var . admin_id == UserConfig . getClientUserId ( var ) || ContactsController . getInstance ( var ) . isLoadingContacts var ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . id )
if ( var != null && ! ( var instanceof TLRPC . TL_encryptedChat ) || MessagesController . isSupportId ( var . id ) || UserObject . isDeleted ( var ) || ContactsController . getInstance ( var ) . isLoadingContacts var || ( ! TextUtils . isEmpty ( var . phone ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) != null && ( ContactsController . getInstance ( var ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( var ) . isLoadingContacts var ) ) var )
AndroidUtilities . cancelRunOnUIThread ( var )
ArrayList < TLRPC . MessageEntity > var = MessagesQuery . getEntities ( var )
MessagesController . getInstance ( var ) . cancelTyping ( 0 , var )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . var var
if ( var != null )
MessagesQuery . sortEntities ( var . entities )
var . setSpan ( new URLSpanUserMention ( "" + var , true ) + var , true , var . offset + var , var . offset + var + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var = new MessageObject ( var , MessagesController . getInstance ( var ) . getUsers var , false )
showReplyPanel ( true , var , null , null , false )
MediaController . getInstance ( var ) . setLastVisibleMessageIds ( var , var , var , var , var , var )
MediaController . getInstance ( var ) . setLastVisibleMessageIds ( var . getOpenTime ( var ) , var . getCloseTime ( var ) , var , null , null , var . getId ( var ) )
var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )
var = ! var . isSendError ( var ) && var . getDialogId ( var ) == var && ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && var . isOut ( var ) && ( var - var . messageOwner . date ) <= 2 * 24 * 60 * 60
MessageObject var = var . getValue ( var )
var = MessagesController . getInstance ( var ) . getUser ( var )
var . user_id = MessagesController . getInputUser ( var )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )
if ( var != null && var . id != UserConfig . getClientUserId ( var ) && ! var . bot || var != null )
var = ! var . isSendError ( var ) && ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && ( var . isOut ( var ) || var != null && ( var . creator || var . admin && var . admins_enabled ) ) && ( var - var . messageOwner . date ) <= 2 * 24 * 60 * 60
if ( var . isOut ( var ) || var != null && ( var . creator || var . admin && var . admins_enabled ) var )
if ( ! var && ( var - var . messageOwner . date ) <= 2 * 24 * 60 * 60 = true )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )
MessagesController . getInstance ( var ) . deleteUserFromChat ( var . id , var , var )
var . user_id = MessagesController . getInputUser ( var )
MessagesController . getInstance ( var ) . deleteUserChannelHistory ( var , var , 0 )
if ( var || var < 2 || var == 20 || var . isSecretPhoto ( var ) || var . isLiveLocation ( var ) )
if ( ! var . isSecretPhoto ( var ) )
if ( ! var . isSecretPhoto ( var ) )
if ( StickersQuery . canAddStickerToFavorites ( var ) )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . media . user_id )
if ( var != null && var . id != UserConfig . getClientUserId ( var ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null )
if ( var == 9 )
if ( ! StickersQuery . isStickerInFavorites ( var . getDocument ( var ) ) var )
if ( ! var . isSecretPhoto ( var ) && ! var . isLiveLocation ( var ) )
var . setOnItemLongClickListener ( null )
var . setEditingMessageObject ( var , ! var . isMediaEmpty ( var ) )
var . setAllowNewMentions ( false )
var . getItem ( var ) . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )
var . peer = MessagesController . getInputPeer ( ( int ) var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var . messageOwner . from_id )
if ( var . messageOwner . media != null && var . messageOwner . media . caption != null )
var += var . messageOwner . media . caption
if ( ! SendMessagesHelper . getInstance ( var ) . retrySendMessage ( var . var . get ( var ) , false ) = false )
if ( SendMessagesHelper . getInstance ( var ) . retrySendMessage ( var , false ) var )
if ( var . getName ( var ) . endsWith ( "" ) var )
if ( LocaleController . getInstance ( var ) . applyLanguageFile ( var ) var )
showReplyPanel ( true , var , null , null , false )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )
MessagesController . getInstance ( var ) . pinChannelMessage ( var , 0 , false )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , true )
if ( var == null && var [ 0 ] . isEmpty var && var [ 1 ] . isEmpty var )
if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( var ) || var != null var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var . toString ( var ) , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )
if ( var == var || var [ var ] . containsKey ( var . getId ( var ) ) var )
if ( var != null && var . getVisibility ( var ) == View . VISIBLE && MessagesSearchQuery . isMessageFound ( var . getId ( var ) , var . getDialogId ( var ) == var ) && MessagesSearchQuery . getLastSearchQuery ( var ) != null var )
var . setHighlightedText ( MessagesSearchQuery . getLastSearchQuery ( var ) )
if ( var > 5 * 60 var )
MessagesSearchQuery . searchMessagesInChat ( var , var , var , classGuid , 0 , var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , null , null )
DraftQuery . cleanDraft ( var , true )
DraftQuery . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingPhoto ( var . imagePath , null , var , var , var . caption , var . stickers , null , var . ttl )
DraftQuery . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingPhoto ( var . path , null , var , var , var . caption , var . stickers , null , var . ttl )
DraftQuery . cleanDraft ( var , true )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . var var . putBoolean ( "" + var , false ) . commit var
if ( ! var [ var ] . containsKey ( var . var . get ( var ) . getId var ) )
if ( MessagesController . checkCanOpenChat ( var , ChatActivity . this , var . getMessageObject ( var ) ) )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )
if ( var != null && var . id != UserConfig . getClientUserId ( var ) )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( Utilities . parseInt ( ( ( URLSpanUserMention ) var ) . getURL var ) ( URLSpanUserMention ) var ) . getURL var )
MessagesController . openByUserName ( var . substring ( 1 ) , ChatActivity . this , 0 )
if ( var . startsWith ( "" ) )
if ( ! var && var . getFieldText ( var ) == null )
if ( var . getDocumentName ( var ) . endsWith ( "" ) )
return MessagesController . getInstance ( var ) . isChannelAdmin ( var . id , var )
if ( var != UserConfig . getClientUserId ( var ) )
MessagesController . openByUserName ( var . substring ( 1 ) , ChatActivity . this , 0 )
if ( var . startsWith ( "" ) )
if ( var . getFieldText ( var ) == null )
if ( var instanceof ChatMessageCell && MediaController . getInstance ( var ) . canDownloadMedia ( var ) )
if ( var != null && var . getVisibility ( var ) == View . VISIBLE && MessagesSearchQuery . isMessageFound ( var . getId ( var ) , var . getDialogId ( var ) == var ) && MessagesSearchQuery . getLastSearchQuery ( var ) != null var )
var . setHighlightedText ( MessagesSearchQuery . getLastSearchQuery ( var ) )
var . setText ( LocaleController . formatPluralString ( "" , var ) , var )
if ( var == var || var [ var ] . containsKey ( var . getId ( var ) ) var )
notifyItemChanged ( var + var )
var = MessagesController . getInstance ( ) . getChat ( var )
var = MessagesController . getInstance ( ) . getChat ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
int var = UserConfig . getClientUserId ( )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id , var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . ChatParticipant ) var ) . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
if ( ! MessagesController . checkCanOpenChat ( var , CommonGroupsActivity . this ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
var . user_id = MessagesController . getInputUser ( var )
MessagesController . getInstance ( ) . putChats ( var . var , false )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
public AdminLogFilterAlert ( Context var , TLRPC . TL_channelAdminLogEventsFilter var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )
var = new HashMap ( var )
var = new HashMap
var = new HashMap
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )
var = new CheckBoxCell ( var , true )
var . setChecked ( var == null || var . containsKey ( var ) , false )
var . setUser ( MessagesController . getInstance ( ) . getUser ( var ) , var == null || var . containsKey ( var ) , var != getItemCount - 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needShowAlert , 1 )
if ( var instanceof TLRPC . TL_messages_sendMessage || var instanceof TLRPC . TL_messages_sendMedia || var instanceof TLRPC . TL_geochats_sendMessage || var instanceof TLRPC . TL_messages_sendBroadcast || var instanceof TLRPC . TL_messages_sendInlineBotResult || var instanceof TLRPC . TL_geochats_sendMedia || var instanceof TLRPC . TL_messages_forwardMessages )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needShowAlert , 0 )
if ( var instanceof TLRPC . TL_account_confirmPhone )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . FloodWait ) , R . string . FloodWait )
showSimpleAlert ( var , var . text )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )
if ( var . text . contains ( "" ) )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )
Toast var = Toast . makeText ( var . getParentActivity ( ) , var , Toast . LENGTH_LONG )
AlertDialog . Builder var = new AlertDialog . Builder ( var . getParentActivity ( ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationsController . getInstance ( ) . removeNotificationsForDialog ( var )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , var )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )
MessagesController . openByUserName ( "" , var , 1 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
selected [ 0 ] ++
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( selected [ 0 ] == 0 var )
selected [ 0 ] --
var . setTitle ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SecretChatHelper . getInstance ( ) . sendTTLMessage ( var , null )
MessagesStorage . getInstance ( ) . updateEncryptedChatTTL ( var )
var = MediaController . getInstance ( ) . generateObserverTag
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . musicDidLoaded )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
MediaController . getInstance ( ) . toggleRepeatMode
if ( var == null )
if ( var . size ( ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( ) || var != null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
var . showReplyPanel ( true , null , var , null , false )
var = MessagesController . getInstance ( var ) . getUser ( var )
var = MessagesController . getInstance ( var ) . getChat ( - var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var
if ( var != null && var . var != UserConfig . getClientUserId ( var ) || var != null )
CheckBoxCell var = new CheckBoxCell ( var , true )
var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var . getDialogId ( var ) >> 32 ) . getDialogId ( var ) >> 32 )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . musicDidLoaded )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
if ( MediaController . getInstance ( ) . isShuffleMusic )
if ( MediaController . getInstance ( ) . isPlayOrderReversed )
int var = MediaController . getInstance ( ) . getRepeatMode
if ( ! var . exists ( ) )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
if ( var . eventId != 0 )
TLRPC . Document var = var . getDocument ( )
for ( int var = 0 ; var < var . attributes . size ( ) ; var ++ )
if ( Build . VERSION . SDK_INT >= 17 )
if ( Build . VERSION . SDK_INT >= 17 )
if ( var != null && var && ! var && ! AndroidUtilities . usingHardwareInput && ! AndroidUtilities . isInMultiwindow )
var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )
if ( var != null && var . participants_count > MessagesController . getInstance ( ) . groupBigSize = "" = "" )
MediaController . getInstance ( ) . startRecording ( var , var )
if ( var = var . getBounds ( ) . contains ( var , var ) )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordStartError )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordStopped )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordProgressChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . audioDidSent )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . audioRouteChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
if ( var != null && ( var == null || var . getVisibility ( ) != VISIBLE ) && ! StickersQuery . getUnreadStickerSets ( ) . isEmpty && var != null )
SendMessagesHelper . prepareSendingDocument ( null , null , var . getContentUri ( ) , "" , var , var , var )
SendMessagesHelper . prepareSendingPhoto ( null , var . getContentUri ( ) , var , var , null , null , var , 0 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
var = MessagesController . getInstance ( ) . getUser ( ( int ) var )
if ( var != null && ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires < var && ! MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) ) )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit . putBoolean ( "" + var , var ) . commit
NotificationsController . updateServerNotificationsSettings ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , true , true , false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordStartError )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordStopped )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordProgressChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . audioDidSent )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . audioRouteChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )
CameraController . getInstance ( ) . initCamera
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( ( int ) var < 0 = "" )
var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )
if ( var != null && var . participants_count > MessagesController . getInstance ( ) . groupBigSize = "" = "" )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , null , null , 0 )
ArrayList < TLRPC . MessageEntity > var = MessagesQuery . getEntities ( var )
int var = ( int ) Math . ceil ( var . length ( ) / 4096.0f )
ArrayList < TLRPC . MessageEntity > var = MessagesQuery . getEntities ( var )
SendMessagesHelper . getInstance ( ) . sendMessage ( String . format ( Locale . US , "" , var , var . var ) . US , "" , var , var . var , var , var , null , false , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , null , false , null , null , null )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
if ( var . var != null )
var [ 0 ] = new InputFilter . LengthFilter ( 4096 )
if ( var . messageText != null )
MessagesQuery . sortEntities ( var )
var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , true ) + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , true , var . offset + var , var . offset + var . length + var , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
setFieldText ( Emoji . replaceEmoji ( var , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false ) , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false )
if ( ! var . isFocused ( ) )
if ( var != null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . var , var , var , null , false , null , null , null )
SendMessagesHelper . getInstance ( ) . sendCurrentLocation ( var , var )
SendMessagesHelper . getInstance ( ) . sendCallback ( true , var , var , var )
DraftQuery . saveDraft ( var , "" + var . username + "" + var . query , null , null , true )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , false )
var . presentFragment ( new StickersActivity ( StickersQuery . TYPE_IMAGE ) . TYPE_IMAGE )
SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var )
StickersQuery . addRecentGif ( var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 )
StickersQuery . removeStickersSet ( var , var . set , 2 , var , false )
StickersQuery . removeStickersSet ( var , var . set , 0 , var , false )
( ( FrameLayout ) var ) . setForeground ( new ScrimDrawable )
SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
var = getContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getInt ( "" , 0 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
StickersQuery . addRecentGif ( var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 )
if ( var != var && var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit
if ( ( var . width != AndroidUtilities . displaySize . x || var . var != var ) && ! var )
MessagesController . getInstance ( ) . sendTyping ( var , 2 , 0 )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )
var = new MessageObject ( var , null , false )
SendMessagesHelper . getInstance ( ) . sendCurrentLocation ( var , var )
if ( var == null || var && ! var . areThereAnyStickers ( ) )
( ( FrameLayout ) var ) . setForeground ( new ScrimDrawable )
( ( FrameLayout ) var ) . setForeground ( null )
( ( FrameLayout ) var ) . setForeground ( null )
var = new Paint ( Paint . ANTI_ALIAS_FLAG )
var . setStyle ( Paint . Style . STROKE )
var . setStrokeWidth ( AndroidUtilities . dp ( 2 ) )
var . drawPath ( var , var )
var . thumb = var . imageReceiver . getBitmap ( var )
return var . getImageView ( var ) . getImageReceiver var . getBitmap var
if ( ( var = var . addToSelectedPhotos ( var , - 1 ) ) == - 1 var )
var = var . selectedPhotosOrder . indexOf ( var . imageId )
MediaController . PhotoEntry var = MediaController . allMediaAlbumEntry . photos . get ( var )
var . addToSelectedPhotos ( var , - 1 )
return var . selectedPhotos . size ( var )
return var . selectedPhotos
return var != null && var . allowGroupPhotos ( var )
Integer var = ( Integer ) var . getTag ( var )
MediaController . PhotoEntry var = MediaController . allMediaAlbumEntry . photos . get ( var )
var . setNum ( var . selectedPhotosOrder . indexOf ( var . imageId ) . imageId )
addView ( var , LayoutHelper . createFrame ( 64 , 64 , Gravity . CENTER_HORIZONTAL | Gravity . TOP ) , 64 , Gravity . CENTER_HORIZONTAL | Gravity . TOP )
SearchQuery . removeInline ( var . id )
var . didSelectBot ( MessagesController . getInstance ( var ) . getUser ( SearchQuery . inlineBots . get ( ( Integer ) getTag var ) Integer ) getTag var . peer . user_id ) . inlineBots . get ( ( Integer ) getTag var ) Integer ) getTag var . peer . user_id )
public ChatAttachAlert ( Context var , final ChatActivity var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var . putBoolean ( "" , true ) . commit var
var . setAdapter ( var = new PhotoAttachAdapter ( var ) )
PhotoViewer . getInstance ( var ) . openPhotoForSelect ( var , var , 0 , var , var )
openCamera var
var . add ( var . createHolder ( var ) )
if ( var || var || var == null || var . getParentActivity ( var ) == null || var == null )
var = new ArrayList var ( var )
var . sendMedia ( ( MediaController . PhotoEntry ) var . get ( 0 ) , var )
closeCamera ( false )
var = AndroidUtilities . generatePicturePath ( var )
var . add ( new MediaController . PhotoEntry ( 0 , 0 , 0 , var . getAbsolutePath ( var ) , var , false ) , 0 , 0 , var . getAbsolutePath ( var ) , var , false )
if ( var && var != null && var != null )
AndroidUtilities . addMediaToGallery ( var . getAbsolutePath ( var ) )
var . sendMedia ( ( MediaController . PhotoEntry ) var . get ( 0 ) , null )
var = null
var = new CameraView ( var . getParentActivity ( var ) , false )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
int var = var . selectedPhotos . size ( var )
var . imageView . setPadding ( 0 , AndroidUtilities . dp ( 4 ) , 0 , 0 )
var . imageView . setImageResource ( R . drawable . attach_send2 )
if ( MediaController . allMediaAlbumEntry != null )
for ( int var = 0 ; var < Math . min ( 100 , MediaController . allMediaAlbumEntry . photos . size ( var ) ) ; var ++ )
MediaController . PhotoEntry var = MediaController . allMediaAlbumEntry . photos . get ( var )
var . clearSelectedPhotos ( var )
return var . selectedPhotos
return var . selectedPhotosOrder
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . var )
if ( ! MediaController . getInstance ( var ) . canInAppCamera var = false )
if ( Build . VERSION . SDK_INT >= 23 var )
if ( var . getParentActivity ( var ) . checkSelfPermission ( Manifest . permission . CAMERA ) != PackageManager . PERMISSION_GRANTED var )
CameraController . getInstance ( var ) . initCamera var
CameraController . getInstance ( var ) . initCamera var
if ( var + var >= SearchQuery . inlineBots . size ( var ) var )
var . setUser ( MessagesController . getInstance ( var ) . getUser ( SearchQuery . inlineBots . get ( var + var ) + var . peer . user_id ) . inlineBots . get ( var + var ) + var . peer . user_id )
if ( var . containsKey ( var . imageId ) var )
var . remove ( var . imageId )
int var = 0
for ( int var = 0 ; var < var . size ( var ) ; var ++ )
if ( var -- )
var . setPhotoEntry ( var , var == MediaController . allMediaAlbumEntry . photos . size ( var ) - 1 )
if ( var && var == 0 )
if ( var ++ )
if ( MediaController . allMediaAlbumEntry != null )
var += MediaController . allMediaAlbumEntry . photos . size ( var )
if ( var && var == 0 )
if ( ! var || var && Build . VERSION . SDK_INT >= 18 && ! AndroidUtilities . isTablet ( var ) && Build . VERSION . SDK_INT < 26 = var )
TLRPC . Chat var = var . getCurrentChat ( var )
MediaActivity var = new MediaActivity ( var )
Integer var = MessagesController . getInstance ( ) . printingStringsTypes . get ( var . getDialogId ( ) )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var . getDialogId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . id )
var = LocaleController . formatUserStatus ( var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
if ( var != null && var . status != null && ( var . status . expires > var || var . id == UserConfig . getClientUserId ( ) ) && var . status . expires > 10000 ++ )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )
if ( getVisibility != VISIBLE )
if ( var != null )
var . drawBitmap ( var , var , var )
var = new BitmapShader ( var , Shader . TileMode . CLAMP , Shader . TileMode . CLAMP )
var = getBounds . centerX - var / 2 + var
var = getBounds . centerY - var / 2 + var
if ( length == 0 && var != null && ( var || var != 0 ) )
URLSpanUserMention spansMentions = var . getSpans ( var , var , URLSpanUserMention . class )
if ( spansMentions != null && spansMentions . length > 0 )
TypefaceSpan var = spans [ var ]
var . loadDataWithBaseURL ( "" , String . format ( var , var , var ) , var , var , "" , "" , "" )
int var = var . length ( )
if ( var > 2 && var . charAt ( var . length ( ) - 2 ) == '\u200D' > 3 && var . charAt ( var . length ( ) - 3 ) == '\u200D' )
if ( var > 3 && var . charAt ( var . length ( ) - 3 ) == '\u200D' )
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )
StickersQuery . checkFeaturedStickers ( var )
StickersQuery . removeRecentGif ( var )
var = StickersQuery . getRecentGifs ( var )
var . setClickable ( false )
var . setFocusable ( false )
getContext var . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var . putInt ( "" , var ) . commit var
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE )
long var = getContext var . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getLong ( "" + var . id , - 1 )
TLRPC . TL_messages_stickerSet var = StickersQuery . getGroupStickerSetById ( var . stickerset )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
var = StickersQuery . getRecentStickers ( StickersQuery . TYPE_IMAGE )
var = StickersQuery . getRecentGifs ( var )
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , true , true , false )
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , false , true , false )
var = StickersQuery . getRecentGifs ( var )
var = StickersQuery . getRecentStickers ( StickersQuery . TYPE_IMAGE )
var = StickersQuery . getRecentStickers ( StickersQuery . TYPE_FAVE )
StickersQuery . markFaturedStickersByIdAsRead ( var . set . id )
boolean var = var . containsKey ( var . set . id )
if ( ( Integer ) var [ 0 ] == StickersQuery . TYPE_IMAGE )
if ( var || var == StickersQuery . TYPE_IMAGE || var == StickersQuery . TYPE_FAVE )
if ( var != StickersQuery . getFeaturesStickersHashWithoutUnread ( var ) = false )
StickersQuery . markFaturedStickersByIdAsRead ( var . set . id )
boolean var = var . containsKey ( var . set . id )
var = var / AndroidUtilities . dp ( 72 )
var . setSpanCount ( Math . max ( 1 , var ) , var )
ArrayList < TLRPC . StickerSetCovered > var = StickersQuery . getFeaturedStickerSets ( var )
var = StickersQuery . getFeaturesStickersHashWithoutUnread ( var )
if ( var == null )
if ( var == null var )
for ( int var = - 2 ; var < var . size ( var ) ; var ++ )
if ( var == 6 && ! StickersQuery . getUnreadStickerSets ( var ) . isEmpty var && var != null )
float var = 0
var += ( var . width / var . height ) * var
int var = 0 , var
var = ( float ) Math . floor ( var / 3.0f )
var = ( float ) Math . floor ( var * 2.0f / 3.0f )
int var
var . put ( var , var )
var += var . size ( )
int solution var = new int [ ( ] var - 1 ) * ( var - 1 )
tmpTable [ var ] = var [ 0 ]
int var = Integer . MAX_VALUE
if ( var == 0 || var < var )
if ( var <= 0 )
if ( var >= var || var == 1 )
var . add ( 0 , var )
if ( var == null )
return var . get ( var ) != null
FileLog . e ( "" )
FileLog . e ( "" )
LocationController . getInstance ( ) . removeSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )
long var
openSharingLocation ( LocationController . getInstance ( ) . getSharingLocationInfo ( var ) )
if ( var == null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , null )
var = ! LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )
var = LocationController . getInstance ( ) . isSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsCacheChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didStartedCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didEndedCall )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsCacheChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didStartedCall )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didEndedCall )
var = ! LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )
var = LocationController . getInstance ( ) . isSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) ) , "" , - AndroidUtilities . dp2 ( 36 ) , ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) , 0 ) , "" , - AndroidUtilities . dp2 ( 36 ) , 0 , ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )
ArrayList < LocationController . SharingLocationInfo > var = LocationController . getInstance ( ) . sharingLocationsUI
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
var = LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )
ArrayList < TLRPC . Message > var = LocationController . getInstance ( ) . locationsCache . get ( var )
int var = UserConfig . getClientUserId ( )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
var = MessagesController . getInstance ( ) . getUser ( var . from_id )
if ( LocationController . getInstance ( ) . isSharingLocation ( var ) )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) ) , "" , - AndroidUtilities . dp2 ( 36 ) , ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) , 0 ) , "" , - AndroidUtilities . dp2 ( 36 ) , 0 , ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )
if ( ! var )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) ) , "" , - AndroidUtilities . dp2 ( 36 ) , ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )
setTranslationY ( 0 )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) , 0 ) , "" , - AndroidUtilities . dp2 ( 36 ) , 0 , ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )
int var = var . save ( )
if ( var < 0 )
var . clipRect ( 0 , ( int ) - var , var . getMeasuredWidth ( ) , AndroidUtilities . dp2 ( 39 ) )
float var = AndroidUtilities . dp ( 10 ) * var
float var = AndroidUtilities . dp ( 5 ) * var
var . setAlpha ( int ( 255 * var ) * var )
var = new File ( FileLoader . getInstance ( var ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , UserConfig . lastLocalId + "" )
UserConfig . lastLocalId --
UserConfig . saveConfig ( false )
FileLog . e ( "" )
FileLog . e ( "" )
FileLog . e ( "" )
var . estimatedSize = long ( var * ( var . estimatedDuration / var ) )
var . estimatedSize = var
FileLog . e ( "" )
FileLog . e ( "" )
int var = Math . min ( var , var )
float var = var / ( float ) var
FileLog . e ( "" )
var . startRecording ( var , var , var , EGL14 . eglGetCurrentContext ( var ) )
FileLog . e ( "" + GLUtils . getEGLErrorString ( var . eglGetError ( var ) ) . eglGetError ( var ) )
long var
var = System . nanoTime ( var )
new Thread ( this , "" ) . start var
FileLog . var ( "" + var )
var . estimatedSize = var
new Thread ( var ) . start var
var = new MP4Builder var . createMovie ( var )
Vibrator var = ( Vibrator ) ApplicationLoader . applicationContext . getSystemService ( Context . VIBRATOR_SERVICE )
FileLoader . getInstance ( var ) . uploadFile ( var . toString ( var ) , false , false , 1 , ConnectionsManager . FileTypeVideo )
MessagesController . getInstance ( ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
if ( MessagesController . checkCanOpenChat ( var , var ) )
AlertsCreator . processError ( var , var , var )
final Semaphore var = new Semaphore ( 0 )
var . release ( var )
var . acquire ( var )
var = ( LayoutParams ) var . getLayoutParams ( )
var . height = LayoutHelper . WRAP_CONTENT
var . bottomMargin = AndroidUtilities . dp ( 62 )
if ( var . length ( ) == 4 && UserConfig . passcodeType == 0 )
if ( var . lenght ( ) == 4 )
if ( UserConfig . passcodeType == 0 . passcodeType == 1 )
if ( UserConfig . passcodeType == 1 )
if ( ! UserConfig . checkPasscode ( var ) )
UserConfig . appLocked = false
UserConfig . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( UserConfig . passcodeType == 1 )
if ( var != null )
if ( Build . VERSION . SDK_INT >= 23 && var != null && UserConfig . useFingerprint && ! ApplicationLoader . mainInterfacePaused )
if ( UserConfig . passcodeType == 1 )
if ( var != null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( UserConfig . passcodeType == 0 . passcodeType == 1 )
if ( UserConfig . passcodeType == 1 )
if ( UserConfig . passcodeType == 1 && ( AndroidUtilities . isTablet ( ) || getContext . getResources . getConfiguration . orientation != Configuration . ORIENTATION_LANDSCAPE ) )
final Semaphore var = new Semaphore ( 0 )
var . release ( var )
var . acquire ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
public MiniControlsView ( Context var )
if ( var != null )
if ( ! NotificationCenter . getInstance ( ) . isAnimationInProgress  )
var = MediaController . getInstance ( ) . generateObserverTag
var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
MessagesController . getInstance ( ) . markMessageContentAsRead ( var )
FileLoader . getInstance ( ) . loadFile ( var . getDocument ( ) , true , 0 )
FileLoader . getInstance ( ) . cancelLoadFile ( var . getDocument ( ) )
FileLoader . getInstance ( ) . loadFile ( var . getDocument ( ) , true , 0 )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )
if ( ! FileLoader . getInstance ( ) . isLoadingFile ( var ) )
var += var / 300.0f
var = new SparseArray
var = new SparseArray
var = new SparseArray
Integer var = var . get ( var )
if ( var != null )
Integer var = var . get ( var )
if ( var != null )
Integer var = var . get ( var )
if ( var != null )
if ( var != null )
if ( var != - 1 && var . onItemClick ( var , var ) )
if ( var != null )
var . setProgress ( var / ( float ) var . getItemCount ( ) )
int var = Math . abs ( var . findLastVisibleItemPosition ( ) - var ) + 1
var . setTextColor ( 0xffffffff )
if ( var - var <= var . getX ( ) && var . getX ( ) <= var + var + var && var . getY ( ) >= 0 && var . getY ( ) <= getMeasuredHeight )
if ( var > 0 )
var . channel = MessagesController . getInputChannel ( var . get ( 0 ) . messageOwner . to_id . channel_id )
if ( var . isEmpty ( ) && ( var || var != null ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . getText ( ) . toString , var . getKey ( ) , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . getText ( ) . toString , var . getKey ( ) , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . getKey ( ) , null , null , true , null , null , null )
if ( var . containsKey ( var . id ) )
if ( ! DialogsActivity . dialogsLoaded )
MessagesController . getInstance ( ) . loadDialogs ( 0 , 100 , true )
ContactsController . getInstance ( ) . checkInviteText
DialogsActivity . dialogsLoaded = true
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )
if ( var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )
for ( int var = 0 ; var < MessagesController . getInstance ( ) . dialogsForward . size ( ) ; var ++ )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogsForward . get ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
var . setDialog ( ( int ) var . id , var . containsKey ( var . id ) . id , null )
HashMap < Long , DialogSearchResult > var = new HashMap var ( var )
if ( var . containsKey ( ( long ) var ) )
MessagesController . getInstance ( ) . putUser ( var , true )
MessagesController . getInstance ( ) . putChat ( var , true )
var . setDialog ( ( int ) var . dialog . id , var . containsKey ( var . dialog . id ) . dialog . id , var . name )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )
int var = AndroidUtilities . dp ( 48 + 8 ) + AndroidUtilities . dp ( 56 ) + 1 + LocationController . getInstance ( ) . sharingLocationsUI . size ( ) * AndroidUtilities . dp ( 54 )
if ( var < 0 || var >= LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )
var . didSelectLocation ( LocationController . getInstance ( ) . sharingLocationsUI . get ( var ) )
LocationController . getInstance ( ) . removeAllLocationSharings
if ( LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )  )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )
return LocationController . getInstance ( ) . sharingLocationsUI . size ( ) + 1
var . setDialog ( LocationController . getInstance ( ) . sharingLocationsUI . get ( var - 1 ) - 1 )
var . setText ( LocaleController . formatString ( "" , R . string . SharingLiveLocationTitle , LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) ) , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) ) , R . string . SharingLiveLocationTitle , LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) ) , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )
StaticLayout . Builder var = StaticLayout . Builder . obtain ( var , 0 , var . length ( ) , var , var ) . setAlignment ( var ) . setLineSpacing ( var , var ) . setIncludePad ( var ) . setEllipsize ( null ) . setEllipsizedWidth ( var ) . setBreakStrategy ( Layout . BREAK_STRATEGY_HIGH_QUALITY ) . setHyphenationFrequency ( Layout . HYPHENATION_FREQUENCY_NORMAL )
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )
StickersQuery . checkStickers ( StickersQuery . TYPE_MASK )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_MASK , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
if ( var == StickersQuery . TYPE_IMAGE var )
var = StickersQuery . TYPE_MASK
var = StickersQuery . TYPE_IMAGE
recentStickers [ var ] = StickersQuery . getRecentStickers ( var )
if ( var == StickersQuery . TYPE_IMAGE var )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )
StickersQuery . addRecentSticker ( var , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
recentStickers [ var ] = StickersQuery . getRecentStickers ( var )
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , false , true , false )
StickersQuery . loadRecents ( StickersQuery . TYPE_MASK , false , true , false )
StickersQuery . loadRecents ( StickersQuery . TYPE_FAVE , false , true , false )
recentStickers [ var ] = StickersQuery . getRecentStickers ( var )
AlertsCreator . processError ( var , var , var )
var = StickersQuery . getStickerSetByName ( var . short_name )
var = StickersQuery . getStickerSetById ( var . id )
var . setText ( Emoji . replaceEmoji ( StickersQuery . getEmojiForSticker ( var . id ) . id , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 30 ) , false ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 30 ) , false )
boolean var = StickersQuery . isStickerInFavorites ( var )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , var . getTag ( var ) != null )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
MessagesController . openByUserName ( getURL var , var , 1 )
if ( var . set == null || ! StickersQuery . isStickerPackInstalled ( var . set . id ) var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needReloadArchivedStickers )
StickersQuery . removeStickersSet ( getContext var , var . set , 1 , var , true )
StickersQuery . removeStickersSet ( getContext var , var . set , 0 , var , true )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var = StickersQuery . TYPE_MASK
var = StickersQuery . TYPE_IMAGE
int var = int ( 0xff + ( 0xa0 - 0xff ) * var )
int var = int ( 0xb0 + ( 0xd6 - 0xb0 ) * var )
int var = int ( 0xad + ( 0xfa - 0xad ) * var )
var . setColor ( 0xff000000 | ( ( var & 0xff ) << 16 ) | ( ( var & 0xff ) << 8 ) | ( var & 0xff ) )
var = int ( 0xdb + ( 0x44 - 0xdb ) * var )
var = int ( 0x58 + ( 0xa8 - 0x58 ) * var )
var = int ( 0x5c + ( 0xea - 0x5c ) * var )
var . setColor ( 0xff000000 | ( ( var & 0xff ) << 16 ) | ( ( var & 0xff ) << 8 ) | ( var & 0xff ) )
var . var ( var , var - AndroidUtilities . dp ( 12 ) , var - AndroidUtilities . dp ( 11 ) , null )
var . setColor ( 0xffffffff )
if ( var == null )
if ( ! var . fragmentsStack . isEmpty ( ) )
if ( ! NotificationCenter . getInstance ( ) . isAnimationInProgress  )
public URLSpanBotCommand ( String var , boolean var )
public URLSpanMono ( CharSequence var , int var , int var , boolean var )
var . setTextSize ( AndroidUtilities . dp ( MessagesController . getInstance ( ) . fontSize - 1 ) . getInstance ( ) . fontSize - 1 )
var . setTextSize ( AndroidUtilities . dp ( MessagesController . getInstance ( ) . fontSize - 1 ) . getInstance ( ) . fontSize - 1 )
public URLSpanUserMention ( String var , boolean var )
var = ExoPlayerFactory . newSimpleInstance ( ApplicationLoader . applicationContext , var , new DefaultLoadControl , null , DefaultRenderersFactory . EXTENSION_RENDERER_MODE_OFF )
var = ExoPlayerFactory . newSimpleInstance ( ApplicationLoader . applicationContext , var , new DefaultLoadControl , null , DefaultRenderersFactory . EXTENSION_RENDERER_MODE_OFF )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . random . nextInt ( ) + "" )
var . setBufferedProgress ( int ( var . getBufferedPosition ( ) / 1000 ) . getBufferedPosition ( ) / 1000 , var . getBufferedPercentage ( ) )
var . release ( var )
var . acquire ( var )
var . release ( )
if ( var != null isCancelled  )
if ( var == null || ! var . checkInlinePermissons ( ) || var || var || ! var )
if ( var != null && ! BuildVars . DEBUG_PRIVATE_VERSION )
if ( ConnectionsManager . getInstance ( ) . getConnectionState != ConnectionsManager . ConnectionStateConnected )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )
SharedPreferences var = var . getSharedPreferences ( "" , Context . MODE_PRIVATE )
showRateAlert ( var , null , var . call_id , var )
final CheckBoxCell var = new CheckBoxCell ( var , true )
MessagesController . getInstance ( ) . processUpdates ( var , false )
SendMessagesHelper . prepareSendingDocument ( var . getAbsolutePath ( ) , var . getAbsolutePath ( ) , null , "" , var , null , null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )
var . remove ( "" ) . apply
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
ContactsController . getInstance ( ) . var ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , ( long ) var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
var . setText ( LocaleController . formatUserStatus ( var ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )
ContactsController . getInstance ( ) . checkInviteText
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
MessagesController . getInstance ( ) . putUsers ( var , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )
if ( var != null && var . containsKey ( var . id ) )
SecretChatHelper . getInstance ( ) . startSecretChat ( getParentActivity , var )
if ( MessagesController . checkCanOpenChat ( var , ContactsActivity . this ) )
if ( ! MessagesController . isFeatureEnabled ( "" , ContactsActivity . this ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( var != null && var . containsKey ( var . id ) )
SecretChatHelper . getInstance ( ) . startSecretChat ( getParentActivity , var )
if ( MessagesController . checkCanOpenChat ( var , ContactsActivity . this ) )
var . putExtra ( "" , ContactsController . getInstance ( ) . getInviteText ( 1 ) )
if ( var . shouldShowRequestPermissionRationale ( Manifest . permission . READ_CONTACTS )  )
var . setMessage ( LocaleController . getString ( "" , R . string . PermissionContacts ) , R . string . PermissionContacts )
if ( var == null || var . checkSelfPermission ( Manifest . permission . READ_CONTACTS ) == PackageManager . PERMISSION_GRANTED )
ContactsController . getInstance ( ) . forceImportContacts
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
MessagesController . getInstance ( ) . convertToMegaGroup ( getParentActivity , var )
if ( var == MediaController . AUTODOWNLOAD_MASK_GIF )
var = MediaController . getInstance ( ) . var [ 0 ]
var = MediaController . getInstance ( ) . var [ 1 ]
var = MediaController . getInstance ( ) . var [ 2 ]
var = MediaController . getInstance ( ) . var [ 3 ]
var = MediaController . getInstance ( ) . var [ 0 ]
var = MediaController . getInstance ( ) . var [ 1 ]
var = MediaController . getInstance ( ) . var [ 2 ]
var = MediaController . getInstance ( ) . var [ 3 ]
var = MediaController . getInstance ( ) . var [ 0 ]
var = MediaController . getInstance ( ) . var [ 1 ]
var = MediaController . getInstance ( ) . var [ 2 ]
var = MediaController . getInstance ( ) . var [ 2 ]
var = MediaController . getInstance ( ) . mobileMaxFileSize [ MediaController ] . maskToIndex ( var )
var = MediaController . getInstance ( ) . wifiMaxFileSize [ MediaController ] . maskToIndex ( var )
var = MediaController . getInstance ( ) . roamingMaxFileSize [ MediaController ] . maskToIndex ( var )
if ( var != MediaController . AUTODOWNLOAD_MASK_PHOTO )
if ( var != MediaController . AUTODOWNLOAD_MASK_PHOTO )
if ( var != MediaController . AUTODOWNLOAD_MASK_PHOTO )
if ( var == MediaController . AUTODOWNLOAD_MASK_AUDIO )
if ( var == MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE )
if ( var == MediaController . AUTODOWNLOAD_MASK_VIDEO )
if ( var == MediaController . AUTODOWNLOAD_MASK_DOCUMENT )
if ( var == MediaController . AUTODOWNLOAD_MASK_MUSIC )
if ( var == MediaController . AUTODOWNLOAD_MASK_GIF )
MediaController . getInstance ( ) . var [ 0 ] = var
MediaController . getInstance ( ) . var [ 1 ] = var
MediaController . getInstance ( ) . var [ 2 ] = var
MediaController . getInstance ( ) . var [ 3 ] = var
MediaController . getInstance ( ) . var [ 0 ] = var
MediaController . getInstance ( ) . var [ 1 ] = var
MediaController . getInstance ( ) . var [ 2 ] = var
MediaController . getInstance ( ) . var [ 3 ] = var
MediaController . getInstance ( ) . var [ 0 ] = var
MediaController . getInstance ( ) . var [ 1 ] = var
MediaController . getInstance ( ) . var [ 2 ] = var
MediaController . getInstance ( ) . var [ 3 ] = var
MediaController . getInstance ( ) . wifiMaxFileSize [ MediaController ] . maskToIndex ( var ) = var
MediaController . getInstance ( ) . roamingMaxFileSize [ MediaController ] . maskToIndex ( var ) = var
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit
var . putInt ( "" + MediaController . maskToIndex ( var ) , var )
var . putInt ( "" + MediaController . maskToIndex ( var ) , var )
MediaController . getInstance ( ) . checkAutodownloadSettings
if ( ! MediaController . getInstance ( ) . globalAutodownloadEnabled )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_PHOTO ) . AUTODOWNLOAD_MASK_PHOTO )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_AUDIO ) . AUTODOWNLOAD_MASK_AUDIO )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE ) . AUTODOWNLOAD_MASK_VIDEOMESSAGE )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_VIDEO ) . AUTODOWNLOAD_MASK_VIDEO )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_DOCUMENT ) . AUTODOWNLOAD_MASK_DOCUMENT )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_MUSIC ) . AUTODOWNLOAD_MASK_MUSIC )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_GIF ) . AUTODOWNLOAD_MASK_GIF )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit
MediaController var = MediaController . getInstance ( )
var . mobileDataDownloadMask [ var ] = MediaController . AUTODOWNLOAD_MASK_PHOTO | MediaController . AUTODOWNLOAD_MASK_AUDIO | MediaController . AUTODOWNLOAD_MASK_MUSIC | MediaController . AUTODOWNLOAD_MASK_GIF | MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE
var . wifiDownloadMask [ var ] = MediaController . AUTODOWNLOAD_MASK_PHOTO | MediaController . AUTODOWNLOAD_MASK_AUDIO | MediaController . AUTODOWNLOAD_MASK_MUSIC | MediaController . AUTODOWNLOAD_MASK_GIF | MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE
var . roamingDownloadMask [ var ] = 0
if ( ! MediaController . getInstance ( ) . globalAutodownloadEnabled )
MediaController . getInstance ( ) . globalAutodownloadEnabled = true
var . putBoolean ( "" , MediaController . getInstance ( ) . globalAutodownloadEnabled )
MediaController . getInstance ( ) . checkAutodownloadSettings
MediaController . getInstance ( ) . globalAutodownloadEnabled = ! MediaController . getInstance ( ) . globalAutodownloadEnabled
var . edit ( ) . putBoolean ( "" , MediaController . getInstance ( ) . globalAutodownloadEnabled ) . commit
var . setChecked ( MediaController . getInstance ( ) . globalAutodownloadEnabled )
presentFragment ( new ProxySettingsActivity )
MediaController . getInstance ( ) . checkAutodownloadSettings
var . setEnabled ( MediaController . getInstance ( ) . globalAutodownloadEnabled , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . VoipUseLessData ) , R . string . VoipUseLessData , var , false )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . AutoDownloadMedia ) , R . string . AutoDownloadMedia , MediaController . getInstance ( ) . globalAutodownloadEnabled , true )
var . setEnabled ( MediaController . getInstance ( ) . globalAutodownloadEnabled , null )
var . setChecked ( MediaController . getInstance ( ) . globalAutodownloadEnabled )
return MediaController . getInstance ( ) . globalAutodownloadEnabled
return var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var
if ( var == var || var == var || var == var || var == var == var || var == var || var == var || var == var == var )
if ( var == var || var == var || var == var || var == var )
StatsController . getInstance ( ) . resetStats ( var )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . OutgoingCalls ) , R . string . OutgoingCalls , String . format ( "" , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . IncomingCalls ) , R . string . IncomingCalls , String . format ( "" , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var , true )
int var = StatsController . getInstance ( ) . getCallsTotalTime ( var )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . CountSent ) , R . string . CountSent , String . format ( "" , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . CountReceived ) , R . string . CountReceived , String . format ( "" , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . BytesSent ) , R . string . BytesSent , AndroidUtilities . formatFileSize ( StatsController . getInstance ( ) . getSentBytesCount ( var , var ) , var ) . getInstance ( ) . getSentBytesCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . BytesReceived ) , R . string . BytesReceived , AndroidUtilities . formatFileSize ( StatsController . getInstance ( ) . getReceivedBytesCount ( var , var ) , var ) . getInstance ( ) . getReceivedBytesCount ( var , var ) , var , var != var )
var . setText ( LocaleController . formatString ( "" , R . string . NetworkUsageSince , LocaleController . getInstance ( ) . formatterStats . format ( StatsController . getInstance ( ) . getResetStatsDate ( var ) ) . getInstance ( ) . getResetStatsDate ( var ) ) , R . string . NetworkUsageSince , LocaleController . getInstance ( ) . formatterStats . format ( StatsController . getInstance ( ) . getResetStatsDate ( var ) ) . getInstance ( ) . getResetStatsDate ( var ) )
if ( getArguments != null )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . openedChatChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . needReloadRecentDialogsSearch )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . reloadHints )
if ( ! var )
MessagesController . getInstance ( ) . loadDialogs ( 0 , 100 , true )
ContactsController . getInstance ( ) . checkInviteText
MessagesController . getInstance ( ) . loadPinnedDialogs ( 0 , null )
StickersQuery . loadRecents ( StickersQuery . TYPE_FAVE , false , true , false )
StickersQuery . checkFeaturedStickers ( )
var = true
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . openedChatChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . needReloadRecentDialogsSearch )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . reloadHints )
ActionBarMenu var = actionBar . createMenu ( )
var . setEmptyView ( null )
if ( var . getAdapter ( ) != var )
var . notifyDataSetChanged ( )
String var = var . getText ( ) . toString
if ( var . length ( ) != 0 || var != null && var . hasRecentRearch ( ) )
if ( BuildVars . DEBUG_VERSION )
UserConfig . appLocked = ! UserConfig . appLocked
UserConfig . saveConfig ( false )
int var = getKeyboardHeight
ArrayList < TLRPC . User > var = new ArrayList
if ( var . isGlobalSearch ( var ) )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
if ( MessagesController . checkCanOpenChat ( var , DialogsActivity . this ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
final TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
if ( MessagesController . getInstance ( var ) . pinDialog ( var , ! var , null , 0 ) && ! var )
MessagesController . getInstance ( var ) . deleteDialog ( var , 1 )
MessagesController . getInstance ( var ) . deleteDialog ( var , 2 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats , var )
var = MessagesController . getInstance ( ) . getUser ( var )
if ( MessagesController . getInstance ( ) . pinDialog ( var , ! var , null , 0 ) && ! var )
if ( var != 1 )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( ( int ) - var )
if ( var != null && ChatObject . isNotInChat ( var ) )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( ) . blockUser ( ( int ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats , var )
MessagesController . getInstance ( ) . deleteDialog ( var , 1 )
int var = Math . abs ( var . findLastVisibleItemPosition ( ) - var ) + 1
if ( var > 0 && var . findLastVisibleItemPosition ( ) == var - 1 && ! var . isMessagesSearchEndReached ( ) )
if ( var . findLastVisibleItemPosition ( ) >= getDialogsArray . size - 10 )
if ( var || ! MessagesController . getInstance ( ) . serverDialogsEndReached )
MessagesController . getInstance ( ) . loadDialogs ( - 1 , 100 , var )
var = var . getTop ( )
if ( var && var )
Bundle var = new Bundle
if ( var != null )
if ( MessagesController . checkCanOpenChat ( var , DialogsActivity . this ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
SearchQuery . removePeer ( var )
var . setVisibility ( View . GONE )
var . setEmptyView ( var )
var . addView ( var = new FragmentContextView ( var , this , true ) , this , true , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )
var . addView ( var = new FragmentContextView ( var , this , false ) , this , false , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )
AnimatorSet var = new AnimatorSet
if ( var . checkSelfPermission ( Manifest . permission . READ_CONTACTS ) != PackageManager . PERMISSION_GRANTED )
if ( var != null && var == var && getParentActivity != null )
ContactsController . getInstance ( ) . forceImportContacts
if ( var . isDataSetChanged ( ) )
if ( MessagesController . getInstance ( ) . loadingDialogs && MessagesController . getInstance ( ) . dialogs . isEmpty ( ) )
if ( var == NotificationCenter . appDidLogout = false )
var = false
if ( var == NotificationCenter . contactsDidLoaded )
return MessagesController . getInstance ( ) . dialogsGroupsOnly
return MessagesController . getInstance ( ) . dialogsForward
if ( UserConfig . passcodeHash . length ( ) != 0 && ! var )
if ( UserConfig . appLocked )
var . start ( )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )
if ( ChatObject . isChannel ( var ) && ! var . megagroup && ( var || ! ChatObject . isCanWriteToChannel ( - ( int ) var ) ) )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
if ( var != null )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
var = var . getChildCount ( )
return new ThemeDescription
ArrayList < String > var = new ArrayList
var . addAll ( var . keySet ( ) )
FileLog . e ( var )
StickersQuery . checkFeaturedStickers ( )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stickersDidLoaded )
ArrayList < Long > var = StickersQuery . getUnreadStickerSets ( )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )
final TLRPC . StickerSetCovered var = StickersQuery . getFeaturedStickerSets ( ) . get ( var )
var = StickersQuery . getUnreadStickerSets ( )
ArrayList < TLRPC . StickerSetCovered > var = StickersQuery . getFeaturedStickerSets ( )
StickersQuery . markFaturedStickersAsRead ( true )
ArrayList < TLRPC . StickerSetCovered > var = StickersQuery . getFeaturedStickerSets ( )
boolean var = var . containsKey ( var . set . id )
if ( var . containsKey ( var . set . id ) )
StickersQuery . removeStickersSet ( getParentActivity , var . set , 2 , FeaturedStickersActivity . this , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidCreated )
if ( ContactsController . getInstance ( ) . isLoadingContacts )
if ( var = var . containsKey ( var . id ) )
if ( var == ChatObject . CHAT_TYPE_CHAT && var . size ( ) == MessagesController . getInstance ( ) . maxGroupCount )
MessagesController . getInstance ( ) . putUser ( var , ! var )
var . setChecked ( var . containsKey ( var . id ) . id , true )
TLRPC . InputUser var = MessagesController . getInputUser ( MessagesController . getInstance ( ) . getUser ( var ) )
MessagesController . getInstance ( ) . addUsersToChannel ( var , var , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
if ( ! var || var . isEmpty ( ) )
var . addAll ( var . keySet ( ) )
if ( var . isEmpty ( ) )
ArrayList < TLRPC . TL_contact > var = ContactsController . getInstance ( ) . var
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )
var = new SearchAdapterHelper
( ( SpannableStringBuilder ) var ) . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setChecked ( var . containsKey ( var . id ) . id , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidFailCreate )
if ( MessagesController . getInstance ( ) . getUser ( var ) == null )
final Semaphore var = new Semaphore ( 0 )
var . addAll ( MessagesStorage . getInstance ( ) . getUsers ( var ) )
var . release ( )
var . acquire ( )
MessagesController . getInstance ( ) . putUser ( var , true )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidFailCreate )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
if ( var . uploadingAvatar != null = true )
var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , null , var , GroupCreateFinalActivity . this )
MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , null , var , GroupCreateFinalActivity . this )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var - 1 ) - 1 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
MessagesController . getInstance ( ) . loadFullChat ( var , classGuid , true )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
var = MessagesController . getInstance ( ) . getExportedInvite ( var )
if ( ChatObject . isChannel ( var ) )
var . channel = MessagesController . getInputChannel ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . groupStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . groupStickersDidLoaded )
var . setText ( MessagesController . getInstance ( ) . linkPrefix + "" )
var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE ) . get ( var - var )
if ( ( Integer ) var [ 0 ] == StickersQuery . TYPE_IMAGE )
var = StickersQuery . getGroupStickerSetById ( var . stickerset )
var = StickersQuery . getGroupStickerSetById ( var . stickerset )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
TLRPC . TL_messages_stickerSet var = StickersQuery . getStickerSetByName ( var )
var . channel = MessagesController . getInputChannel ( var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit . remove ( "" + var . id ) . commit
StickersQuery . putGroupStickerSet ( var )
MessagesStorage . getInstance ( ) . updateChatInfo ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE )
MessagesController . openByUserName ( "" , GroupStickersActivity . this , 1 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
ConnectionsManager . getInstance ( ) . switchBackend
LocaleController . getInstance ( ) . applyLanguage ( var , true , false )
LocaleController . getInstance ( ) . loadRemoteLanguages
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsImported )
if ( ! UserConfig . contactsReimported )
ContactsController . getInstance ( ) . forceImportContacts
UserConfig . contactsReimported = true
UserConfig . saveConfig ( false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsImported )
if ( ContactsController . getInstance ( ) . isLoadingContacts )
String var = ContactsController . getInstance ( ) . getInviteText ( 0 )
var . putExtra ( "" , ContactsController . getInstance ( ) . getInviteText ( var ) )
var . setBackgroundDrawable ( Theme . createRoundRectDrawable ( AndroidUtilities . dp ( 10 ) , 0xffffffff ) . dp ( 10 ) , 0xffffffff )
var = new ArrayList ( ContactsController . getInstance ( ) . var )
LocaleController . getInstance ( ) . loadRemoteLanguages
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )
LocaleController . getInstance ( ) . applyLanguage ( var , true , false , false , true )
if ( LocaleController . getInstance ( ) . deleteLanguage ( var ) )
NativeCrashManager . handleDumpFiles ( this )
if ( ! UserConfig . isClientActivated ( ) )
if ( Math . abs ( var - System . currentTimeMillis ( ) ) >= 60 * 2 * 1000 && var != null && ! var )
if ( UserConfig . passcodeHash . length ( ) > 0 && ! UserConfig . allowScreenCapture )
if ( UserConfig . passcodeHash . length ( ) != 0 && UserConfig . appLocked )
UserConfig . lastPauseTime = ConnectionsManager . getInstance ( ) . getCurrentTime
if ( ! MessagesController . isFeatureEnabled ( "" , var . fragmentsStack . get ( var . fragmentsStack . size ( ) - 1 ) . fragmentsStack . size ( ) - 1 ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . putInt ( "" , UserConfig . getClientUserId ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeOtherAppActivities , this )
var = ConnectionsManager . getInstance ( ) . getConnectionState
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeOtherAppActivities )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . needShowAlert )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . wasUnableToFindCurrentLocation )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . reloadInterface )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . openArticle )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . hasNewContactsToImport )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetNewTheme )
if ( ! UserConfig . isClientActivated ( ) )
FileLog . var ( "" + AndroidUtilities . displaySize . y )
UserConfig . appLocked = true
if ( PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )
UserConfig . isWaitingForPasscodeEnter = true
UserConfig . isWaitingForPasscodeEnter = false
if ( ! var && ( AndroidUtilities . needShowPasscode ( true ) || UserConfig . isWaitingForPasscodeEnter ) )
UserConfig . saveConfig ( false )
if ( UserConfig . isClientActivated ( ) && ( var & Intent . FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY ) == 0 )
if ( var != null && var . getAction ( ) != null && ! var )
if ( var != null && var . equals ( ContactsContract . Contacts . CONTENT_VCARD_TYPE ) )
VcardData var = null
while ( ( var = var . readLine ( ) ) != null )
String var = null
var . name = var . name . substring ( 0 , var . name . length ( ) - 1 )
byte var = AndroidUtilities . decodeQuotedPrintable ( var . name . getBytes ( ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
VcardData var = var . get ( var )
if ( var . name != null && ! var . phones . isEmpty ( ) )
var = new ArrayList
String var = var . phones . get ( var )
TLRPC . User var = new TLRPC . TL_userContact_old2 ( )
if ( var != null && var . length ( ) > 0 = var )
if ( var . getAction ( ) . equals ( Intent . ACTION_SEND_MULTIPLE ) )
String var = var . getType ( )
SendMessagesHelper . SendingMediaInfo var = new SendMessagesHelper . SendingMediaInfo ( )
if ( var != null || var != null || var != null || var != null || var != null || instantView != null )
if ( var . isEmpty ( ) || MessagesController . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )
if ( ! AndroidUtilities . isTablet ( ) )
if ( var == 0 )
if ( var != null )
if ( PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )
var . presentFragment ( new SettingsActivity , false , true , true )
var . presentFragment ( new ContactsActivity ( var ) , false , true , true )
if ( ! UserConfig . isClientActivated ( ) )
var . addFragmentToStack ( new LoginActivity )
if ( ! UserConfig . isClientActivated ( ) )
var . showLastFragment ( )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , false , true )
var . id . bot_id = MessagesController . getInputUser ( var . users . get ( 0 ) )
SendMessagesHelper . getInstance ( ) . sendGame ( MessagesController . getInputPeer ( ( int ) var ) int ) var , var , 0 , 0 )
var . presentFragment ( var , var , true , true )
SecretMediaViewer . getInstance ( ) . closePhoto ( false , false )
if ( PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . addUserToChat ( - ( int ) var , var , null , 0 , var , null )
var . presentFragment ( new ChatActivity ( var ) , true , false , true )
if ( var == null || MessagesController . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . putChat ( var . chat , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , false , true )
if ( var . isEmpty ( ) || MessagesController . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
runLinkRequest ( var , var , var , var , var , var , var , var , var , var , 1 )
MessagesController . getInstance ( ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
if ( var . isEmpty ( ) || MessagesController . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
if ( MessagesController . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
DraftQuery . saveDraft ( var , var , null , null , true )
var . presentFragment ( new ChatActivity ( var ) , true , false , true )
if ( var != 0 )
final int var = var
if ( var != null && var == var )
FileLog . var ( "" , var )
long var = var . get ( 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )
ChatActivity var = new ChatActivity ( var )
SendMessagesHelper . prepareSendingMedia ( var , var , null , null , false , false )
SendMessagesHelper . prepareSendingDocuments ( var , var , var , var , var , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , null )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeOtherAppActivities )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . needShowAlert )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . wasUnableToFindCurrentLocation )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . reloadInterface )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . openArticle )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . hasNewContactsToImport )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewTheme )
if ( UserConfig . passcodeHash . length ( ) != 0 && UserConfig . lastPauseTime != 0 )
UserConfig . lastPauseTime = 0
UserConfig . saveConfig ( false )
if ( var == 3 || var == 4 || var == 5 || var == 19 || var == 20 == 2 )
if ( MediaController . getInstance ( ) . canInAppCamera )
CameraController . getInstance ( ) . initCamera
if ( var == 19 || var == 20 = false )
if ( var == 19 || var == 20 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . locationPermissionGranted )
UserConfig . lastAppPauseTime = System . currentTimeMillis ( )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )
if ( PhotoViewer . getInstance ( ) . isVisible )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )
if ( PhotoViewer . getInstance ( ) . isVisible )
if ( var != 2 )
MessagesController . openByUserName ( "" , var . get ( var . size ( ) - 1 ) . size ( ) - 1 , 1 )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . getDialogId ( ) , var , null , null )
if ( UserConfig . passcodeHash . length ( ) > 0 && ! UserConfig . allowScreenCapture )
rebuildAllFragments ( true )
ContactsController . getInstance ( ) . syncPhoneBookByAlert ( var , var , var , false )
ContactsController . getInstance ( ) . syncPhoneBookByAlert ( var , var , var , true )
ContactsController . getInstance ( ) . syncPhoneBookByAlert ( var , var , var , true )
if ( ! UserConfig . isClientActivated ( ) )
File var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE )
if ( UserConfig . passcodeHash . length ( ) != 0 )
UserConfig . lastPauseTime = ConnectionsManager . getInstance ( ) . getCurrentTime
FileLog . e ( "" )
FileLog . e ( "" )
if ( UserConfig . appLocked . autoLockIn != 0 )
if ( UserConfig . autoLockIn != 0 )
AndroidUtilities . runOnUIThread ( var , ( long ) UserConfig . autoLockIn * 1000 + 1000 )
UserConfig . lastPauseTime = 0
UserConfig . saveConfig ( false )
if ( UserConfig . lastPauseTime != 0 )
UserConfig . lastPauseTime = 0
UserConfig . saveConfig ( false )
String var = null
if ( var == ConnectionsManager . ConnectionStateConnecting )
if ( ! var . isEmpty ( ) && var . get ( var . size ( ) - 1 ) instanceof ProxySettingsActivity )
if ( ! var . isEmpty ( ) && var . get ( var . size ( ) - 1 ) instanceof ProxySettingsActivity )
presentFragment ( new ProxySettingsActivity )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . proxySettingsChanged )
var . showDialog ( var . create ( ) )
var . setTitleOverlayText ( var , var , var )
if ( PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )
if ( PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )
if ( var == KeyEvent . KEYCODE_MENU && ! UserConfig . isWaitingForPasscodeEnter )
if ( ArticleViewer . getInstance ( ) . isVisible )
var . presentFragment ( var , var , var , false )
var . presentFragment ( var , var , true , false )
var . presentFragment ( var , var , var , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . locationPermissionGranted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . locationPermissionGranted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . replaceMessagesObjects )
var . searchGooglePlacesWithQuery ( null , var )
var . geo . lat = var . getLatitude ( )
var . geo . _long = var . getLongitude ( )
if ( LocationController . getInstance ( ) . isSharingLocation ( var ) )
var = MessagesController . getInstance ( ) . getUser ( ( int ) var )
var . geo . lat = var . getLatitude ( )
var . geo . _long = var . getLongitude ( )
MapsInitializer . initialize ( getParentActivity )
var . setPadding ( 0 , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )
var . user = MessagesController . getInstance ( ) . getUser ( var . object . from_id )
var . user = MessagesController . getInstance ( ) . getUser ( var )
var . chat = MessagesController . getInstance ( ) . getChat ( - var )
var . id = - var
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )
if ( var . id == UserConfig . getClientUserId ( ) && var != null && var . object . id == var . mid && var != null )
LocationController . getInstance ( ) . setGoogleMapLocation ( var , var )
var . setPadding ( 0 , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )
var . setPadding ( 0 , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )
LiveLocation var = var . get ( UserConfig . getClientUserId ( ) )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )
var . searchGooglePlacesWithQuery ( null , var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime
ArrayList < TLRPC . Message > var = LocationController . getInstance ( ) . locationsCache . get ( var . getDialogId ( ) )
var . peer = MessagesController . getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )
LocationController . getInstance ( ) . locationsCache . put ( var , var . var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
selectCountry ( var )
var . setText ( var )
if ( var == 1 == 2 && ! BuildVars . DEBUG_VERSION && ! var . getText ( ) . toString . equals ( "" ) )
if ( var == 2 && ! BuildVars . DEBUG_VERSION && ! var . getText ( ) . toString . equals ( "" ) )
if ( var || var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentSmsCode , var ) , R . string . SentSmsCode , var )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallCode , var ) , R . string . SentCallCode , var )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallOnly , var ) , R . string . SentCallOnly , var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
if ( var == 3 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
MessagesController . getInstance ( ) . cleanup
UserConfig . setCurrentUser ( var . user )
UserConfig . saveConfig ( true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )
MessagesController . getInstance ( ) . putUser ( var . user , false )
ContactsController . getInstance ( ) . checkAppAccount
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
if ( var == 2 == 3 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
if ( var != null && var != 3 )
var . putInt ( "" , ConnectionsManager . getInstance ( ) . getCurrentTime )
TLRPC . TL_auth_authorization var = ( TLRPC . TL_auth_authorization ) var
MessagesController . getInstance ( ) . cleanup
UserConfig . saveConfig ( true )
ConnectionsManager . getInstance ( ) . updateDcSettings
if ( Math . abs ( ConnectionsManager . getInstance ( ) . getCurrentTime - var ) < var )
int var = Math . max ( 0 , var - ( ConnectionsManager . getInstance ( ) . getCurrentTime - var ) )
var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) . formatString ( "" , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var )
TLRPC . TL_auth_authorization var = ( TLRPC . TL_auth_authorization ) var
var . setGravity ( Gravity . BOTTOM | Gravity . CENTER_VERTICAL )
final TLRPC . TL_auth_authorization var = ( TLRPC . TL_auth_authorization ) var
UserConfig . saveConfig ( true )
if ( var == null || var == null || var != 0 )
int var = var . getChildCount ( )
View var = var . getChildAt ( var )
var . parentView = var
var . thumb = var . imageReceiver . getBitmap ( var )
if ( var [ var ] . containsKey ( var . getId ( var ) ) )
public MediaActivity ( Bundle var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . mediaDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageReceivedByServer )
SharedMediaQuery . loadMedia ( var , 50 , 0 , SharedMediaQuery . MEDIA_PHOTOVIDEO , true , classGuid )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . mediaDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )
int var = var . getChildCount ( var )
View var = var . getChildAt ( var )
var = MessagesController . getInstance ( var ) . getUser ( var )
var = MessagesController . getInstance ( var ) . getChat ( - var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var
if ( var != null && var . var != UserConfig . getClientUserId ( var ) || var != null )
MessageObject var = var . getValue ( var )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )
var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
MessageObject var = var . getValue ( var )
if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( var ) || var != null var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var . toString ( var ) , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
var . showReplyPanel ( true , null , var , null , false )
var . setVisibility ( View . VISIBLE )
if ( var == 3 )
if ( var == 4 )
var = new ActionBarMenuItem ( var , var , 0 , 0 )
var . setSubMenuOpenSide ( 1 )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . DocumentsTitle ) , R . string . DocumentsTitle )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . LinksTitle ) , R . string . LinksTitle )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . AudioTitle ) , R . string . AudioTitle )
TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
var . toggleSubMenu ( var )
var . setSingleLine ( true )
var . setLines ( 1 )
var . setMaxLines ( 1 )
var = var . getResources ( var ) . getDrawable ( R . drawable . ic_arrow_drop_down ) . mutate var
var . setCompoundDrawablePadding ( AndroidUtilities . dp ( 4 ) )
final ActionBarMenu var = actionBar . createActionMode ( var )
if ( var != null )
var = var . findFirstVisibleItemPosition ( var )
if ( var != var . getItemCount ( var ) - 1 var )
RecyclerListView . Holder var = ( RecyclerListView . Holder ) var . findViewHolderForAdapterPosition ( var )
var = new RecyclerListView ( var )
var . setClipToPadding ( false )
var . setSectionsType ( 2 )
if ( var == 3 && var instanceof SharedLinkCell )
if ( var != 0 && var + var > var - 2 && ! sharedMediaData [ var ] . loading )
var = SharedMediaQuery . MEDIA_PHOTOVIDEO
if ( var == 1 )
var = SharedMediaQuery . MEDIA_FILE
if ( var == 2 )
var = SharedMediaQuery . MEDIA_AUDIO
if ( var == 4 )
var = SharedMediaQuery . MEDIA_MUSIC
var = SharedMediaQuery . MEDIA_URL
sharedMediaData [ var ] . loading = true
if ( var != 0 && ! sharedMediaData [ var ] . endReached [ 1 ] )
sharedMediaData [ var ] . loading = true
SharedDocumentCell var = ( SharedDocumentCell ) var
if ( var == 3 && var instanceof SharedLinkCell )
SharedLinkCell var = ( SharedLinkCell ) var
if ( var != - 1 )
var = new LinearLayout ( var )
var . setOrientation ( LinearLayout . VERTICAL )
var . setGravity ( Gravity . CENTER )
var . setVisibility ( View . GONE )
var . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )
var = new ImageView ( var )
var = new TextView ( var )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText2 ) . key_windowBackgroundWhiteGrayText2 )
var . setGravity ( Gravity . CENTER )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 17 )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )
var = new LinearLayout ( var )
var . setGravity ( Gravity . CENTER )
var . setOrientation ( LinearLayout . VERTICAL )
var . setVisibility ( View . GONE )
var . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )
var = new RadialProgressView ( var )
var . addView ( var = new FragmentContextView ( var , this , false ) , this , false , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )
var . setVisibility ( View . GONE )
if ( var . getEmptyView ( var ) == null )
if ( var == 1 && var == 1 )
if ( var == 3 && var == 3 )
if ( var == 4 && var == 4 )
if ( var == 1 || var == 3 || var == 4 )
var = MessagesController . getInstance ( var ) . getChat ( - ( int ) var )
if ( var . messageOwner . media == null || var . isSecretPhoto ( var ) )
int var = SharedMediaQuery . getMediaType ( var . messageOwner )
if ( sharedMediaData [ var ] . addMessage ( var , true , var ) = true )
super . onPause ( var )
if ( var != null )
if ( var != null )
ViewTreeObserver var = var . getViewTreeObserver ( var )
if ( var != null )
var . setAdapter ( var )
var . setAdapter ( var )
var . setAdapter ( var )
if ( var != null )
var . setText ( LocaleController . getString ( "" , R . string . NoResult ) , R . string . NoResult )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 20 )
var . setVisibility ( View . GONE )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 17 )
var . setVisibility ( View . VISIBLE )
var . setAdapter ( var )
var . setText ( LocaleController . getString ( "" , R . string . SharedMediaTitle ) , R . string . SharedMediaTitle )
var . setImageResource ( R . drawable . tip1 )
var . setText ( LocaleController . getString ( "" , R . string . NoMediaSecret ) , R . string . NoMediaSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoMedia ) , R . string . NoMedia )
var . setVisibility ( View . VISIBLE )
var . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )
var . setPadding ( 0 , 0 , 0 , AndroidUtilities . dp ( 4 ) )
if ( var == 1 || var == 4 )
var . setAdapter ( var )
var . setImageResource ( R . drawable . tip2 )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedFilesSecret ) , R . string . NoSharedFilesSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedFiles ) , R . string . NoSharedFiles )
if ( var == 4 )
var . setAdapter ( var )
var . setImageResource ( R . drawable . tip4 )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedAudioSecret ) , R . string . NoSharedAudioSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedAudio ) , R . string . NoSharedAudio )
sharedMediaData [ var ] . loading = true
var . setVisibility ( View . VISIBLE )
var . setVisibility ( View . VISIBLE )
var . setEmptyView ( null )
var . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )
if ( var == 3 )
var . setAdapter ( var )
var . setText ( LocaleController . getString ( "" , R . string . LinksTitle ) , R . string . LinksTitle )
var . setImageResource ( R . drawable . tip3 )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedLinksSecret ) , R . string . NoSharedLinksSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedLinks ) , R . string . NoSharedLinks )
if ( ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached [ 0 ] && sharedMediaData [ var ] . messages . isEmpty ( var ) )
sharedMediaData [ var ] . loading = true
var . setVisibility ( View . VISIBLE )
if ( sharedMediaData [ var ] . loading && sharedMediaData [ var ] . messages . isEmpty ( var ) var )
var . setVisibility ( View . VISIBLE )
var . setEmptyView ( null )
var . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )
var . setEmptyView ( var )
var . setPadding ( 0 , 0 , 0 , AndroidUtilities . dp ( 4 ) )
if ( var [ var ] . containsKey ( var . getId ( var ) ) var )
if ( var [ 0 ] . isEmpty var && var [ 1 ] . isEmpty var var )
if ( var . getName ( var ) . endsWith ( "" ) var )
FileLoader . getInstance ( var ) . loadFile ( var . getMessage ( var ) . getDocument var , false , 0 )
FileLoader . getInstance ( var ) . cancelLoadFile ( var . getMessage ( var ) . getDocument var )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , 0 )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
var . peer = MessagesController . getInputPeer ( var )
var . add ( new MessageObject ( var , null , false ) , null , false )
ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , classGuid )
final ArrayList < MessageObject > var = new ArrayList var ( var )
int var = var . getChildCount ( var )
View var = var . getChildAt ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
var . putExtra ( "" , ContactsController . getInstance ( ) . getInviteText ( 1 ) )
AlertsCreator . processError ( var , NewContactActivity . this , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
MessagesController . getInstance ( ) . enableJoined = true
NotificationsController . getInstance ( ) . setInChatSoundEnabled ( ! var )
MessagesController . getInstance ( ) . enableJoined = ! var
var . putBoolean ( "" , ! var )
NotificationsController . getInstance ( ) . setBadgeEnabled ( ! var )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , var . getBoolean ( "" , false ) , false , false )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . BadgeNumber ) , R . string . BadgeNumber , var . getBoolean ( "" , true ) , true , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityDefault ) , R . string . NotificationsPriorityDefault , false )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityHigh ) , R . string . NotificationsPriorityHigh , false )
if ( var == 2 )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityMax ) , R . string . NotificationsPriorityMax , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )
if ( UserConfig . passcodeHash . length ( ) != 0 )
if ( var == 2 && UserConfig . passcodeType == 0 == 1 && var == 0 )
if ( UserConfig . passcodeHash . length ( ) != 0 )
UserConfig . passcodeHash = ""
UserConfig . appLocked = false
UserConfig . saveConfig ( false )
var . setChecked ( UserConfig . passcodeHash . length ( ) != 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( UserConfig . autoLockIn == 60 )
if ( UserConfig . autoLockIn == 60 * 5 )
if ( UserConfig . autoLockIn == 60 * 60 )
if ( UserConfig . autoLockIn == 60 * 60 * 5 )
UserConfig . autoLockIn = 0
UserConfig . autoLockIn = 60
UserConfig . autoLockIn = 60 * 5
UserConfig . autoLockIn = 60 * 60
UserConfig . autoLockIn = 60 * 60 * 5
UserConfig . saveConfig ( false )
UserConfig . useFingerprint = ! UserConfig . useFingerprint
UserConfig . saveConfig ( false )
( ( TextCheckCell ) var ) . setChecked ( UserConfig . useFingerprint )
UserConfig . allowScreenCapture = ! UserConfig . allowScreenCapture
UserConfig . saveConfig ( false )
( ( TextCheckCell ) var ) . setChecked ( UserConfig . allowScreenCapture )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( UserConfig . passcodeHash . length ( ) > 0 )
if ( var == 1 && var == 0 || var == 2 && UserConfig . passcodeType == 0 == 1 && var == 1 || var == 2 && UserConfig . passcodeType == 1 )
if ( var == 1 && var == 1 || var == 2 && UserConfig . passcodeType == 1 )
UserConfig . passcodeSalt = new byte [ 16 ]
Utilities . random . nextBytes ( UserConfig . passcodeSalt )
System . arraycopy ( UserConfig . passcodeSalt , 0 , var , 0 , 16 )
System . arraycopy ( UserConfig . passcodeSalt , 0 , var , var . length + 16 , 16 )
UserConfig . passcodeHash = Utilities . bytesToHex ( Utilities . computeSHA256 ( var , 0 , var . length ) , 0 , var . length )
UserConfig . passcodeType = var
UserConfig . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( ! UserConfig . checkPasscode ( var . getText ( ) . toString ) )
return var == var || var == var || var == var || var == var || UserConfig . passcodeHash . length ( ) != 0 && var == var
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . Passcode ) , R . string . Passcode , UserConfig . passcodeHash . length ( ) > 0 , true )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . UnlockFingerprint ) , R . string . UnlockFingerprint , UserConfig . useFingerprint , true )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . ScreenCapture ) , R . string . ScreenCapture , UserConfig . allowScreenCapture , false )
if ( UserConfig . passcodeHash . length ( ) == 0 )
if ( UserConfig . autoLockIn < 60 * 60 )
var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , UserConfig . autoLockIn / 60 ) , UserConfig . autoLockIn / 60 )
if ( UserConfig . autoLockIn < 60 * 60 * 24 )
var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 ) . autoLockIn / 60.0f / 60 ) , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 ) . autoLockIn / 60.0f / 60 )
var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 / 24 ) . autoLockIn / 60.0f / 60 / 24 ) , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 / 24 ) . autoLockIn / 60.0f / 60 / 24 )
var = MessagesController . getInstance ( var ) . getUser ( var . bot_id )
if ( UserConfig . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null
UserConfig . saveConfig ( false )
if ( UserConfig . tmpPassword != null = 4 = 3 )
var = MessagesController . getInstance ( var ) . getUser ( var . bot_id )
if ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture )
bottomCell [ 1 ] . setText ( LocaleController . formatString ( "" , R . string . PaymentPhoneEmailToProvider , var ) , R . string . PaymentPhoneEmailToProvider , var )
bottomCell [ 1 ] . setText ( LocaleController . formatString ( "" , R . string . PaymentPhoneEmailToProvider , var ) , R . string . PaymentPhoneEmailToProvider , var )
var . addAll ( var . invoice . prices )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
if ( Build . VERSION . SDK_INT < 19 )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didSetTwoStepPassword )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didRemovedTwoStepPassword )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . paymentFinished )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didSetTwoStepPassword )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didRemovedTwoStepPassword )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . paymentFinished )
if ( ( var == 2 || var == 6 ) && Build . VERSION . SDK_INT >= 23 && ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture ) )
var . addAll ( var . invoice . prices )
var . addAll ( var . invoice . prices )
if ( UserConfig . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null
UserConfig . saveConfig ( false )
if ( UserConfig . tmpPassword != null = 4 = 3 )
if ( UserConfig . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null
UserConfig . saveConfig ( false )
if ( UserConfig . tmpPassword != null = 4 = 3 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . paymentFinished )
bottomCell [ 0 ] . getTextView var . setMovementMethod ( new LinkMovementMethodMy var )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )
var . credentials . tmp_password = UserConfig . tmpPassword . tmp_password
MessagesController . getInstance ( var ) . processUpdates ( ( ( TLRPC . TL_payments_paymentResult ) var ) . updates , false )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . paymentFinished )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )
if ( UserConfig . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null
UserConfig . saveConfig ( false )
if ( UserConfig . tmpPassword != null )
UserConfig . tmpPassword = ( TLRPC . TL_account_tmpPassword ) var
UserConfig . saveConfig ( false )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . albumsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . albumsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recentImagesDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
if ( var )
FileLog . var ( "" , var )
var . thumb = var . imageReceiver . getBitmap ( var )
return var . photoImage . getImageReceiver ( ) . getBitmap
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )
MessagesStorage . getInstance ( ) . loadWebRecent ( var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recentImagesDidLoaded )
if ( var != null )
var . cancel ( true )
var = null
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
if ( var != null )
var . cancel ( true )
var = null
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
searchBingImages ( var . getText ( ) . toString , 0 , 53 )
MessagesStorage . getInstance ( ) . clearWebRecent ( var )
MediaController . getInstance ( ) . toggleGroupPhotosEnabled
showHint ( false , MediaController . getInstance ( ) . isGroupPhotosEnabled )
var = ( var != null || var == 0 )
if ( var == null )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
if ( var != null )
var . cancel ( true )
var = null
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var = null
String var = UserConfig . getCurrentUser ( ) . var
InputStream var = null
var . addRequestProperty ( "" , BuildVars . BING_SEARCH_KEY )
var . addRequestProperty ( "" , "" )
if ( var instanceof HttpURLConnection )
HttpURLConnection var = ( HttpURLConnection ) var
int var = var . getResponseCode ( )
String var = var . getHeaderField ( "" )
var . setRequestProperty ( "" , var )
var . addRequestProperty ( "" , "" )
var . addRequestProperty ( "" , "" )
if ( var . getMessage ( ) != null && var . getMessage ( ) . contains ( "" ) = false )
var = false
FileLog . var ( var )
if ( var != HttpURLConnection . HTTP_OK && var != HttpURLConnection . HTTP_ACCEPTED && var != HttpURLConnection . HTTP_NOT_MODIFIED )
FileLog . var ( var )
if ( var == - 1 )
FileLog . var ( var )
FileLog . var ( var )
var . close ( )
FileLog . var ( var )
FileLog . var ( var )
JSONArray var = var . getJSONArray ( "" )
String var = Utilities . MD5 ( var . getString ( "" ) )
var . var = var
var . put ( var , var )
var = ! var
FileLog . var ( var )
FileLog . var ( var )
var = true
var . notifyItemRemoved ( var . size ( ) - 1 )
if ( var && var . isEmpty ( ) || var && var == null )
var = PhotoViewer . getInstance ( ) . isShowingImage ( var . path )
AndroidUtilities . runOnUIThread ( var )
if ( var . messageOwner . grouped_id != var var )
var = var . messageOwner . grouped_id
if ( var != 0 || var . messageOwner . grouped_id == var ++ )
if ( var != 0 || var . messageOwner . grouped_id == var ++ )
setImageIndex ( var , false )
setImageIndex ( var , false )
setImageIndex ( var , false )
if ( var == var )
var -= var . getMeasuredHeight ( var )
if ( Build . VERSION . SDK_INT >= 21 && AndroidUtilities . statusBarHeight != 0 )
if ( var == var || var == var || var . getVisibility ( var ) == VISIBLE && var == var )
if ( var == 0 && ( var != null && var . isVideo ( var ) || var != null && ( var . type . equals ( "" ) || MessageObject . isVideoDocument ( var . document ) ) ) )
SharedMediaQuery . loadMedia ( var , 80 , 0 , SharedMediaQuery . MEDIA_PHOTOVIDEO , true , var )
if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )
if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )
preparePlayer ( new File ( var ) , false , true )
var = new ActionBar ( var )
MediaActivity var = new MediaActivity ( var )
( ( LaunchActivity ) var ) . presentFragment ( new ChatActivity ( var ) , true , true )
if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( var ) || var != null var )
var . showReplyPanel ( true , null , var , null , false )
if ( var == null )
if ( var != null && var . var != UserConfig . getClientUserId ( var ) || var != null )
CheckBoxCell var = new CheckBoxCell ( var , true )
var . setLinkTextColor ( 0xffffffff )
var . setTextColor ( 0xffffffff )
photoProgressViews [ 2 ] = new PhotoProgressView ( var . getContext ( var ) , var )
photoProgressViews [ 2 ] . setBackgroundState ( 0 , false )
var . setColors ( 0x66ffffff , 0xffffffff , 0xffffffff )
return super . onTouchEvent ( var )
var . addView ( var , LayoutHelper . createFrame ( 48 , 48 , Gravity . LEFT | Gravity . TOP ) , 48 , Gravity . LEFT | Gravity . TOP )
var = new TextView ( var . getContext ( var ) )
var . setGravity ( Gravity . CENTER_VERTICAL )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 13 )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . RIGHT | Gravity . TOP , 0 , 0 , 8 , 0 ) . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . RIGHT | Gravity . TOP , 0 , 0 , 8 , 0 )
var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_chats_actionIcon ) . key_chats_actionIcon , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_chats_actionIcon ) . key_chats_actionIcon , PorterDuff . Mode . MULTIPLY )
var = new LinearLayout ( var )
if ( var == null )
if ( var == null || var . getSelectedPhotosOrder ( var ) == null || var . getSelectedPhotosOrder ( var ) . isEmpty var )
boolean var = MediaController . getInstance ( var ) . isGroupPhotosEnabled var
MediaController . getInstance ( var ) . toggleGroupPhotosEnabled var
setImageIndex ( var , false )
var . setAllowNewMentions ( false )
if ( var != null )
var . originalPath = var . getAbsolutePath ( var )
if ( var != ExoPlayer . STATE_ENDED && var != ExoPlayer . STATE_IDLE var )
if ( var == ExoPlayer . STATE_READY && var . getVisibility ( var ) != View . VISIBLE )
var = var . getDuration ( var )
if ( var == C . TIME_UNSET = 0 )
var . preparePlayer ( Uri . fromFile ( var ) , "" )
if ( var == null || var . length ( var ) == 0 var )
if ( var == 0 && var != null )
if ( var == 0 )
if ( var == 0 )
if ( var == 0 )
if ( var == 0 )
if ( var == 0 )
var . setEnabled ( var )
if ( var != null && var . equals ( var ) )
var . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )
if ( var . getTag ( var ) != null )
return FileLoader . getAttachFileName ( var . document )
if ( var . exists ( var ) var )
if ( var . content_url != null )
var = ConnectionsManager . getInstance ( var ) . generateClassGuid var
if ( var . equals ( "" ) || var . equals ( "" ) )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , var , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , var , true )
boolean var = var != null && ! var . isSecretChat ( var ) && var != null && ! var . bot
preparePlayer ( new File ( var . path ) . path , false , false )
boolean var
var = var != null && var . getId ( var ) == var . getId ( var )
var = var . var ( var )
setCurrentCaption ( var . messageOwner . media . description )
setCurrentCaption ( var )
var . setTitle ( LocaleController . formatString ( "" , R . string . Of , var + 1 , var + var ) , R . string . Of , var + 1 , var + var )
var . setTitle ( LocaleController . formatString ( "" , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var ) , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var )
if ( var == UserConfig . getClientUserId ( var ) && ! var . isEmpty ( var ) var )
TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . photo . sizes , AndroidUtilities . getPhotoSize ( var ) )
if ( var . content_url != null )
var = var . content_url
var . setPadding ( 0 , AndroidUtilities . dp ( 14 ) , 0 , 0 )
var . setVisibility ( View . GONE )
preparePlayer ( new File ( var ) , false , false )
if ( var . content_url != null )
if ( var != null && var . exists ( var ) var )
Bitmap var = null
var = var . thumb_url
if ( var . content_url != null )
var = var . content_url
Bitmap var = null
Bitmap var = null
return var && ! var && var != null && var != null && var . local_id == var . local_id && var . volume_id == var . volume_id && var . dc_id == var . dc_id
return var && ! var && var != null && var != null && var . id == var . id
return var && ! var && var != null && var != null && var . equals ( var )
return openPhoto ( var . get ( var ) , null , var , null , var , var , null , var , var )
var . bottomMargin = 0
if ( var == null || var || var == null && checkAnimation var || var == null && var == null && var == null && var == null )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
if ( var == null || ! var || checkAnimation var || var == null )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
ConnectionsManager . getInstance ( var ) . cancelRequestsForGuid ( var )
var . setImageBitmap ( var . getBitmap ( var ) )
if ( ! var . canScrollAway ( var ) )
var . setBackgroundDrawable ( Theme . createRoundRectDrawable ( AndroidUtilities . dp ( 3 ) , Theme . getColor ( Theme . key_chat_gifSaveHintBackground ) . key_chat_gifSaveHintBackground ) . dp ( 3 ) , Theme . getColor ( Theme . key_chat_gifSaveHintBackground ) . key_chat_gifSaveHintBackground )
var . setTextColor ( Theme . getColor ( Theme . key_chat_gifSaveHintText ) . key_chat_gifSaveHintText )
if ( var == 1 || ! var && var != 2 )
if ( var != 2 )
if ( ! ImageLoader . getInstance ( var ) . isLoadingHttpFile ( var . content_url ) var )
ImageLoader . getInstance ( var ) . cancelLoadHttpFile ( var . content_url )
if ( var == 0 )
var = new MessageObject ( var , null , false )
var . var . originalPath = var . getAbsolutePath ( var )
var = 432.0f
var = 848.0f
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 , AndroidUtilities . dp ( 152 ) ) , "" , 0 , AndroidUtilities . dp ( 152 ) , ObjectAnimator . ofFloat ( var , "" , - AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 104 ) ) , "" , - AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 104 ) )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , - AndroidUtilities . dp ( 48 ) ) , "" , - AndroidUtilities . dp ( 48 ) )
if ( var > 1280 || var > 1280 = 5 > 848 || var > 848 = 4 > 640 || var > 640 = 3 > 480 || var > 480 = 2 = 1 )
if ( var > 848 || var > 848 = 4 )
if ( var >= 0 )
var . setChecked ( false , true )
var . setImage ( var . document . thumb . location , null , var . getResources ( var ) . getDrawable ( R . drawable . nophotos ) . drawable . nophotos )
var = ConnectionsManager . getInstance ( ) . generateClassGuid
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . pushMessagesUpdated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
MessagesController . getInstance ( ) . markDialogAsRead ( var . getDialogId ( ) , var . getId ( ) , Math . max ( 0 , var . getId ( ) ) , var . getId ( ) , var . messageOwner . date , true , true )
MessagesController . getInstance ( ) . sendTyping ( var . getDialogId ( ) , 0 , var )
int var = 0
var = var - var . leftMargin
var = - var - var . leftMargin
if ( var . leftMargin != 0 )
var = - var . leftMargin
int var = int ( Math . abs ( ( float ) var / ( float ) var ) float ) var / ( float ) var * 200 )
var . startAnimation ( var )
var . height = ViewGroup . LayoutParams . MATCH_PARENT
var . leftMargin = - var + var
var . gravity = Gravity . TOP | Gravity . LEFT
var . leftMargin = var
var . height = ViewGroup . LayoutParams . MATCH_PARENT
var . leftMargin = var + var
var = new FrameLayoutAnimationListener ( this )
TextView var = ( TextView ) var . findViewWithTag ( 312 )
BackupImageView var = ( BackupImageView ) var . findViewWithTag ( 311 )
if ( var || MediaController . getInstance ( ) . canDownloadMedia ( var ) )
var . setTextSize ( TypedValue . COMPLEX_UNIT_SP , MessagesController . getInstance ( ) . fontSize )
double var = var . messageOwner . media . geo . var
var = ( PopupAudioView ) var . findViewWithTag ( 300 )
var = new FrameLayoutAnimationListener ( this )
if ( MediaController . getInstance ( ) . canDownloadMedia ( var ) )
var = new FrameLayoutAnimationListener ( this )
TextView var = ( TextView ) var . findViewWithTag ( 301 )
var . setTextSize ( TypedValue . COMPLEX_UNIT_SP , MessagesController . getInstance ( ) . fontSize )
var . leftMargin = 0
var . leftMargin = - var
var . leftMargin = var
int var = ( ( FrameLayout . LayoutParams ) var . getLayoutParams ( ) ) . leftMargin
var . leftMargin = var
int var = ( ( FrameLayout . LayoutParams ) var . getLayoutParams ( ) ) . leftMargin
var . leftMargin = var
var = NotificationsController . getInstance ( ) . popupReplyMessages
var = NotificationsController . getInstance ( ) . var
for ( int var = 0 ; var < var . size ( ) ; var ++ )
var . setDialogId ( var )
var = MessagesController . getInstance ( ) . getUser ( var )
var = MessagesController . getInstance ( ) . getChat ( - var )
var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )
if ( var == null )
if ( var . id / 1000 != 777 && var . id / 1000 != 333 && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( ) . contactsDict . size ( ) != 0 || ! ContactsController . getInstance ( ) . isLoadingContacts ) )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var . getDialogId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . id )
var . setText ( LocaleController . formatUserStatus ( var ) )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . id )
Integer var = MessagesController . getInstance ( ) . printingStringsTypes . get ( var . getDialogId ( ) )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var . getDialogId ( ) )
if ( var . getMessageObject ( ) != null && var . getMessageObject ( ) . getId == var )
PopupAudioView var = ( PopupAudioView ) var . findViewWithTag ( 300 )
if ( var . getMessageObject ( ) != null && var . getMessageObject ( ) . getId == var )
TextView var = ( TextView ) var . findViewWithTag ( 301 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . pushMessagesUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . privacyRulesUpdated )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )
TLRPC . InputUser var = MessagesController . getInputUser ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )
TLRPC . InputUser var = MessagesController . getInputUser ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )
ContactsController . getInstance ( ) . setPrivacyRules ( var . var , var )
ArrayList < TLRPC . PrivacyRule > var = ContactsController . getInstance ( ) . getPrivacyRules ( var )
ContactsController . getInstance ( var ) . loadPrivacySettings var
if ( MessagesController . getInstance ( var ) . secretWebpagePreview != 1 var )
var = - 1
var = - 1
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . privacyRulesUpdated )
VoIPHelper . upgradeP2pSetting ( var )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . privacyRulesUpdated )
presentFragment ( new SessionsActivity var )
ContactsController . getInstance ( var ) . setDeleteAccountTTL ( var . ttl . days )
if ( UserConfig . passcodeHash . length ( var ) > 0 var )
MessagesController . getInstance ( var ) . secretWebpagePreview = 0
MessagesController . getInstance ( var ) . secretWebpagePreview = 1
var . edit ( var ) . putInt ( "" , var ) . apply var
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )
UserConfig . tmpPassword = null
UserConfig . saveConfig ( false )
ArrayList < TLRPC . PrivacyRule > var = ContactsController . getInstance ( var ) . getPrivacyRules ( var )
return var == var || var == var || var == var || var == var || var == var || var == var && ! ContactsController . getInstance ( var ) . getLoadingGroupInfo var || var == var && ! ContactsController . getInstance ( var ) . getLoadingLastSeenInfo var || var == var && ! ContactsController . getInstance ( var ) . getLoadingCallsInfo var || var == var && ! ContactsController . getInstance ( var ) . getLoadingDeleteInfo var || var == var || var == var
if ( ContactsController . getInstance ( var ) . getLoadingLastSeenInfo var var )
if ( ContactsController . getInstance ( var ) . getLoadingCallsInfo var var )
if ( ContactsController . getInstance ( var ) . getLoadingGroupInfo var var )
if ( ContactsController . getInstance ( var ) . getLoadingDeleteInfo var var )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . DeleteAccountIfAwayFor ) , R . string . DeleteAccountIfAwayFor , var , false )
var . setText ( LocaleController . getString ( "" , R . string . PrivacyPaymentsClear ) , R . string . PrivacyPaymentsClear , false )
var . setText ( LocaleController . getString ( "" , R . string . PrivacyPaymentsClearInfo ) , R . string . PrivacyPaymentsClearInfo )
var . setBackgroundDrawable ( Theme . getThemedDrawable ( var , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow ) , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow )
var . setText ( LocaleController . getString ( "" , R . string . DeleteAccountTitle ) , R . string . DeleteAccountTitle )
var . setText ( LocaleController . getString ( "" , R . string . PrivacyPayments ) , R . string . PrivacyPayments )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . SecretWebPage ) , R . string . SecretWebPage , MessagesController . getInstance ( var ) . secretWebpagePreview == 1 , true )
if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var )
if ( var == var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )
var . thumb = var . imageReceiver . getBitmap ( var )
var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var )
BotQuery . loadBotInfo ( var . id , true , classGuid )
MessagesController . getInstance ( var ) . loadFullUser ( MessagesController . getInstance ( var ) . getUser ( var ) , classGuid , true )
var . release ( var )
var . acquire ( var )
MessagesController . getInstance ( var ) . putChat ( var , true )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
var = new AvatarUpdater var
MessagesController . getInstance ( var ) . changeChatAvatar ( var , var )
MessagesController . getInstance ( var ) . loadFullChat ( var , classGuid , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )
SharedMediaQuery . getMediaCount ( - var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . mediaCountDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . mediaCountDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
MessagesController . getInstance ( var ) . unblockUser ( var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
ContactsController . getInstance ( var ) . deleteContact ( var )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . addUserToChat ( - ( int ) var , var , null , 0 , null , ProfileActivity . this )
TLRPC . TL_userFull var = MessagesController . getInstance ( var ) . getUserFull ( var . var )
var . putExtra ( Intent . EXTRA_TEXT , String . format ( "" + MessagesController . getInstance ( var ) . linkPrefix + "" , var . about , var . username ) + MessagesController . getInstance ( var ) . linkPrefix + "" , var . about , var . username )
var . putExtra ( Intent . EXTRA_TEXT , String . format ( "" + MessagesController . getInstance ( var ) . linkPrefix + "" , var . username ) + MessagesController . getInstance ( var ) . linkPrefix + "" , var . username )
AndroidUtilities . installShortcut ( var )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . var ) . var )
MediaActivity var = new MediaActivity ( var )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , 0 )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var
if ( var == 4 )
if ( var == 4 var )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , var )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )
SecretChatHelper . getInstance ( var ) . startSecretChat ( getParentActivity var , MessagesController . getInstance ( var ) . getUser ( var ) )
if ( var == UserConfig . getClientUserId ( var ) )
var . putExtra ( Intent . EXTRA_TEXT , var . title + "" + var . about + "" + MessagesController . getInstance ( var ) . linkPrefix + "" + var . username )
var . putExtra ( Intent . EXTRA_TEXT , var . title + "" + MessagesController . getInstance ( var ) . linkPrefix + "" + var . username )
MessagesController . getInstance ( var ) . convertToMegaGroup ( getParentActivity var , var )
if ( var . var == UserConfig . getClientUserId ( var ) )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . var )
if ( var . var != UserConfig . getClientUserId ( var ) )
if ( var . admin && var . admins_enabled || var . inviter_id == UserConfig . getClientUserId ( var ) = true )
var . var . inviter_id = UserConfig . getClientUserId ( var )
var . channel = MessagesController . getInputChannel ( var )
var . var = MessagesController . getInputUser ( var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )
if ( ! MessagesController . checkCanOpenChat ( var , ProfileActivity . this ) )
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
if ( ! MessagesController . checkCanOpenChat ( var , ProfileActivity . this ) )
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . changeChatAvatar ( var , null )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
if ( ChatObject . isChannel ( var ) && ! var . megagroup var )
MessagesController . getInstance ( var ) . loadChatInfo ( var , null , false )
var . channel = MessagesController . getInputChannel ( var )
MessagesController . getInstance ( var ) . putUsers ( var . users , false )
if ( var . users . size ( var ) != 200 = true )
MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , null , true , true )
MessagesStorage . getInstance ( var ) . updateChannelUsers ( var , var . participants )
if ( ! var . containsKey ( var . var ) )
ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , classGuid )
HashMap < Integer , TLRPC . User > var = new HashMap var ( var )
if ( var == var || var == var )
if ( var == var var )
var = ( Integer ) var [ 1 ]
var = ( Integer ) var [ 1 ]
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . var )
if ( var != null && var . status != null && ( var . status . expires > var || var . id == UserConfig . getClientUserId ( var ) ) && var . status . expires > 10000 ++ )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . participants . participants . get ( var ) . var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . participants . participants . get ( var ) . var )
if ( var . id == UserConfig . getClientUserId ( var ) var )
var = ConnectionsManager . getInstance ( var ) . getCurrentTime var + 50000
if ( var . id == UserConfig . getClientUserId ( var ) var )
MessagesController . getInstance ( var ) . deleteUserFromChat ( var , MessagesController . getInstance ( var ) . getUser ( var ) , var )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . deleteUserFromChat ( var , MessagesController . getInstance ( var ) . getUser ( UserConfig . getClientUserId ( var ) ) . getClientUserId ( var ) , var )
TLRPC . TL_userFull var = MessagesController . getInstance ( var ) . getUserFull ( var )
if ( var != UserConfig . getClientUserId ( var ) )
if ( var != null && ! var && var == null && var . id != UserConfig . getClientUserId ( var ) )
if ( var == null || var . participants_count < MessagesController . getInstance ( var ) . maxMegagroupCount )
if ( ! ( var . participants instanceof TLRPC . TL_chatParticipantsForbidden ) && var . participants . participants . size ( var ) < MessagesController . getInstance ( var ) . maxGroupCount && ( var . admin || var . creator || ! var . admins_enabled ) )
if ( var . creator && var . participants . participants . size ( var ) >= MessagesController . getInstance ( var ) . minGroupConvertSize )
var = LocaleController . formatUserStatus ( var )
if ( var == 0 && var . id != UserConfig . getClientUserId ( var ) && var . id / 1000 != 777 && var . id / 1000 != 333 && var . phone != null && var . phone . length ( var ) != 0 && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( var ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( var ) . isLoadingContacts var ) var )
var . getImageReceiver ( var ) . setVisible ( ! PhotoViewer . getInstance ( var ) . isShowingImage ( var ) , false )
var . getImageReceiver ( var ) . setVisible ( ! PhotoViewer . getInstance ( var ) . isShowingImage ( var ) , false )
if ( UserConfig . getClientUserId ( var ) != var var )
TLRPC . TL_userFull var = MessagesController . getInstance ( var ) . getUserFull ( var )
if ( ContactsController . getInstance ( var ) . contactsDict . get ( var ) == null var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , null , null , null )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )
var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount ) , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount ) . formatString ( "" , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount ) , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount )
MessagesController . openByUserName ( var . substring ( 1 ) , ProfileActivity . this , 0 )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
var . setTextAndValue ( var , MessagesController . getInstance ( var ) . linkPrefix + "" + var . username )
if ( var != 0 && UserConfig . getClientUserId ( var ) == var var )
TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var -= ConnectionsManager . getInstance ( var ) . getCurrentTime var
TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . VoipSettingsRingtone ) , R . string . VoipSettingsRingtone , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityDefault ) , R . string . NotificationsPriorityDefault , false )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityHigh ) , R . string . NotificationsPriorityHigh , false )
if ( var == 2 )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityMax ) , R . string . NotificationsPriorityMax , false )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPrioritySettings ) , R . string . NotificationsPrioritySettings , false )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
return super . onFragmentCreate ( )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . proxySettingsChanged )
var . putBoolean ( "" , var )
var . putString ( "" , var )
var . putInt ( "" , var )
ConnectionsManager . native_setProxySettings ( var , var , var , var )
ConnectionsManager . native_setProxySettings ( "" , 0 , "" , "" )
var = var . getBoolean ( "" , false )
actionBar . setAllowOverlayTitle ( true )
var . putExtra ( Intent . EXTRA_TEXT , "" + var . toString ( ) )
var = new TextCheckCell ( var )
var . setBackgroundDrawable ( Theme . getSelectorDrawable ( true ) )
var . setChecked ( var )
if ( ! var )
var . setChecked ( false )
var = new ShadowSectionCell ( var )
for ( int var = 0 ; var < 4 ; var ++ )
var . add ( var )
var . setBackgroundColor ( Theme . getColor ( Theme . key_divider ) . key_divider )
var [ var ] . setHintTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteHintText ) . key_windowBackgroundWhiteHintText )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyAddress ) , R . string . UseProxyAddress )
var [ var ] . setText ( var . getString ( "" , "" ) , "" )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyPassword ) , R . string . UseProxyPassword )
var [ var ] . setText ( var . getString ( "" , "" ) , "" )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyPort ) , R . string . UseProxyPort )
var [ var ] . setText ( "" + var . getInt ( "" , 1080 ) , 1080 )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyUsername ) , R . string . UseProxyUsername )
var [ var ] . setText ( var . getString ( "" , "" ) , "" )
var [ var ] . setPadding ( 0 , 0 , 0 , AndroidUtilities . dp ( 6 ) )
var = new TextCheckCell ( var )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . UseProxyForCalls ) , R . string . UseProxyForCalls , var , false )
var = ! var
var . setBackgroundDrawable ( Theme . getThemedDrawable ( var , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow ) , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow )
var . setText ( LocaleController . getString ( "" , R . string . UseProxyForCallsInfo ) , R . string . UseProxyForCallsInfo )
if ( var [ var ] == null || var [ var ] == null )
var . setAlpha ( 1.0f )
var . setAlpha ( 0.5f )
if ( var && ! var )
if ( var == null )
var = var . getBoolean ( "" , false )
var . setChecked ( false )
var . setChecked ( true )
for ( int var = 0 ; var < 4 ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
long var = System . currentTimeMillis ( ) + ConnectionsManager . getInstance ( ) . getTimeDifference * 1000
if ( var == null || var == null || ! var . isSecretPhoto ( var ) || var == null )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . newSessionReceived )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . newSessionReceived )
UserConfig . registeredForPush = false
UserConfig . saveConfig ( false )
MessagesController . getInstance ( ) . registerForPush ( UserConfig . pushString )
ConnectionsManager . getInstance ( ) . setUserId ( UserConfig . getClientUserId ( ) )
final TLRPC . TL_authorization var = var . get ( var - var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
if ( var != null )
var = new SessionCell ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
var = MessagesController . getInstance ( ) . getChat ( var )
MessagesController . getInstance ( ) . toggleUserAdmin ( var , var . user_id , ! ( var instanceof TLRPC . TL_chatParticipant ) )
var = MessagesController . getInstance ( ) . getChat ( var )
MessagesController . getInstance ( ) . toggleAdminMode ( var , var . admins_enabled )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var )
var . setCheckDisabled ( var == null || ! var . admins_enabled || var . user_id == UserConfig . getClientUserId ( ) )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
if ( var . id == UserConfig . getClientUserId ( var ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var )
var . setCheckDisabled ( var == null || ! var . admins_enabled || var . user_id == UserConfig . getClientUserId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
var . dialogId = UserConfig . getClientUserId ( var )
var . thumb = var . imageReceiver . getBitmap ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
var = UserConfig . getCurrentUser ( )
MessagesController . getInstance ( ) . putUser ( var , false )
UserConfig . setCurrentUser ( var )
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . id )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_ALL )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
UserConfig . saveConfig ( true )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
if ( BuildVars . DEBUG_VERSION )
StickersQuery . checkFeaturedStickers ( )
MessagesController . getInstance ( ) . loadFullUser ( UserConfig . getCurrentUser ( ) , classGuid , true )
MessagesController . getInstance ( ) . cancelLoadFullUser ( UserConfig . getClientUserId ( ) )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var . setValue ( MessagesController . getInstance ( ) . fontSize )
MessagesController . getInstance ( ) . fontSize = var . getValue ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
MediaController . getInstance ( ) . toogleRaiseToSpeak
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canRaiseToSpeak )
MediaController . getInstance ( ) . toggleAutoplayGifs
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canAutoplayGifs )
MediaController . getInstance ( ) . toggleSaveToGallery
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canSaveToGallery )
MediaController . getInstance ( ) . toggleCustomTabs
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canCustomTabs )
MediaController . getInstance ( ) . toggleDirectShare
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canDirectShare )
presentFragment ( new ThemeActivity )
ConnectionsManager . getInstance ( ) . switchBackend
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )
presentFragment ( new StickersActivity ( StickersQuery . TYPE_IMAGE ) . TYPE_IMAGE )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var
ContactsController . getInstance ( ) . forceImportContacts
ContactsController . getInstance ( ) . loadContacts ( false , 0 )
ContactsController . getInstance ( ) . resetImportedContacts
MessagesController . getInstance ( ) . forceResetDialogs
if ( var == 4 )
MediaController . getInstance ( ) . toggleInappCamera
MediaController . getInstance ( ) . toggleRoundCamera16to9
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
var = UserConfig . getCurrentUser ( )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var = MessagesController . getInstance ( ) . getUser ( var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )
MessagesController . getInstance ( ) . putUser ( var . user , false )
MessagesController . getInstance ( ) . putUser ( var , true )
if ( var == UserConfig . getClientUserId ( ) && var != null )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
int var = StickersQuery . getUnreadStickerSets ( ) . size
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . SaveToGallerySettings ) , R . string . SaveToGallerySettings , MediaController . getInstance ( ) . canSaveToGallery , false )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . AutoplayGifs ) , R . string . AutoplayGifs , MediaController . getInstance ( ) . canAutoplayGifs , true )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . RaiseToSpeak ) , R . string . RaiseToSpeak , MediaController . getInstance ( ) . canRaiseToSpeak , true )
var . setTextAndValueAndCheck ( LocaleController . getString ( "" , R . string . ChromeCustomTabs ) , R . string . ChromeCustomTabs , LocaleController . getString ( "" , R . string . ChromeCustomTabsInfo ) , R . string . ChromeCustomTabsInfo , MediaController . getInstance ( ) . canCustomTabs , false , true )
var . setTextAndValueAndCheck ( LocaleController . getString ( "" , R . string . DirectShare ) , R . string . DirectShare , LocaleController . getString ( "" , R . string . DirectShareInfo ) , R . string . DirectShareInfo , MediaController . getInstance ( ) . canDirectShare , false , true )
TLRPC . User var = UserConfig . getCurrentUser ( )
TLRPC . User var = UserConfig . getCurrentUser ( )
TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )
return var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var
if ( var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var == var || var == var || var == var == var || var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var )
MessageObject var = new MessageObject ( var , null , false )
final boolean var = StickersQuery . isStickerInFavorites ( currentSticker )
if ( ! MessageObject . isMaskDocument ( currentSticker ) && ( var || StickersQuery . canAddStickerToFavorites ( ) ) )
var . sentSticker ( currentSticker )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , currentSticker , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , var )
StickersQuery . checkStickers ( var )
if ( var == StickersQuery . TYPE_IMAGE )
StickersQuery . checkFeaturedStickers ( )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . archivedStickersCountDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . archivedStickersCountDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
if ( var == StickersQuery . TYPE_IMAGE )
final TLRPC . TL_messages_stickerSet var = StickersQuery . getStickerSets ( var ) . get ( var - var )
presentFragment ( new StickersActivity ( StickersQuery . TYPE_MASK ) . TYPE_MASK )
var . masks = var == StickersQuery . TYPE_MASK
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . stickersDidLoaded , var )
if ( var == StickersQuery . TYPE_IMAGE )
if ( StickersQuery . getArchivedStickersCount ( var ) != 0 )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )
if ( var >= var && var < var == var || var == var || var == var || var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var )
StickersQuery . removeStickersSet ( getParentActivity , var . set , 0 , StickersActivity . this , true )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )
MessagesController . openByUserName ( "" , StickersActivity . this , 1 )
if ( var == StickersQuery . TYPE_IMAGE )
int var = StickersQuery . getUnreadStickerSets ( ) . size
if ( var == StickersQuery . TYPE_IMAGE )
( ( TextSettingsCell ) var . itemView ) . setText ( LocaleController . getString ( "" , R . string . Masks ) , R . string . Masks , true )
if ( var == StickersQuery . TYPE_IMAGE )
if ( var >= var && var < var == var || var == var || var == var == var || var == var || var == var == var )
if ( var == var || var == var || var == var )
if ( var == var )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )
var . notifyDataSetChanged ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
return Theme . themes . size ( ) + 3
return var == 0 || var == 1
var = new ThemeCell ( var )
var . write ( var . toString ( ) . getBytes )
FileLog . var ( "" , var )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var . getName ( ) )
( ( TextSettingsCell ) var ) . setText ( LocaleController . getString ( "" , R . string . CreateNewTheme ) , R . string . CreateNewTheme , false )
( ( TextInfoPrivacyCell ) var ) . setText ( LocaleController . getString ( "" , R . string . CreateNewThemeInfo ) , R . string . CreateNewThemeInfo )
var -= 2
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var . from_id = UserConfig . getClientUserId ( )
MessageObject var = new MessageObject ( var , null , true )
var . from_id = UserConfig . getClientUserId ( )
var . add ( new MessageObject ( var , null , true ) , null , true )
var . to_id . user_id = UserConfig . getClientUserId ( )
var . add ( new MessageObject ( var , null , true ) , null , true )
var . to_id . user_id = UserConfig . getClientUserId ( )
var = new MessageObject ( var , null , true )
var . from_id = UserConfig . getClientUserId ( )
var = new MessageObject ( var , null , true )
var . media . caption = ""
var . to_id . user_id = UserConfig . getClientUserId ( )
var = new MessageObject ( var , null , true )
var = new MessageObject ( var , null , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetTwoStepPassword )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetTwoStepPassword )
var . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )
TwoStepVerificationActivity var = new TwoStepVerificationActivity ( 1 )
showAlertWithText ( LocaleController . getString ( "" , R . string . RestorePasswordNoEmailTitle ) , R . string . RestorePasswordNoEmailTitle , LocaleController . getString ( "" , R . string . RestorePasswordNoEmailText ) , R . string . RestorePasswordNoEmailText )
TwoStepVerificationActivity var = new TwoStepVerificationActivity ( 1 )
TwoStepVerificationActivity var = new TwoStepVerificationActivity ( 1 )
if ( var != null )
var = var . getBytes ( "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didRemovedTwoStepPassword )
byte var = null
FileLog . var ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetTwoStepPassword )
if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP )
Bitmap var = var . getBitmap ( )
var . setSpeakerphoneOn ( false )
var . setBluetoothScoOn ( false )
var . setSpeakerphoneOn ( true )
VoIPService . getSharedInstance ( ) . updateOutputGainControlState
if ( var . hasEarpiece ( ) )
var . setBluetoothScoOn ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeInCallActivity )
var . addView ( var = var , LayoutHelper . createFrame ( 38 , 38 , Gravity . BOTTOM | Gravity . CENTER_HORIZONTAL , 0 , 0 , 0 , 10 ) , 38 , Gravity . BOTTOM | Gravity . CENTER_HORIZONTAL , 0 , 0 , 0 , 10 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeInCallActivity )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 , 1 ) , "" , 0 , 1 , ObjectAnimator . ofFloat ( var , "" , 0 , var . getWidth ( ) / 2 - AndroidUtilities . dp ( 52 ) - var . getWidth ( ) / 2 ) , "" , 0 , var . getWidth ( ) / 2 - AndroidUtilities . dp ( 52 ) - var . getWidth ( ) / 2 , var , ObjectAnimator . ofFloat ( var , "" , 0 , - 135 ) , "" , 0 , - 135 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 )
var . playTogether ( var , ObjectAnimator . ofFloat ( var , "" , - 135 , 0 ) , "" , - 135 , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 1 ) , "" , 1 , ObjectAnimator . ofFloat ( var , "" , 1 ) , "" , 1 , ObjectAnimator . ofFloat ( var , "" , 1 ) , "" , 1 )
int var = getSharedPreferences ( "" , MODE_PRIVATE ) . getInt ( "" , 0 )
getSharedPreferences ( "" , MODE_PRIVATE ) . edit . putInt ( "" , var + 1 ) . apply
AlertDialog var = new AlertDialog . Builder ( VoIPActivity . this ) . setTitle ( LocaleController . getString ( "" , R . string . VoipFailed ) , R . string . VoipFailed ) . setMessage ( var ) . setPositiveButton ( LocaleController . getString ( "" , R . string . OK ) , R . string . OK , null ) . show
var . setChecked ( VoIPService . getSharedInstance ( ) . isMicMute )
if ( ! VoIPService . getSharedInstance ( ) . hasEarpiece && ! VoIPService . getSharedInstance ( ) . isBluetoothHeadsetConnected )
if ( VoIPService . getSharedInstance ( ) . isBluetoothHeadsetConnected )
var . drawBitmap ( var , null , new Rect ( 0 , 0 , 150 , 150 ) , 0 , 150 , 150 , new Paint ( Paint . FILTER_BITMAP_FLAG ) . FILTER_BITMAP_FLAG )
final Palette var = Palette . from ( var ) . generate
var . drawBitmap ( var , null , new Rect ( 0 , 0 , 50 , 50 ) , 0 , 50 , 50 , new Paint ( Paint . FILTER_BITMAP_FLAG ) . FILTER_BITMAP_FLAG )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . wallpapersDidLoaded )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
MessagesStorage . getInstance ( ) . getWallpapers
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . wallpapersDidLoaded )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var = new RadialProgressView ( var )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
FileLoader . getInstance ( var ) . loadFile ( var , null , 1 )
FileLoader . getInstance ( ) . cancelLoadFile ( var )
FileLoader . getInstance ( ) . cancelLoadFile ( var )
MessagesStorage . getInstance ( ) . putWallpapers ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )
FileLog . e ( var )
MessagesController . getInstance ( ) . sendTyping ( var . getDialogId ( ) , 6 , 0 )
