testdiff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
index bd33231..467570e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
@@ -60,16 +60,13 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.FileLoader;
+import org.telegram.messenger.ImageLocation;
 import org.telegram.messenger.LocationController;
-import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
-import org.telegram.messenger.UserConfig;
-import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.MessageObject;
-import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -88,6 +85,7 @@
 import org.telegram.ui.Components.AlertsCreator;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.CombinedDrawable;
 import org.telegram.ui.Components.EmptyTextProgressView;
 import org.telegram.ui.Components.LayoutHelper;
@@ -120,8 +118,7 @@
     private RecyclerListView listView;
     private RecyclerListView searchListView;
     private LocationActivitySearchAdapter searchAdapter;
-    private ImageView markerImageView;
-    private ImageView markerXImageView;
+    private View markerImageView;
     private ImageView locationButton;
     private ImageView routeButton;
     private LinearLayoutManager layoutManager;
@@ -155,13 +152,15 @@
     private Location userLocation;
     private int markerTop;
 
+    private TLRPC.TL_channelLocation chatLocation;
+    private TLRPC.TL_channelLocation initialLocation;
     private MessageObject messageObject;
-    private boolean userLocationMoved = false;
-    private boolean firstWas = false;
+    private boolean userLocationMoved;
+    private boolean firstWas;
     private CircleOptions circleOptions;
     private LocationActivityDelegate delegate;
 
-    private int liveLocationType;
+    private int locationType;
 
     private int overScrollHeight = AndroidUtilities.displaySize.x - ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(66);
 
@@ -170,25 +169,29 @@
     private final static int map_list_menu_satellite = 3;
     private final static int map_list_menu_hybrid = 4;
 
+    public final static int LOCATION_TYPE_SEND = 0;
+    public final static int LOCATION_TYPE_GROUP = 4;
+    public final static int LOCATION_TYPE_GROUP_VIEW = 5;
+
     public interface LocationActivityDelegate {
         void didSelectLocation(TLRPC.MessageMedia location, int live);
     }
 
-    public LocationActivity(int liveLocation) {
+    public LocationActivity(int type) {
         super();
-        liveLocationType = liveLocation;
+        locationType = type;
     }
 
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
         swipeBackEnabled = false;
-        NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.closeChats);
+        getNotificationCenter().addObserver(this, NotificationCenter.closeChats);
         NotificationCenter.getGlobalInstance().addObserver(this, NotificationCenter.locationPermissionGranted);
         if (messageObject != null && messageObject.isLiveLocation()) {
-            NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.didReceiveNewMessages);
-            NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.messagesDeleted);
-            NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.replaceMessagesObjects);
+            getNotificationCenter().addObserver(this, NotificationCenter.didReceiveNewMessages);
+            getNotificationCenter().addObserver(this, NotificationCenter.messagesDeleted);
+            getNotificationCenter().addObserver(this, NotificationCenter.replaceMessagesObjects);
         }
         return true;
     }
@@ -197,10 +200,10 @@
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
         NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.locationPermissionGranted);
-        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.closeChats);
-        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.didReceiveNewMessages);
-        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.messagesDeleted);
-        NotificationCenter.getInstance(currentAccount).removeObserver(this, NotificationCenter.replaceMessagesObjects);
+        getNotificationCenter().removeObserver(this, NotificationCenter.closeChats);
+        getNotificationCenter().removeObserver(this, NotificationCenter.didReceiveNewMessages);
+        getNotificationCenter().removeObserver(this, NotificationCenter.messagesDeleted);
+        getNotificationCenter().removeObserver(this, NotificationCenter.replaceMessagesObjects);
         try {
             if (googleMap != null) {
                 googleMap.setMyLocationEnabled(false);
@@ -266,7 +269,9 @@
         });
 
         ActionBarMenu menu = actionBar.createMenu();
-        if (messageObject != null) {
+        if (chatLocation != null) {
+            actionBar.setTitle(LocaleController.getString("ChatLocation", R.string.ChatLocation));
+        } else if (messageObject != null) {
             if (messageObject.isLiveLocation()) {
                 actionBar.setTitle(LocaleController.getString("AttachLiveLocation", R.string.AttachLiveLocation));
             } else {
@@ -280,6 +285,7 @@
         } else {
             actionBar.setTitle(LocaleController.getString("ShareLocation", R.string.ShareLocation));
 
+            if (locationType != LOCATION_TYPE_GROUP) {
             ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_search).setIsSearchField(true).setActionBarMenuItemSearchListener(new ActionBarMenuItem.ActionBarMenuItemSearchListener() {
                 @Override
                 public void onSearchExpand() {
@@ -320,6 +326,7 @@
             });
             item.setSearchFieldHint(LocaleController.getString("Search", R.string.Search));
         }
+        }
 
         otherItem = menu.addItem(0, R.drawable.ic_ab_other);
         otherItem.addSubItem(map_list_menu_map, R.drawable.msg_map, LocaleController.getString("Map", R.string.Map));
@@ -358,8 +365,8 @@
         locationButton.setContentDescription(LocaleController.getString("AccDescrMyLocation", R.string.AccDescrMyLocation));
         if (Build.VERSION.SDK_INT >= 21) {
             StateListAnimator animator = new StateListAnimator();
-            animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(locationButton, "translationZ", AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
-            animator.addState(new int[]{}, ObjectAnimator.ofFloat(locationButton, "translationZ", AndroidUtilities.dp(4), AndroidUtilities.dp(2)).setDuration(200));
+            animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(locationButton, View.TRANSLATION_Z, AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
+            animator.addState(new int[]{}, ObjectAnimator.ofFloat(locationButton, View.TRANSLATION_Z, AndroidUtilities.dp(4), AndroidUtilities.dp(2)).setDuration(200));
             locationButton.setStateListAnimator(animator);
             locationButton.setOutlineProvider(new ViewOutlineProvider() {
                 @SuppressLint("NewApi")
@@ -370,7 +377,11 @@
             });
         }
 
-        if (messageObject != null) {
+        if (chatLocation != null) {
+            userLocation = new Location("network");
+            userLocation.setLatitude(chatLocation.geo_point.lat);
+            userLocation.setLongitude(chatLocation.geo_point._long);
+        } else if (messageObject != null) {
             userLocation = new Location("network");
             userLocation.setLatitude(messageObject.messageOwner.media.geo.lat);
             userLocation.setLongitude(messageObject.messageOwner.media.geo._long);
@@ -390,7 +401,7 @@
         listView = new RecyclerListView(context);
         listView.setItemAnimator(null);
         listView.setLayoutAnimation(null);
-        listView.setAdapter(adapter = new LocationActivityAdapter(context, liveLocationType, dialogId));
+        listView.setAdapter(adapter = new LocationActivityAdapter(context, locationType, dialogId));
         listView.setVerticalScrollBarEnabled(false);
         listView.setLayoutManager(layoutManager = new LinearLayoutManager(context, LinearLayoutManager.VERTICAL, false) {
             @Override
@@ -411,6 +422,7 @@
                     return;
                 }
                 updateClipView(position);
+                if (locationType != LOCATION_TYPE_GROUP) {
                 if (dy > 0) {
                     if (!adapter.isPulledUp()) {
                         adapter.setPulledUp();
@@ -420,24 +432,60 @@
                     }
                 }
             }
+            }
         });
         listView.setOnItemClickListener((view, position) -> {
-            if (position == 1 && messageObject != null && !messageObject.isLiveLocation()) {
+            if (locationType == LOCATION_TYPE_GROUP) {
+                if (position == 1) {
+                    TLRPC.TL_messageMediaVenue venue = (TLRPC.TL_messageMediaVenue) adapter.getItem(position);
+                    if (venue == null) {
+                        return;
+                    }
+                    if (dialogId == 0) {
+                        delegate.didSelectLocation(venue, LOCATION_TYPE_GROUP);
+                        finishFragment();
+                    } else {
+                        final AlertDialog[] progressDialog = new AlertDialog[]{new AlertDialog(getParentActivity(), 3)};
+                        TLRPC.TL_channels_editLocation req = new TLRPC.TL_channels_editLocation();
+                        req.address = venue.address;
+                        req.channel = getMessagesController().getInputChannel(-(int) dialogId);
+                        req.geo_point = new TLRPC.TL_inputGeoPoint();
+                        req.geo_point.lat = venue.geo.lat;
+                        req.geo_point._long = venue.geo._long;
+                        int requestId = getConnectionsManager().sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> {
+                            try {
+                                progressDialog[0].dismiss();
+                            } catch (Throwable ignore) {
+
+                            }
+                            progressDialog[0] = null;
+                            delegate.didSelectLocation(venue, LOCATION_TYPE_GROUP);
+                            finishFragment();
+                        }));
+                        progressDialog[0].setOnCancelListener(dialog -> getConnectionsManager().cancelRequest(requestId, true));
+                        showDialog(progressDialog[0]);
+                    }
+                }
+            } else if (locationType == LOCATION_TYPE_GROUP_VIEW) {
+                if (googleMap != null) {
+                    googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(chatLocation.geo_point.lat, chatLocation.geo_point._long), googleMap.getMaxZoomLevel() - 4));
+                }
+            } else if (position == 1 && messageObject != null && !messageObject.isLiveLocation()) {
                 if (googleMap != null) {
                     googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(messageObject.messageOwner.media.geo.lat, messageObject.messageOwner.media.geo._long), googleMap.getMaxZoomLevel() - 4));
                 }
-            } else if (position == 1 && liveLocationType != 2) {
+            } else if (position == 1 && locationType != 2) {
                 if (delegate != null && userLocation != null) {
                     TLRPC.TL_messageMediaGeo location = new TLRPC.TL_messageMediaGeo();
                     location.geo = new TLRPC.TL_geoPoint();
                     location.geo.lat = AndroidUtilities.fixLocationCoord(userLocation.getLatitude());
                     location.geo._long = AndroidUtilities.fixLocationCoord(userLocation.getLongitude());
-                    delegate.didSelectLocation(location, liveLocationType);
+                    delegate.didSelectLocation(location, locationType);
                 }
                 finishFragment();
-            } else if (position == 2 && liveLocationType == 1 || position == 1 && liveLocationType == 2 || position == 3 && liveLocationType == 3) {
-                if (LocationController.getInstance(currentAccount).isSharingLocation(dialogId)) {
-                    LocationController.getInstance(currentAccount).removeSharingLocation(dialogId);
+            } else if (position == 2 && locationType == 1 || position == 1 && locationType == 2 || position == 3 && locationType == 3) {
+                if (getLocationController().isSharingLocation(dialogId)) {
+                    getLocationController().removeSharingLocation(dialogId);
                     finishFragment();
                 } else {
                     if (delegate == null || getParentActivity() == null) {
@@ -446,7 +494,7 @@
                     if (myLocation != null) {
                         TLRPC.User user = null;
                         if ((int) dialogId > 0) {
-                            user = MessagesController.getInstance(currentAccount).getUser((int) dialogId);
+                            user = getMessagesController().getUser((int) dialogId);
                         }
                         showDialog(AlertsCreator.createLocationUpdateDialog(getParentActivity(), user, param -> {
                             TLRPC.TL_messageMediaGeoLive location = new TLRPC.TL_messageMediaGeoLive();
@@ -454,7 +502,7 @@
                             location.geo.lat = AndroidUtilities.fixLocationCoord(myLocation.getLatitude());
                             location.geo._long = AndroidUtilities.fixLocationCoord(myLocation.getLongitude());
                             location.period = param;
-                            delegate.didSelectLocation(location, liveLocationType);
+                            delegate.didSelectLocation(location, locationType);
                             finishFragment();
                         }));
                     }
@@ -463,11 +511,12 @@
                 Object object = adapter.getItem(position);
                 if (object instanceof TLRPC.TL_messageMediaVenue) {
                     if (object != null && delegate != null) {
-                        delegate.didSelectLocation((TLRPC.TL_messageMediaVenue) object, liveLocationType);
+                        delegate.didSelectLocation((TLRPC.TL_messageMediaVenue) object, locationType);
                     }
                     finishFragment();
                 } else if (object instanceof LiveLocation) {
-                    googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(((LiveLocation) object).marker.getPosition(), googleMap.getMaxZoomLevel() - 4));
+                    LiveLocation liveLocation = (LiveLocation) object;
+                    googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(liveLocation.marker.getPosition(), googleMap.getMaxZoomLevel() - 4));
                 }
             }
         });
@@ -484,7 +533,7 @@
         mapView = new MapView(context) {
             @Override
             public boolean onInterceptTouchEvent(MotionEvent ev) {
-                if (messageObject == null) {
+                if (messageObject == null && chatLocation == null) {
                     if (ev.getAction() == MotionEvent.ACTION_DOWN) {
                         if (animatorSet != null) {
                             animatorSet.cancel();
@@ -492,8 +541,7 @@
                         animatorSet = new AnimatorSet();
                         animatorSet.setDuration(200);
                         animatorSet.playTogether(
-                                ObjectAnimator.ofFloat(markerImageView, "translationY", markerTop + -AndroidUtilities.dp(10)),
-                                ObjectAnimator.ofFloat(markerXImageView, "alpha", 1.0f));
+                                ObjectAnimator.ofFloat(markerImageView, View.TRANSLATION_Y, markerTop - AndroidUtilities.dp(10)));
                         animatorSet.start();
                     } else if (ev.getAction() == MotionEvent.ACTION_UP) {
                         if (animatorSet != null) {
@@ -502,15 +550,15 @@
                         animatorSet = new AnimatorSet();
                         animatorSet.setDuration(200);
                         animatorSet.playTogether(
-                                ObjectAnimator.ofFloat(markerImageView, "translationY", markerTop),
-                                ObjectAnimator.ofFloat(markerXImageView, "alpha", 0.0f));
+                                ObjectAnimator.ofFloat(markerImageView, View.TRANSLATION_Y, markerTop));
                         animatorSet.start();
+                        adapter.fetchLocationAddress();
                     }
                     if (ev.getAction() == MotionEvent.ACTION_MOVE) {
                         if (!userLocationMoved) {
                             AnimatorSet animatorSet = new AnimatorSet();
                             animatorSet.setDuration(200);
-                            animatorSet.play(ObjectAnimator.ofFloat(locationButton, "alpha", 1.0f));
+                            animatorSet.play(ObjectAnimator.ofFloat(locationButton, View.ALPHA, 1.0f));
                             animatorSet.start();
                             userLocationMoved = true;
                         }
@@ -556,16 +604,30 @@
         shadow.setBackgroundResource(R.drawable.header_shadow_reverse);
         mapViewClip.addView(shadow, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 3, Gravity.LEFT | Gravity.BOTTOM));
 
-        if (messageObject == null) {
-            markerImageView = new ImageView(context);
-            markerImageView.setImageResource(R.drawable.map_pin);
-            mapViewClip.addView(markerImageView, LayoutHelper.createFrame(24, 42, Gravity.TOP | Gravity.CENTER_HORIZONTAL));
+        if (messageObject == null && chatLocation == null) {
+            if (locationType == LOCATION_TYPE_GROUP && dialogId != 0) {
+                TLRPC.Chat chat = getMessagesController().getChat(-(int) dialogId);
+                if (chat != null) {
+                    FrameLayout frameLayout1 = new FrameLayout(context);
+                    frameLayout1.setBackgroundResource(R.drawable.livepin);
+                    mapViewClip.addView(frameLayout1, LayoutHelper.createFrame(62, 76, Gravity.TOP | Gravity.CENTER_HORIZONTAL));
 
-            markerXImageView = new ImageView(context);
-            markerXImageView.setAlpha(0.0f);
-            markerXImageView.setColorFilter(new PorterDuffColorFilter(Theme.getColor(Theme.key_location_markerX), PorterDuff.Mode.MULTIPLY));
-            markerXImageView.setImageResource(R.drawable.place_x);
-            mapViewClip.addView(markerXImageView, LayoutHelper.createFrame(14, 14, Gravity.TOP | Gravity.CENTER_HORIZONTAL));
+                    BackupImageView backupImageView = new BackupImageView(context);
+                    backupImageView.setRoundRadius(AndroidUtilities.dp(26));
+                    backupImageView.setImage(ImageLocation.getForChat(chat, false), "50_50", new AvatarDrawable(chat), chat);
+                    frameLayout1.addView(backupImageView, LayoutHelper.createFrame(52, 52, Gravity.LEFT | Gravity.TOP, 5, 5, 0, 0));
+
+                    markerImageView = frameLayout1;
+                    markerImageView.setTag(1);
+                }
+            }
+
+            if (markerImageView == null) {
+                ImageView imageView = new ImageView(context);
+                imageView.setImageResource(R.drawable.map_pin2);
+                mapViewClip.addView(imageView, LayoutHelper.createFrame(28, 48, Gravity.TOP | Gravity.CENTER_HORIZONTAL));
+                markerImageView = imageView;
+            }
 
             emptyView = new EmptyTextProgressView(context);
             emptyView.setText(LocaleController.getString("NoResult", R.string.NoResult));
@@ -589,11 +651,11 @@
             searchListView.setOnItemClickListener((view, position) -> {
                 TLRPC.TL_messageMediaVenue object = searchAdapter.getItem(position);
                 if (object != null && delegate != null) {
-                    delegate.didSelectLocation(object, liveLocationType);
+                    delegate.didSelectLocation(object, locationType);
                 }
                 finishFragment();
             });
-        } else if (!messageObject.isLiveLocation()) {
+        } else if (messageObject != null && !messageObject.isLiveLocation() || chatLocation != null) {
             routeButton = new ImageView(context);
             drawable = Theme.createSimpleSelectorCircleDrawable(AndroidUtilities.dp(56), Theme.getColor(Theme.key_chats_actionBackground), Theme.getColor(Theme.key_chats_actionPressedBackground));
             if (Build.VERSION.SDK_INT < 21) {
@@ -609,8 +671,8 @@
             routeButton.setScaleType(ImageView.ScaleType.CENTER);
             if (Build.VERSION.SDK_INT >= 21) {
                 StateListAnimator animator = new StateListAnimator();
-                animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(routeButton, "translationZ", AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
-                animator.addState(new int[]{}, ObjectAnimator.ofFloat(routeButton, "translationZ", AndroidUtilities.dp(4), AndroidUtilities.dp(2)).setDuration(200));
+                animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(routeButton, View.TRANSLATION_Z, AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
+                animator.addState(new int[]{}, ObjectAnimator.ofFloat(routeButton, View.TRANSLATION_Z, AndroidUtilities.dp(4), AndroidUtilities.dp(2)).setDuration(200));
                 routeButton.setStateListAnimator(animator);
                 routeButton.setOutlineProvider(new ViewOutlineProvider() {
                     @SuppressLint("NewApi")
@@ -633,7 +695,12 @@
                 }
                 if (myLocation != null) {
                     try {
-                        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Locale.US, "http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f", myLocation.getLatitude(), myLocation.getLongitude(), messageObject.messageOwner.media.geo.lat, messageObject.messageOwner.media.geo._long)));
+                        Intent intent;
+                        if (messageObject != null) {
+                            intent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Locale.US, "http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f", myLocation.getLatitude(), myLocation.getLongitude(), messageObject.messageOwner.media.geo.lat, messageObject.messageOwner.media.geo._long)));
+                        } else {
+                            intent = new Intent(Intent.ACTION_VIEW, Uri.parse(String.format(Locale.US, "http://maps.google.com/maps?saddr=%f,%f&daddr=%f,%f", myLocation.getLatitude(), myLocation.getLongitude(), chatLocation.geo_point.lat, chatLocation.geo_point._long)));
+                        }
                         getParentActivity().startActivity(intent);
                     } catch (Exception e) {
                         FileLog.e(e);
@@ -641,10 +708,14 @@
                 }
             });
 
+            if (chatLocation != null) {
+                adapter.setChatLocation(chatLocation);
+            } else if (messageObject != null) {
             adapter.setMessageObject(messageObject);
         }
+        }
 
-        if (messageObject != null && !messageObject.isLiveLocation()) {
+        if (messageObject != null && !messageObject.isLiveLocation() || chatLocation != null) {
             mapViewClip.addView(locationButton, LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 56 : 60, Build.VERSION.SDK_INT >= 21 ? 56 : 60, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? 14 : 0, 0, LocaleController.isRTL ? 0 : 14, 43));
         } else {
             mapViewClip.addView(locationButton, LayoutHelper.createFrame(Build.VERSION.SDK_INT >= 21 ? 56 : 60, Build.VERSION.SDK_INT >= 21 ? 56 : 60, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? 14 : 0, 0, LocaleController.isRTL ? 0 : 14, 14));
@@ -659,7 +730,7 @@
                     }
                 }
             }
-            if (messageObject != null) {
+            if (messageObject != null || chatLocation != null) {
                 if (myLocation != null && googleMap != null) {
                     googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(myLocation.getLatitude(), myLocation.getLongitude()), googleMap.getMaxZoomLevel() - 4));
                 }
@@ -667,7 +738,7 @@
                 if (myLocation != null && googleMap != null) {
                     AnimatorSet animatorSet = new AnimatorSet();
                     animatorSet.setDuration(200);
-                    animatorSet.play(ObjectAnimator.ofFloat(locationButton, "alpha", 0.0f));
+                    animatorSet.play(ObjectAnimator.ofFloat(locationButton, View.ALPHA, 0.0f));
                     animatorSet.start();
                     adapter.setCustomLocation(null);
                     userLocationMoved = false;
@@ -675,8 +746,12 @@
                 }
             }
         });
-        if (messageObject == null) {
+        if (messageObject == null && chatLocation == null) {
+            if (initialLocation == null) {
             locationButton.setAlpha(0.0f);
+            } else {
+                userLocationMoved = true;
+            }
         }
 
         frameLayout.addView(actionBar);
@@ -755,15 +830,15 @@
             liveLocation = new LiveLocation();
             liveLocation.object = message;
             if (liveLocation.object.from_id != 0) {
-                liveLocation.user = MessagesController.getInstance(currentAccount).getUser(liveLocation.object.from_id);
+                liveLocation.user = getMessagesController().getUser(liveLocation.object.from_id);
                 liveLocation.id = liveLocation.object.from_id;
             } else {
                 int did = (int) MessageObject.getDialogId(message);
                 if (did > 0) {
-                    liveLocation.user = MessagesController.getInstance(currentAccount).getUser(did);
+                    liveLocation.user = getMessagesController().getUser(did);
                     liveLocation.id = did;
                 } else {
-                    liveLocation.chat = MessagesController.getInstance(currentAccount).getChat(-did);
+                    liveLocation.chat = getMessagesController().getChat(-did);
                     liveLocation.id = did;
                 }
             }
@@ -777,8 +852,8 @@
                     liveLocation.marker = googleMap.addMarker(options);
                     markers.add(liveLocation);
                     markersMap.put(liveLocation.id, liveLocation);
-                    LocationController.SharingLocationInfo myInfo = LocationController.getInstance(currentAccount).getSharingLocationInfo(dialogId);
-                    if (liveLocation.id == UserConfig.getInstance(currentAccount).getClientUserId() && myInfo != null && liveLocation.object.id == myInfo.mid && myLocation != null) {
+                    LocationController.SharingLocationInfo myInfo = getLocationController().getSharingLocationInfo(dialogId);
+                    if (liveLocation.id == getUserConfig().getClientUserId() && myInfo != null && liveLocation.object.id == myInfo.mid && myLocation != null) {
                         liveLocation.marker.setPosition(new LatLng(myLocation.getLatitude(), myLocation.getLongitude()));
                     }
                 }
@@ -792,12 +867,44 @@
         return liveLocation;
     }
 
+    private LiveLocation addUserMarker(TLRPC.TL_channelLocation location) {
+        LatLng latLng = new LatLng(location.geo_point.lat, location.geo_point._long);
+        LiveLocation liveLocation = new LiveLocation();
+        int did = (int) dialogId;
+        if (did > 0) {
+            liveLocation.user = getMessagesController().getUser(did);
+            liveLocation.id = did;
+        } else {
+            liveLocation.chat = getMessagesController().getChat(-did);
+            liveLocation.id = did;
+        }
+
+        try {
+            MarkerOptions options = new MarkerOptions().position(latLng);
+            Bitmap bitmap = createUserBitmap(liveLocation);
+            if (bitmap != null) {
+                options.icon(BitmapDescriptorFactory.fromBitmap(bitmap));
+                options.anchor(0.5f, 0.907f);
+                liveLocation.marker = googleMap.addMarker(options);
+                markers.add(liveLocation);
+                markersMap.put(liveLocation.id, liveLocation);
+            }
+        } catch (Exception e) {
+            FileLog.e(e);
+        }
+
+        return liveLocation;
+    }
+
     private void onMapInit() {
         if (googleMap == null) {
             return;
         }
 
-        if (messageObject != null) {
+        if (chatLocation != null) {
+            LiveLocation liveLocation = addUserMarker(chatLocation);
+            googleMap.moveCamera(CameraUpdateFactory.newLatLngZoom(liveLocation.marker.getPosition(), googleMap.getMaxZoomLevel() - 4));
+        } else if (messageObject != null) {
             if (messageObject.isLiveLocation()) {
                 LiveLocation liveLocation = addUserMarker(messageObject.messageOwner);
                 if (!getRecentLocations()) {
@@ -806,7 +913,7 @@
             } else {
                 LatLng latLng = new LatLng(userLocation.getLatitude(), userLocation.getLongitude());
                 try {
-                    googleMap.addMarker(new MarkerOptions().position(latLng).icon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin)));
+                    googleMap.addMarker(new MarkerOptions().position(latLng).icon(BitmapDescriptorFactory.fromResource(R.drawable.map_pin2)));
                 } catch (Exception e) {
                     FileLog.e(e);
                 }
@@ -817,9 +924,17 @@
             }
         } else {
             userLocation = new Location("network");
+            if (initialLocation != null) {
+                LatLng latLng = new LatLng(initialLocation.geo_point.lat, initialLocation.geo_point._long);
+                googleMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, googleMap.getMaxZoomLevel() - 4));
+                userLocation.setLatitude(initialLocation.geo_point.lat);
+                userLocation.setLongitude(initialLocation.geo_point._long);
+                adapter.setCustomLocation(userLocation);
+            } else {
             userLocation.setLatitude(20.659322);
             userLocation.setLongitude(-11.406250);
         }
+        }
 
         try {
             googleMap.setMyLocationEnabled(true);
@@ -832,7 +947,7 @@
         //googleMap.getUiSettings().setMapToolbarEnabled(false);
         googleMap.setOnMyLocationChangeListener(location -> {
             positionMarker(location);
-            LocationController.getInstance(currentAccount).setGoogleMapLocation(location, isFirstLocation);
+            getLocationController().setGoogleMapLocation(location, isFirstLocation);
             isFirstLocation = false;
         });
         positionMarker(myLocation = getLastLocation());
@@ -943,8 +1058,7 @@
                 mapViewClip.setTranslationY(Math.min(0, top));
                 mapView.setTranslationY(Math.max(0, -top / 2));
                 if (markerImageView != null) {
-                    markerImageView.setTranslationY(markerTop = -top - AndroidUtilities.dp(42) + height / 2);
-                    markerXImageView.setTranslationY(-top - AndroidUtilities.dp(7) + height / 2);
+                    markerImageView.setTranslationY(markerTop = -top - AndroidUtilities.dp(markerImageView.getTag() == null ? 48 : 69) + height / 2);
                 }
                 if (routeButton != null) {
                     routeButton.setTranslationY(top);
@@ -995,10 +1109,10 @@
             adapter.notifyDataSetChanged();
 
             if (resume) {
-                layoutManager.scrollToPositionWithOffset(0, -AndroidUtilities.dp(32 + (liveLocationType == 1 || liveLocationType == 2 ? 66 : 0)));
+                layoutManager.scrollToPositionWithOffset(0, -AndroidUtilities.dp(32 + (locationType == 1 || locationType == 2 ? 66 : 0)));
                 updateClipView(layoutManager.findFirstVisibleItemPosition());
                 listView.post(() -> {
-                    layoutManager.scrollToPositionWithOffset(0, -AndroidUtilities.dp(32 + (liveLocationType == 1 || liveLocationType == 2 ? 66 : 0)));
+                    layoutManager.scrollToPositionWithOffset(0, -AndroidUtilities.dp(32 + (locationType == 1 || locationType == 2 ? 66 : 0)));
                     updateClipView(layoutManager.findFirstVisibleItemPosition());
                 });
             } else {
@@ -1025,12 +1139,12 @@
             return;
         }
         myLocation = new Location(location);
-        LiveLocation liveLocation = markersMap.get(UserConfig.getInstance(currentAccount).getClientUserId());
-        LocationController.SharingLocationInfo myInfo = LocationController.getInstance(currentAccount).getSharingLocationInfo(dialogId);
+        LiveLocation liveLocation = markersMap.get(getUserConfig().getClientUserId());
+        LocationController.SharingLocationInfo myInfo = getLocationController().getSharingLocationInfo(dialogId);
         if (liveLocation != null && myInfo != null && liveLocation.object.id == myInfo.mid) {
             liveLocation.marker.setPosition(new LatLng(location.getLatitude(), location.getLongitude()));
         }
-        if (messageObject == null && googleMap != null) {
+        if (messageObject == null && chatLocation == null && googleMap != null) {
             LatLng latLng = new LatLng(location.getLatitude(), location.getLongitude());
             if (adapter != null) {
                 if (adapter.isPulledUp()) {
@@ -1059,16 +1173,25 @@
         dialogId = messageObject.getDialogId();
     }
 
+    public void setChatLocation(int chatId, TLRPC.TL_channelLocation location) {
+        dialogId = -chatId;
+        chatLocation = location;
+    }
+
     public void setDialogId(long did) {
         dialogId = did;
     }
 
+    public void setInitialLocation(TLRPC.TL_channelLocation location) {
+        initialLocation = location;
+    }
+
     private void fetchRecentLocations(ArrayList<TLRPC.Message> messages) {
         LatLngBounds.Builder builder = null;
         if (firstFocus) {
             builder = new LatLngBounds.Builder();
         }
-        int date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+        int date = getConnectionsManager().getCurrentTime();
         for (int a = 0; a < messages.size(); a++) {
             TLRPC.Message message = messages.get(a);
             if (message.date + message.media.period > date) {
@@ -1100,7 +1223,7 @@
     }
 
     private boolean getRecentLocations() {
-        ArrayList<TLRPC.Message> messages = LocationController.getInstance(currentAccount).locationsCache.get(messageObject.getDialogId());
+        ArrayList<TLRPC.Message> messages = getLocationController().locationsCache.get(messageObject.getDialogId());
         if (messages != null && messages.isEmpty()) {
             fetchRecentLocations(messages);
         } else {
@@ -1108,16 +1231,16 @@
         }
         int lower_id = (int) dialogId;
         if (lower_id < 0) {
-            TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-lower_id);
+            TLRPC.Chat chat = getMessagesController().getChat(-lower_id);
             if (ChatObject.isChannel(chat) && !chat.megagroup) {
                 return false;
             }
         }
         TLRPC.TL_messages_getRecentLocations req = new TLRPC.TL_messages_getRecentLocations();
         final long dialog_id = messageObject.getDialogId();
-        req.peer = MessagesController.getInstance(currentAccount).getInputPeer((int) dialog_id);
+        req.peer = getMessagesController().getInputPeer((int) dialog_id);
         req.limit = 100;
-        ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> {
+        getConnectionsManager().sendRequest(req, (response, error) -> {
             if (response != null) {
                 AndroidUtilities.runOnUIThread(() -> {
                     if (googleMap == null) {
@@ -1130,11 +1253,11 @@
                             a--;
                         }
                     }
-                    MessagesStorage.getInstance(currentAccount).putUsersAndChats(res.users, res.chats, true, true);
-                    MessagesController.getInstance(currentAccount).putUsers(res.users, false);
-                    MessagesController.getInstance(currentAccount).putChats(res.chats, false);
-                    LocationController.getInstance(currentAccount).locationsCache.put(dialog_id, res.messages);
-                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.liveLocationsCacheChanged, dialog_id);
+                    getMessagesStorage().putUsersAndChats(res.users, res.chats, true, true);
+                    getMessagesController().putUsers(res.users, false);
+                    getMessagesController().putChats(res.chats, false);
+                    getLocationController().locationsCache.put(dialog_id, res.messages);
+                    getNotificationCenter().postNotificationName(NotificationCenter.liveLocationsCacheChanged, dialog_id);
                     fetchRecentLocations(res.messages);
                 });
             }
@@ -1188,7 +1311,7 @@
                 }
                 LiveLocation liveLocation = markersMap.get(getMessageId(messageObject.messageOwner));
                 if (liveLocation != null) {
-                    LocationController.SharingLocationInfo myInfo = LocationController.getInstance(currentAccount).getSharingLocationInfo(did);
+                    LocationController.SharingLocationInfo myInfo = getLocationController().getSharingLocationInfo(did);
                     if (myInfo == null || myInfo.mid != messageObject.getId()) {
                         liveLocation.marker.setPosition(new LatLng(messageObject.messageOwner.media.geo.lat, messageObject.messageOwner.media.geo._long));
                     }
@@ -1298,8 +1421,6 @@
                 new ThemeDescription(routeButton, ThemeDescription.FLAG_BACKGROUNDFILTER, null, null, null, null, Theme.key_chats_actionBackground),
                 new ThemeDescription(routeButton, ThemeDescription.FLAG_BACKGROUNDFILTER | ThemeDescription.FLAG_DRAWABLESELECTEDSTATE, null, null, null, null, Theme.key_chats_actionPressedBackground),
 
-                new ThemeDescription(markerXImageView, 0, null, null, null, null, Theme.key_location_markerX),
-
                 new ThemeDescription(listView, 0, new Class[]{GraySectionCell.class}, new String[]{"textView"}, null, null, null, Theme.key_graySectionText),
                 new ThemeDescription(listView, ThemeDescription.FLAG_CELLBACKGROUNDCOLOR, new Class[]{GraySectionCell.class}, null, null, null, Theme.key_graySection),
 
