testdiff --git a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
index 3777d46..c3daa0f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/StickersActivity.java
@@ -18,7 +18,7 @@
 import android.widget.FrameLayout;
 import android.widget.Toast;
 
-import org.telegram.messenger.DataQuery;
+import org.telegram.messenger.MediaDataController;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
@@ -130,9 +130,9 @@
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
-        DataQuery.getInstance(currentAccount).checkStickers(currentType);
-        if (currentType == DataQuery.TYPE_IMAGE) {
-            DataQuery.getInstance(currentAccount).checkFeaturedStickers();
+        MediaDataController.getInstance(currentAccount).checkStickers(currentType);
+        if (currentType == MediaDataController.TYPE_IMAGE) {
+            MediaDataController.getInstance(currentAccount).checkFeaturedStickers();
         }
         NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.stickersDidLoad);
         NotificationCenter.getInstance(currentAccount).addObserver(this, NotificationCenter.archivedStickersCountDidLoad);
@@ -154,7 +154,7 @@
     public View createView(Context context) {
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         actionBar.setAllowOverlayTitle(true);
-        if (currentType == DataQuery.TYPE_IMAGE) {
+        if (currentType == MediaDataController.TYPE_IMAGE) {
             actionBar.setTitle(LocaleController.getString("StickersName", R.string.StickersName));
         } else {
             actionBar.setTitle(LocaleController.getString("Masks", R.string.Masks));
@@ -188,7 +188,7 @@
         listView.setOnItemClickListener((view, position) -> {
             if (position >= stickersStartRow && position < stickersEndRow && getParentActivity() != null) {
                 sendReorder();
-                final TLRPC.TL_messages_stickerSet stickerSet = DataQuery.getInstance(currentAccount).getStickerSets(currentType).get(position - stickersStartRow);
+                final TLRPC.TL_messages_stickerSet stickerSet = MediaDataController.getInstance(currentAccount).getStickerSets(currentType).get(position - stickersStartRow);
                 ArrayList<TLRPC.Document> stickers = stickerSet.documents;
                 if (stickers == null || stickers.isEmpty()) {
                     return;
@@ -201,7 +201,7 @@
                 sendReorder();
                 presentFragment(new ArchivedStickersActivity(currentType));
             } else if (position == masksRow) {
-                presentFragment(new StickersActivity(DataQuery.TYPE_MASK));
+                presentFragment(new StickersActivity(MediaDataController.TYPE_MASK));
             } else if (position == suggestRow) {
                 AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                 builder.setTitle(LocaleController.getString("SuggestStickers", R.string.SuggestStickers));
@@ -242,11 +242,11 @@
         if (!needReorder) {
             return;
         }
-        DataQuery.getInstance(currentAccount).calcNewHash(currentType);
+        MediaDataController.getInstance(currentAccount).calcNewHash(currentType);
         needReorder = false;
         TLRPC.TL_messages_reorderStickerSets req = new TLRPC.TL_messages_reorderStickerSets();
-        req.masks = currentType == DataQuery.TYPE_MASK;
-        ArrayList<TLRPC.TL_messages_stickerSet> arrayList = DataQuery.getInstance(currentAccount).getStickerSets(currentType);
+        req.masks = currentType == MediaDataController.TYPE_MASK;
+        ArrayList<TLRPC.TL_messages_stickerSet> arrayList = MediaDataController.getInstance(currentAccount).getStickerSets(currentType);
         for (int a = 0; a < arrayList.size(); a++) {
             req.order.add(arrayList.get(a).set.id);
         }
@@ -258,7 +258,7 @@
 
     private void updateRows() {
         rowCount = 0;
-        if (currentType == DataQuery.TYPE_IMAGE) {
+        if (currentType == MediaDataController.TYPE_IMAGE) {
             suggestRow = rowCount++;
             featuredRow = rowCount++;
             featuredInfoRow = rowCount++;
@@ -270,7 +270,7 @@
             masksRow = -1;
             masksInfoRow = -1;
         }
-        if (DataQuery.getInstance(currentAccount).getArchivedStickersCount(currentType) != 0) {
+        if (MediaDataController.getInstance(currentAccount).getArchivedStickersCount(currentType) != 0) {
             archivedRow = rowCount++;
             archivedInfoRow = rowCount++;
         } else {
@@ -278,7 +278,7 @@
             archivedInfoRow = -1;
         }
 
-        ArrayList<TLRPC.TL_messages_stickerSet> stickerSets = DataQuery.getInstance(currentAccount).getStickerSets(currentType);
+        ArrayList<TLRPC.TL_messages_stickerSet> stickerSets = MediaDataController.getInstance(currentAccount).getStickerSets(currentType);
         if (!stickerSets.isEmpty()) {
             stickersStartRow = rowCount;
             stickersEndRow = rowCount + stickerSets.size();
@@ -318,7 +318,7 @@
         @Override
         public long getItemId(int i) {
             if (i >= stickersStartRow && i < stickersEndRow) {
-                ArrayList<TLRPC.TL_messages_stickerSet> arrayList = DataQuery.getInstance(currentAccount).getStickerSets(currentType);
+                ArrayList<TLRPC.TL_messages_stickerSet> arrayList = MediaDataController.getInstance(currentAccount).getStickerSets(currentType);
                 return arrayList.get(i - stickersStartRow).set.id;
             } else if (i == suggestRow || i == suggestInfoRow || i == archivedRow || i == archivedInfoRow || i == featuredRow || i == featuredInfoRow || i == masksRow || i == masksInfoRow) {
                 return Integer.MIN_VALUE;
@@ -328,9 +328,9 @@
 
         private void processSelectionOption(int which, TLRPC.TL_messages_stickerSet stickerSet) {
             if (which == 0) {
-                DataQuery.getInstance(currentAccount).removeStickersSet(getParentActivity(), stickerSet.set, !stickerSet.set.archived ? 1 : 2, StickersActivity.this, true);
+                MediaDataController.getInstance(currentAccount).removeStickersSet(getParentActivity(), stickerSet.set, !stickerSet.set.archived ? 1 : 2, StickersActivity.this, true);
             } else if (which == 1) {
-                DataQuery.getInstance(currentAccount).removeStickersSet(getParentActivity(), stickerSet.set, 0, StickersActivity.this, true);
+                MediaDataController.getInstance(currentAccount).removeStickersSet(getParentActivity(), stickerSet.set, 0, StickersActivity.this, true);
             } else if (which == 2) {
                 try {
                     Intent intent = new Intent(Intent.ACTION_SEND);
@@ -356,7 +356,7 @@
         public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
             switch (holder.getItemViewType()) {
                 case 0:
-                    ArrayList<TLRPC.TL_messages_stickerSet> arrayList = DataQuery.getInstance(currentAccount).getStickerSets(currentType);
+                    ArrayList<TLRPC.TL_messages_stickerSet> arrayList = MediaDataController.getInstance(currentAccount).getStickerSets(currentType);
                     int row = position - stickersStartRow;
                     ((StickerSetCell) holder.itemView).setStickersSet(arrayList.get(row), row != arrayList.size() - 1);
                     break;
@@ -384,7 +384,7 @@
                             ((TextInfoPrivacyCell) holder.itemView).setText(text);
                         }
                     } else if (position == archivedInfoRow) {
-                        if (currentType == DataQuery.TYPE_IMAGE) {
+                        if (currentType == MediaDataController.TYPE_IMAGE) {
                             ((TextInfoPrivacyCell) holder.itemView).setText(LocaleController.getString("ArchivedStickersInfo", R.string.ArchivedStickersInfo));
                         } else {
                             ((TextInfoPrivacyCell) holder.itemView).setText(LocaleController.getString("ArchivedMasksInfo", R.string.ArchivedMasksInfo));
@@ -395,10 +395,10 @@
                     break;
                 case 2:
                     if (position == featuredRow) {
-                        int count = DataQuery.getInstance(currentAccount).getUnreadStickerSets().size();
+                        int count = MediaDataController.getInstance(currentAccount).getUnreadStickerSets().size();
                         ((TextSettingsCell) holder.itemView).setTextAndValue(LocaleController.getString("FeaturedStickers", R.string.FeaturedStickers), count != 0 ? String.format("%d", count) : "", false);
                     } else if (position == archivedRow) {
-                        if (currentType == DataQuery.TYPE_IMAGE) {
+                        if (currentType == MediaDataController.TYPE_IMAGE) {
                             ((TextSettingsCell) holder.itemView).setText(LocaleController.getString("ArchivedStickers", R.string.ArchivedStickers), false);
                         } else {
                             ((TextSettingsCell) holder.itemView).setText(LocaleController.getString("ArchivedMasks", R.string.ArchivedMasks), false);
@@ -453,7 +453,7 @@
                         builder.setTitle(stickerSet.set.title);
                         CharSequence[] items;
                         final int[] options;
-                        if (currentType == DataQuery.TYPE_IMAGE) {
+                        if (currentType == MediaDataController.TYPE_IMAGE) {
                             if (stickerSet.set.official) {
                                 options = new int[]{0};
                                 items = new CharSequence[]{
@@ -523,7 +523,7 @@
             if (fromIndex != toIndex) {
                 needReorder = true;
             }
-            ArrayList<TLRPC.TL_messages_stickerSet> arrayList = DataQuery.getInstance(currentAccount).getStickerSets(currentType);
+            ArrayList<TLRPC.TL_messages_stickerSet> arrayList = MediaDataController.getInstance(currentAccount).getStickerSets(currentType);
             TLRPC.TL_messages_stickerSet from = arrayList.get(fromIndex - stickersStartRow);
             arrayList.set(fromIndex - stickersStartRow, arrayList.get(toIndex - stickersStartRow));
             arrayList.set(toIndex - stickersStartRow, from);
