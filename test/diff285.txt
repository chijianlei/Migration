testdiff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index cebacbe..e271187 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -46,7 +46,7 @@
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.DataQuery;
+import org.telegram.messenger.MediaDataController;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.MessagesController;
@@ -327,7 +327,7 @@
     private final static int gotochat = 7;
 
     public MediaActivity(Bundle args, int[] media) {
-        this(args, media, null, DataQuery.MEDIA_PHOTOVIDEO);
+        this(args, media, null, MediaDataController.MEDIA_PHOTOVIDEO);
     }
 
     public MediaActivity(Bundle args, int[] media, SharedMediaData[] mediaData, int initTab) {
@@ -387,16 +387,16 @@
     public View createView(Context context) {
         for (int a = 0; a < 10; a++) {
             cellCache.add(new SharedPhotoVideoCell(context));
-            if (initialTab == DataQuery.MEDIA_MUSIC) {
+            if (initialTab == MediaDataController.MEDIA_MUSIC) {
                 SharedAudioCell cell = new SharedAudioCell(context) {
                     @Override
                     public boolean needPlayMessage(MessageObject messageObject) {
                         if (messageObject.isVoice() || messageObject.isRoundVideo()) {
                             boolean result = MediaController.getInstance().playMessage(messageObject);
-                            MediaController.getInstance().setVoiceMessagesPlaylist(result ? sharedMediaData[DataQuery.MEDIA_MUSIC].messages : null, false);
+                            MediaController.getInstance().setVoiceMessagesPlaylist(result ? sharedMediaData[MediaDataController.MEDIA_MUSIC].messages : null, false);
                             return result;
                         } else if (messageObject.isMusic()) {
-                            return MediaController.getInstance().setPlaylist(sharedMediaData[DataQuery.MEDIA_MUSIC].messages, messageObject);
+                            return MediaController.getInstance().setPlaylist(sharedMediaData[MediaDataController.MEDIA_MUSIC].messages, messageObject);
                         }
                         return false;
                     }
@@ -1181,22 +1181,22 @@
                     if (visibleItemCount != 0 && firstVisibleItem + visibleItemCount > totalItemCount - 2 && !sharedMediaData[mediaPage.selectedType].loading) {
                         int type;
                         if (mediaPage.selectedType == 0) {
-                            type = DataQuery.MEDIA_PHOTOVIDEO;
+                            type = MediaDataController.MEDIA_PHOTOVIDEO;
                         } else if (mediaPage.selectedType == 1) {
-                            type = DataQuery.MEDIA_FILE;
+                            type = MediaDataController.MEDIA_FILE;
                         } else if (mediaPage.selectedType == 2) {
-                            type = DataQuery.MEDIA_AUDIO;
+                            type = MediaDataController.MEDIA_AUDIO;
                         } else if (mediaPage.selectedType == 4) {
-                            type = DataQuery.MEDIA_MUSIC;
+                            type = MediaDataController.MEDIA_MUSIC;
                         } else {
-                            type = DataQuery.MEDIA_URL;
+                            type = MediaDataController.MEDIA_URL;
                         }
                         if (!sharedMediaData[mediaPage.selectedType].endReached[0]) {
                             sharedMediaData[mediaPage.selectedType].loading = true;
-                            DataQuery.getInstance(currentAccount).loadMedia(dialog_id, 50, sharedMediaData[mediaPage.selectedType].max_id[0], type, 1, classGuid);
+                            MediaDataController.getInstance(currentAccount).loadMedia(dialog_id, 50, sharedMediaData[mediaPage.selectedType].max_id[0], type, 1, classGuid);
                         } else if (mergeDialogId != 0 && !sharedMediaData[mediaPage.selectedType].endReached[1]) {
                             sharedMediaData[mediaPage.selectedType].loading = true;
-                            DataQuery.getInstance(currentAccount).loadMedia(mergeDialogId, 50, sharedMediaData[mediaPage.selectedType].max_id[1], type, 1, classGuid);
+                            MediaDataController.getInstance(currentAccount).loadMedia(mergeDialogId, 50, sharedMediaData[mediaPage.selectedType].max_id[1], type, 1, classGuid);
                         }
                     }
                     if (recyclerView == mediaPages[0].listView && !searching && !actionBar.isActionModeShowed()) {
@@ -1353,7 +1353,7 @@
                 sharedMediaData[type].endReached[loadIndex] = (Boolean) args[5];
                 if (loadIndex == 0 && sharedMediaData[type].endReached[loadIndex] && mergeDialogId != 0) {
                     sharedMediaData[type].loading = true;
-                    DataQuery.getInstance(currentAccount).loadMedia(mergeDialogId, 50, sharedMediaData[type].max_id[1], type, 1, classGuid);
+                    MediaDataController.getInstance(currentAccount).loadMedia(mergeDialogId, 50, sharedMediaData[type].max_id[1], type, 1, classGuid);
                 }
                 if (adapter != null) {
                     for (int a = 0; a < mediaPages.length; a++) {
@@ -1446,7 +1446,7 @@
                     if (obj.messageOwner.media == null || obj.needDrawBluredPreview()) {
                         continue;
                     }
-                    int type = DataQuery.getMediaType(obj.messageOwner);
+                    int type = MediaDataController.getMediaType(obj.messageOwner);
                     if (type == -1) {
                         return;
                     }
@@ -1912,7 +1912,7 @@
             }
             if (!sharedMediaData[mediaPages[a].selectedType].loading && !sharedMediaData[mediaPages[a].selectedType].endReached[0] && sharedMediaData[mediaPages[a].selectedType].messages.isEmpty()) {
                 sharedMediaData[mediaPages[a].selectedType].loading = true;
-                DataQuery.getInstance(currentAccount).loadMedia(dialog_id, 50, 0, mediaPages[a].selectedType, 1, classGuid);
+                MediaDataController.getInstance(currentAccount).loadMedia(dialog_id, 50, 0, mediaPages[a].selectedType, 1, classGuid);
             }
             if (sharedMediaData[mediaPages[a].selectedType].loading && sharedMediaData[mediaPages[a].selectedType].messages.isEmpty()) {
                 mediaPages[a].progressView.setVisibility(View.VISIBLE);
@@ -2329,7 +2329,7 @@
                     break;
                 case 3:
                 default:
-                    if (currentType == DataQuery.MEDIA_MUSIC && !audioCellCache.isEmpty()) {
+                    if (currentType == MediaDataController.MEDIA_MUSIC && !audioCellCache.isEmpty()) {
                         view = audioCellCache.get(0);
                         audioCellCache.remove(0);
                         ViewGroup p = (ViewGroup) view.getParent();
@@ -2351,7 +2351,7 @@
                             }
                         };
                     }
-                    if (currentType == DataQuery.MEDIA_MUSIC) {
+                    if (currentType == MediaDataController.MEDIA_MUSIC) {
                         audioCache.add((SharedAudioCell) view);
                     }
                     break;
