testdiff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index af6e851..8202661 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -28,16 +28,9 @@
 import android.view.accessibility.AccessibilityNodeInfo;
 import android.view.animation.Interpolator;
 
-import com.airbnb.lottie.LottieDrawable;
-import com.airbnb.lottie.LottieProperty;
-import com.airbnb.lottie.SimpleColorFilter;
-import com.airbnb.lottie.model.KeyPath;
-import com.airbnb.lottie.value.LottieValueCallback;
-
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.ChatObject;
-import org.telegram.messenger.DataQuery;
+import org.telegram.messenger.MediaDataController;
 import org.telegram.messenger.DialogObject;
 import org.telegram.messenger.ImageLocation;
 import org.telegram.messenger.LocaleController;
@@ -56,6 +49,7 @@
 import org.telegram.ui.ActionBar.Theme;
 import org.telegram.ui.Components.AvatarDrawable;
 import org.telegram.ui.Components.CheckBox2;
+import org.telegram.ui.Components.RLottieDrawable;
 import org.telegram.ui.Components.StaticLayoutEx;
 import org.telegram.ui.Components.TypefaceSpan;
 import org.telegram.ui.DialogsActivity;
@@ -110,7 +104,7 @@
     private int bottomClip;
     private float translationX;
     private boolean isSliding;
-    private Drawable translationDrawable;
+    private RLottieDrawable translationDrawable;
     private boolean translationAnimationStarted;
     private boolean drawRevealBackground;
     private float currentRevealProgress;
@@ -302,12 +296,9 @@
         reorderIconProgress = drawPin && drawReorder ? 1.0f : 0.0f;
         avatarImage.onDetachedFromWindow();
         if (translationDrawable != null) {
-            if (translationDrawable instanceof LottieDrawable) {
-                LottieDrawable lottieDrawable = (LottieDrawable) translationDrawable;
-                lottieDrawable.stop();
-                lottieDrawable.setProgress(0.0f);
-                lottieDrawable.setCallback(null);
-            }
+            translationDrawable.stop();
+            translationDrawable.setProgress(0.0f);
+            translationDrawable.setCallback(null);
             translationDrawable = null;
             translationAnimationStarted = false;
         }
@@ -704,7 +695,7 @@
             }
 
             if (isDialogCell) {
-                draftMessage = DataQuery.getInstance(currentAccount).getDraft(currentDialogId);
+                draftMessage = MediaDataController.getInstance(currentAccount).getDraft(currentDialogId);
                 if (draftMessage != null && (TextUtils.isEmpty(draftMessage.message) && draftMessage.reply_to_msg_id == 0 || lastDate > draftMessage.date && unreadCount != 0) ||
                         ChatObject.isChannel(chat) && !chat.megagroup && !chat.creator && (chat.admin_rights == null || !chat.admin_rights.post_messages) ||
                         chat != null && (chat.left || chat.kicked)) {
@@ -1014,16 +1005,6 @@
                             drawPinBackground = true;
                         }
                         nameString = LocaleController.getString("SavedMessages", R.string.SavedMessages);
-                    } else if (user.id / 1000 != 777 && user.id / 1000 != 333 && ContactsController.getInstance(currentAccount).contactsDict.get(user.id) == null) {
-                        if (ContactsController.getInstance(currentAccount).contactsDict.size() == 0 && (!ContactsController.getInstance(currentAccount).contactsLoaded || ContactsController.getInstance(currentAccount).isLoadingContacts())) {
-                            nameString = UserObject.getUserName(user);
-                        } else {
-                            if (user.phone != null && user.phone.length() != 0) {
-                                nameString = PhoneFormat.getInstance().format("+" + user.phone);
-                            } else {
-                                nameString = UserObject.getUserName(user);
-                            }
-                        }
                     } else {
                         nameString = UserObject.getUserName(user);
                     }
@@ -1377,7 +1358,7 @@
         if (index < dialogsArray.size()) {
             TLRPC.Dialog dialog = dialogsArray.get(index);
             TLRPC.Dialog nextDialog = index + 1 < dialogsArray.size() ? dialogsArray.get(index + 1) : null;
-            TLRPC.DraftMessage newDraftMessage = DataQuery.getInstance(currentAccount).getDraft(currentDialogId);
+            TLRPC.DraftMessage newDraftMessage = MediaDataController.getInstance(currentAccount).getDraft(currentDialogId);
             MessageObject newMessageObject;
             if (currentDialogFolderId != 0) {
                 newMessageObject = findFolderTopMessage();
@@ -1417,7 +1398,6 @@
         }
         animatingArchiveAvatar = true;
         animatingArchiveAvatarProgress = 0.0f;
-        Theme.dialogs_archiveAvatarDrawable.setCallback(this);
         Theme.dialogs_archiveAvatarDrawable.setProgress(0.0f);
         Theme.dialogs_archiveAvatarDrawable.start();
         invalidate();
@@ -1598,6 +1578,7 @@
             }
 
             if (currentDialogFolderId != 0) {
+                Theme.dialogs_archiveAvatarDrawable.setCallback(this);
                 avatarDrawable.setAvatarType(AvatarDrawable.AVATAR_TYPE_ARCHIVED);
                 avatarImage.setImage(null, null, avatarDrawable, null, user, 0);
             } else {
@@ -1633,10 +1614,7 @@
     public void setTranslationX(float value) {
         translationX = (int) value;
         if (translationDrawable != null && translationX == 0) {
-            if (translationDrawable instanceof LottieDrawable) {
-                LottieDrawable lottieDrawable = (LottieDrawable) translationDrawable;
-                lottieDrawable.setProgress(0.0f);
-            }
+            translationDrawable.setProgress(0.0f);
             translationAnimationStarted = false;
             archiveHidden = SharedConfig.archiveHidden;
             currentRevealProgress = 0;
@@ -1712,12 +1690,9 @@
             }
             if (!translationAnimationStarted && Math.abs(translationX) > AndroidUtilities.dp(43)) {
                 translationAnimationStarted = true;
-                if (translationDrawable instanceof LottieDrawable) {
-                    LottieDrawable lottieDrawable = (LottieDrawable) translationDrawable;
-                    lottieDrawable.setProgress(0.0f);
-                    lottieDrawable.setCallback(this);
-                    lottieDrawable.start();
-                }
+                translationDrawable.setProgress(0.0f);
+                translationDrawable.setCallback(this);
+                translationDrawable.start();
             }
 
             float tx = getMeasuredWidth() + translationX;
@@ -1725,18 +1700,12 @@
                 Theme.dialogs_pinnedPaint.setColor(backgroundColor);
                 canvas.drawRect(tx - AndroidUtilities.dp(8), 0, getMeasuredWidth(), getMeasuredHeight(), Theme.dialogs_pinnedPaint);
                 if (currentRevealProgress == 0 && Theme.dialogs_archiveDrawableRecolored) {
-                    if (Theme.dialogs_archiveDrawable instanceof LottieDrawable) {
-                        LottieDrawable lottieDrawable = (LottieDrawable) Theme.dialogs_archiveDrawable;
-                        lottieDrawable.addValueCallback(new KeyPath("Arrow", "**"), LottieProperty.COLOR_FILTER, new LottieValueCallback<>(new SimpleColorFilter(Theme.getColor(Theme.key_chats_archiveBackground))));
-                    }
+                    Theme.dialogs_archiveDrawable.setLayerColor("Arrow.**", Theme.getColor(Theme.key_chats_archiveBackground));
                     Theme.dialogs_archiveDrawableRecolored = false;
                 }
             }
             int drawableX = getMeasuredWidth() - AndroidUtilities.dp(43) - translationDrawable.getIntrinsicWidth() / 2;
             int drawableY = AndroidUtilities.dp(useForceThreeLines || SharedConfig.useThreeLinesLayout ? 12 : 9);
-            if (!(translationDrawable instanceof LottieDrawable)) {
-                drawableY += AndroidUtilities.dp(2);
-            }
             int drawableCx = drawableX + translationDrawable.getIntrinsicWidth() / 2;
             int drawableCy = drawableY + translationDrawable.getIntrinsicHeight() / 2;
 
@@ -1750,10 +1719,7 @@
                 canvas.restore();
 
                 if (!Theme.dialogs_archiveDrawableRecolored) {
-                    if (Theme.dialogs_archiveDrawable instanceof LottieDrawable) {
-                        LottieDrawable lottieDrawable = (LottieDrawable) Theme.dialogs_archiveDrawable;
-                        lottieDrawable.addValueCallback(new KeyPath("Arrow", "**"), LottieProperty.COLOR_FILTER, new LottieValueCallback<>(new SimpleColorFilter(Theme.getColor(Theme.key_chats_archivePinBackground))));
-                    }
+                    Theme.dialogs_archiveDrawable.setLayerColor("Arrow.**", Theme.getColor(Theme.key_chats_archivePinBackground));
                     Theme.dialogs_archiveDrawableRecolored = true;
                 }
             }
@@ -1775,12 +1741,9 @@
 
             canvas.restore();
         } else if (translationDrawable != null) {
-            if (translationDrawable instanceof LottieDrawable) {
-                LottieDrawable lottieDrawable = (LottieDrawable) translationDrawable;
-                lottieDrawable.stop();
-                lottieDrawable.setProgress(0.0f);
-                lottieDrawable.setCallback(null);
-            }
+            translationDrawable.stop();
+            translationDrawable.setProgress(0.0f);
+            translationDrawable.setCallback(null);
             translationDrawable = null;
             translationAnimationStarted = false;
         }
