testdiff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index 18fbcb3..9319616 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -35,7 +35,6 @@
 import android.widget.Toast;
 
 import org.telegram.messenger.audioinfo.AudioInfo;
-import org.telegram.messenger.browser.Browser;
 import org.telegram.messenger.support.SparseLongArray;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.NativeByteBuffer;
@@ -63,7 +62,7 @@
 import java.util.concurrent.ThreadPoolExecutor;
 import java.util.concurrent.TimeUnit;
 
-public class SendMessagesHelper implements NotificationCenter.NotificationCenterDelegate {
+public class SendMessagesHelper extends BaseController implements NotificationCenter.NotificationCenterDelegate {
 
     private TLRPC.ChatFull currentChatInfo = null;
     private HashMap<String, ArrayList<DelayedMessage>> delayedMessages = new HashMap<>();
@@ -103,7 +102,7 @@
         @Override
         public void onUnableLocationAcquire() {
             HashMap<String, MessageObject> waitingForLocationCopy = new HashMap<>(waitingForLocation);
-            NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.wasUnableToFindCurrentLocation, waitingForLocationCopy);
+            getNotificationCenter().postNotificationName(NotificationCenter.wasUnableToFindCurrentLocation, waitingForLocationCopy);
             waitingForLocation.clear();
         }
     });
@@ -344,7 +343,7 @@
             for (int a = 0; a < size; a++) {
                 DelayedMessageSendAfterRequest request = requests.get(a);
                 if (request.request instanceof TLRPC.TL_messages_sendEncryptedMultiMedia) {
-                    SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) request.request, this);
+                    getSecretChatHelper().performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) request.request, this);
                 } else if (request.request instanceof TLRPC.TL_messages_sendMultiMedia) {
                     performSendMessageRequestMulti((TLRPC.TL_messages_sendMultiMedia) request.request, request.msgObjs, request.originalPaths, request.parentObjects, request.delayedMessage);
                 } else {
@@ -358,23 +357,22 @@
             if (type == 4) {
                 for (int a = 0; a < messageObjects.size(); a++) {
                     MessageObject obj = messageObjects.get(a);
-                    MessagesStorage.getInstance(currentAccount).markMessageAsSendError(obj.messageOwner);
+                    getMessagesStorage().markMessageAsSendError(obj.messageOwner);
                     obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
-                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, obj.getId());
+                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, obj.getId());
                     processSentMessage(obj.getId());
                 }
                 delayedMessages.remove( "group_" + groupId);
             } else {
-                MessagesStorage.getInstance(currentAccount).markMessageAsSendError(obj.messageOwner);
+                getMessagesStorage().markMessageAsSendError(obj.messageOwner);
                 obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
-                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, obj.getId());
+                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, obj.getId());
                 processSentMessage(obj.getId());
             }
             sendDelayedRequests();
         }
     }
 
-    private int currentAccount;
     private static volatile SendMessagesHelper[] Instance = new SendMessagesHelper[UserConfig.MAX_ACCOUNT_COUNT];
     public static SendMessagesHelper getInstance(int num) {
         SendMessagesHelper localInstance = Instance[num];
@@ -390,18 +388,18 @@
     }
 
     public SendMessagesHelper(int instance) {
-        currentAccount = instance;
+        super(instance);
 
         AndroidUtilities.runOnUIThread(() -> {
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidUpload);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.FileDidFailUpload);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.filePreparingStarted);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.fileNewChunkAvailable);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.filePreparingFailed);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidFailedLoad);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidLoad);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.fileDidLoad);
-            NotificationCenter.getInstance(currentAccount).addObserver(SendMessagesHelper.this, NotificationCenter.fileDidFailedLoad);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.FileDidUpload);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.FileDidFailUpload);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.filePreparingStarted);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.fileNewChunkAvailable);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.filePreparingFailed);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidFailedLoad);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.httpFileDidLoad);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.fileDidLoad);
+            getNotificationCenter().addObserver(SendMessagesHelper.this, NotificationCenter.fileDidFailedLoad);
         });
     }
 
@@ -530,7 +528,7 @@
                             if (message.type == 4) {
                                 uploadMultiMedia(message, null, encryptedFile, location);
                             } else {
-                                SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(decryptedMessage, message.obj.messageOwner, message.encryptedChat, encryptedFile, message.originalPath, message.obj);
+                                getSecretChatHelper().performSendEncryptedRequest(decryptedMessage, message.obj.messageOwner, message.encryptedChat, encryptedFile, message.originalPath, message.obj);
                             }
                         }
                         arr.remove(a);
@@ -596,7 +594,7 @@
             long availableSize = (Long) args[2];
             long finalSize = (Long) args[3];
             boolean isEncrypted = ((int) messageObject.getDialogId()) == 0;
-            FileLoader.getInstance(currentAccount).checkUploadNewDataAvailable(finalPath, isEncrypted, availableSize, finalSize);
+            getFileLoader().checkUploadNewDataAvailable(finalPath, isEncrypted, availableSize, finalSize);
             if (finalSize != 0) {
                 stopVideoService(messageObject.messageOwner.attachPath);
                 ArrayList<DelayedMessage> arr = delayedMessages.get(messageObject.messageOwner.attachPath);
@@ -613,7 +611,7 @@
 
                                     ArrayList<TLRPC.Message> messages = new ArrayList<>();
                                     messages.add(obj.messageOwner);
-                                    MessagesStorage.getInstance(currentAccount).putMessages(messages, false, true, false, 0);
+                                    getMessagesStorage().putMessages(messages, false, true, false, 0);
                                     break;
                                 }
                             }
@@ -624,7 +622,7 @@
 
                             ArrayList<TLRPC.Message> messages = new ArrayList<>();
                             messages.add(message.obj.messageOwner);
-                            MessagesStorage.getInstance(currentAccount).putMessages(messages, false, true, false, 0);
+                            getMessagesStorage().putMessages(messages, false, true, false, 0);
                             break;
                         }
                     }
@@ -696,8 +694,8 @@
                                     messageObject.messageOwner.attachPath = cacheFile.toString();
                                     ArrayList<TLRPC.Message> messages = new ArrayList<>();
                                     messages.add(messageObject.messageOwner);
-                                    MessagesStorage.getInstance(currentAccount).putMessages(messages, false, true, false, 0);
-                                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
+                                    getMessagesStorage().putMessages(messages, false, true, false, 0);
+                                    getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, messageObject.messageOwner);
                                     message.photoSize = photo.sizes.get(photo.sizes.size() - 1);
                                     message.locationParent = photo;
                                     message.httpLocation = null;
@@ -742,10 +740,10 @@
                                 }
                                 ArrayList<TLRPC.Message> messages = new ArrayList<>();
                                 messages.add(messageObject.messageOwner);
-                                MessagesStorage.getInstance(currentAccount).putMessages(messages, false, true, false, 0);
+                                getMessagesStorage().putMessages(messages, false, true, false, 0);
                                 message.performMediaUpload = true;
                                 performSendDelayedMessage(message);
-                                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.updateMessageMedia, message.obj.messageOwner);
+                                getNotificationCenter().postNotificationName(NotificationCenter.updateMessageMedia, message.obj.messageOwner);
                             });
                         });
                     }
@@ -794,11 +792,11 @@
 
         ArrayList<TLRPC.Message> arr = new ArrayList<>();
         arr.add(object.messageOwner);
-        MessagesStorage.getInstance(currentAccount).putMessages(arr, false, true, false, 0);
+        getMessagesStorage().putMessages(arr, false, true, false, 0);
 
         ArrayList<MessageObject> arrayList = new ArrayList<>();
         arrayList.add(object);
-        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.replaceMessagesObjects, object.getDialogId(), arrayList);
+        getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, object.getDialogId(), arrayList);
     }
 
     public void cancelSendingMessage(MessageObject object) {
@@ -818,7 +816,7 @@
             channelId = object.messageOwner.to_id.channel_id;
             TLRPC.Message sendingMessage = removeFromSendingMessages(object.getId());
             if (sendingMessage != null) {
-                ConnectionsManager.getInstance(currentAccount).cancelRequest(sendingMessage.reqId, true);
+                getConnectionsManager().cancelRequest(sendingMessage.reqId, true);
             }
 
             for (HashMap.Entry<String, ArrayList<DelayedMessage>> entry : delayedMessages.entrySet()) {
@@ -863,7 +861,7 @@
 
                                     TLRPC.TL_messages_messages messagesRes = new TLRPC.TL_messages_messages();
                                     messagesRes.messages.add(prevMessage.messageOwner);
-                                    MessagesStorage.getInstance(currentAccount).putMessages(messagesRes, message.peer, -2, 0, false);
+                                    getMessagesStorage().putMessages(messagesRes, message.peer, -2, 0, false);
 
                                 }
                                 sendReadyToSendGroup(message, false, true);
@@ -890,7 +888,7 @@
             if (key.startsWith("http")) {
                 ImageLoader.getInstance().cancelLoadHttpFile(key);
             } else {
-                FileLoader.getInstance(currentAccount).cancelUploadFile(key, enc);
+                getFileLoader().cancelUploadFile(key, enc);
             }
             stopVideoService(key);
             delayedMessages.remove(key);
@@ -898,7 +896,7 @@
         if (objects.size() == 1 && objects.get(0).isEditing() && objects.get(0).previousMedia != null) {
             revertEditingMessageObject(objects.get(0));
         } else {
-            MessagesController.getInstance(currentAccount).deleteMessages(messageIds, null, null, channelId, false);
+            getMessagesController().deleteMessages(messageIds, null, null, channelId, false);
         }
     }
 
@@ -911,11 +909,11 @@
         }
         if (messageObject.messageOwner.action instanceof TLRPC.TL_messageEncryptedAction) {
             int enc_id = (int) (messageObject.getDialogId() >> 32);
-            TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance(currentAccount).getEncryptedChat(enc_id);
+            TLRPC.EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(enc_id);
             if (encryptedChat == null) {
-                MessagesStorage.getInstance(currentAccount).markMessageAsSendError(messageObject.messageOwner);
+                getMessagesStorage().markMessageAsSendError(messageObject.messageOwner);
                 messageObject.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
-                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, messageObject.getId());
+                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, messageObject.getId());
                 processSentMessage(messageObject.getId());
                 return false;
             }
@@ -923,35 +921,35 @@
                 messageObject.messageOwner.random_id = getNextRandomId();
             }
             if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL) {
-                SecretChatHelper.getInstance(currentAccount).sendTTLMessage(encryptedChat, messageObject.messageOwner);
+                getSecretChatHelper().sendTTLMessage(encryptedChat, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionDeleteMessages) {
-                SecretChatHelper.getInstance(currentAccount).sendMessagesDeleteMessage(encryptedChat, null, messageObject.messageOwner);
+                getSecretChatHelper().sendMessagesDeleteMessage(encryptedChat, null, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionFlushHistory) {
-                SecretChatHelper.getInstance(currentAccount).sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
+                getSecretChatHelper().sendClearHistoryMessage(encryptedChat, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionNotifyLayer) {
-                SecretChatHelper.getInstance(currentAccount).sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
+                getSecretChatHelper().sendNotifyLayerMessage(encryptedChat, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionReadMessages) {
-                SecretChatHelper.getInstance(currentAccount).sendMessagesReadMessage(encryptedChat, null, messageObject.messageOwner);
+                getSecretChatHelper().sendMessagesReadMessage(encryptedChat, null, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionScreenshotMessages) {
-                SecretChatHelper.getInstance(currentAccount).sendScreenshotMessage(encryptedChat, null, messageObject.messageOwner);
+                getSecretChatHelper().sendScreenshotMessage(encryptedChat, null, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionTyping) {
 
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionResend) {
 
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionCommitKey) {
-                SecretChatHelper.getInstance(currentAccount).sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
+                getSecretChatHelper().sendCommitKeyMessage(encryptedChat, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionAbortKey) {
-                SecretChatHelper.getInstance(currentAccount).sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0);
+                getSecretChatHelper().sendAbortKeyMessage(encryptedChat, messageObject.messageOwner, 0);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionRequestKey) {
-                SecretChatHelper.getInstance(currentAccount).sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
+                getSecretChatHelper().sendRequestKeyMessage(encryptedChat, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionAcceptKey) {
-                SecretChatHelper.getInstance(currentAccount).sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
+                getSecretChatHelper().sendAcceptKeyMessage(encryptedChat, messageObject.messageOwner);
             } else if (messageObject.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionNoop) {
-                SecretChatHelper.getInstance(currentAccount).sendNoopMessage(encryptedChat, messageObject.messageOwner);
+                getSecretChatHelper().sendNoopMessage(encryptedChat, messageObject.messageOwner);
             }
             return true;
         } else if (messageObject.messageOwner.action instanceof TLRPC.TL_messageActionScreenshotTaken) {
-            TLRPC.User user = MessagesController.getInstance(currentAccount).getUser((int) messageObject.getDialogId());
+            TLRPC.User user = getMessagesController().getUser((int) messageObject.getDialogId());
             sendScreenshotMessage(user, messageObject.messageOwner.reply_to_msg_id, messageObject.messageOwner);
         }
         if (unsent) {
@@ -1027,7 +1025,7 @@
     }
 
     public void sendScreenshotMessage(TLRPC.User user, int messageId, TLRPC.Message resendMessage) {
-        if (user == null || messageId == 0 || user.id == UserConfig.getInstance(currentAccount).getClientUserId()) {
+        if (user == null || messageId == 0 || user.id == getUserConfig().getClientUserId()) {
             return;
         }
 
@@ -1046,16 +1044,16 @@
             message.dialog_id = user.id;
             message.unread = true;
             message.out = true;
-            message.local_id = message.id = UserConfig.getInstance(currentAccount).getNewMessageId();
-            message.from_id = UserConfig.getInstance(currentAccount).getClientUserId();
+            message.local_id = message.id = getUserConfig().getNewMessageId();
+            message.from_id = getUserConfig().getClientUserId();
             message.flags |= 256;
             message.flags |= 8;
             message.reply_to_msg_id = messageId;
             message.to_id = new TLRPC.TL_peerUser();
             message.to_id.user_id = user.id;
-            message.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+            message.date = getConnectionsManager().getCurrentTime();
             message.action = new TLRPC.TL_messageActionScreenshotTaken();
-            UserConfig.getInstance(currentAccount).saveConfig(false);
+            getUserConfig().saveConfig(false);
         }
         req.random_id = message.random_id;
 
@@ -1063,11 +1061,11 @@
         newMsgObj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SENDING;
         ArrayList<MessageObject> objArr = new ArrayList<>();
         objArr.add(newMsgObj);
-        MessagesController.getInstance(currentAccount).updateInterfaceWithMessages(message.dialog_id, objArr);
-        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
+        getMessagesController().updateInterfaceWithMessages(message.dialog_id, objArr);
+        getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload);
         ArrayList<TLRPC.Message> arr = new ArrayList<>();
         arr.add(message);
-        MessagesStorage.getInstance(currentAccount).putMessages(arr, false, true, false, 0);
+        getMessagesStorage().putMessages(arr, false, true, false, 0);
 
         performSendMessageRequest(req, newMsgObj, null, null, null);
     }
@@ -1078,7 +1076,7 @@
         }
         if ((int) peer == 0) {
             int high_id = (int) (peer >> 32);
-            TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance(currentAccount).getEncryptedChat(high_id);
+            TLRPC.EncryptedChat encryptedChat = getMessagesController().getEncryptedChat(high_id);
             if (encryptedChat == null) {
                 return;
             }
@@ -1145,7 +1143,7 @@
         int lower_id = (int) peer;
         int sendResult = 0;
         if (lower_id != 0) {
-            final TLRPC.Peer to_id = MessagesController.getInstance(currentAccount).getPeer((int) peer);
+            final TLRPC.Peer to_id = getMessagesController().getPeer((int) peer);
             boolean isMegagroup = false;
             boolean isSignature = false;
             boolean canSendStickers = true;
@@ -1154,13 +1152,13 @@
             boolean canSendPreview = true;
             TLRPC.Chat chat;
             if (lower_id > 0) {
-                TLRPC.User sendToUser = MessagesController.getInstance(currentAccount).getUser(lower_id);
+                TLRPC.User sendToUser = getMessagesController().getUser(lower_id);
                 if (sendToUser == null) {
                     return 0;
                 }
                 chat = null;
             } else {
-                chat = MessagesController.getInstance(currentAccount).getChat(-lower_id);
+                chat = getMessagesController().getChat(-lower_id);
                 if (ChatObject.isChannel(chat)) {
                     isMegagroup = chat.megagroup;
                     isSignature = chat.signatures;
@@ -1177,9 +1175,9 @@
             ArrayList<Long> randomIds = new ArrayList<>();
             ArrayList<Integer> ids = new ArrayList<>();
             LongSparseArray<TLRPC.Message> messagesByRandomIds = new LongSparseArray<>();
-            TLRPC.InputPeer inputPeer = MessagesController.getInstance(currentAccount).getInputPeer(lower_id);
+            TLRPC.InputPeer inputPeer = getMessagesController().getInputPeer(lower_id);
             long lastDialogId = 0;
-            int myId = UserConfig.getInstance(currentAccount).getClientUserId();
+            int myId = getUserConfig().getClientUserId();
             final boolean toMyself = peer == myId;
             long lastGroupedId;
             for (int a = 0; a < messages.size(); a++) {
@@ -1191,7 +1189,7 @@
                     }
                     continue;
                 }
-                if (!canSendStickers && (msgObj.isSticker() || msgObj.isGif() || msgObj.isGame())) {
+                if (!canSendStickers && (msgObj.isSticker() || msgObj.isAnimatedSticker() || msgObj.isGif() || msgObj.isGame())) {
                     if (sendResult == 0) {
                         sendResult = ChatObject.isActionBannedByDefault(chat, ChatObject.ACTION_SEND_STICKERS) ? 4 : 1;
                     }
@@ -1210,7 +1208,7 @@
 
                 boolean groupedIdChanged = false;
                 final TLRPC.Message newMsg = new TLRPC.TL_message();
-                boolean forwardFromSaved = msgObj.getDialogId() == myId && msgObj.messageOwner.from_id == UserConfig.getInstance(currentAccount).getClientUserId();
+                boolean forwardFromSaved = msgObj.getDialogId() == myId && msgObj.messageOwner.from_id == getUserConfig().getClientUserId();
                 if (msgObj.isForwarded()) {
                     newMsg.fwd_from = new TLRPC.TL_messageFwdHeader();
                     newMsg.fwd_from.flags = msgObj.messageOwner.fwd_from.flags;
@@ -1240,7 +1238,7 @@
                         newMsg.fwd_from.post_author = msgObj.messageOwner.post_author;
                         newMsg.fwd_from.flags |= 8;
                     } else if (!msgObj.isOutOwner() && msgObj.messageOwner.from_id > 0 && msgObj.messageOwner.post) {
-                        TLRPC.User signUser = MessagesController.getInstance(currentAccount).getUser(msgObj.messageOwner.from_id);
+                        TLRPC.User signUser = getMessagesController().getUser(msgObj.messageOwner.from_id);
                         if (signUser != null) {
                             newMsg.fwd_from.post_author = ContactsController.formatName(signUser.first_name, signUser.last_name);
                             newMsg.fwd_from.flags |= 8;
@@ -1309,7 +1307,7 @@
                 if (newMsg.attachPath == null) {
                     newMsg.attachPath = "";
                 }
-                newMsg.local_id = newMsg.id = UserConfig.getInstance(currentAccount).getNewMessageId();
+                newMsg.local_id = newMsg.id = getUserConfig().getNewMessageId();
                 newMsg.out = true;
                 if ((lastGroupedId = msgObj.messageOwner.grouped_id) != 0) {
                     Long gId = groupsMap.get(msgObj.messageOwner.grouped_id);
@@ -1327,10 +1325,10 @@
                     }
                 }
                 if (to_id.channel_id != 0 && !isMegagroup) {
-                    newMsg.from_id = isSignature ? UserConfig.getInstance(currentAccount).getClientUserId() : -to_id.channel_id;
+                    newMsg.from_id = isSignature ? getUserConfig().getClientUserId() : -to_id.channel_id;
                     newMsg.post = true;
                 } else {
-                    newMsg.from_id = UserConfig.getInstance(currentAccount).getClientUserId();
+                    newMsg.from_id = getUserConfig().getClientUserId();
                     newMsg.flags |= TLRPC.MESSAGE_FLAG_HAS_FROM_ID;
                 }
                 if (newMsg.random_id == 0) {
@@ -1339,7 +1337,7 @@
                 randomIds.add(newMsg.random_id);
                 messagesByRandomIds.put(newMsg.random_id, newMsg);
                 ids.add(newMsg.fwd_msg_id);
-                newMsg.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+                newMsg.date = getConnectionsManager().getCurrentTime();
                 if (inputPeer instanceof TLRPC.TL_inputPeerChannel && !isMegagroup) {
                     newMsg.views = 1;
                     newMsg.flags |= TLRPC.MESSAGE_FLAG_HAS_VIEWS;
@@ -1375,10 +1373,10 @@
                 }
 
                 if (groupedIdChanged && arr.size() > 0 || arr.size() == 100 || a == messages.size() - 1 || a != messages.size() - 1 && messages.get(a + 1).getDialogId() != msgObj.getDialogId()) {
-                    MessagesStorage.getInstance(currentAccount).putMessages(new ArrayList<>(arr), false, true, false, 0);
-                    MessagesController.getInstance(currentAccount).updateInterfaceWithMessages(peer, objArr);
-                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
-                    UserConfig.getInstance(currentAccount).saveConfig(false);
+                    getMessagesStorage().putMessages(new ArrayList<>(arr), false, true, false, 0);
+                    getMessagesController().updateInterfaceWithMessages(peer, objArr);
+                    getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload);
+                    getUserConfig().saveConfig(false);
 
                     final TLRPC.TL_messages_forwardMessages req = new TLRPC.TL_messages_forwardMessages();
                     req.to_peer = inputPeer;
@@ -1387,7 +1385,7 @@
                         req.silent = MessagesController.getNotificationsSettings(currentAccount).getBoolean("silent_" + peer, false);
                     }
                     if (msgObj.messageOwner.to_id instanceof TLRPC.TL_peerChannel) {
-                        TLRPC.Chat channel = MessagesController.getInstance(currentAccount).getChat(msgObj.messageOwner.to_id.channel_id);
+                        TLRPC.Chat channel = getMessagesController().getChat(msgObj.messageOwner.to_id.channel_id);
                         req.from_peer = new TLRPC.TL_inputPeerChannel();
                         req.from_peer.channel_id = msgObj.messageOwner.to_id.channel_id;
                         if (channel != null) {
@@ -1404,7 +1402,7 @@
                     final ArrayList<MessageObject> newMsgArr = objArr;
                     final LongSparseArray<TLRPC.Message> messagesByRandomIdsFinal = messagesByRandomIds;
                     final boolean isMegagroupFinal = isMegagroup;
-                    ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> {
+                    getConnectionsManager().sendRequest(req, (response, error) -> {
                         if (error == null) {
                             SparseLongArray newMessagesByIds = new SparseLongArray();
                             TLRPC.Updates updates = (TLRPC.Updates) response;
@@ -1417,10 +1415,10 @@
                                     a1--;
                                 }
                             }
-                            Integer value = MessagesController.getInstance(currentAccount).dialogs_read_outbox_max.get(peer);
+                            Integer value = getMessagesController().dialogs_read_outbox_max.get(peer);
                             if (value == null) {
-                                value = MessagesStorage.getInstance(currentAccount).getDialogReadMax(true, peer);
-                                MessagesController.getInstance(currentAccount).dialogs_read_outbox_max.put(peer, value);
+                                value = getMessagesStorage().getDialogReadMax(true, peer);
+                                getMessagesController().dialogs_read_outbox_max.put(peer, value);
                             }
 
                             int sentCount = 0;
@@ -1433,11 +1431,11 @@
                                     if (update instanceof TLRPC.TL_updateNewMessage) {
                                         TLRPC.TL_updateNewMessage updateNewMessage = (TLRPC.TL_updateNewMessage) update;
                                         message = updateNewMessage.message;
-                                        MessagesController.getInstance(currentAccount).processNewDifferenceParams(-1, updateNewMessage.pts, -1, updateNewMessage.pts_count);
+                                        getMessagesController().processNewDifferenceParams(-1, updateNewMessage.pts, -1, updateNewMessage.pts_count);
                                     } else {
                                         TLRPC.TL_updateNewChannelMessage updateNewChannelMessage = (TLRPC.TL_updateNewChannelMessage) update;
                                         message = updateNewChannelMessage.message;
-                                        MessagesController.getInstance(currentAccount).processNewChannelDifferenceParams(updateNewChannelMessage.pts, updateNewChannelMessage.pts_count, message.to_id.channel_id);
+                                        getMessagesController().processNewChannelDifferenceParams(updateNewChannelMessage.pts, updateNewChannelMessage.pts_count, message.to_id.channel_id);
                                         if (isMegagroupFinal) {
                                             message.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                         }
@@ -1470,13 +1468,13 @@
                                         int existFlags = msgObj1.getMediaExistanceFlags();
                                         newMsgObj1.id = message.id;
                                         sentCount++;
-                                        MessagesStorage.getInstance(currentAccount).getStorageQueue().postRunnable(() -> {
-                                            MessagesStorage.getInstance(currentAccount).updateMessageStateAndId(newMsgObj1.random_id, oldId, newMsgObj1.id, 0, false, to_id.channel_id);
-                                            MessagesStorage.getInstance(currentAccount).putMessages(sentMessages, true, false, false, 0);
+                                        getMessagesStorage().getStorageQueue().postRunnable(() -> {
+                                            getMessagesStorage().updateMessageStateAndId(newMsgObj1.random_id, oldId, newMsgObj1.id, 0, false, to_id.channel_id);
+                                            getMessagesStorage().putMessages(sentMessages, true, false, false, 0);
                                             AndroidUtilities.runOnUIThread(() -> {
                                                 newMsgObj1.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
-                                                DataQuery.getInstance(currentAccount).increasePeerRaiting(peer);
-                                                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, oldId, message.id, message, peer, 0L, existFlags);
+                                                getMediaDataController().increasePeerRaiting(peer);
+                                                getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, oldId, message.id, message, peer, 0L, existFlags);
                                                 processSentMessage(oldId);
                                                 removeFromSendingMessages(oldId);
                                             });
@@ -1485,18 +1483,18 @@
                                 }
                             }
                             if (!updates.updates.isEmpty()) {
-                                MessagesController.getInstance(currentAccount).processUpdates(updates, false);
+                                getMessagesController().processUpdates(updates, false);
                             }
-                            StatsController.getInstance(currentAccount).incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), StatsController.TYPE_MESSAGES, sentCount);
+                            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), StatsController.TYPE_MESSAGES, sentCount);
                         } else {
                             AndroidUtilities.runOnUIThread(() -> AlertsCreator.processError(currentAccount, error, null, req));
                         }
                         for (int a1 = 0; a1 < newMsgObjArr.size(); a1++) {
                             final TLRPC.Message newMsgObj1 = newMsgObjArr.get(a1);
-                            MessagesStorage.getInstance(currentAccount).markMessageAsSendError(newMsgObj1);
+                            getMessagesStorage().markMessageAsSendError(newMsgObj1);
                             AndroidUtilities.runOnUIThread(() -> {
                                 newMsgObj1.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
-                                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, newMsgObj1.id);
+                                getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, newMsgObj1.id);
                                 processSentMessage(newMsgObj1.id);
                                 removeFromSendingMessages(newMsgObj1.id);
                             });
@@ -1625,7 +1623,7 @@
                         newMsg.entities = messageObject.editingMessageEntities;
                     } else {
                         CharSequence[] message = new CharSequence[]{messageObject.editingMessage};
-                        ArrayList<TLRPC.MessageEntity> entities = DataQuery.getInstance(currentAccount).getEntities(message);
+                        ArrayList<TLRPC.MessageEntity> entities = getMediaDataController().getEntities(message);
                         if (entities != null && !entities.isEmpty()) {
                             newMsg.entities = entities;
                         }
@@ -1636,14 +1634,14 @@
 
                 ArrayList<TLRPC.Message> arr = new ArrayList<>();
                 arr.add(newMsg);
-                MessagesStorage.getInstance(currentAccount).putMessages(arr, false, true, false, 0);
+                getMessagesStorage().putMessages(arr, false, true, false, 0);
 
                 messageObject.type = -1;
                 messageObject.setType();
                 messageObject.createMessageSendInfo();
                 ArrayList<MessageObject> arrayList = new ArrayList<>();
                 arrayList.add(messageObject);
-                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.replaceMessagesObjects, peer, arrayList);
+                getNotificationCenter().postNotificationName(NotificationCenter.replaceMessagesObjects, peer, arrayList);
             }
 
             String originalPath = null;
@@ -1786,7 +1784,7 @@
 
                 TLRPC.TL_messages_editMessage request = new TLRPC.TL_messages_editMessage();
                 request.id = messageObject.getId();
-                request.peer = MessagesController.getInstance(currentAccount).getInputPeer((int) peer);
+                request.peer = getMessagesController().getInputPeer((int) peer);
                 request.flags |= 16384;
                 request.media = inputMedia;
 
@@ -1798,7 +1796,7 @@
                         request.flags |= 8;
                     } else {
                         CharSequence[] message = new CharSequence[]{messageObject.editingMessage};
-                        ArrayList<TLRPC.MessageEntity> entities = DataQuery.getInstance(currentAccount).getEntities(message);
+                        ArrayList<TLRPC.MessageEntity> entities = getMediaDataController().getEntities(message);
                         if (entities != null && !entities.isEmpty()) {
                             request.entities = entities;
                             request.flags |= 8;
@@ -1855,7 +1853,7 @@
         }
 
         final TLRPC.TL_messages_editMessage req = new TLRPC.TL_messages_editMessage();
-        req.peer = MessagesController.getInstance(currentAccount).getInputPeer((int) messageObject.getDialogId());
+        req.peer = getMessagesController().getInputPeer((int) messageObject.getDialogId());
         req.message = message;
         req.flags |= 2048;
         req.id = messageObject.getId();
@@ -1864,9 +1862,9 @@
             req.entities = entities;
             req.flags |= 8;
         }
-        return ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> {
+        return getConnectionsManager().sendRequest(req, (response, error) -> {
             if (error == null) {
-                MessagesController.getInstance(currentAccount).processUpdates((TLRPC.Updates) response, false);
+                getMessagesController().processUpdates((TLRPC.Updates) response, false);
             } else {
                 AndroidUtilities.runOnUIThread(() -> AlertsCreator.processError(currentAccount, error, fragment, req));
             }
@@ -1909,33 +1907,33 @@
             waitingForCallback.put(key, true);
 
             if (lowerId > 0) {
-                TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(lowerId);
+                TLRPC.User user = getMessagesController().getUser(lowerId);
                 if (user == null) {
-                    user = MessagesStorage.getInstance(currentAccount).getUserSync(lowerId);
+                    user = getMessagesStorage().getUserSync(lowerId);
                     if (user != null) {
-                        MessagesController.getInstance(currentAccount).putUser(user, true);
+                        getMessagesController().putUser(user, true);
                     }
                 }
             } else {
-                TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-lowerId);
+                TLRPC.Chat chat = getMessagesController().getChat(-lowerId);
                 if (chat == null) {
-                    chat = MessagesStorage.getInstance(currentAccount).getChatSync(-lowerId);
+                    chat = getMessagesStorage().getChatSync(-lowerId);
                     if (chat != null) {
-                        MessagesController.getInstance(currentAccount).putChat(chat, true);
+                        getMessagesController().putChat(chat, true);
                     }
                 }
             }
 
             TLRPC.TL_messages_getBotCallbackAnswer req = new TLRPC.TL_messages_getBotCallbackAnswer();
-            req.peer = MessagesController.getInstance(currentAccount).getInputPeer(lowerId);
+            req.peer = getMessagesController().getInputPeer(lowerId);
             req.msg_id = msgId;
             req.game = false;
             if (data != null) {
                 req.flags |= 1;
                 req.data = data;
             }
-            ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> waitingForCallback.remove(key)), ConnectionsManager.RequestFlagFailOnServerErrors);
-            MessagesController.getInstance(currentAccount).markDialogAsRead(dialogId, msgId, msgId, 0, false, 0, true);
+            getConnectionsManager().sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> waitingForCallback.remove(key)), ConnectionsManager.RequestFlagFailOnServerErrors);
+            getMessagesController().markDialogAsRead(dialogId, msgId, msgId, 0, false, 0, true);
         });
     }
 
@@ -1958,14 +1956,14 @@
         waitingForVote.put(key, answer != null ? answer.option : new byte[0]);
         TLRPC.TL_messages_sendVote req = new TLRPC.TL_messages_sendVote();
         req.msg_id = messageObject.getId();
-        req.peer = MessagesController.getInstance(currentAccount).getInputPeer((int) messageObject.getDialogId());
+        req.peer = getMessagesController().getInputPeer((int) messageObject.getDialogId());
         if (answer != null) {
             req.options.add(answer.option);
         }
-        return ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> {
+        return getConnectionsManager().sendRequest(req, (response, error) -> {
             if (error == null) {
                 voteSendTime.put(messageObject.getPollId(), 0L);
-                MessagesController.getInstance(currentAccount).processUpdates((TLRPC.Updates) response, false);
+                getMessagesController().processUpdates((TLRPC.Updates) response, false);
                 voteSendTime.put(messageObject.getPollId(), SystemClock.uptimeMillis());
             }
             AndroidUtilities.runOnUIThread(new Runnable() {
@@ -2027,7 +2025,7 @@
                 } else if (button instanceof TLRPC.TL_keyboardButtonBuy) {
                     if (response instanceof TLRPC.TL_payments_paymentForm) {
                         final TLRPC.TL_payments_paymentForm form = (TLRPC.TL_payments_paymentForm) response;
-                        MessagesController.getInstance(currentAccount).putUsers(form.users, false);
+                        getMessagesController().putUsers(form.users, false);
                         parentFragment.presentFragment(new PaymentFormActivity(form, messageObject));
                     } else if (response instanceof TLRPC.TL_payments_paymentReceipt) {
                         parentFragment.presentFragment(new PaymentFormActivity(messageObject, (TLRPC.TL_payments_paymentReceipt) response));
@@ -2035,7 +2033,7 @@
                 } else {
                     TLRPC.TL_messages_botCallbackAnswer res = (TLRPC.TL_messages_botCallbackAnswer) response;
                     if (!cacheFinal && res.cache_time != 0) {
-                        MessagesStorage.getInstance(currentAccount).saveBotCache(key, res);
+                        getMessagesStorage().saveBotCache(key, res);
                     }
                     if (res.message != null) {
                         int uid = messageObject.messageOwner.from_id;
@@ -2044,12 +2042,12 @@
                         }
                         String name = null;
                         if (uid > 0) {
-                            TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(uid);
+                            TLRPC.User user = getMessagesController().getUser(uid);
                             if (user != null) {
                                 name = ContactsController.formatName(user.first_name, user.last_name);
                             }
                         } else {
-                            TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-uid);
+                            TLRPC.Chat chat = getMessagesController().getChat(-uid);
                             if (chat != null) {
                                 name = chat.title;
                             }
@@ -2077,7 +2075,7 @@
                         if (messageObject.messageOwner.via_bot_id != 0) {
                             uid = messageObject.messageOwner.via_bot_id;
                         }
-                        TLRPC.User user = MessagesController.getInstance(currentAccount).getUser(uid);
+                        TLRPC.User user = getMessagesController().getUser(uid);
                         boolean verified = user != null && user.verified;
                         if (button instanceof TLRPC.TL_keyboardButtonGame) {
                             TLRPC.TL_game game = messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaGame ? messageObject.messageOwner.media.game : null;
@@ -2093,35 +2091,35 @@
             }
         });
         if (cacheFinal) {
-            MessagesStorage.getInstance(currentAccount).getBotCache(key, requestDelegate);
+            getMessagesStorage().getBotCache(key, requestDelegate);
         } else {
             if (button instanceof TLRPC.TL_keyboardButtonUrlAuth) {
                 TLRPC.TL_messages_requestUrlAuth req = new TLRPC.TL_messages_requestUrlAuth();
-                req.peer = MessagesController.getInstance(currentAccount).getInputPeer((int) messageObject.getDialogId());
+                req.peer = getMessagesController().getInputPeer((int) messageObject.getDialogId());
                 req.msg_id = messageObject.getId();
                 req.button_id = button.button_id;
                 request[0] = req;
-                ConnectionsManager.getInstance(currentAccount).sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
+                getConnectionsManager().sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
             } else if (button instanceof TLRPC.TL_keyboardButtonBuy) {
                 if ((messageObject.messageOwner.media.flags & 4) == 0) {
                     TLRPC.TL_payments_getPaymentForm req = new TLRPC.TL_payments_getPaymentForm();
                     req.msg_id = messageObject.getId();
-                    ConnectionsManager.getInstance(currentAccount).sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
+                    getConnectionsManager().sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
                 } else {
                     TLRPC.TL_payments_getPaymentReceipt req = new TLRPC.TL_payments_getPaymentReceipt();
                     req.msg_id = messageObject.messageOwner.media.receipt_msg_id;
-                    ConnectionsManager.getInstance(currentAccount).sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
+                    getConnectionsManager().sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
                 }
             } else {
                 TLRPC.TL_messages_getBotCallbackAnswer req = new TLRPC.TL_messages_getBotCallbackAnswer();
-                req.peer = MessagesController.getInstance(currentAccount).getInputPeer((int) messageObject.getDialogId());
+                req.peer = getMessagesController().getInputPeer((int) messageObject.getDialogId());
                 req.msg_id = messageObject.getId();
                 req.game = button instanceof TLRPC.TL_keyboardButtonGame;
                 if (button.data != null) {
                     req.flags |= 1;
                     req.data = button.data;
                 }
-                ConnectionsManager.getInstance(currentAccount).sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
+                getConnectionsManager().sendRequest(req, requestDelegate, ConnectionsManager.RequestFlagFailOnServerErrors);
             }
         }
     }
@@ -2168,16 +2166,16 @@
             } catch (Exception e) {
                 FileLog.e(e);
             }
-            newTaskId = MessagesStorage.getInstance(currentAccount).createPendingTask(data);
+            newTaskId = getMessagesStorage().createPendingTask(data);
         } else {
             newTaskId = taskId;
         }
-        ConnectionsManager.getInstance(currentAccount).sendRequest(request, (response, error) -> {
+        getConnectionsManager().sendRequest(request, (response, error) -> {
             if (error == null) {
-                MessagesController.getInstance(currentAccount).processUpdates((TLRPC.Updates) response, false);
+                getMessagesController().processUpdates((TLRPC.Updates) response, false);
             }
             if (newTaskId != 0) {
-                MessagesStorage.getInstance(currentAccount).removePendingTask(newTaskId);
+                getMessagesStorage().removePendingTask(newTaskId);
             }
         });
     }
@@ -2238,21 +2236,21 @@
         int high_id = (int) (peer >> 32);
         boolean isChannel = false;
         TLRPC.EncryptedChat encryptedChat = null;
-        TLRPC.InputPeer sendToPeer = lower_id != 0 ? MessagesController.getInstance(currentAccount).getInputPeer(lower_id) : null;
+        TLRPC.InputPeer sendToPeer = lower_id != 0 ? getMessagesController().getInputPeer(lower_id) : null;
         ArrayList<TLRPC.InputUser> sendToPeers = null;
         if (lower_id == 0) {
-            encryptedChat = MessagesController.getInstance(currentAccount).getEncryptedChat(high_id);
+            encryptedChat = getMessagesController().getEncryptedChat(high_id);
             if (encryptedChat == null) {
                 if (retryMessageObject != null) {
-                    MessagesStorage.getInstance(currentAccount).markMessageAsSendError(retryMessageObject.messageOwner);
+                    getMessagesStorage().markMessageAsSendError(retryMessageObject.messageOwner);
                     retryMessageObject.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
-                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, retryMessageObject.getId());
+                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, retryMessageObject.getId());
                     processSentMessage(retryMessageObject.getId());
                 }
                 return;
             }
         } else if (sendToPeer instanceof TLRPC.TL_inputPeerChannel) {
-            TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(sendToPeer.channel_id);
+            TLRPC.Chat chat = getMessagesController().getChat(sendToPeer.channel_id);
             isChannel = chat != null && !chat.megagroup;
         }
 
@@ -2446,7 +2444,7 @@
                     } else {
                         newMsg.attachPath = path;
                     }
-                    if (encryptedChat != null && MessageObject.isStickerDocument(document)) {
+                    if (encryptedChat != null && (MessageObject.isStickerDocument(document) || MessageObject.isAnimatedStickerDocument(document))) {
                         for (int a = 0; a < document.attributes.size(); a++) {
                             TLRPC.DocumentAttribute attribute = document.attributes.get(a);
                             if (attribute instanceof TLRPC.TL_documentAttributeSticker) {
@@ -2459,7 +2457,7 @@
                                     if (attribute.stickerset instanceof TLRPC.TL_inputStickerSetShortName) {
                                         name = attribute.stickerset.short_name;
                                     } else {
-                                        name = DataQuery.getInstance(currentAccount).getStickerSetName(attribute.stickerset.id);
+                                        name = getMediaDataController().getStickerSetName(attribute.stickerset.id);
                                     }
                                     if (!TextUtils.isEmpty(name)) {
                                         attributeSticker.stickerset = new TLRPC.TL_inputStickerSetShortName();
@@ -2487,15 +2485,15 @@
                 if (newMsg.attachPath == null) {
                     newMsg.attachPath = "";
                 }
-                newMsg.local_id = newMsg.id = UserConfig.getInstance(currentAccount).getNewMessageId();
+                newMsg.local_id = newMsg.id = getUserConfig().getNewMessageId();
                 newMsg.out = true;
                 if (isChannel && sendToPeer != null) {
                     newMsg.from_id = -sendToPeer.channel_id;
                 } else {
-                    newMsg.from_id = UserConfig.getInstance(currentAccount).getClientUserId();
+                    newMsg.from_id = getUserConfig().getClientUserId();
                     newMsg.flags |= TLRPC.MESSAGE_FLAG_HAS_FROM_ID;
                 }
-                UserConfig.getInstance(currentAccount).saveConfig(false);
+                getUserConfig().saveConfig(false);
             }
             if (newMsg.random_id == 0) {
                 newMsg.random_id = getNextRandomId();
@@ -2513,13 +2511,13 @@
             }
             newMsg.params = params;
             if (retryMessageObject == null || !retryMessageObject.resendAsIs) {
-                newMsg.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+                newMsg.date = getConnectionsManager().getCurrentTime();
                 if (sendToPeer instanceof TLRPC.TL_inputPeerChannel) {
                     if (isChannel) {
                         newMsg.views = 1;
                         newMsg.flags |= TLRPC.MESSAGE_FLAG_HAS_VIEWS;
                     }
-                    TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(sendToPeer.channel_id);
+                    TLRPC.Chat chat = getMessagesController().getChat(sendToPeer.channel_id);
                     if (chat != null) {
                         if (chat.megagroup) {
                             newMsg.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
@@ -2527,7 +2525,7 @@
                         } else {
                             newMsg.post = true;
                             if (chat.signatures) {
-                                newMsg.from_id = UserConfig.getInstance(currentAccount).getClientUserId();
+                                newMsg.from_id = getUserConfig().getClientUserId();
                             }
                         }
                     }
@@ -2553,15 +2551,15 @@
             if (lower_id != 0) {
                 if (high_id == 1) {
                     if (currentChatInfo == null) {
-                        MessagesStorage.getInstance(currentAccount).markMessageAsSendError(newMsg);
-                        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, newMsg.id);
+                        getMessagesStorage().markMessageAsSendError(newMsg);
+                        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, newMsg.id);
                         processSentMessage(newMsg.id);
                         return;
                     }
                     sendToPeers = new ArrayList<>();
                     for (TLRPC.ChatParticipant participant : currentChatInfo.participants.participants) {
-                        TLRPC.User sendToUser = MessagesController.getInstance(currentAccount).getUser(participant.user_id);
-                        TLRPC.InputUser peerUser = MessagesController.getInstance(currentAccount).getInputUser(sendToUser);
+                        TLRPC.User sendToUser = getMessagesController().getUser(participant.user_id);
+                        TLRPC.InputUser peerUser = getMessagesController().getInputUser(sendToUser);
                         if (peerUser != null) {
                             sendToPeers.add(peerUser);
                         }
@@ -2569,9 +2567,9 @@
                     newMsg.to_id = new TLRPC.TL_peerChat();
                     newMsg.to_id.chat_id = lower_id;
                 } else {
-                    newMsg.to_id = MessagesController.getInstance(currentAccount).getPeer(lower_id);
+                    newMsg.to_id = getMessagesController().getPeer(lower_id);
                     if (lower_id > 0) {
-                        TLRPC.User sendToUser = MessagesController.getInstance(currentAccount).getUser(lower_id);
+                        TLRPC.User sendToUser = getMessagesController().getUser(lower_id);
                         if (sendToUser == null) {
                             processSentMessage(newMsg.id);
                             return;
@@ -2583,7 +2581,7 @@
                 }
             } else {
                 newMsg.to_id = new TLRPC.TL_peerUser();
-                if (encryptedChat.participant_id == UserConfig.getInstance(currentAccount).getClientUserId()) {
+                if (encryptedChat.participant_id == getUserConfig().getClientUserId()) {
                     newMsg.to_id.user_id = encryptedChat.admin_id;
                 } else {
                     newMsg.to_id.user_id = encryptedChat.participant_id;
@@ -2652,9 +2650,9 @@
                 objArr.add(newMsgObj);
                 ArrayList<TLRPC.Message> arr = new ArrayList<>();
                 arr.add(newMsg);
-                MessagesStorage.getInstance(currentAccount).putMessages(arr, false, true, false, 0);
-                MessagesController.getInstance(currentAccount).updateInterfaceWithMessages(peer, objArr);
-                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
+                getMessagesStorage().putMessages(arr, false, true, false, 0);
+                getMessagesController().updateInterfaceWithMessages(peer, objArr);
+                getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload);
             } else {
                 String key = "group_" + groupId;
                 ArrayList<DelayedMessage> arrayList = delayedMessages.get(key);
@@ -2718,7 +2716,7 @@
                         }
                         performSendMessageRequest(reqSend, newMsgObj, null, null, parentObject);
                         if (retryMessageObject == null) {
-                            DataQuery.getInstance(currentAccount).cleanDraft(peer, false);
+                            getMediaDataController().cleanDraft(peer, false);
                         }
                     }
                 } else {
@@ -2750,9 +2748,9 @@
                     } else {
                         reqSend.media = new TLRPC.TL_decryptedMessageMediaEmpty();
                     }
-                    SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
+                    getSecretChatHelper().performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
                     if (retryMessageObject == null) {
-                        DataQuery.getInstance(currentAccount).cleanDraft(peer, false);
+                        getMediaDataController().cleanDraft(peer, false);
                     }
                 }
             } else if (type >= 1 && type <= 3 || type >= 5 && type <= 8 || type == 9 && encryptedChat != null || type == 10) {
@@ -2982,7 +2980,7 @@
                         }
                         reqSend = request;
                         if (retryMessageObject == null) {
-                            DataQuery.getInstance(currentAccount).cleanDraft(peer, false);
+                            getMediaDataController().cleanDraft(peer, false);
                         }
                     } else if (groupId != 0) {
                         TLRPC.TL_messages_sendMultiMedia request;
@@ -3113,7 +3111,7 @@
                         }
                         reqSend.media.lat = location.geo.lat;
                         reqSend.media._long = location.geo._long;
-                        SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
+                        getSecretChatHelper().performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
                     } else if (type == 2 || type == 9 && photo != null) {
                         TLRPC.PhotoSize small = photo.sizes.get(0);
                         TLRPC.PhotoSize big = photo.sizes.get(photo.sizes.size() - 1);
@@ -3160,7 +3158,7 @@
                             encryptedFile.access_hash = big.location.secret;
                             reqSend.media.key = big.location.key;
                             reqSend.media.iv = big.location.iv;
-                            SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, encryptedFile, null, newMsgObj);
+                            getSecretChatHelper().performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, encryptedFile, null, newMsgObj);
                         }
                     } else if (type == 3) {
                         TLRPC.PhotoSize thumb = getThumbForSecretChat(document.thumbs);
@@ -3220,7 +3218,7 @@
                             encryptedFile.access_hash = document.access_hash;
                             reqSend.media.key = document.key;
                             reqSend.media.iv = document.iv;
-                            SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, encryptedFile, null, newMsgObj);
+                            getSecretChatHelper().performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, encryptedFile, null, newMsgObj);
                         }
                     } else if (type == 6) {
                         reqSend.media = new TLRPC.TL_decryptedMessageMediaContact();
@@ -3228,9 +3226,9 @@
                         reqSend.media.first_name = user.first_name;
                         reqSend.media.last_name = user.last_name;
                         reqSend.media.user_id = user.id;
-                        SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
+                        getSecretChatHelper().performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
                     } else if (type == 7 || type == 9 && document != null) {
-                        if (MessageObject.isStickerDocument(document)) {
+                        if (MessageObject.isStickerDocument(document) || MessageObject.isAnimatedStickerDocument(document)) {
                             reqSend.media = new TLRPC.TL_decryptedMessageMediaExternalDocument();
                             reqSend.media.id = document.id;
                             reqSend.media.date = document.date;
@@ -3246,7 +3244,7 @@
                                 ((TLRPC.TL_decryptedMessageMediaExternalDocument) reqSend.media).thumb = new TLRPC.TL_photoSizeEmpty();
                                 ((TLRPC.TL_decryptedMessageMediaExternalDocument) reqSend.media).thumb.type = "s";
                             }
-                            SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
+                            getSecretChatHelper().performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, null, null, newMsgObj);
                         } else {
                             reqSend.media = new TLRPC.TL_decryptedMessageMediaDocument();
                             reqSend.media.attributes = document.attributes;
@@ -3288,7 +3286,7 @@
                                 encryptedFile.access_hash = document.access_hash;
                                 reqSend.media.key = document.key;
                                 reqSend.media.iv = document.iv;
-                                SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, encryptedFile, null, newMsgObj);
+                                getSecretChatHelper().performSendEncryptedRequest(reqSend, newMsgObj.messageOwner, encryptedChat, encryptedFile, null, newMsgObj);
                             }
                         }
                     } else if (type == 8) {
@@ -3338,7 +3336,7 @@
                         performSendDelayedMessage(delayedMessage);
                     }
                     if (retryMessageObject == null) {
-                        DataQuery.getInstance(currentAccount).cleanDraft(peer, false);
+                        getMediaDataController().cleanDraft(peer, false);
                     }
                 }
             } else if (type == 4) {
@@ -3346,7 +3344,7 @@
                 reqSend.to_peer = sendToPeer;
                 reqSend.with_my_score = retryMessageObject.messageOwner.with_my_score;
                 if (retryMessageObject.messageOwner.ttl != 0) {
-                    TLRPC.Chat chat = MessagesController.getInstance(currentAccount).getChat(-retryMessageObject.messageOwner.ttl);
+                    TLRPC.Chat chat = getMessagesController().getChat(-retryMessageObject.messageOwner.ttl);
                     reqSend.from_peer = new TLRPC.TL_inputPeerChannel();
                     reqSend.from_peer.channel_id = -retryMessageObject.messageOwner.ttl;
                     if (chat != null) {
@@ -3385,17 +3383,17 @@
                 reqSend.id = params.get("id");
                 if (retryMessageObject == null) {
                     reqSend.clear_draft = true;
-                    DataQuery.getInstance(currentAccount).cleanDraft(peer, false);
+                    getMediaDataController().cleanDraft(peer, false);
                 }
                 performSendMessageRequest(reqSend, newMsgObj, null, null, parentObject);
             }
         } catch (Exception e) {
             FileLog.e(e);
-            MessagesStorage.getInstance(currentAccount).markMessageAsSendError(newMsg);
+            getMessagesStorage().markMessageAsSendError(newMsg);
             if (newMsgObj != null) {
                 newMsgObj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
             }
-            NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, newMsg.id);
+            getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, newMsg.id);
             processSentMessage(newMsg.id);
         }
     }
@@ -3441,7 +3439,7 @@
                 if (message.sendRequest != null) {
                     String location = FileLoader.getPathToAttach(message.photoSize).toString();
                     putToDelayedMessages(location, message);
-                    FileLoader.getInstance(currentAccount).uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
+                    getFileLoader().uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
                 } else {
                     String location = FileLoader.getPathToAttach(message.photoSize).toString();
                     if (message.sendEncryptedRequest != null && message.photoSize.location.dc_id != 0) {
@@ -3452,12 +3450,12 @@
                         }
                         if (!file.exists()) {
                             putToDelayedMessages(FileLoader.getAttachFileName(message.photoSize), message);
-                            FileLoader.getInstance(currentAccount).loadFile(ImageLocation.getForObject(message.photoSize, message.locationParent), message.parentObject, "jpg", 2, 0);
+                            getFileLoader().loadFile(ImageLocation.getForObject(message.photoSize, message.locationParent), message.parentObject, "jpg", 2, 0);
                             return;
                         }
                     }
                     putToDelayedMessages(location, message);
-                    FileLoader.getInstance(currentAccount).uploadFile(location, true, true, ConnectionsManager.FileTypePhoto);
+                    getFileLoader().uploadFile(location, true, true, ConnectionsManager.FileTypePhoto);
                 }
             }
         } else if (message.type == 1) {
@@ -3487,7 +3485,7 @@
                         decryptedMessage.media.size = (int) message.videoEditedInfo.estimatedSize;
                         decryptedMessage.media.key = message.videoEditedInfo.key;
                         decryptedMessage.media.iv = message.videoEditedInfo.iv;
-                        SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest(decryptedMessage, message.obj.messageOwner, message.encryptedChat, message.videoEditedInfo.encryptedFile, message.originalPath, message.obj);
+                        getSecretChatHelper().performSendEncryptedRequest(decryptedMessage, message.obj.messageOwner, message.encryptedChat, message.videoEditedInfo.encryptedFile, message.originalPath, message.obj);
                         message.videoEditedInfo.encryptedFile = null;
                         return;
                     }
@@ -3509,14 +3507,14 @@
                         }
                         putToDelayedMessages(location, message);
                         if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {
-                            FileLoader.getInstance(currentAccount).uploadFile(location, false, false, document.size, ConnectionsManager.FileTypeVideo);
+                            getFileLoader().uploadFile(location, false, false, document.size, ConnectionsManager.FileTypeVideo);
                         } else {
-                            FileLoader.getInstance(currentAccount).uploadFile(location, false, false, ConnectionsManager.FileTypeVideo);
+                            getFileLoader().uploadFile(location, false, false, ConnectionsManager.FileTypeVideo);
                         }
                     } else {
                         String location = FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + "/" + message.photoSize.location.volume_id + "_" + message.photoSize.location.local_id + ".jpg";
                         putToDelayedMessages(location, message);
-                        FileLoader.getInstance(currentAccount).uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
+                        getFileLoader().uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
                     }
                 } else {
                     String location = message.obj.messageOwner.attachPath;
@@ -3528,15 +3526,15 @@
                         File file = new File(location);
                         if (!file.exists()) {
                             putToDelayedMessages(FileLoader.getAttachFileName(document), message);
-                            FileLoader.getInstance(currentAccount).loadFile(document, message.parentObject, 2, 0);
+                            getFileLoader().loadFile(document, message.parentObject, 2, 0);
                             return;
                         }
                     }
                     putToDelayedMessages(location, message);
                     if (message.obj.videoEditedInfo != null && message.obj.videoEditedInfo.needConvert()) {
-                        FileLoader.getInstance(currentAccount).uploadFile(location, true, false, document.size, ConnectionsManager.FileTypeVideo);
+                        getFileLoader().uploadFile(location, true, false, document.size, ConnectionsManager.FileTypeVideo);
                     } else {
-                        FileLoader.getInstance(currentAccount).uploadFile(location, true, false, ConnectionsManager.FileTypeVideo);
+                        getFileLoader().uploadFile(location, true, false, ConnectionsManager.FileTypeVideo);
                     }
                 }
             }
@@ -3557,11 +3555,11 @@
                     if (media.file == null) {
                         String location = message.obj.messageOwner.attachPath;
                         putToDelayedMessages(location, message);
-                        FileLoader.getInstance(currentAccount).uploadFile(location, message.sendRequest == null, false, ConnectionsManager.FileTypeFile);
+                        getFileLoader().uploadFile(location, message.sendRequest == null, false, ConnectionsManager.FileTypeFile);
                     } else if (media.thumb == null && message.photoSize != null) {
                         String location = FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + "/" + message.photoSize.location.volume_id + "_" + message.photoSize.location.local_id + ".jpg";
                         putToDelayedMessages(location, message);
-                        FileLoader.getInstance(currentAccount).uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
+                        getFileLoader().uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
                     }
                 } else {
                     String location = message.obj.messageOwner.attachPath;
@@ -3570,18 +3568,18 @@
                         File file = new File(location);
                         if (!file.exists()) {
                             putToDelayedMessages(FileLoader.getAttachFileName(document), message);
-                            FileLoader.getInstance(currentAccount).loadFile(document, message.parentObject, 2, 0);
+                            getFileLoader().loadFile(document, message.parentObject, 2, 0);
                             return;
                         }
                     }
                     putToDelayedMessages(location, message);
-                    FileLoader.getInstance(currentAccount).uploadFile(location, true, false, ConnectionsManager.FileTypeFile);
+                    getFileLoader().uploadFile(location, true, false, ConnectionsManager.FileTypeFile);
                 }
             }
         } else if (message.type == 3) {
             String location = message.obj.messageOwner.attachPath;
             putToDelayedMessages(location, message);
-            FileLoader.getInstance(currentAccount).uploadFile(location, message.sendRequest == null, true, ConnectionsManager.FileTypeAudio);
+            getFileLoader().uploadFile(location, message.sendRequest == null, true, ConnectionsManager.FileTypeAudio);
         } else if (message.type == 4) {
             boolean add = index < 0;
             if (message.performMediaUpload) {
@@ -3621,9 +3619,9 @@
                                     message.extraHashMap.put(documentLocation + "_t", message.photoSize);
                                 }
                                 if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {
-                                    FileLoader.getInstance(currentAccount).uploadFile(documentLocation, false, false, document.size, ConnectionsManager.FileTypeVideo);
+                                    getFileLoader().uploadFile(documentLocation, false, false, document.size, ConnectionsManager.FileTypeVideo);
                                 } else {
-                                    FileLoader.getInstance(currentAccount).uploadFile(documentLocation, false, false, ConnectionsManager.FileTypeVideo);
+                                    getFileLoader().uploadFile(documentLocation, false, false, ConnectionsManager.FileTypeVideo);
                                 }
                             } else {
                                 String location = FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE) + "/" + message.photoSize.location.volume_id + "_" + message.photoSize.location.local_id + ".jpg";
@@ -3631,7 +3629,7 @@
                                 message.extraHashMap.put(location + "_o", documentLocation);
                                 message.extraHashMap.put(messageObject, location);
                                 message.extraHashMap.put(location, media);
-                                FileLoader.getInstance(currentAccount).uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
+                                getFileLoader().uploadFile(location, false, true, ConnectionsManager.FileTypePhoto);
                             }
                         } else {
                             TLRPC.TL_messages_sendEncryptedMultiMedia request = (TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest;
@@ -3643,9 +3641,9 @@
                                 message.extraHashMap.put(documentLocation + "_t", message.photoSize);
                             }
                             if (messageObject.videoEditedInfo != null && messageObject.videoEditedInfo.needConvert()) {
-                                FileLoader.getInstance(currentAccount).uploadFile(documentLocation, true, false, document.size, ConnectionsManager.FileTypeVideo);
+                                getFileLoader().uploadFile(documentLocation, true, false, document.size, ConnectionsManager.FileTypeVideo);
                             } else {
-                                FileLoader.getInstance(currentAccount).uploadFile(documentLocation, true, false, ConnectionsManager.FileTypeVideo);
+                                getFileLoader().uploadFile(documentLocation, true, false, ConnectionsManager.FileTypeVideo);
                             }
                         }
                     }
@@ -3671,7 +3669,7 @@
                         putToDelayedMessages(location, message);
                         message.extraHashMap.put(location, inputMedia);
                         message.extraHashMap.put(messageObject, location);
-                        FileLoader.getInstance(currentAccount).uploadFile(location, message.sendEncryptedRequest != null, true, ConnectionsManager.FileTypePhoto);
+                        getFileLoader().uploadFile(location, message.sendEncryptedRequest != null, true, ConnectionsManager.FileTypePhoto);
                         message.photoSize = null;
                     }
                 }
@@ -3689,7 +3687,7 @@
             for (int a = 0; a < multiMedia.multi_media.size(); a++) {
                 if (multiMedia.multi_media.get(a).media == inputMedia) {
                     putToSendingMessages(message.messages.get(a));
-                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.FileUploadProgressChanged, key, 1.0f, false);
+                    getNotificationCenter().postNotificationName(NotificationCenter.FileUploadProgressChanged, key, 1.0f, false);
                     break;
                 }
             }
@@ -3697,7 +3695,7 @@
             TLRPC.TL_messages_uploadMedia req = new TLRPC.TL_messages_uploadMedia();
             req.media = inputMedia;
             req.peer = ((TLRPC.TL_messages_sendMultiMedia) message.sendRequest).peer;
-            ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> {
+            getConnectionsManager().sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> {
                 TLRPC.InputMedia newInputMedia = null;
                 if (response != null) {
                     TLRPC.MessageMedia messageMedia = (TLRPC.MessageMedia) response;
@@ -3739,7 +3737,7 @@
             for (int a = 0; a < multiMedia.files.size(); a++) {
                 if (multiMedia.files.get(a) == inputEncryptedFile) {
                     putToSendingMessages(message.messages.get(a));
-                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.FileUploadProgressChanged, key, 1.0f, false);
+                    getNotificationCenter().postNotificationName(NotificationCenter.FileUploadProgressChanged, key, 1.0f, false);
                     break;
                 }
             }
@@ -3760,9 +3758,9 @@
             return;
         } else if (add) {
             delayedMessages.remove(key);
-            MessagesStorage.getInstance(currentAccount).putMessages(message.messages, false, true, false, 0);
-            MessagesController.getInstance(currentAccount).updateInterfaceWithMessages(message.peer, message.messageObjects);
-            NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
+            getMessagesStorage().putMessages(message.messages, false, true, false, 0);
+            getMessagesController().updateInterfaceWithMessages(message.peer, message.messageObjects);
+            getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload);
         }
         if (message.sendRequest instanceof TLRPC.TL_messages_sendMultiMedia) {
             TLRPC.TL_messages_sendMultiMedia request = (TLRPC.TL_messages_sendMultiMedia) message.sendRequest;
@@ -3796,14 +3794,14 @@
         if (message.sendRequest instanceof TLRPC.TL_messages_sendMultiMedia) {
             performSendMessageRequestMulti((TLRPC.TL_messages_sendMultiMedia) message.sendRequest, message.messageObjects, message.originalPaths, message.parentObjects, message);
         } else {
-            SecretChatHelper.getInstance(currentAccount).performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest, message);
+            getSecretChatHelper().performSendEncryptedRequest((TLRPC.TL_messages_sendEncryptedMultiMedia) message.sendEncryptedRequest, message);
         }
 
         message.sendDelayedRequests();
     }
 
     protected void stopVideoService(final String path) {
-        MessagesStorage.getInstance(currentAccount).getStorageQueue().postRunnable(() -> AndroidUtilities.runOnUIThread(() -> NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopEncodingService, path, currentAccount)));
+        getMessagesStorage().getStorageQueue().postRunnable(() -> AndroidUtilities.runOnUIThread(() -> NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.stopEncodingService, path, currentAccount)));
     }
 
     protected void putToSendingMessages(TLRPC.Message message) {
@@ -3826,11 +3824,11 @@
         for (int a = 0, size = msgObjs.size(); a < size; a++) {
             putToSendingMessages(msgObjs.get(a).messageOwner);
         }
-        ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> {
+        getConnectionsManager().sendRequest(req, (response, error) -> AndroidUtilities.runOnUIThread(() -> {
             if (error != null && FileRefController.isFileRefError(error.text)) {
                 if (parentObjects != null) {
                     ArrayList<Object> arrayList = new ArrayList<>(parentObjects);
-                    FileRefController.getInstance(currentAccount).requestReference(arrayList, req, msgObjs, originalPaths, arrayList, delayedMessage);
+                    getFileRefController().requestReference(arrayList, req, msgObjs, originalPaths, arrayList, delayedMessage);
                     return;
                 } else if (delayedMessage != null) {
                     AndroidUtilities.runOnUIThread(new Runnable() {
@@ -3874,13 +3872,13 @@
                     } else if (update instanceof TLRPC.TL_updateNewMessage) {
                         final TLRPC.TL_updateNewMessage newMessage = (TLRPC.TL_updateNewMessage) update;
                         newMessages.put(newMessage.message.id, newMessage.message);
-                        Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count));
+                        Utilities.stageQueue.postRunnable(() -> getMessagesController().processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count));
                         updatesArr.remove(a);
                         a--;
                     } else if (update instanceof TLRPC.TL_updateNewChannelMessage) {
                         final TLRPC.TL_updateNewChannelMessage newMessage = (TLRPC.TL_updateNewChannelMessage) update;
                         newMessages.put(newMessage.message.id, newMessage.message);
-                        Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.to_id.channel_id));
+                        Utilities.stageQueue.postRunnable(() -> getMessagesController().processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.to_id.channel_id));
                         updatesArr.remove(a);
                         a--;
                     }
@@ -3909,10 +3907,10 @@
                             }
                             grouped_id = message.grouped_id;
 
-                            Integer value = MessagesController.getInstance(currentAccount).dialogs_read_outbox_max.get(message.dialog_id);
+                            Integer value = getMessagesController().dialogs_read_outbox_max.get(message.dialog_id);
                             if (value == null) {
-                                value = MessagesStorage.getInstance(currentAccount).getDialogReadMax(message.out, message.dialog_id);
-                                MessagesController.getInstance(currentAccount).dialogs_read_outbox_max.put(message.dialog_id, value);
+                                value = getMessagesStorage().getDialogReadMax(message.out, message.dialog_id);
+                                getMessagesController().dialogs_read_outbox_max.put(message.dialog_id, value);
                             }
                             message.unread = value < message.id;
                         } else {
@@ -3925,22 +3923,22 @@
                     }
 
                     if (!isSentError) {
-                        StatsController.getInstance(currentAccount).incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), StatsController.TYPE_MESSAGES, 1);
+                        getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), StatsController.TYPE_MESSAGES, 1);
                         newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
-                        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, oldId, newMsgObj.id, newMsgObj, newMsgObj.dialog_id, grouped_id, existFlags);
-                        MessagesStorage.getInstance(currentAccount).getStorageQueue().postRunnable(() -> {
-                            MessagesStorage.getInstance(currentAccount).updateMessageStateAndId(newMsgObj.random_id, oldId, newMsgObj.id, 0, false, newMsgObj.to_id.channel_id);
-                            MessagesStorage.getInstance(currentAccount).putMessages(sentMessages, true, false, false, 0);
+                        getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, oldId, newMsgObj.id, newMsgObj, newMsgObj.dialog_id, grouped_id, existFlags);
+                        getMessagesStorage().getStorageQueue().postRunnable(() -> {
+                            getMessagesStorage().updateMessageStateAndId(newMsgObj.random_id, oldId, newMsgObj.id, 0, false, newMsgObj.to_id.channel_id);
+                            getMessagesStorage().putMessages(sentMessages, true, false, false, 0);
                             AndroidUtilities.runOnUIThread(() -> {
-                                DataQuery.getInstance(currentAccount).increasePeerRaiting(newMsgObj.dialog_id);
-                                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, oldId, newMsgObj.id, newMsgObj, newMsgObj.dialog_id, grouped_id, existFlags);
+                                getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
+                                getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, oldId, newMsgObj.id, newMsgObj, newMsgObj.dialog_id, grouped_id, existFlags);
                                 processSentMessage(oldId);
                                 removeFromSendingMessages(oldId);
                             });
                         });
                     }
                 }
-                Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processUpdates(updates, false));
+                Utilities.stageQueue.postRunnable(() -> getMessagesController().processUpdates(updates, false));
             } else {
                 AlertsCreator.processError(currentAccount, error, null, req);
                 isSentError = true;
@@ -3948,9 +3946,9 @@
             if (isSentError) {
                 for (int i = 0; i < msgObjs.size(); i++) {
                     TLRPC.Message newMsgObj = msgObjs.get(i).messageOwner;
-                    MessagesStorage.getInstance(currentAccount).markMessageAsSendError(newMsgObj);
+                    getMessagesStorage().markMessageAsSendError(newMsgObj);
                     newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
-                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, newMsgObj.id);
+                    getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, newMsgObj.id);
                     processSentMessage(newMsgObj.id);
                     removeFromSendingMessages(newMsgObj.id);
                 }
@@ -4004,10 +4002,10 @@
         }
         final TLRPC.Message newMsgObj = msgObj.messageOwner;
         putToSendingMessages(newMsgObj);
-        newMsgObj.reqId = ConnectionsManager.getInstance(currentAccount).sendRequest(req, (response, error) -> {
+        newMsgObj.reqId = getConnectionsManager().sendRequest(req, (response, error) -> {
             if (error != null && (req instanceof TLRPC.TL_messages_sendMedia || req instanceof TLRPC.TL_messages_editMessage) && FileRefController.isFileRefError(error.text)) {
                 if (parentObject != null) {
-                    FileRefController.getInstance(currentAccount).requestReference(parentObject, req, msgObj, originalPath, parentMessage, check, delayedMessage);
+                    getFileRefController().requestReference(parentObject, req, msgObj, originalPath, parentMessage, check, delayedMessage);
                     return;
                 } else if (delayedMessage != null) {
                     AndroidUtilities.runOnUIThread(new Runnable() {
@@ -4061,7 +4059,7 @@
                             updateMediaPaths(msgObj, message, message.id, originalPath, false);
                         }
                         Utilities.stageQueue.postRunnable(() -> {
-                            MessagesController.getInstance(currentAccount).processUpdates(updates, false);
+                            getMessagesController().processUpdates(updates, false);
                             AndroidUtilities.runOnUIThread(() -> {
                                 processSentMessage(newMsgObj.id);
                                 removeFromSendingMessages(newMsgObj.id);
@@ -4108,7 +4106,7 @@
                             if (!newMsgObj.entities.isEmpty()) {
                                 newMsgObj.flags |= TLRPC.MESSAGE_FLAG_HAS_ENTITIES;
                             }
-                            Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processNewDifferenceParams(-1, res.pts, res.date, res.pts_count));
+                            Utilities.stageQueue.postRunnable(() -> getMessagesController().processNewDifferenceParams(-1, res.pts, res.date, res.pts_count));
                             sentMessages.add(newMsgObj);
                         } else if (response instanceof TLRPC.Updates) {
                             final TLRPC.Updates updates = (TLRPC.Updates) response;
@@ -4119,7 +4117,7 @@
                                 if (update instanceof TLRPC.TL_updateNewMessage) {
                                     final TLRPC.TL_updateNewMessage newMessage = (TLRPC.TL_updateNewMessage) update;
                                     sentMessages.add(message = newMessage.message);
-                                    Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count));
+                                    Utilities.stageQueue.postRunnable(() -> getMessagesController().processNewDifferenceParams(-1, newMessage.pts, -1, newMessage.pts_count));
                                     updatesArr.remove(a);
                                     break;
                                 } else if (update instanceof TLRPC.TL_updateNewChannelMessage) {
@@ -4128,17 +4126,17 @@
                                     if ((newMsgObj.flags & TLRPC.MESSAGE_FLAG_MEGAGROUP) != 0) {
                                         newMessage.message.flags |= TLRPC.MESSAGE_FLAG_MEGAGROUP;
                                     }
-                                    Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.to_id.channel_id));
+                                    Utilities.stageQueue.postRunnable(() -> getMessagesController().processNewChannelDifferenceParams(newMessage.pts, newMessage.pts_count, newMessage.message.to_id.channel_id));
                                     updatesArr.remove(a);
                                     break;
                                 }
                             }
                             if (message != null) {
                                 ImageLoader.saveMessageThumbs(message);
-                                Integer value = MessagesController.getInstance(currentAccount).dialogs_read_outbox_max.get(message.dialog_id);
+                                Integer value = getMessagesController().dialogs_read_outbox_max.get(message.dialog_id);
                                 if (value == null) {
-                                    value = MessagesStorage.getInstance(currentAccount).getDialogReadMax(message.out, message.dialog_id);
-                                    MessagesController.getInstance(currentAccount).dialogs_read_outbox_max.put(message.dialog_id, value);
+                                    value = getMessagesStorage().getDialogReadMax(message.out, message.dialog_id);
+                                    getMessagesController().dialogs_read_outbox_max.put(message.dialog_id, value);
                                 }
                                 message.unread = value < message.id;
                                 updateMediaPaths(msgObj, message, message.id, originalPath, false);
@@ -4148,26 +4146,26 @@
                                 isSentError = true;
                                 existFlags = 0;
                             }
-                            Utilities.stageQueue.postRunnable(() -> MessagesController.getInstance(currentAccount).processUpdates(updates, false));
+                            Utilities.stageQueue.postRunnable(() -> getMessagesController().processUpdates(updates, false));
                         } else {
                             existFlags = 0;
                         }
 
                         if (MessageObject.isLiveLocationMessage(newMsgObj)) {
-                            LocationController.getInstance(currentAccount).addSharingLocation(newMsgObj.dialog_id, newMsgObj.id, newMsgObj.media.period, newMsgObj);
+                            getLocationController().addSharingLocation(newMsgObj.dialog_id, newMsgObj.id, newMsgObj.media.period, newMsgObj);
                         }
 
                         if (!isSentError) {
-                            StatsController.getInstance(currentAccount).incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), StatsController.TYPE_MESSAGES, 1);
+                            getStatsController().incrementSentItemsCount(ApplicationLoader.getCurrentNetworkType(), StatsController.TYPE_MESSAGES, 1);
                             newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
-                            NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, oldId, (isBroadcast ? oldId : newMsgObj.id), newMsgObj, newMsgObj.dialog_id, 0L, existFlags);
-                            MessagesStorage.getInstance(currentAccount).getStorageQueue().postRunnable(() -> {
-                                MessagesStorage.getInstance(currentAccount).updateMessageStateAndId(newMsgObj.random_id, oldId, (isBroadcast ? oldId : newMsgObj.id), 0, false, newMsgObj.to_id.channel_id);
-                                MessagesStorage.getInstance(currentAccount).putMessages(sentMessages, true, false, isBroadcast, 0);
+                            getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, oldId, (isBroadcast ? oldId : newMsgObj.id), newMsgObj, newMsgObj.dialog_id, 0L, existFlags);
+                            getMessagesStorage().getStorageQueue().postRunnable(() -> {
+                                getMessagesStorage().updateMessageStateAndId(newMsgObj.random_id, oldId, (isBroadcast ? oldId : newMsgObj.id), 0, false, newMsgObj.to_id.channel_id);
+                                getMessagesStorage().putMessages(sentMessages, true, false, isBroadcast, 0);
                                 if (isBroadcast) {
                                     ArrayList<TLRPC.Message> currentMessage = new ArrayList<>();
                                     currentMessage.add(newMsgObj);
-                                    MessagesStorage.getInstance(currentAccount).putMessages(currentMessage, true, false, false, 0);
+                                    getMessagesStorage().putMessages(currentMessage, true, false, false, 0);
                                 }
                                 AndroidUtilities.runOnUIThread(() -> {
                                     if (isBroadcast) {
@@ -4176,12 +4174,12 @@
                                             ArrayList<MessageObject> arr = new ArrayList<>();
                                             MessageObject messageObject = new MessageObject(currentAccount, message, false);
                                             arr.add(messageObject);
-                                            MessagesController.getInstance(currentAccount).updateInterfaceWithMessages(messageObject.getDialogId(), arr, true);
+                                            getMessagesController().updateInterfaceWithMessages(messageObject.getDialogId(), arr, true);
                                         }
-                                        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.dialogsNeedReload);
+                                        getNotificationCenter().postNotificationName(NotificationCenter.dialogsNeedReload);
                                     }
-                                    DataQuery.getInstance(currentAccount).increasePeerRaiting(newMsgObj.dialog_id);
-                                    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageReceivedByServer, oldId, (isBroadcast ? oldId : newMsgObj.id), newMsgObj, newMsgObj.dialog_id, 0L, existFlags);
+                                    getMediaDataController().increasePeerRaiting(newMsgObj.dialog_id);
+                                    getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByServer, oldId, (isBroadcast ? oldId : newMsgObj.id), newMsgObj, newMsgObj.dialog_id, 0L, existFlags);
                                     processSentMessage(oldId);
                                     removeFromSendingMessages(oldId);
                                 });
@@ -4195,9 +4193,9 @@
                         isSentError = true;
                     }
                     if (isSentError) {
-                        MessagesStorage.getInstance(currentAccount).markMessageAsSendError(newMsgObj);
+                        getMessagesStorage().markMessageAsSendError(newMsgObj);
                         newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
-                        NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageSendError, newMsgObj.id);
+                        getNotificationCenter().postNotificationName(NotificationCenter.messageSendError, newMsgObj.id);
                         processSentMessage(newMsgObj.id);
                         if (MessageObject.isVideoMessage(newMsgObj) || MessageObject.isRoundVideoMessage(newMsgObj) || MessageObject.isNewGifMessage(newMsgObj)) {
                             stopVideoService(newMsgObj.attachPath);
@@ -4210,7 +4208,7 @@
             final int msg_id = newMsgObj.id;
             AndroidUtilities.runOnUIThread(() -> {
                 newMsgObj.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
-                NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.messageReceivedByAck, msg_id);
+                getNotificationCenter().postNotificationName(NotificationCenter.messageReceivedByAck, msg_id);
             });
         }, ConnectionsManager.RequestFlagCanCompress | ConnectionsManager.RequestFlagInvokeAfter | (req instanceof TLRPC.TL_messages_sendMessage ? ConnectionsManager.RequestFlagNeedQuickAck : 0));
 
@@ -4277,7 +4275,7 @@
         }
         if (sentMessage.media instanceof TLRPC.TL_messageMediaPhoto && sentMessage.media.photo != null && newMsg.media instanceof TLRPC.TL_messageMediaPhoto && newMsg.media.photo != null) {
             if (sentMessage.media.ttl_seconds == 0) {
-                MessagesStorage.getInstance(currentAccount).putSentFile(originalPath, sentMessage.media.photo, 0, "sent_" + sentMessage.to_id.channel_id + "_" + sentMessage.id);
+                getMessagesStorage().putSentFile(originalPath, sentMessage.media.photo, 0, "sent_" + sentMessage.to_id.channel_id + "_" + sentMessage.id);
             }
 
             if (newMsg.media.photo.sizes.size() == 1 && newMsg.media.photo.sizes.get(0).location instanceof TLRPC.TL_fileLocationUnavailable) {
@@ -4323,12 +4321,12 @@
             if (sentMessage.media.ttl_seconds == 0) {
                 boolean isVideo = MessageObject.isVideoMessage(sentMessage);
                 if ((isVideo || MessageObject.isGifMessage(sentMessage)) && MessageObject.isGifDocument(sentMessage.media.document) == MessageObject.isGifDocument(newMsg.media.document)) {
-                    MessagesStorage.getInstance(currentAccount).putSentFile(originalPath, sentMessage.media.document, 2, "sent_" + sentMessage.to_id.channel_id + "_" + sentMessage.id);
+                    getMessagesStorage().putSentFile(originalPath, sentMessage.media.document, 2, "sent_" + sentMessage.to_id.channel_id + "_" + sentMessage.id);
                     if (isVideo) {
                         sentMessage.attachPath = newMsg.attachPath;
                     }
                 } else if (!MessageObject.isVoiceMessage(sentMessage) && !MessageObject.isRoundVideoMessage(sentMessage)) {
-                    MessagesStorage.getInstance(currentAccount).putSentFile(originalPath, sentMessage.media.document, 1, "sent_" + sentMessage.to_id.channel_id + "_" + sentMessage.id);
+                    getMessagesStorage().putSentFile(originalPath, sentMessage.media.document, 1, "sent_" + sentMessage.to_id.channel_id + "_" + sentMessage.id);
                 }
             }
 
@@ -4377,9 +4375,9 @@
 
             if ((sentMessage.flags & TLRPC.MESSAGE_FLAG_FWD) == 0 && MessageObject.isOut(sentMessage)) {
                 if (MessageObject.isNewGifDocument(sentMessage.media.document)) {
-                    DataQuery.getInstance(currentAccount).addRecentGif(sentMessage.media.document, sentMessage.date);
-                } else if (MessageObject.isStickerDocument(sentMessage.media.document)) {
-                    DataQuery.getInstance(currentAccount).addRecentSticker(DataQuery.TYPE_IMAGE, sentMessage, sentMessage.media.document, sentMessage.date, false);
+                    getMediaDataController().addRecentGif(sentMessage.media.document, sentMessage.date);
+                } else if (MessageObject.isStickerDocument(sentMessage.media.document) || MessageObject.isAnimatedStickerDocument(sentMessage.media.document)) {
+                    getMediaDataController().addRecentSticker(MediaDataController.TYPE_IMAGE, sentMessage, sentMessage.media.document, sentMessage.date, false);
                 }
             }
 
@@ -4402,7 +4400,7 @@
                         newMsgObj.attachPathExists = false;
                         newMsg.attachPath = "";
                         if (originalPath != null && originalPath.startsWith("http")) {
-                            MessagesStorage.getInstance(currentAccount).addRecentLocalFile(originalPath, cacheFile2.toString(), newMsg.media.document);
+                            getMessagesStorage().addRecentLocalFile(originalPath, cacheFile2.toString(), newMsg.media.document);
                         }
                     }
                 }
@@ -4450,14 +4448,14 @@
     }
 
     public void checkUnsentMessages() {
-        MessagesStorage.getInstance(currentAccount).getUnsentMessages(1000);
+        getMessagesStorage().getUnsentMessages(1000);
     }
 
     protected void processUnsentMessages(final ArrayList<TLRPC.Message> messages, final ArrayList<TLRPC.User> users, final ArrayList<TLRPC.Chat> chats, final ArrayList<TLRPC.EncryptedChat> encryptedChats) {
         AndroidUtilities.runOnUIThread(() -> {
-            MessagesController.getInstance(currentAccount).putUsers(users, true);
-            MessagesController.getInstance(currentAccount).putChats(chats, true);
-            MessagesController.getInstance(currentAccount).putEncryptedChats(encryptedChats, true);
+            getMessagesController().putUsers(users, true);
+            getMessagesController().putChats(chats, true);
+            getMessagesController().putEncryptedChats(encryptedChats, true);
             for (int a = 0; a < messages.size(); a++) {
                 TLRPC.Message message = messages.get(a);
                 MessageObject messageObject = new MessageObject(currentAccount, message, false);
@@ -4490,18 +4488,18 @@
         if (sizes.isEmpty()) {
             return null;
         } else {
-            UserConfig.getInstance(currentAccount).saveConfig(false);
+            getUserConfig().saveConfig(false);
             if (photo == null) {
                 photo = new TLRPC.TL_photo();
             }
-            photo.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+            photo.date = getConnectionsManager().getCurrentTime();
             photo.sizes = sizes;
             photo.file_reference = new byte[0];
             return photo;
         }
     }
 
-    private static boolean prepareSendingDocumentInternal(final int currentAccount, String path, String originalPath, Uri uri, String mime, final long dialog_id, final MessageObject reply_to_msg, CharSequence caption, final ArrayList<TLRPC.MessageEntity> entities, final MessageObject editingMessageObject, boolean forceDocument) {
+    private static boolean prepareSendingDocumentInternal(AccountInstance accountInstance, String path, String originalPath, Uri uri, String mime, final long dialog_id, final MessageObject reply_to_msg, CharSequence caption, final ArrayList<TLRPC.MessageEntity> entities, final MessageObject editingMessageObject, boolean forceDocument) {
         if ((path == null || path.length() == 0) && uri == null) {
             return false;
         }
@@ -4621,24 +4619,24 @@
         TLRPC.TL_document document = null;
         String parentObject = null;
         if (!sendNew && !isEncrypted) {
-            Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(originalPath, !isEncrypted ? 1 : 4);
+            Object[] sentData = accountInstance.getMessagesStorage().getSentFile(originalPath, !isEncrypted ? 1 : 4);
             if (sentData != null) {
                 document = (TLRPC.TL_document) sentData[0];
                 parentObject = (String) sentData[1];
             }
             if (document == null && !path.equals(originalPath) && !isEncrypted) {
-                sentData = MessagesStorage.getInstance(currentAccount).getSentFile(path + f.length(), !isEncrypted ? 1 : 4);
+                sentData = accountInstance.getMessagesStorage().getSentFile(path + f.length(), !isEncrypted ? 1 : 4);
                 if (sentData != null) {
                     document = (TLRPC.TL_document) sentData[0];
                     parentObject = (String) sentData[1];
                 }
             }
-            ensureMediaThumbExists(currentAccount, isEncrypted, document, path, null, 0);
+            ensureMediaThumbExists(isEncrypted, document, path, null, 0);
         }
         if (document == null) {
             document = new TLRPC.TL_document();
             document.id = 0;
-            document.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+            document.date = accountInstance.getConnectionsManager().getCurrentTime();
             TLRPC.TL_documentAttributeFilename fileName = new TLRPC.TL_documentAttributeFilename();
             fileName.file_name = name;
             document.file_reference = new byte[0];
@@ -4734,16 +4732,16 @@
         final String parentFinal = parentObject;
         AndroidUtilities.runOnUIThread(() -> {
             if (editingMessageObject != null) {
-                SendMessagesHelper.getInstance(currentAccount).editMessageMedia(editingMessageObject, null, null, documentFinal, pathFinal, params, false, parentFinal);
+                accountInstance.getSendMessagesHelper().editMessageMedia(editingMessageObject, null, null, documentFinal, pathFinal, params, false, parentFinal);
             } else {
-                SendMessagesHelper.getInstance(currentAccount).sendMessage(documentFinal, null, pathFinal, dialog_id, reply_to_msg, captionFinal, entities, null, params, 0, parentFinal);
+                accountInstance.getSendMessagesHelper().sendMessage(documentFinal, null, pathFinal, dialog_id, reply_to_msg, captionFinal, entities, null, params, 0, parentFinal);
             }
         });
         return true;
     }
 
     @UiThread
-    public static void prepareSendingDocument(String path, String originalPath, Uri uri, String caption, String mine, long dialog_id, MessageObject reply_to_msg, InputContentInfoCompat inputContent, MessageObject editingMessageObject) {
+    public static void prepareSendingDocument(AccountInstance accountInstance, String path, String originalPath, Uri uri, String caption, String mine, long dialog_id, MessageObject reply_to_msg, InputContentInfoCompat inputContent, MessageObject editingMessageObject) {
         if ((path == null || originalPath == null) && uri == null) {
             return;
         }
@@ -4758,12 +4756,11 @@
             paths.add(path);
             originalPaths.add(originalPath);
         }
-        prepareSendingDocuments(paths, originalPaths, uris, caption, mine, dialog_id, reply_to_msg, inputContent, editingMessageObject);
+        prepareSendingDocuments(accountInstance, paths, originalPaths, uris, caption, mine, dialog_id, reply_to_msg, inputContent, editingMessageObject);
     }
 
     @UiThread
-    public static void prepareSendingAudioDocuments(final ArrayList<MessageObject> messageObjects, final long dialog_id, final MessageObject reply_to_msg, final MessageObject editingMessageObject) {
-        final int currentAccount = UserConfig.selectedAccount;
+    public static void prepareSendingAudioDocuments(AccountInstance accountInstance, final ArrayList<MessageObject> messageObjects, final long dialog_id, final MessageObject reply_to_msg, final MessageObject editingMessageObject) {
         new Thread(() -> {
             int size = messageObjects.size();
             for (int a = 0; a < size; a++) {
@@ -4780,11 +4777,11 @@
                 TLRPC.TL_document document = null;
                 String parentObject = null;
                 if (!isEncrypted) {
-                    Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(originalPath, !isEncrypted ? 1 : 4);
+                    Object[] sentData = accountInstance.getMessagesStorage().getSentFile(originalPath, !isEncrypted ? 1 : 4);
                     if (sentData != null) {
                         document = (TLRPC.TL_document) sentData[0];
                         parentObject = (String) sentData[1];
-                        ensureMediaThumbExists(currentAccount, isEncrypted, document, originalPath, null, 0);
+                        ensureMediaThumbExists(isEncrypted, document, originalPath, null, 0);
                     }
                 }
                 if (document == null) {
@@ -4793,7 +4790,7 @@
 
                 if (isEncrypted) {
                     int high_id = (int) (dialog_id >> 32);
-                    TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance(currentAccount).getEncryptedChat(high_id);
+                    TLRPC.EncryptedChat encryptedChat = accountInstance.getMessagesController().getEncryptedChat(high_id);
                     if (encryptedChat == null) {
                         return;
                     }
@@ -4807,9 +4804,9 @@
                 final String parentFinal = parentObject;
                 AndroidUtilities.runOnUIThread(() -> {
                     if (editingMessageObject != null) {
-                        SendMessagesHelper.getInstance(currentAccount).editMessageMedia(editingMessageObject, null, null, documentFinal, messageObject.messageOwner.attachPath, params, false, parentFinal);
+                        accountInstance.getSendMessagesHelper().editMessageMedia(editingMessageObject, null, null, documentFinal, messageObject.messageOwner.attachPath, params, false, parentFinal);
                     } else {
-                        SendMessagesHelper.getInstance(currentAccount).sendMessage(documentFinal, null, messageObject.messageOwner.attachPath, dialog_id, reply_to_msg, null, null, null, params, 0, parentFinal);
+                        accountInstance.getSendMessagesHelper().sendMessage(documentFinal, null, messageObject.messageOwner.attachPath, dialog_id, reply_to_msg, null, null, null, params, 0, parentFinal);
                     }
                 });
             }
@@ -4817,23 +4814,22 @@
     }
 
     @UiThread
-    public static void prepareSendingDocuments(final ArrayList<String> paths, final ArrayList<String> originalPaths, final ArrayList<Uri> uris, final String caption, final String mime, final long dialog_id, final MessageObject reply_to_msg, final InputContentInfoCompat inputContent, final MessageObject editingMessageObject) {
+    public static void prepareSendingDocuments(AccountInstance accountInstance, final ArrayList<String> paths, final ArrayList<String> originalPaths, final ArrayList<Uri> uris, final String caption, final String mime, final long dialog_id, final MessageObject reply_to_msg, final InputContentInfoCompat inputContent, final MessageObject editingMessageObject) {
         if (paths == null && originalPaths == null && uris == null || paths != null && originalPaths != null && paths.size() != originalPaths.size()) {
             return;
         }
-        final int currentAccount = UserConfig.selectedAccount;
         new Thread(() -> {
             boolean error = false;
             if (paths != null) {
                 for (int a = 0; a < paths.size(); a++) {
-                    if (!prepareSendingDocumentInternal(currentAccount, paths.get(a), originalPaths.get(a), null, mime, dialog_id, reply_to_msg, caption, null, editingMessageObject, false)) {
+                    if (!prepareSendingDocumentInternal(accountInstance, paths.get(a), originalPaths.get(a), null, mime, dialog_id, reply_to_msg, caption, null, editingMessageObject, false)) {
                         error = true;
                     }
                 }
             }
             if (uris != null) {
                 for (int a = 0; a < uris.size(); a++) {
-                    if (!prepareSendingDocumentInternal(currentAccount, null, null, uris.get(a), mime, dialog_id, reply_to_msg, caption, null, editingMessageObject, false)) {
+                    if (!prepareSendingDocumentInternal(accountInstance, null, null, uris.get(a), mime, dialog_id, reply_to_msg, caption, null, editingMessageObject, false)) {
                         error = true;
                     }
                 }
@@ -4855,7 +4851,7 @@
     }
 
     @UiThread
-    public static void prepareSendingPhoto(String imageFilePath, Uri imageUri, long dialog_id, MessageObject reply_to_msg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, ArrayList<TLRPC.InputDocument> stickers, InputContentInfoCompat inputContent, int ttl, MessageObject editingMessageObject) {
+    public static void prepareSendingPhoto(AccountInstance accountInstance, String imageFilePath, Uri imageUri, long dialog_id, MessageObject reply_to_msg, CharSequence caption, ArrayList<TLRPC.MessageEntity> entities, ArrayList<TLRPC.InputDocument> stickers, InputContentInfoCompat inputContent, int ttl, MessageObject editingMessageObject) {
         SendingMediaInfo info = new SendingMediaInfo();
         info.path = imageFilePath;
         info.uri = imageUri;
@@ -4869,15 +4865,14 @@
         }
         ArrayList<SendingMediaInfo> infos = new ArrayList<>();
         infos.add(info);
-        prepareSendingMedia(infos, dialog_id, reply_to_msg, inputContent, false, false, editingMessageObject);
+        prepareSendingMedia(accountInstance, infos, dialog_id, reply_to_msg, inputContent, false, false, editingMessageObject);
     }
 
     @UiThread
-    public static void prepareSendingBotContextResult(final TLRPC.BotInlineResult result, final HashMap<String, String> params, final long dialog_id, final MessageObject reply_to_msg) {
+    public static void prepareSendingBotContextResult(AccountInstance accountInstance, final TLRPC.BotInlineResult result, final HashMap<String, String> params, final long dialog_id, final MessageObject reply_to_msg) {
         if (result == null) {
             return;
         }
-        final int currentAccount = UserConfig.selectedAccount;
         if (result.send_message instanceof TLRPC.TL_botInlineMessageMediaAuto) {
             new Thread(() -> {
                 boolean isEncrypted = (int) dialog_id == 0;
@@ -4931,7 +4926,7 @@
                             document.dc_id = 0;
                             document.mime_type = result.content.mime_type;
                             document.file_reference = new byte[0];
-                            document.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+                            document.date = accountInstance.getConnectionsManager().getCurrentTime();
                             TLRPC.TL_documentAttributeFilename fileName = new TLRPC.TL_documentAttributeFilename();
                             document.attributes.add(fileName);
 
@@ -5076,11 +5071,11 @@
                         }
                         case "photo": {
                             if (f.exists()) {
-                                photo = SendMessagesHelper.getInstance(currentAccount).generatePhotoSizes(finalPath, null);
+                                photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(finalPath, null);
                             }
                             if (photo == null) {
                                 photo = new TLRPC.TL_photo();
-                                photo.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+                                photo.date = accountInstance.getConnectionsManager().getCurrentTime();
                                 photo.file_reference = new byte[0];
                                 TLRPC.TL_photoSize photoSize = new TLRPC.TL_photoSize();
                                 int wh[] = MessageObject.getInlineResultWidthAndHeight(result);
@@ -5104,11 +5099,11 @@
                 }
                 AndroidUtilities.runOnUIThread(() -> {
                     if (finalDocument != null) {
-                        SendMessagesHelper.getInstance(currentAccount).sendMessage(finalDocument, null, finalPathFinal, dialog_id, reply_to_msg, result.send_message.message, result.send_message.entities, result.send_message.reply_markup, params, 0, result);
+                        accountInstance.getSendMessagesHelper().sendMessage(finalDocument, null, finalPathFinal, dialog_id, reply_to_msg, result.send_message.message, result.send_message.entities, result.send_message.reply_markup, params, 0, result);
                     } else if (finalPhoto != null) {
-                        SendMessagesHelper.getInstance(currentAccount).sendMessage(finalPhoto, result.content != null ? result.content.url : null, dialog_id, reply_to_msg, result.send_message.message, result.send_message.entities, result.send_message.reply_markup, params, 0, result);
+                        accountInstance.getSendMessagesHelper().sendMessage(finalPhoto, result.content != null ? result.content.url : null, dialog_id, reply_to_msg, result.send_message.message, result.send_message.entities, result.send_message.reply_markup, params, 0, result);
                     } else if (finalGame != null) {
-                        SendMessagesHelper.getInstance(currentAccount).sendMessage(finalGame, dialog_id, result.send_message.reply_markup, params);
+                        accountInstance.getSendMessagesHelper().sendMessage(finalGame, dialog_id, result.send_message.reply_markup, params);
                     }
                 });
             }).run();
@@ -5124,7 +5119,7 @@
                     }
                 }
             }
-            SendMessagesHelper.getInstance(currentAccount).sendMessage(result.send_message.message, dialog_id, reply_to_msg, webPage, !result.send_message.no_webpage, result.send_message.entities, result.send_message.reply_markup, params);
+            accountInstance.getSendMessagesHelper().sendMessage(result.send_message.message, dialog_id, reply_to_msg, webPage, !result.send_message.no_webpage, result.send_message.entities, result.send_message.reply_markup, params);
         } else if (result.send_message instanceof TLRPC.TL_botInlineMessageMediaVenue) {
             TLRPC.TL_messageMediaVenue venue = new TLRPC.TL_messageMediaVenue();
             venue.geo = result.send_message.geo;
@@ -5136,17 +5131,17 @@
             if (venue.venue_type == null) {
                 venue.venue_type = "";
             }
-            SendMessagesHelper.getInstance(currentAccount).sendMessage(venue, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
+            accountInstance.getSendMessagesHelper().sendMessage(venue, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
         } else if (result.send_message instanceof TLRPC.TL_botInlineMessageMediaGeo) {
             if (result.send_message.period != 0) {
                 TLRPC.TL_messageMediaGeoLive location = new TLRPC.TL_messageMediaGeoLive();
                 location.period = result.send_message.period;
                 location.geo = result.send_message.geo;
-                SendMessagesHelper.getInstance(currentAccount).sendMessage(location, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
+                accountInstance.getSendMessagesHelper().sendMessage(location, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
             } else {
                 TLRPC.TL_messageMediaGeo location = new TLRPC.TL_messageMediaGeo();
                 location.geo = result.send_message.geo;
-                SendMessagesHelper.getInstance(currentAccount).sendMessage(location, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
+                accountInstance.getSendMessagesHelper().sendMessage(location, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
             }
         } else if (result.send_message instanceof TLRPC.TL_botInlineMessageMediaContact) {
             TLRPC.User user = new TLRPC.TL_user();
@@ -5154,7 +5149,7 @@
             user.first_name = result.send_message.first_name;
             user.last_name = result.send_message.last_name;
             user.restriction_reason = result.send_message.vcard;
-            SendMessagesHelper.getInstance(currentAccount).sendMessage(user, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
+            accountInstance.getSendMessagesHelper().sendMessage(user, dialog_id, reply_to_msg, result.send_message.reply_markup, params);
         }
     }
 
@@ -5173,21 +5168,20 @@
     }
 
     @UiThread
-    public static void prepareSendingText(final String text, final long dialog_id) {
-        final int currentAccount = UserConfig.selectedAccount;
-        MessagesStorage.getInstance(currentAccount).getStorageQueue().postRunnable(() -> Utilities.stageQueue.postRunnable(() -> AndroidUtilities.runOnUIThread(() -> {
+    public static void prepareSendingText(AccountInstance accountInstance, final String text, final long dialog_id) {
+        accountInstance.getMessagesStorage().getStorageQueue().postRunnable(() -> Utilities.stageQueue.postRunnable(() -> AndroidUtilities.runOnUIThread(() -> {
             String textFinal = getTrimmedString(text);
             if (textFinal.length() != 0) {
                 int count = (int) Math.ceil(textFinal.length() / 4096.0f);
                 for (int a = 0; a < count; a++) {
                     String mess = textFinal.substring(a * 4096, Math.min((a + 1) * 4096, textFinal.length()));
-                    SendMessagesHelper.getInstance(currentAccount).sendMessage(mess, dialog_id, null, null, true, null, null, null);
+                    accountInstance.getSendMessagesHelper().sendMessage(mess, dialog_id, null, null, true, null, null, null);
                 }
             }
         })));
     }
 
-    public static void ensureMediaThumbExists(int currentAccount, boolean isEncrypted, TLObject object, String path, Uri uri, long startTime) {
+    public static void ensureMediaThumbExists(boolean isEncrypted, TLObject object, String path, Uri uri, long startTime) {
         if (object instanceof TLRPC.TL_photo) {
             TLRPC.TL_photo photo = (TLRPC.TL_photo) object;
             boolean smallExists;
@@ -5335,11 +5329,10 @@
     }
 
     @UiThread
-    public static void prepareSendingMedia(final ArrayList<SendingMediaInfo> media, final long dialog_id, final MessageObject reply_to_msg, final InputContentInfoCompat inputContent, final boolean forceDocument, final boolean groupPhotos, final MessageObject editingMessageObject) {
+    public static void prepareSendingMedia(AccountInstance accountInstance, final ArrayList<SendingMediaInfo> media, final long dialog_id, final MessageObject reply_to_msg, final InputContentInfoCompat inputContent, final boolean forceDocument, final boolean groupPhotos, final MessageObject editingMessageObject) {
         if (media.isEmpty()) {
             return;
         }
-        final int currentAccount = UserConfig.selectedAccount;
         mediaSendQueue.postRunnable(() -> {
             long beginTime = System.currentTimeMillis();
             HashMap<SendingMediaInfo, MediaSendPrepareWorker> workers;
@@ -5348,7 +5341,7 @@
             int enryptedLayer = 0;
             if (isEncrypted) {
                 int high_id = (int) (dialog_id >> 32);
-                TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance(currentAccount).getEncryptedChat(high_id);
+                TLRPC.EncryptedChat encryptedChat = accountInstance.getMessagesController().getEncryptedChat(high_id);
                 if (encryptedChat != null) {
                     enryptedLayer = AndroidUtilities.getPeerLayerVersion(encryptedChat.layer);
                 }
@@ -5384,19 +5377,19 @@
                         TLRPC.TL_photo photo = null;
                         String parentObject = null;
                         if (!isEncrypted && info.ttl == 0) {
-                            Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(originalPath, !isEncrypted ? 0 : 3);
+                            Object[] sentData = accountInstance.getMessagesStorage().getSentFile(originalPath, !isEncrypted ? 0 : 3);
                             if (sentData != null) {
                                 photo = (TLRPC.TL_photo) sentData[0];
                                 parentObject = (String) sentData[1];
                             }
                             if (photo == null && info.uri != null) {
-                                sentData = MessagesStorage.getInstance(currentAccount).getSentFile(AndroidUtilities.getPath(info.uri), !isEncrypted ? 0 : 3);
+                                sentData = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(info.uri), !isEncrypted ? 0 : 3);
                                 if (sentData != null) {
                                     photo = (TLRPC.TL_photo) sentData[0];
                                     parentObject = (String) sentData[1];
                                 }
                             }
-                            ensureMediaThumbExists(currentAccount, isEncrypted, photo, info.path, info.uri, 0);
+                            ensureMediaThumbExists(isEncrypted, photo, info.path, info.uri, 0);
                         }
                         final MediaSendPrepareWorker worker = new MediaSendPrepareWorker();
                         workers.put(info, worker);
@@ -5406,7 +5399,7 @@
                         } else {
                             worker.sync = new CountDownLatch(1);
                             mediaSendThreadPool.execute(() -> {
-                                worker.photo = SendMessagesHelper.getInstance(currentAccount).generatePhotoSizes(info.path, info.uri);
+                                worker.photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(info.path, info.uri);
                                 if (isEncrypted && info.canDeleteAfter) {
                                     new File(info.path).delete();
                                 }
@@ -5446,7 +5439,7 @@
                             cacheFile = FileLoader.getPathToAttach(document, true);
                         } else {
                             /*if (!isEncrypted) {
-                                Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(info.searchImage.imageUrl, !isEncrypted ? 1 : 4);
+                                Object[] sentData = getMessagesStorage().getSentFile(info.searchImage.imageUrl, !isEncrypted ? 1 : 4);
                                 if (sentData != null && sentData[0] instanceof TLRPC.TL_document) {
                                     document = (TLRPC.TL_document) sentData[0];
                                     parentObject = (String) sentData[1];
@@ -5463,7 +5456,7 @@
                             document = new TLRPC.TL_document();
                             document.id = 0;
                             document.file_reference = new byte[0];
-                            document.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+                            document.date = accountInstance.getConnectionsManager().getCurrentTime();
                             TLRPC.TL_documentAttributeFilename fileName = new TLRPC.TL_documentAttributeFilename();
                             fileName.file_name = "animation.gif";
                             document.attributes.add(fileName);
@@ -5528,9 +5521,9 @@
                         }
                         AndroidUtilities.runOnUIThread(() -> {
                             if (editingMessageObject != null) {
-                                SendMessagesHelper.getInstance(currentAccount).editMessageMedia(editingMessageObject, null, null, documentFinal, pathFinal, params, false, parentFinal);
+                                accountInstance.getSendMessagesHelper().editMessageMedia(editingMessageObject, null, null, documentFinal, pathFinal, params, false, parentFinal);
                             } else {
-                                SendMessagesHelper.getInstance(currentAccount).sendMessage(documentFinal, null, pathFinal, dialog_id, reply_to_msg, info.caption, info.entities, null, params, 0, parentFinal);
+                                accountInstance.getSendMessagesHelper().sendMessage(documentFinal, null, pathFinal, dialog_id, reply_to_msg, info.caption, info.entities, null, params, 0, parentFinal);
                             }
                         });
                     } else {
@@ -5541,7 +5534,7 @@
                             photo = (TLRPC.TL_photo) info.searchImage.photo;
                         } else {
                             if (!isEncrypted && info.ttl == 0) {
-                                /*Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(info.searchImage.imageUrl, !isEncrypted ? 0 : 3);
+                                /*Object[] sentData = getMessagesStorage().getSentFile(info.searchImage.imageUrl, !isEncrypted ? 0 : 3);
                                 if (sentData != null) {
                                     photo = (TLRPC.TL_photo) sentData[0];
                                     parentObject = (String) sentData[1];
@@ -5553,7 +5546,7 @@
                             String md5 = Utilities.MD5(info.searchImage.imageUrl) + "." + ImageLoader.getHttpUrlExtension(info.searchImage.imageUrl, "jpg");
                             File cacheFile = new File(FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE), md5);
                             if (cacheFile.exists() && cacheFile.length() != 0) {
-                                photo = SendMessagesHelper.getInstance(currentAccount).generatePhotoSizes(cacheFile.toString(), null);
+                                photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(cacheFile.toString(), null);
                                 if (photo != null) {
                                     needDownloadHttp = false;
                                 }
@@ -5562,11 +5555,11 @@
                                 md5 = Utilities.MD5(info.searchImage.thumbUrl) + "." + ImageLoader.getHttpUrlExtension(info.searchImage.thumbUrl, "jpg");
                                 cacheFile = new File(FileLoader.getDirectory(FileLoader.MEDIA_DIR_CACHE), md5);
                                 if (cacheFile.exists()) {
-                                    photo = SendMessagesHelper.getInstance(currentAccount).generatePhotoSizes(cacheFile.toString(), null);
+                                    photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(cacheFile.toString(), null);
                                 }
                                 if (photo == null) {
                                     photo = new TLRPC.TL_photo();
-                                    photo.date = ConnectionsManager.getInstance(currentAccount).getCurrentTime();
+                                    photo.date = accountInstance.getConnectionsManager().getCurrentTime();
                                     photo.file_reference = new byte[0];
                                     TLRPC.TL_photoSize photoSize = new TLRPC.TL_photoSize();
                                     photoSize.w = info.searchImage.width;
@@ -5596,9 +5589,9 @@
                             }
                             AndroidUtilities.runOnUIThread(() -> {
                                 if (editingMessageObject != null) {
-                                    SendMessagesHelper.getInstance(currentAccount).editMessageMedia(editingMessageObject, photoFinal, null, null, needDownloadHttpFinal ? info.searchImage.imageUrl : null, params, false, parentFinal);
+                                    accountInstance.getSendMessagesHelper().editMessageMedia(editingMessageObject, photoFinal, null, null, needDownloadHttpFinal ? info.searchImage.imageUrl : null, params, false, parentFinal);
                                 } else {
-                                    SendMessagesHelper.getInstance(currentAccount).sendMessage(photoFinal, needDownloadHttpFinal ? info.searchImage.imageUrl : null, dialog_id, reply_to_msg, info.caption, info.entities, null, params, info.ttl, parentFinal);
+                                    accountInstance.getSendMessagesHelper().sendMessage(photoFinal, needDownloadHttpFinal ? info.searchImage.imageUrl : null, dialog_id, reply_to_msg, info.caption, info.entities, null, params, info.ttl, parentFinal);
                                 }
                             });
                         }
@@ -5634,11 +5627,11 @@
                             TLRPC.TL_document document = null;
                             String parentObject = null;
                             if (!isEncrypted && info.ttl == 0) {
-                                Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(originalPath, !isEncrypted ? 2 : 5);
+                                Object[] sentData = accountInstance.getMessagesStorage().getSentFile(originalPath, !isEncrypted ? 2 : 5);
                                 if (sentData != null) {
                                     document = (TLRPC.TL_document) sentData[0];
                                     parentObject = (String) sentData[1];
-                                    ensureMediaThumbExists(currentAccount, isEncrypted, document, info.path, null, startTime);
+                                    ensureMediaThumbExists(isEncrypted, document, info.path, null, startTime);
                                 }
                             }
                             if (document == null) {
@@ -5659,7 +5652,7 @@
                                     document.flags |= 1;
                                 }
                                 document.mime_type = "video/mp4";
-                                UserConfig.getInstance(currentAccount).saveConfig(false);
+                                accountInstance.getUserConfig().saveConfig(false);
                                 TLRPC.TL_documentAttributeVideo attributeVideo;
                                 if (isEncrypted) {
                                     if (enryptedLayer >= 66) {
@@ -5736,13 +5729,13 @@
                                     ImageLoader.getInstance().putImageToCache(new BitmapDrawable(thumbFinal), thumbKeyFinal);
                                 }
                                 if (editingMessageObject != null) {
-                                    SendMessagesHelper.getInstance(currentAccount).editMessageMedia(editingMessageObject, null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
+                                    accountInstance.getSendMessagesHelper().editMessageMedia(editingMessageObject, null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
                                 } else {
-                                    SendMessagesHelper.getInstance(currentAccount).sendMessage(videoFinal, videoEditedInfo, finalPath, dialog_id, reply_to_msg, info.caption, info.entities, null, params, info.ttl, parentFinal);
+                                    accountInstance.getSendMessagesHelper().sendMessage(videoFinal, videoEditedInfo, finalPath, dialog_id, reply_to_msg, info.caption, info.entities, null, params, info.ttl, parentFinal);
                                 }
                             });
                         } else {
-                            prepareSendingDocumentInternal(currentAccount, info.path, info.path, null, null, dialog_id, reply_to_msg, info.caption, info.entities, editingMessageObject, forceDocument);
+                            prepareSendingDocumentInternal(accountInstance, info.path, info.path, null, null, dialog_id, reply_to_msg, info.caption, info.entities, editingMessageObject, forceDocument);
                         }
                     } else {
                         String originalPath = info.path;
@@ -5812,22 +5805,22 @@
                                 }
                             } else {
                                 if (!isEncrypted && info.ttl == 0) {
-                                    Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(originalPath, !isEncrypted ? 0 : 3);
+                                    Object[] sentData = accountInstance.getMessagesStorage().getSentFile(originalPath, !isEncrypted ? 0 : 3);
                                     if (sentData != null) {
                                         photo = (TLRPC.TL_photo) sentData[0];
                                         parentObject = (String) sentData[1];
                                     }
                                     if (photo == null && info.uri != null) {
-                                        sentData = MessagesStorage.getInstance(currentAccount).getSentFile(AndroidUtilities.getPath(info.uri), !isEncrypted ? 0 : 3);
+                                        sentData = accountInstance.getMessagesStorage().getSentFile(AndroidUtilities.getPath(info.uri), !isEncrypted ? 0 : 3);
                                         if (sentData != null) {
                                             photo = (TLRPC.TL_photo) sentData[0];
                                             parentObject = (String) sentData[1];
                                         }
                                     }
-                                    ensureMediaThumbExists(currentAccount, isEncrypted, photo, info.path, info.uri, 0);
+                                    ensureMediaThumbExists(isEncrypted, photo, info.path, info.uri, 0);
                                 }
                                 if (photo == null) {
-                                    photo = SendMessagesHelper.getInstance(currentAccount).generatePhotoSizes(info.path, info.uri);
+                                    photo = accountInstance.getSendMessagesHelper().generatePhotoSizes(info.path, info.uri);
                                     if (isEncrypted && info.canDeleteAfter) {
                                         new File(info.path).delete();
                                     }
@@ -5876,9 +5869,9 @@
                                         ImageLoader.getInstance().putImageToCache(new BitmapDrawable(bitmapFinal[0]), keyFinal[0]);
                                     }
                                     if (editingMessageObject != null) {
-                                        SendMessagesHelper.getInstance(currentAccount).editMessageMedia(editingMessageObject, photoFinal, null, null, null, params, false, parentFinal);
+                                        accountInstance.getSendMessagesHelper().editMessageMedia(editingMessageObject, photoFinal, null, null, null, params, false, parentFinal);
                                     } else {
-                                        SendMessagesHelper.getInstance(currentAccount).sendMessage(photoFinal, null, dialog_id, reply_to_msg, info.caption, info.entities, null, params, info.ttl, parentFinal);
+                                        accountInstance.getSendMessagesHelper().sendMessage(photoFinal, null, dialog_id, reply_to_msg, info.caption, info.entities, null, params, info.ttl, parentFinal);
                                     }
                                 });
                             } else {
@@ -5900,7 +5893,7 @@
             if (lastGroupId != 0) {
                 final long lastGroupIdFinal = lastGroupId;
                 AndroidUtilities.runOnUIThread(() -> {
-                    SendMessagesHelper instance = getInstance(currentAccount);
+                    SendMessagesHelper instance = accountInstance.getSendMessagesHelper();
                     ArrayList<DelayedMessage> arrayList = instance.delayedMessages.get("group_" + lastGroupIdFinal);
                     if (arrayList != null && !arrayList.isEmpty()) {
 
@@ -5912,7 +5905,7 @@
 
                         TLRPC.TL_messages_messages messagesRes = new TLRPC.TL_messages_messages();
                         messagesRes.messages.add(prevMessage.messageOwner);
-                        MessagesStorage.getInstance(currentAccount).putMessages(messagesRes, message.peer, -2, 0, false);
+                        accountInstance.getMessagesStorage().putMessages(messagesRes, message.peer, -2, 0, false);
                         instance.sendReadyToSendGroup(message, true, true);
                     }
                 });
@@ -5922,7 +5915,7 @@
             }
             if (sendAsDocuments != null && !sendAsDocuments.isEmpty()) {
                 for (int a = 0; a < sendAsDocuments.size(); a++) {
-                    prepareSendingDocumentInternal(currentAccount, sendAsDocuments.get(a), sendAsDocumentsOriginal.get(a), null, extension, dialog_id, reply_to_msg, sendAsDocumentsCaptions.get(a), sendAsDocumentsEntities.get(a), editingMessageObject, forceDocument);
+                    prepareSendingDocumentInternal(accountInstance, sendAsDocuments.get(a), sendAsDocumentsOriginal.get(a), null, extension, dialog_id, reply_to_msg, sendAsDocumentsCaptions.get(a), sendAsDocumentsEntities.get(a), editingMessageObject, forceDocument);
                 }
             }
             if (BuildVars.LOGS_ENABLED) {
@@ -6147,11 +6140,10 @@
     }
 
     @UiThread
-    public static void prepareSendingVideo(final String videoPath, final long estimatedSize, final long duration, final int width, final int height, final VideoEditedInfo info, final long dialog_id, final MessageObject reply_to_msg, final CharSequence caption, final ArrayList<TLRPC.MessageEntity> entities, final int ttl, final MessageObject editingMessageObject) {
+    public static void prepareSendingVideo(AccountInstance accountInstance, final String videoPath, final long estimatedSize, final long duration, final int width, final int height, final VideoEditedInfo info, final long dialog_id, final MessageObject reply_to_msg, final CharSequence caption, final ArrayList<TLRPC.MessageEntity> entities, final int ttl, final MessageObject editingMessageObject) {
         if (videoPath == null || videoPath.length() == 0) {
             return;
         }
-        final int currentAccount = UserConfig.selectedAccount;
         new Thread(() -> {
 
             final VideoEditedInfo videoEditedInfo = info != null ? info : createCompressionSettings(videoPath);
@@ -6181,11 +6173,11 @@
                 TLRPC.TL_document document = null;
                 String parentObject = null;
                 if (!isEncrypted && ttl == 0) {
-                    Object[] sentData = MessagesStorage.getInstance(currentAccount).getSentFile(originalPath, !isEncrypted ? 2 : 5);
+                    Object[] sentData = accountInstance.getMessagesStorage().getSentFile(originalPath, !isEncrypted ? 2 : 5);
                     if (sentData != null) {
                         document = (TLRPC.TL_document) sentData[0];
                         parentObject = (String) sentData[1];
-                        ensureMediaThumbExists(currentAccount, isEncrypted, document, videoPath, null, startTime);
+                        ensureMediaThumbExists(isEncrypted, document, videoPath, null, startTime);
                     }
                 }
                 if (document == null) {
@@ -6215,11 +6207,11 @@
                     }
                     document.file_reference = new byte[0];
                     document.mime_type = "video/mp4";
-                    UserConfig.getInstance(currentAccount).saveConfig(false);
+                    accountInstance.getUserConfig().saveConfig(false);
                     TLRPC.TL_documentAttributeVideo attributeVideo;
                     if (isEncrypted) {
                         int high_id = (int) (dialog_id >> 32);
-                        TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance(currentAccount).getEncryptedChat(high_id);
+                        TLRPC.EncryptedChat encryptedChat = accountInstance.getMessagesController().getEncryptedChat(high_id);
                         if (encryptedChat == null) {
                             return;
                         }
@@ -6281,13 +6273,13 @@
                         ImageLoader.getInstance().putImageToCache(new BitmapDrawable(thumbFinal), thumbKeyFinal);
                     }
                     if (editingMessageObject != null) {
-                        SendMessagesHelper.getInstance(currentAccount).editMessageMedia(editingMessageObject, null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
+                        accountInstance.getSendMessagesHelper().editMessageMedia(editingMessageObject, null, videoEditedInfo, videoFinal, finalPath, params, false, parentFinal);
                     } else {
-                        SendMessagesHelper.getInstance(currentAccount).sendMessage(videoFinal, videoEditedInfo, finalPath, dialog_id, reply_to_msg, captionFinal, entities, null, params, ttl, parentFinal);
+                        accountInstance.getSendMessagesHelper().sendMessage(videoFinal, videoEditedInfo, finalPath, dialog_id, reply_to_msg, captionFinal, entities, null, params, ttl, parentFinal);
                     }
                 });
             } else {
-                prepareSendingDocumentInternal(currentAccount, videoPath, videoPath, null, null, dialog_id, reply_to_msg, caption, entities, editingMessageObject, false);
+                prepareSendingDocumentInternal(accountInstance, videoPath, videoPath, null, null, dialog_id, reply_to_msg, caption, entities, editingMessageObject, false);
             }
         }).start();
     }
