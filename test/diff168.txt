testdiff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java
index 182b515..32c7d3f 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationCenter.java
@@ -72,6 +72,7 @@
     public static final int chatSearchResultsLoading = totalEvents++;
     public static final int musicDidLoad = totalEvents++;
     public static final int needShowAlert = totalEvents++;
+    public static final int needShowPlayServicesAlert = totalEvents++;
     public static final int didUpdatedMessagesViews = totalEvents++;
     public static final int needReloadRecentDialogsSearch = totalEvents++;
     public static final int peerSettingsDidLoad = totalEvents++;
@@ -89,6 +90,9 @@
     public static final int didUpdatePollResults = totalEvents++;
     public static final int chatOnlineCountDidLoad = totalEvents++;
     public static final int videoLoadingStateChanged = totalEvents++;
+    public static final int newPeopleNearbyAvailable = totalEvents++;
+    public static final int stopAllHeavyOperations = totalEvents++;
+    public static final int startAllHeavyOperations = totalEvents++;
 
     public static final int httpFileDidLoad = totalEvents++;
     public static final int httpFileDidFailedLoad = totalEvents++;
@@ -156,6 +160,7 @@
     public static final int proxySettingsChanged = totalEvents++;
     public static final int proxyCheckDone = totalEvents++;
     public static final int liveLocationsChanged = totalEvents++;
+    public static final int newLocationAvailable = totalEvents++;
     public static final int liveLocationsCacheChanged = totalEvents++;
     public static final int notificationsCountUpdated = totalEvents++;
     public static final int playerDidStartPlaying = totalEvents++;
@@ -187,7 +192,8 @@
     }
 
     private int currentAccount;
-    private static volatile NotificationCenter Instance[] = new NotificationCenter[UserConfig.MAX_ACCOUNT_COUNT];
+    private int currentHeavyOperationFlags;
+    private static volatile NotificationCenter[] Instance = new NotificationCenter[UserConfig.MAX_ACCOUNT_COUNT];
     private static volatile NotificationCenter globalInstance;
 
     @UiThread
@@ -222,11 +228,16 @@
         currentAccount = account;
     }
 
-    public void setAllowedNotificationsDutingAnimation(int notifications[]) {
+    public void setAllowedNotificationsDutingAnimation(int[] notifications) {
         allowedNotifications = notifications;
     }
 
     public void setAnimationInProgress(boolean value) {
+        if (value) {
+            NotificationCenter.getGlobalInstance().postNotificationName(stopAllHeavyOperations, 512);
+        } else {
+            NotificationCenter.getGlobalInstance().postNotificationName(startAllHeavyOperations, 512);
+        }
         animationInProgress = value;
         if (!animationInProgress && !delayedPosts.isEmpty()) {
             for (int a = 0; a < delayedPosts.size(); a++) {
@@ -241,9 +252,13 @@
         return animationInProgress;
     }
 
+    public int getCurrentHeavyOperationFlags() {
+        return currentHeavyOperationFlags;
+    }
+
     public void postNotificationName(int id, Object... args) {
-        boolean allowDuringAnimation = false;
-        if (allowedNotifications != null) {
+        boolean allowDuringAnimation = id == startAllHeavyOperations || id == stopAllHeavyOperations;
+        if (!allowDuringAnimation && allowedNotifications != null) {
             for (int a = 0; a < allowedNotifications.length; a++) {
                 if (allowedNotifications[a] == id) {
                     allowDuringAnimation = true;
@@ -251,6 +266,13 @@
                 }
             }
         }
+        if (id == startAllHeavyOperations) {
+            Integer flags = (Integer) args[0];
+            currentHeavyOperationFlags &=~ flags;
+        } else if (id == stopAllHeavyOperations) {
+            Integer flags = (Integer) args[0];
+            currentHeavyOperationFlags |= flags;
+        }
         postNotificationNameInternal(id, allowDuringAnimation, args);
     }
 
