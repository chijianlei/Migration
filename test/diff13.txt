testdiff --git a/src/java/org/apache/poi/ss/formula/EvaluationConditionalFormatRule.java b/src/java/org/apache/poi/ss/formula/EvaluationConditionalFormatRule.java
index a478982..afb4a09 100644
--- a/src/java/org/apache/poi/ss/formula/EvaluationConditionalFormatRule.java
+++ b/src/java/org/apache/poi/ss/formula/EvaluationConditionalFormatRule.java
@@ -17,11 +17,18 @@
 
 package org.apache.poi.ss.formula;
 
-import java.text.CollationKey;
-import java.text.Collator;
 import java.text.DecimalFormat;
 import java.text.DecimalFormatSymbols;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.LinkedHashSet;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.Objects;
+import java.util.Set;
 
 import org.apache.poi.ss.formula.eval.BlankEval;
 import org.apache.poi.ss.formula.eval.BoolEval;
@@ -283,10 +290,7 @@
     
     @Override
     public int hashCode() {
-        int hash = sheet.getSheetName().hashCode();
-        hash = 31 * hash + formattingIndex;
-        hash = 31 * hash + ruleIndex;
-        return hash;
+        return Objects.hash(sheet.getSheetName(),formattingIndex,ruleIndex);
     }
     
     /**
@@ -938,7 +942,7 @@
         
         @Override
         public int hashCode() {
-            return (string == null ? 0 : string.hashCode()) * 37 * 37 + 37 * (value == null ? 0 : value.hashCode()) + (format == null ? 0 : format.hashCode());
+            return Objects.hash(string,value,format);
         }
     }
 }
