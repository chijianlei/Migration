testdiff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocationSharingService.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocationSharingService.java
index c325d19..76b1503 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocationSharingService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocationSharingService.java
@@ -36,20 +36,15 @@
     public void onCreate() {
         super.onCreate();
         handler = new Handler();
-        runnable = new Runnable() {
-            public void run() {
-                handler.postDelayed(runnable, 60000);
-                Utilities.stageQueue.postRunnable(new Runnable() {
-                    @Override
-                    public void run() {
+        runnable = () -> {
+            handler.postDelayed(runnable, 1000);
+            Utilities.stageQueue.postRunnable(() -> {
                         for (int a = 0; a < UserConfig.MAX_ACCOUNT_COUNT; a++) {
                             LocationController.getInstance(a).update();
                         }
-                    }
                 });
-            }
         };
-        handler.postDelayed(runnable, 60000);
+        handler.postDelayed(runnable, 1000);
     }
 
     public IBinder onBind(Intent arg2) {
@@ -61,6 +56,7 @@
             handler.removeCallbacks(runnable);
         }
         stopForeground(true);
+        NotificationManagerCompat.from(ApplicationLoader.applicationContext).cancel(6);
         NotificationCenter.getGlobalInstance().removeObserver(this, NotificationCenter.liveLocationsChanged);
     }
 
@@ -68,16 +64,13 @@
     public void didReceivedNotification(int id, int account, Object... args) {
         if (id == NotificationCenter.liveLocationsChanged) {
             if (handler != null) {
-                handler.post(new Runnable() {
-                    @Override
-                    public void run() {
+                handler.post(() -> {
                         ArrayList<LocationController.SharingLocationInfo> infos = getInfos();
                         if (infos.isEmpty()) {
                             stopSelf();
                         } else {
                             updateNotification(true);
                         }
-                    }
                 });
             }
         }
