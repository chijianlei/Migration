testdiff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 6e5e4b1..4cc3d1b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -13,6 +13,7 @@
 import android.app.Dialog;
 import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.os.Build;
 import android.os.Bundle;
 import android.text.TextUtils;
@@ -24,11 +25,17 @@
 import org.telegram.messenger.AccountInstance;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.DataQuery;
+import org.telegram.messenger.DownloadController;
+import org.telegram.messenger.FileLoader;
+import org.telegram.messenger.MediaDataController;
 import org.telegram.messenger.FileLog;
+import org.telegram.messenger.LocationController;
 import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.NotificationsController;
+import org.telegram.messenger.SecretChatHelper;
+import org.telegram.messenger.SendMessagesHelper;
 import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.ConnectionsManager;
 
@@ -47,6 +54,7 @@
     protected Bundle arguments;
     protected boolean swipeBackEnabled = true;
     protected boolean hasOwnBackground = false;
+    protected boolean isPaused = true;
 
     public BaseFragment() {
         classGuid = ConnectionsManager.generateClassGuid();
@@ -126,6 +134,11 @@
 
     }
 
+    public void setParentFragment(BaseFragment fragment) {
+        setParentLayout(fragment.parentLayout);
+        fragmentView = createView(parentLayout.getContext());
+    }
+
     protected void setParentLayout(ActionBarLayout layout) {
         if (parentLayout != layout) {
             parentLayout = layout;
@@ -227,13 +240,14 @@
     }
 
     public void onResume() {
-
+        isPaused = false;
     }
 
     public void onPause() {
         if (actionBar != null) {
             actionBar.onPause();
         }
+        isPaused = true;
         try {
             if (visibleDialog != null && visibleDialog.isShowing() && dismissDialogOnPause(visibleDialog)) {
                 visibleDialog.dismiss();
@@ -436,7 +450,7 @@
         return new ThemeDescription[0];
     }
 
-    protected AccountInstance getAccountInstance() {
+    public AccountInstance getAccountInstance() {
         return AccountInstance.getInstance(currentAccount);
     }
 
@@ -448,18 +462,46 @@
         return getAccountInstance().getContactsController();
     }
 
-    protected DataQuery getDataQuery() {
-        return getAccountInstance().getDataQuery();
+    protected MediaDataController getMediaDataController() {
+        return getAccountInstance().getMediaDataController();
     }
 
     protected ConnectionsManager getConnectionsManager() {
         return getAccountInstance().getConnectionsManager();
     }
 
+    protected LocationController getLocationController() {
+        return getAccountInstance().getLocationController();
+    }
+
     protected NotificationsController getNotificationsController() {
         return getAccountInstance().getNotificationsController();
     }
 
+    protected MessagesStorage getMessagesStorage() {
+        return getAccountInstance().getMessagesStorage();
+    }
+
+    protected SendMessagesHelper getSendMessagesHelper() {
+        return getAccountInstance().getSendMessagesHelper();
+    }
+
+    protected FileLoader getFileLoader() {
+        return getAccountInstance().getFileLoader();
+    }
+
+    protected SecretChatHelper getSecretChatHelper() {
+        return getAccountInstance().getSecretChatHelper();
+    }
+
+    protected DownloadController getDownloadController() {
+        return getAccountInstance().getDownloadController();
+    }
+
+    protected SharedPreferences getNotificationsSettings() {
+        return getAccountInstance().getNotificationsSettings();
+    }
+
     public NotificationCenter getNotificationCenter() {
         return getAccountInstance().getNotificationCenter();
     }
