testdiff --git a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
index 1e7e73f..cfc1b4f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java
@@ -92,6 +92,7 @@
     private int countryState;
     private boolean ignoreSelection;
     private boolean donePressed;
+    private String initialPhoneNumber;
 
     private final static int done_button = 1;
 
@@ -374,14 +375,14 @@
                             country = codesMap.get(sub);
                             if (country != null) {
                                 ok = true;
-                                textToSet = text.substring(a, text.length()) + phoneField.getText().toString();
+                                textToSet = text.substring(a) + phoneField.getText().toString();
                                 codeField.setText(text = sub);
                                 break;
                             }
                         }
                         if (!ok) {
                             ignoreOnTextChange = true;
-                            textToSet = text.substring(1, text.length()) + phoneField.getText().toString();
+                            textToSet = text.substring(1) + phoneField.getText().toString();
                             codeField.setText(text = text.substring(0, 1));
                         }
                     }
@@ -408,7 +409,9 @@
                         codeField.setSelection(codeField.getText().length());
                     }
                     if (textToSet != null) {
+                        if (initialPhoneNumber == null) {
                         phoneField.requestFocus();
+                        }
                         phoneField.setText(textToSet);
                         phoneField.setSelection(phoneField.length());
                     }
@@ -474,7 +477,7 @@
                 String phoneChars = "0123456789";
                 String str = phoneField.getText().toString();
                 if (characterAction == 3) {
-                    str = str.substring(0, actionPosition) + str.substring(actionPosition + 1, str.length());
+                    str = str.substring(0, actionPosition) + str.substring(actionPosition + 1);
                     start--;
                 }
                 StringBuilder builder = new StringBuilder(str.length());
@@ -551,8 +554,11 @@
 
         Collections.sort(countriesArray, String::compareTo);
 
+        if (!TextUtils.isEmpty(initialPhoneNumber)) {
+            codeField.setText(initialPhoneNumber);
+            initialPhoneNumber = null;
+        } else {
         String country = null;
-
         try {
             TelephonyManager telephonyManager = (TelephonyManager) ApplicationLoader.applicationContext.getSystemService(Context.TELEPHONY_SERVICE);
             if (telephonyManager != null) {
@@ -577,6 +583,7 @@
             phoneField.setHintText(null);
             countryState = 1;
         }
+        }
 
         return fragmentView;
     }
@@ -600,6 +607,10 @@
         }
     }
 
+    public void setInitialPhoneNumber(String value) {
+        initialPhoneNumber = value;
+    }
+
     public void selectCountry(String name) {
         int index = countriesArray.indexOf(name);
         if (index != -1) {
@@ -637,23 +648,23 @@
         }
         if (!animated) {
             if (show) {
-                editDoneItem.getImageView().setScaleX(0.1f);
-                editDoneItem.getImageView().setScaleY(0.1f);
-                editDoneItem.getImageView().setAlpha(0.0f);
+                editDoneItem.getContentView().setScaleX(0.1f);
+                editDoneItem.getContentView().setScaleY(0.1f);
+                editDoneItem.getContentView().setAlpha(0.0f);
                 editDoneItemProgress.setScaleX(1.0f);
                 editDoneItemProgress.setScaleY(1.0f);
                 editDoneItemProgress.setAlpha(1.0f);
-                editDoneItem.getImageView().setVisibility(View.INVISIBLE);
+                editDoneItem.getContentView().setVisibility(View.INVISIBLE);
                 editDoneItemProgress.setVisibility(View.VISIBLE);
                 editDoneItem.setEnabled(false);
             } else {
                 editDoneItemProgress.setScaleX(0.1f);
                 editDoneItemProgress.setScaleY(0.1f);
                 editDoneItemProgress.setAlpha(0.0f);
-                editDoneItem.getImageView().setScaleX(1.0f);
-                editDoneItem.getImageView().setScaleY(1.0f);
-                editDoneItem.getImageView().setAlpha(1.0f);
-                editDoneItem.getImageView().setVisibility(View.VISIBLE);
+                editDoneItem.getContentView().setScaleX(1.0f);
+                editDoneItem.getContentView().setScaleY(1.0f);
+                editDoneItem.getContentView().setAlpha(1.0f);
+                editDoneItem.getContentView().setVisibility(View.VISIBLE);
                 editDoneItemProgress.setVisibility(View.INVISIBLE);
                 editDoneItem.setEnabled(true);
             }
@@ -663,22 +674,22 @@
                 editDoneItemProgress.setVisibility(View.VISIBLE);
                 editDoneItem.setEnabled(false);
                 editDoneItemAnimation.playTogether(
-                        ObjectAnimator.ofFloat(editDoneItem.getImageView(), "scaleX", 0.1f),
-                        ObjectAnimator.ofFloat(editDoneItem.getImageView(), "scaleY", 0.1f),
-                        ObjectAnimator.ofFloat(editDoneItem.getImageView(), "alpha", 0.0f),
+                        ObjectAnimator.ofFloat(editDoneItem.getContentView(), "scaleX", 0.1f),
+                        ObjectAnimator.ofFloat(editDoneItem.getContentView(), "scaleY", 0.1f),
+                        ObjectAnimator.ofFloat(editDoneItem.getContentView(), "alpha", 0.0f),
                         ObjectAnimator.ofFloat(editDoneItemProgress, "scaleX", 1.0f),
                         ObjectAnimator.ofFloat(editDoneItemProgress, "scaleY", 1.0f),
                         ObjectAnimator.ofFloat(editDoneItemProgress, "alpha", 1.0f));
             } else {
-                editDoneItem.getImageView().setVisibility(View.VISIBLE);
+                editDoneItem.getContentView().setVisibility(View.VISIBLE);
                 editDoneItem.setEnabled(true);
                 editDoneItemAnimation.playTogether(
                         ObjectAnimator.ofFloat(editDoneItemProgress, "scaleX", 0.1f),
                         ObjectAnimator.ofFloat(editDoneItemProgress, "scaleY", 0.1f),
                         ObjectAnimator.ofFloat(editDoneItemProgress, "alpha", 0.0f),
-                        ObjectAnimator.ofFloat(editDoneItem.getImageView(), "scaleX", 1.0f),
-                        ObjectAnimator.ofFloat(editDoneItem.getImageView(), "scaleY", 1.0f),
-                        ObjectAnimator.ofFloat(editDoneItem.getImageView(), "alpha", 1.0f));
+                        ObjectAnimator.ofFloat(editDoneItem.getContentView(), "scaleX", 1.0f),
+                        ObjectAnimator.ofFloat(editDoneItem.getContentView(), "scaleY", 1.0f),
+                        ObjectAnimator.ofFloat(editDoneItem.getContentView(), "alpha", 1.0f));
 
             }
             editDoneItemAnimation.addListener(new AnimatorListenerAdapter() {
@@ -688,7 +699,7 @@
                         if (!show) {
                             editDoneItemProgress.setVisibility(View.INVISIBLE);
                         } else {
-                            editDoneItem.getImageView().setVisibility(View.INVISIBLE);
+                            editDoneItem.getContentView().setVisibility(View.INVISIBLE);
                         }
                     }
                 }
