testdiff --git a/TMessagesProj/src/main/java/org/telegram/messenger/WearReplyReceiver.java b/TMessagesProj/src/main/java/org/telegram/messenger/WearReplyReceiver.java
index 9412c42..6903e8c 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/WearReplyReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/WearReplyReceiver.java
@@ -12,6 +12,10 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
+import android.text.TextUtils;
+
+import org.telegram.tgnet.TLRPC;
+
 import androidx.core.app.RemoteInput;
 
 public class WearReplyReceiver extends BroadcastReceiver {
@@ -24,7 +28,7 @@
             return;
         }
         CharSequence text = remoteInput.getCharSequence(NotificationsController.EXTRA_VOICE_REPLY);
-        if (text == null || text.length() == 0) {
+        if (TextUtils.isEmpty(text)) {
             return;
         }
         long dialog_id = intent.getLongExtra("dialog_id", 0);
@@ -33,7 +37,39 @@
         if (dialog_id == 0 || max_id == 0) {
             return;
         }
-        SendMessagesHelper.getInstance(currentAccount).sendMessage(text.toString(), dialog_id, null, null, true, null, null, null);
-        MessagesController.getInstance(currentAccount).markDialogAsRead(dialog_id, max_id, max_id, 0, false, 0, true);
+        int lowerId = (int) dialog_id;
+        int highId = (int) (dialog_id >> 32);
+        AccountInstance accountInstance = AccountInstance.getInstance(currentAccount);
+        if (lowerId > 0) {
+            TLRPC.User user = accountInstance.getMessagesController().getUser(lowerId);
+            if (user == null) {
+                Utilities.globalQueue.postRunnable(() -> {
+                    TLRPC.User user1 = accountInstance.getMessagesStorage().getUserSync(lowerId);
+                    AndroidUtilities.runOnUIThread(() -> {
+                        accountInstance.getMessagesController().putUser(user1, true);
+                        sendMessage(accountInstance, text, dialog_id, max_id);
+                    });
+                });
+                return;
+            }
+        } else if (lowerId < 0) {
+            TLRPC.Chat chat = accountInstance.getMessagesController().getChat(-lowerId);
+            if (chat == null) {
+                Utilities.globalQueue.postRunnable(() -> {
+                    TLRPC.Chat chat1 = accountInstance.getMessagesStorage().getChatSync(-lowerId);
+                    AndroidUtilities.runOnUIThread(() -> {
+                        accountInstance.getMessagesController().putChat(chat1, true);
+                        sendMessage(accountInstance, text, dialog_id, max_id);
+                    });
+                });
+                return;
+            }
+        }
+        sendMessage(accountInstance, text, dialog_id, max_id);
+    }
+
+    private void sendMessage(AccountInstance accountInstance, CharSequence text, long dialog_id, int max_id) {
+        accountInstance.getSendMessagesHelper().sendMessage(text.toString(), dialog_id, null, null, true, null, null, null);
+        accountInstance.getMessagesController().markDialogAsRead(dialog_id, max_id, max_id, 0, false, 0, true);
     }
 }
