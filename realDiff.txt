var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var ) . US , "" , var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , ( ( long ) var ) << 32 , var , var ) . US , "" , ( ( long ) var ) << 32 , var , var )
onCloseAnimationEnd ( false )	onAnimationEndCheck ( false , false )
onOpenAnimationEnd ( false )	onAnimationEndCheck ( true , false )
onAnimationEndCheck ( true )	onAnimationEndCheck ( true , false )
onAnimationEndCheck ( false )	onAnimationEndCheck ( false , false )
onAnimationEndCheck ( false )	onAnimationEndCheck ( false , true )
onAnimationEndCheck ( false )	onAnimationEndCheck ( false , true )
if ( var == null )	if ( var == null = var )
onAnimationEndCheck ( false )	onAnimationEndCheck ( false , true )
Drawable var = var . getContext ( ) . getDrawable ( R . var . blur_off ) . mutate	Drawable var = var . getContext ( ) . getResources . getDrawable ( R . var . blur_off ) . mutate
Drawable var = var . getContext ( ) . getDrawable ( R . var . blur_radial ) . mutate	Drawable var = var . getContext ( ) . getResources . getDrawable ( R . var . blur_radial ) . mutate
Drawable var = var . getContext ( ) . getDrawable ( R . var . blur_linear ) . mutate	Drawable var = var . getContext ( ) . getResources . getDrawable ( R . var . blur_linear ) . mutate
long var = C . TIME_UNSET	long var = Long . MAX_VALUE
if ( var == C . TIME_UNSET )	if ( var == Long . MAX_VALUE )
return String . format ( "" , var / 1024.0f )	return String . format ( "" , var )
return String . format ( "" , var / 1024.0f / 1024.0f )	return String . format ( "" , var )
return String . format ( "" , var / 1024.0f / 1024.0f / 1024.0f )	return String . format ( "" , var )
if ( var != Matrix . ScaleToFit . FILL )	var = var . left - var . left * var
mobileDataDownloadMask [ var ] = var . getInt ( var , var | var | var | var | var )	mobileDataDownloadMask [ var ] = var . getInt ( var , var | var | var )
for ( int var = 0 ; var < 7 ; var ++ )	for ( int var = 0 ; var < var . length ; var ++ )
var = var . getBoolean ( "" , true )	boolean var = var . getBoolean ( "" , true )
masksArray = wifiDownloadMask	var [ var ] = var
masksArray = roamingDownloadMask	var [ var ] = var
masksArray = mobileDataDownloadMask	var [ var ] = var
var |= var	var [ var ] |= var
var |= var	var [ var ] |= var
var |= var	var [ var ] |= var
var |= var	var |= AUTODOWNLOAD_TYPE_PHOTO
var |= var	var |= AUTODOWNLOAD_TYPE_DOCUMENT
if ( ( mobileDataDownloadMask [ var ] & var ) != 0 || ( wifiDownloadMask [ var ] & var ) != 0 || ( roamingDownloadMask [ var ] & var ) != 0 |= var )	if ( ( getCurrentMobilePreset . var [ var ] & AUTODOWNLOAD_TYPE_PHOTO ) != 0 || ( getCurrentWiFiPreset . var [ var ] & AUTODOWNLOAD_TYPE_PHOTO ) != 0 || ( getCurrentRoamingPreset . var [ var ] & AUTODOWNLOAD_TYPE_PHOTO ) != 0 |= AUTODOWNLOAD_TYPE_PHOTO )
var |= var	var |= AUTODOWNLOAD_TYPE_PHOTO
if ( ( mobileDataDownloadMask [ var ] & var ) != 0 || ( wifiDownloadMask [ var ] & var ) != 0 || ( roamingDownloadMask [ var ] & var ) != 0 |= var )	if ( ( getCurrentMobilePreset . var [ var ] & AUTODOWNLOAD_TYPE_AUDIO ) != 0 || ( getCurrentWiFiPreset . var [ var ] & AUTODOWNLOAD_TYPE_AUDIO ) != 0 || ( getCurrentRoamingPreset . var [ var ] & AUTODOWNLOAD_TYPE_AUDIO ) != 0 |= AUTODOWNLOAD_TYPE_AUDIO )
var |= var	var |= AUTODOWNLOAD_TYPE_AUDIO
if ( ( mobileDataDownloadMask [ var ] & var ) != 0 || ( wifiDownloadMask [ var ] & var ) != 0 || ( roamingDownloadMask [ var ] & var ) != 0 |= var )	if ( ( getCurrentMobilePreset . var [ var ] & AUTODOWNLOAD_TYPE_VIDEO ) != 0 || ( getCurrentWiFiPreset . var [ var ] & AUTODOWNLOAD_TYPE_VIDEO ) != 0 || ( getCurrentRoamingPreset . var [ var ] & AUTODOWNLOAD_TYPE_VIDEO ) != 0 |= AUTODOWNLOAD_TYPE_VIDEO )
var |= var	var |= AUTODOWNLOAD_TYPE_VIDEO
if ( ( mobileDataDownloadMask [ var ] & var ) != 0 || ( wifiDownloadMask [ var ] & var ) != 0 || ( roamingDownloadMask [ var ] & var ) != 0 |= var )	if ( ( getCurrentMobilePreset . var [ var ] & AUTODOWNLOAD_TYPE_DOCUMENT ) != 0 || ( getCurrentWiFiPreset . var [ var ] & AUTODOWNLOAD_TYPE_DOCUMENT ) != 0 || ( getCurrentRoamingPreset . var [ var ] & AUTODOWNLOAD_TYPE_DOCUMENT ) != 0 |= AUTODOWNLOAD_TYPE_DOCUMENT )
var |= var	var |= AUTODOWNLOAD_TYPE_DOCUMENT
if ( ( var & var ) != 0 var )	if ( ( var & AUTODOWNLOAD_TYPE_PHOTO ) != 0 )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_PHOTO )
if ( ( var & var ) != 0 var )	if ( ( var & AUTODOWNLOAD_TYPE_AUDIO ) != 0 )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_AUDIO )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < var . length ; var ++ )
FileLoader . getInstance ( var ) . cancelLoadFile ( ( TLRPC . Document ) var . object )	if ( var = var . contains ( "" ) || ! UserConfig . getInstance ( var ) . isClientActivated var var )
if ( ( var & var ) != 0 var )	if ( ( var & AUTODOWNLOAD_TYPE_DOCUMENT ) != 0 )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_DOCUMENT )
if ( ( var & var ) != 0 var )	if ( ( var & AUTODOWNLOAD_TYPE_VIDEO ) != 0 )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_VIDEO )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < masksArray . length ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < 3 ; var ++ )
if ( ( var & var ) == 0 )	if ( ( var & AUTODOWNLOAD_TYPE_PHOTO ) == 0 )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . clearDownloadQueue ( AUTODOWNLOAD_TYPE_PHOTO )
if ( ( var & var ) == 0 )	if ( ( var & AUTODOWNLOAD_TYPE_AUDIO ) == 0 )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . clearDownloadQueue ( AUTODOWNLOAD_TYPE_AUDIO )
if ( ( var & var ) == 0 )	if ( ( var & AUTODOWNLOAD_TYPE_VIDEO ) == 0 )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . clearDownloadQueue ( AUTODOWNLOAD_TYPE_VIDEO )
if ( ( var & var ) == 0 )	if ( ( var & AUTODOWNLOAD_TYPE_DOCUMENT ) == 0 )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . clearDownloadQueue ( AUTODOWNLOAD_TYPE_DOCUMENT )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . getDownloadQueue ( AUTODOWNLOAD_TYPE_DOCUMENT )
return canDownloadMedia ( var . messageOwner )	return canDownloadMedia ( var . messageOwner ) == 1
if ( MessageObject . isPhoto ( var ) || MessageObject . isStickerMessage ( var ) = var . isVoiceMessage ( var ) = var . isRoundVideoMessage ( var ) = var . isVideoMessage ( var ) = var . isMusicMessage ( var ) = var . isGifMessage ( var ) = var = var )	if ( ( var = MessageObject . isVideoMessage ( var ) ) || MessageObject . isGifMessage ( var ) || MessageObject . isRoundVideoMessage ( var ) = AUTODOWNLOAD_TYPE_VIDEO . isVoiceMessage ( var ) = AUTODOWNLOAD_TYPE_AUDIO . isPhoto ( var ) || MessageObject . isStickerMessage ( var ) = AUTODOWNLOAD_TYPE_PHOTO = AUTODOWNLOAD_TYPE_DOCUMENT )
if ( MessageObject . isVoiceMessage ( var ) = var )	if ( MessageObject . isVoiceMessage ( var ) = AUTODOWNLOAD_TYPE_AUDIO )
var = var	var = AUTODOWNLOAD_TYPE_AUDIO
var = var	var = AUTODOWNLOAD_TYPE_VIDEO
var = var	var = AUTODOWNLOAD_TYPE_PHOTO
var = var	var = AUTODOWNLOAD_TYPE_DOCUMENT
var = wifiMaxFileSize [ maskToIndex ] ( var )	var = getCurrentRoamingPreset
if ( ApplicationLoader . isRoaming ( var ) )	if ( ApplicationLoader . isRoaming ( ) )
var = mobileDataDownloadMask [ var ]	var = var . var [ var ]
var = mobileMaxFileSize [ maskToIndex ] ( var )	var = var . sizes [ typeToIndex ] ( var )
return ( var == var || MessageObject . getMessageSize ( var ) <= var ) && ( var & var ) != 0	int var = MessageObject . getMessageSize ( var )
if ( ! var )	if ( ! wifiPreset . enabled )
var |= wifiDownloadMask [ var ]	var |= getCurrentRoamingPreset . var [ var ]
var |= roamingDownloadMask [ var ]	var |= getCurrentWiFiPreset . var [ var ]
var |= mobileDataDownloadMask [ var ]	var |= getCurrentMobilePreset . var [ var ]
if ( var == var = var == var = var == var = var == var = var == var = var == var = var == var = var )	if ( var == AUTODOWNLOAD_TYPE_PHOTO = photoDownloadQueue == AUTODOWNLOAD_TYPE_AUDIO = audioDownloadQueue == AUTODOWNLOAD_TYPE_VIDEO = videoDownloadQueue == AUTODOWNLOAD_TYPE_DOCUMENT = documentDownloadQueue )
if ( var == var = var )	if ( var == AUTODOWNLOAD_TYPE_AUDIO = audioDownloadQueue )
if ( var == var = var )	if ( var == AUTODOWNLOAD_TYPE_VIDEO = videoDownloadQueue )
if ( var == var = var )	if ( var == AUTODOWNLOAD_TYPE_DOCUMENT = documentDownloadQueue )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . getDownloadQueue ( AUTODOWNLOAD_TYPE_VIDEO )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )	if ( ( var & AUTODOWNLOAD_TYPE_AUDIO ) != 0 && ( var & AUTODOWNLOAD_TYPE_AUDIO ) != 0 && audioDownloadQueue . isEmpty ( ) )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . getDownloadQueue ( AUTODOWNLOAD_TYPE_AUDIO )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . getDownloadQueue ( AUTODOWNLOAD_TYPE_PHOTO )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	MessagesStorage . getInstance ( currentAccount ) . clearDownloadQueue ( AUTODOWNLOAD_TYPE_DOCUMENT )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )	if ( ( var & AUTODOWNLOAD_TYPE_PHOTO ) != 0 && ( var & AUTODOWNLOAD_TYPE_PHOTO ) != 0 && photoDownloadQueue . isEmpty ( ) )
if ( var . isEmpty ( var ) )	if ( photoDownloadQueue . isEmpty ( ) )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_PHOTO )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_AUDIO )
if ( var . type == var )	if ( var . type == AUTODOWNLOAD_TYPE_VIDEO )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_VIDEO )
if ( var . type == var )	if ( var . type == AUTODOWNLOAD_TYPE_DOCUMENT )
newDownloadObjectsAvailable ( var )	newDownloadObjectsAvailable ( AUTODOWNLOAD_TYPE_DOCUMENT )
if ( var . type == var )	if ( var . type == AUTODOWNLOAD_TYPE_AUDIO )
var . put ( var , var )	loadingFileObservers . put ( var , var )
var . add ( new WeakReference var ( var ) )	var . add ( new WeakReference ( var ) )
ArrayList < MessageObject > var = var . get ( var )	ArrayList < MessageObject > var = loadingFileMessagesObservers . get ( var )
for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
var . get ( var ) . onSuccessDownload ( var )	var . get ( ) . onSuccessDownload ( var )
MessagesController . getInstance ( var ) . sendTyping ( var , 3 , 0 )	MessagesController . getInstance ( currentAccount ) . sendTyping ( var , 3 , 0 )
String var = FileLoader . getExtensionByMime ( var . mime_type )	String var = FileLoader . getMimeTypePart ( var . mime_type )
if ( "" . equals ( var . mime_type ) )	if ( FileLoader . isVideoMimeType ( var . mime_type ) )
if ( var . mime_type != null = "" )	var = FileLoader . getExtensionByMimeType ( var . mime_type )
if ( var != 0 && var > 0 )	if ( ! var && var != 0 && var > 0 )
if ( var != 0 && var == var )	if ( var != 0 && ( var && var [ 0 ] || var == var ) )
clearOperaion ( var )	clearOperaion ( var , false )
if ( var || var != var || var . size ( ) + var . size ( ) >= var )	if ( var || var != var || ! var && ( var . size ( ) + var . size ( ) >= var ) || var && ( var > var || var != 0 && var . size ( ) > 0 ) )
if ( var > 0 )	if ( ! var && ( ! var || var != 0 ) && var > 0 )
if ( var != null )	if ( ! var && var != null )
clearOperaion ( var )	clearOperaion ( var , false )
clearOperaion ( var )	clearOperaion ( var , false )
clearOperaion ( var )	clearOperaion ( var , false )
if ( ! TextUtils . isEmpty ( var ) && ! var . contains ( "" + Integer . MIN_VALUE ) )	if ( var != 10 && ! TextUtils . isEmpty ( var ) && ! var . contains ( "" + Integer . MIN_VALUE ) )
if ( var != 0 || var > 0 )	if ( var != null || var > 0 )
if ( var > 0 var )	if ( var >= 0 var )
if ( var != 0 var )	if ( var != null var )
if ( var != 0 || var < var var )	if ( var != null || var < var var )
if ( var != 0 || var < var var )	if ( var != null || var < var var )
if ( var != 0 || var < var var )	if ( var != null || var < var var )
if ( ! TextUtils . isEmpty ( var ) && ! var . contains ( "" + Integer . MIN_VALUE ) )	if ( var != 10 && ! TextUtils . isEmpty ( var ) && ! var . contains ( "" + Integer . MIN_VALUE ) )
return Utilities . MD5 ( var . url ) + "" + ImageLoader . getHttpUrlExtension ( var . url , getExtensionByMime ( var . mime_type ) . mime_type )	return Utilities . MD5 ( var . url ) + "" + ImageLoader . getHttpUrlExtension ( var . url , getMimeTypePart ( var . mime_type ) . mime_type )
return Utilities . MD5 ( var . url ) + "" + ImageLoader . getHttpUrlExtension ( var . url , getExtensionByMime ( var . mime_type ) . mime_type )	return Utilities . MD5 ( var . url ) + "" + ImageLoader . getHttpUrlExtension ( var . url , getMimeTypePart ( var . mime_type ) . mime_type )
return "" + var . getId ( var ) + "" + var	return "" + var . getRealId ( var ) + "" + var
if ( var . getId ( var ) < 0 && var . messageOwner . media . webpage != null )	if ( var . getRealId ( var ) < 0 && var . messageOwner . media . webpage != null )
var . id . add ( var . getId ( var ) )	var . id . add ( var . getRealId ( var ) )
var . id . add ( var . getId ( var ) )	var . id . add ( var . getRealId ( var ) )
return "" . equals ( var ) || "" . equals ( var ) || "" . equals ( var )	return "" . equals ( var ) || "" . equals ( var ) || "" . equals ( var ) || var != null && var . startsWith ( "" )
if ( var . isPaused ( ) )	if ( var == 0 )
if ( ! var . endsWith ( "" ) && ! var . endsWith ( "" ) && ! var . endsWith ( "" ) && ! var . endsWith ( "" ) )	if ( var . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )
var . setImageBitmapByKey ( var , var , false , false )	var . setImageBitmapByKey ( var , var , ImageReceiver . TYPE_IMAGE , false )
if ( var . selfThumb = var = var )	if ( var . imageType == ImageReceiver . TYPE_THUMB = var = var )
if ( var . selfThumb )	if ( var . imageType == ImageReceiver . TYPE_THUMB )
boolean var = false	boolean var = var
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . var ( ) ; var ++ )
( ( AnimatedFileDrawable ) var ) . recycle	var . recycle ( )
int var = Math . min ( 15 , ( ( ActivityManager ) ApplicationLoader . applicationContext . getSystemService ( Context . ACTIVITY_SERVICE ) . ACTIVITY_SERVICE ) . getMemoryClass / 7 ) * 1024 * 1024	int var = ( ( ActivityManager ) ApplicationLoader . applicationContext . getSystemService ( Context . ACTIVITY_SERVICE ) ) . getMemoryClass
int var = 2	int var = var . getTag ( var )
for ( int var = var ; var < var ; var ++ )	for ( int var = 0 ; var < 3 ; var ++ )
final String var = var . getKey ( )	final String var = var . getImageKey ( )
int var = var . getTag ( var != 0 )	int var = var . getTag ( var )
var . setTag ( var = var , var != 0 )	var . setTag ( var = var , var )
final boolean var = var . isCurrentKeyQuality ( )	final boolean var = var == ImageReceiver . TYPE_IMAGE && var . isCurrentKeyQuality ( )
var . replaceImageReceiver ( var , var , var , var != 0 )	var . addImageReceiver ( var , var , var , var )
var . addImageReceiver ( var , var , var , var != 0 )	var . addImageReceiver ( var , var , var , var )
var . addImageReceiver ( var , var , var , var != 0 )	var . replaceImageReceiver ( var , var , var , var )
TLRPC . Document var = var . getDocument ( )	TLRPC . Document var
if ( var . messageOwner . var != null && var . messageOwner . var . length ( ) > 0 )	if ( ! TextUtils . isEmpty ( var ) )
var = new File ( var . messageOwner . var )	var = new File ( var )
if ( var == null )	if ( var == null = var )
String var = var . getFileName ( )	String var = FileLoader . getAttachFileName ( var )
generateThumb ( var . getFileType ( ) , var , var )	generateThumb ( var , var , var )
if ( var != 0 || var <= 0 || var instanceof String || var )	if ( ! var . equals ( var ) && ( var != 0 || var <= 0 || var instanceof String || var ) )
var . selfThumb = var != 0	var . var = var
var . addImageReceiver ( var , var , var , var != 0 )	var . addImageReceiver ( var , var , var , var )
String var = var . getKey ( )	String var = var . getMediaKey ( )
cancelLoadingForImageReceiver ( var , 0 )	cancelLoadingForImageReceiver ( var , true )
var . setImageBitmapByKey ( var , var , false , true )	var . setImageBitmapByKey ( var , var , ImageReceiver . TYPE_IMAGE , true )
var . setImageBitmapByKey ( var , var , true , true )	var . setImageBitmapByKey ( var , var , ImageReceiver . TYPE_MEDIA , true )
if ( var == null && var . isNeedsQualityThumb ( ) && var . isCurrentKeyQuality ( ) && var instanceof MessageObject )	if ( var == null && var . isNeedsQualityThumb ( ) && var . isCurrentKeyQuality ( ) )
var = null	var = true
if ( var != null )	if ( ! var . isForcePreview ( ) && var == null )
String var = FileLoader . getExtensionByMime ( var . mime_type )	String var = FileLoader . getMimeTypePart ( var . mime_type )
if ( var . mime_type != null && var . mime_type . equals ( "" ) = "" = "" )	if ( "" . equals ( var . mime_type ) = "" . equals ( var . mime_type ) = "" = "" )
var = var + "" + var	var = ""
var = ! MessageObject . isGifDocument ( var ) && ! MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) && ! MessageObject . canPreviewDocument ( var )	var = ! MessageObject . isVideoDocument ( var ) && ! MessageObject . isGifDocument ( var ) && ! MessageObject . isRoundVideoDocument ( var ) && ! MessageObject . canPreviewDocument ( var )
String var = var . getFilter ( )	String var = var . getMediaFilter ( )
var = var . getCacheType ( )	int var = var . getCacheType ( )
Boolean var = var . thumbs . get ( var )	int var = var . thumbs . get ( var )
var . selfThumb = var	var . var = var
if ( var . cacheImage . selfThumb )	if ( var . cacheImage . imageType == ImageReceiver . TYPE_THUMB )
ImageLoader . getInstance ( ) . cancelLoadingForImageReceiver ( this , 0 )	ImageLoader . getInstance ( ) . cancelLoadingForImageReceiver ( this , true )
if ( ( var == null && var == null ) || ( var != null && ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) && ! ( var instanceof TLRPC . TL_document ) && ! ( var instanceof WebFile ) && ! ( var instanceof TLRPC . TL_documentEncrypted ) && ! ( var instanceof TLRPC . PhotoSize ) && ! ( var instanceof SecureDocument ) && ! ( var instanceof String ) ) )	if ( ( var == null && var == null && var == null ) || isInvalidLocation ( var ) || isInvalidLocation ( var ) )
for ( int var = 0 ; var < 3 ; var ++ )	for ( int var = 0 ; var < 4 ; var ++ )
var = var	var = null
var = 1	var = null
ImageLoader . getInstance ( ) . cancelLoadingForImageReceiver ( this , 0 )	ImageLoader . getInstance ( ) . cancelLoadingForImageReceiver ( this , true )
var . didSetImage ( this , var != null || var != null || var != null , var == null )	var . didSetImage ( this , var != null || var != null || var != null || var != null , var == null && var == null )
var = var . secureFile . dc_id + "" + var . secureFile . id	return var . secureFile . dc_id + "" + var . secureFile . id
var = var . volume_id + "" + var . local_id	return var . volume_id + "" + var . local_id
var = "" + FileRefController . getKeyForParentObject ( var )	return "" + FileRefController . getKeyForParentObject ( var )
var = var . location . volume_id + "" + var . location . local_id	return var . location . volume_id + "" + var . location . local_id
var = Utilities . MD5 ( var . url )	return Utilities . MD5 ( var . url )
if ( var . dc_id != 0 = null )	if ( var . dc_id != 0 )
var = var . dc_id + "" + var . id	return var . dc_id + "" + var . id
var = Utilities . MD5 ( ( String ) var )	return Utilities . MD5 ( ( String ) var )
if ( var == null && var && var instanceof MessageObject )	if ( var == null && var && ( var instanceof MessageObject || var != null ) )
var = var . volume_id + "" + var . local_id	var += "" + var
TLRPC . TL_photoStrippedSize var = ( TLRPC . TL_photoStrippedSize ) var	if ( var == null && var != null && var . equals ( var ) || var != null && var . equals ( var ) )
var = "" + FileRefController . getKeyForParentObject ( var )	if ( var == null && var != null && var . equals ( var ) || var != null && var . equals ( var ) )
if ( var instanceof TLRPC . TL_photoSize || var instanceof TLRPC . TL_photoCachedSize )	var . didSetImage ( this , var != null || var != null || var != null || var != null , var == null && var == null )
var = var . location . volume_id + "" + var . location . local_id	var . didSetImage ( this , var != null || var != null || var != null || var != null , var == null && var == null )
if ( var instanceof String )	String var = getLocationKey ( var , var )
var = Utilities . MD5 ( ( String ) var )	String var = getLocationKey ( var , var )
recycleBitmap ( var , 1 )	recycleBitmap ( var , var )
recycleBitmap ( var , 0 )	recycleBitmap ( var , var )
recycleBitmap ( null , 2 )	recycleBitmap ( null , var )
var = null	var = var
recycleBitmap ( var , 0 )	recycleBitmap ( var , var )
recycleBitmap ( var , 1 )	recycleBitmap ( var , var )
recycleBitmap ( null , 2 )	recycleBitmap ( null , var )
recycleBitmap ( var , 0 )	recycleBitmap ( var , var )
recycleBitmap ( var , 1 )	recycleBitmap ( var , var )
recycleBitmap ( null , 2 )	recycleBitmap ( null , var )
recycleBitmap ( var , 0 )	recycleBitmap ( var , var )
recycleBitmap ( var , 1 )	recycleBitmap ( var , var )
recycleBitmap ( null , 2 )	recycleBitmap ( null , var )
var . didSetImage ( this , var != null || var != null || var != null , var == null )	var . didSetImage ( this , var != null || var != null || var != null || var != null , var == null && var == null )
return var instanceof ExtendedBitmapDrawable || var instanceof ExtendedBitmapDrawable || var instanceof ExtendedBitmapDrawable	return var instanceof ExtendedBitmapDrawable || var instanceof ExtendedBitmapDrawable || var instanceof ExtendedBitmapDrawable || var instanceof ExtendedBitmapDrawable
return ( ( AnimatedFileDrawable ) var ) . getOrientation	AnimatedFileDrawable var = getAnimation
ImageLoader . getInstance ( ) . cancelLoadingForImageReceiver ( this , 0 )	ImageLoader . getInstance ( ) . cancelLoadingForImageReceiver ( this , true )
recycleBitmap ( null , 1 )	recycleBitmap ( null , var )
recycleBitmap ( null , 2 )	recycleBitmap ( null , var )
recycleBitmap ( null , 0 )	recycleBitmap ( null , var )
recycleBitmap ( null , 2 )	recycleBitmap ( null , var )
recycleBitmap ( null , 0 )	recycleBitmap ( null , var )
recycleBitmap ( null , 1 )	recycleBitmap ( null , var )
recycleBitmap ( null , 2 )	recycleBitmap ( null , var )
for ( int var = 0 ; var < 3 ; var ++ )	for ( int var = 0 ; var < 4 ; var ++ )
for ( int var = 0 ; var < 3 ; var ++ )	for ( int var = 0 ; var < 4 ; var ++ )
for ( int var = 0 ; var < 3 ; var ++ )	for ( int var = 0 ; var < 4 ; var ++ )
if ( var != null || var != null || var != null )	if ( var != null || var != null || var != null || var != null )
if ( var != null && ( var . fileLocation != null || var . thumbLocation != null || var . var != null ) )	if ( var != null && ( var . fileLocation != null || var . thumbLocation != null || var . mediaLocation != null || var . var != null ) )
setImage ( var . fileLocation , var . filter , var . var , var . thumbLocation , var . thumbFilter , var . size , var . ext , var . parentObject , var . cacheType )	setImage ( var . mediaLocation , var . mediaFilter , var . fileLocation , var . filter , var . var , var . thumbLocation , var . thumbFilter , var . size , var . ext , var . parentObject , var . cacheType )
if ( Math . abs ( var - var ) > 0.00001f )	if ( Math . abs ( var - var ) > 0.0005f )
if ( Math . abs ( var - var ) > 0.00001f )	if ( Math . abs ( var - var ) > 0.0005f )
int var = ( int ) Math . floor ( var * var )	int var = ( int ) Math . ceil ( var * var )
int var = ( int ) Math . floor ( var * var )	int var = ( int ) Math . ceil ( var * var )
ImageLoader . getInstance ( ) . removeImage ( var )	var . draw ( var )
if ( var == var && var != null )	if ( var % 360 == 90 || var % 360 == 270 )
if ( var == var && var != null == var && var != null )	if ( var == var && var != null )
setImage ( var , var , var , var , var , var , var , var , var )	setImage ( var , var , var , var , var , var , var , var , var , var , var )
boolean var = var instanceof AnimatedFileDrawable && ! ( ( AnimatedFileDrawable ) var ) . hasBitmap	boolean var = var != null && ! var . hasBitmap ( )
var = true	var = var
var = true	var = var
drawDrawable ( var , var , int ( var * 255 ) * 255 , var , var )	drawDrawable ( var , var , int ( var * 255 ) * 255 , null , var )
if ( var != null != null = var != null = var )	if ( var != null )
if ( var != null = var )	if ( var != null )
drawDrawable ( var , var , int ( var * 255 ) * 255 , null , true )	drawDrawable ( var , var , int ( var * 255 ) * 255 , var , var )
if ( var != null != null != null )	if ( var != null != null != null != null )
return ( ( AnimatedFileDrawable ) var ) . getAnimatedBitmap	return var . getAnimatedBitmap ( )
if ( var instanceof AnimatedFileDrawable )	if ( var instanceof BitmapDrawable && ! ( var instanceof AnimatedFileDrawable ) )
return ( ( AnimatedFileDrawable ) var ) . getAnimatedBitmap	return ( ( BitmapDrawable ) var ) . getBitmap
if ( var instanceof BitmapDrawable )	if ( var instanceof BitmapDrawable && ! ( var instanceof AnimatedFileDrawable ) )
if ( var instanceof BitmapDrawable )	if ( var instanceof BitmapDrawable && ! ( var instanceof AnimatedFileDrawable ) )
var = ( ( AnimatedFileDrawable ) var ) . getAnimatedBitmap	var = var . getAnimatedBitmap ( )
if ( var instanceof AnimatedFileDrawable )	if ( var instanceof BitmapDrawable && ! ( var instanceof AnimatedFileDrawable ) )
var = ( ( AnimatedFileDrawable ) var ) . getAnimatedBitmap	var = ( ( BitmapDrawable ) var ) . getBitmap
if ( var instanceof BitmapDrawable )	if ( var instanceof BitmapDrawable && ! ( var instanceof AnimatedFileDrawable ) )
if ( var instanceof BitmapDrawable )	if ( var instanceof BitmapDrawable && ! ( var instanceof AnimatedFileDrawable ) )
if ( var instanceof AnimatedFileDrawable )	if ( var != null )
if ( var instanceof AnimatedFileDrawable )	if ( var != null )
return var != null || var != null || var != null || var != null	return var != null || var != null || var != null || var != null || var != null || var != null
return var != null || var != null || var != null	return var != null || var != null || var != null || var != null
return var != null	return var != null || var != null
if ( var instanceof AnimatedFileDrawable )	if ( var != null )
( ( AnimatedFileDrawable ) var ) . start	var . start ( )
if ( var instanceof AnimatedFileDrawable )	if ( var != null )
( ( AnimatedFileDrawable ) var ) . stop	var . stop ( )
return var instanceof AnimatedFileDrawable && ( ( AnimatedFileDrawable ) var ) . isRunning	return var != null && var . isRunning ( )
if ( var = var = var )	if ( var == var = var == var = var = var )
var = var != null && var == null	var = var != null || var != null || var != null
var . invalidate ( )	( ( AnimatedFileDrawable ) var ) . setRoundRadius ( var )
var . invalidate ( var , var , var + var , var + var )	var = new BitmapShader ( var , Shader . TileMode . CLAMP , Shader . TileMode . CLAMP )
var . didSetImage ( this , var != null || var != null || var != null , var == null )	var . didSetImage ( this , var != null || var != null || var != null || var != null , var == null && var == null )
if ( var == 1 )	if ( var == var )
if ( var == 1 )	if ( var == var )
cleanupPlayer ( var , var , false )	cleanupPlayer ( var , var , false , false )
audioPlayer . releasePlayer ( )	audioPlayer . releasePlayer ( true )
videoPlayer . releasePlayer ( )	videoPlayer . releasePlayer ( true )
audioPlayer . releasePlayer ( )	audioPlayer . releasePlayer ( true )
videoPlayer . releasePlayer ( )	videoPlayer . releasePlayer ( true )
if ( ! DownloadController . getInstance ( var ) . canDownloadMedia ( var ) )	if ( ! DownloadController . getInstance ( var ) . canDownloadNextTrack )
boolean var = SharedConfig . streamMedia && var . isMusic ( ) && ( int ) var . getDialogId ( ) != 0	boolean var = SharedConfig . streamMedia && ( var . isMusic ( ) || var . isVideo ( ) && var . canStreamVideo ( ) ) && ( int ) var . getDialogId ( ) != 0
if ( var . isRoundVideo ( ) )	if ( var . isRoundVideo ( ) || var )
if ( currentTextureViewContainer != null && currentTextureViewContainer . getVisibility ( ) != View . VISIBLE )	if ( playingMessageObject != null && playingMessageObject . var ( ) )
currentTextureViewContainer . setVisibility ( View . VISIBLE )	FileLoader . getInstance ( var . currentAccount ) . removeLoadingVideo ( playingMessageObject . getDocument ( ) , true , false )
cleanupPlayer ( true , true , true )	cleanupPlayer ( true , true , true , false )
currentTextureViewContainer . setVisibility ( View . VISIBLE )	currentTextureViewContainer . setTag ( 1 )
audioPlayer . releasePlayer ( )	audioPlayer . releasePlayer ( true )
long var = audioPlayer . getDuration ( )	long var = videoPlayer . getDuration ( )
if ( playingMessageObject . isMusic ( ) )	if ( playingMessageObject != null && playingMessageObject . isMusic ( ) )
if ( audioPlayer != null != null )	if ( audioPlayer != null )
audioPlayer . releasePlayer ( )	audioPlayer . releasePlayer ( true )
playingMessageObject = null	goingToShowMessageObject = null
if ( var . writeSampleData ( var , var , var , false ) )	if ( var != 0 )
didWriteData ( var , var , false , false )	didWriteData ( var , var , false , var , false )
didWriteData ( var , var , true , true )	didWriteData ( var , var , true , 0 , true )
if ( var . writeSampleData ( var , var , var , false ) )	long var = var . writeSampleData ( var , var , var , false )
didWriteData ( var , var , false , false )	didWriteData ( var , var , false , var , false )
didWriteData ( var , var , true , var )	didWriteData ( var , var , true , 0 , var )
var . set ( var , var , var , var , var , var / var , var )	var . set ( var , var , var , var , var , Math . max ( var , var / var ) , var / var , var )
if ( var != null && var . mime_type != null && var . mime_type . equals ( "" ) )	if ( var != null && "" . equals ( var . mime_type ) )
if ( var != null && var . mime_type != null && var . mime_type . equals ( "" ) )	if ( var != null && "" . equals ( var . mime_type ) )
if ( var != null && var . mime_type != null && var . mime_type . equals ( "" ) )	if ( var != null && "" . equals ( var . mime_type ) )
return var . fwd_from . from_id == var || var . fwd_from . saved_from_peer != null && var . fwd_from . saved_from_peer . user_id == var	return var . fwd_from . from_id == var && ( var . fwd_from . saved_from_peer == null || var . fwd_from . saved_from_peer . user_id == var ) || var . fwd_from . saved_from_peer != null && var . fwd_from . saved_from_peer . user_id == var
if ( var . media != null && var . media . document != null )	if ( var . media instanceof TLRPC . TL_messageMediaWebPage )
return var . media . document . size	var = var . media . webpage . var
if ( var . media instanceof TLRPC . TL_messageMediaWebPage )	if ( var . media instanceof TLRPC . TL_messageMediaWebPage . media instanceof TLRPC . TL_messageMediaGame )
return var . media . webpage . photo instanceof TLRPC . TL_photo	return var . media . webpage . photo instanceof TLRPC . TL_photo && ! ( var . media . webpage . document instanceof TLRPC . TL_document )
var = var . media . webpage . var	TLRPC . Document var = getDocument
Bitmap var = BitmapFactory . decodeFile ( FileLoader . getPathToAttach ( var , true ) , true . toString , var )	File var = FileLoader . getPathToAttach ( var , true )
Bitmap var = BitmapFactory . decodeFile ( FileLoader . getPathToAttach ( var , true ) , true . toString , var )	File var = FileLoader . getPathToAttach ( var , true )
onCloseAnimationEnd ( false )	onAnimationEndCheck ( false )
onOpenAnimationEnd ( false )	onAnimationEndCheck ( false )
onCloseAnimationEnd ( var )	onCloseAnimationEnd
onOpenAnimationEnd ( var )	onOpenAnimationEnd
onAnimationEndCheck ( true , false )	onAnimationEndCheck ( true )
onAnimationEndCheck ( false , true )	onAnimationEndCheck ( false )
onAnimationEndCheck ( false , true )	onAnimationEndCheck ( false )
onAnimationEndCheck ( false , true )	onAnimationEndCheck ( false )
onCloseAnimationEnd ( false )	onAnimationEndCheck ( false )
onOpenAnimationEnd ( false )	onAnimationEndCheck ( false )
if ( var == null || var . length ( ) == 0 )	if ( TextUtils . isEmpty ( var ) || var != null && var != null && var . equals ( var ) )
if ( var != null && var != null && var . equals ( var ) )	if ( TextUtils . isEmpty ( var ) || var != null && var != null && var . equals ( var ) )
if ( var != null )	if ( var != null && ! TextUtils . isEmpty ( var . about ) )
for ( int var = 1 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var . length ; var ++ )
var = var . renameTo ( var )	boolean var = var . renameTo ( var )
if ( var . isDirectory ( ) )	if ( var . isDirectory ( ) && canMoveFiles ( var , var ) )
if ( var . isDirectory ( ) )	if ( var . isDirectory ( ) && canMoveFiles ( var , var ) )
if ( var . isDirectory ( ) )	if ( var . isDirectory ( ) && canMoveFiles ( var , var ) )
if ( var . isDirectory ( ) )	if ( var . isDirectory ( ) && canMoveFiles ( var , var ) )
if ( var < 20 )	if ( var < 21 )
return SharedMediaQuery . var	if ( var . media instanceof TLRPC . TL_messageMediaWebPage )
return SharedMediaQuery . var	return var
return SharedMediaQuery . var	return var
if ( var == 0 )	if ( MarkerLog . ENABLED )
var = SystemClock . elapsedRealtime ( )	var . add ( var , Thread . currentThread ( ) . getId )
long var = SystemClock . elapsedRealtime ( ) - var	final long var = Thread . currentThread ( ) . getId
VolleyLog . d ( "" , var , this . toString ( ) )	var . finish ( this . toString ( ) )
if ( var != null )	if ( var [ var ] != null )
var . quit ( )	var [ var ] . quit
void finish ( Request < ? > var )	T finish ( Request < T > var )
AccountManager . get ( var ) . invalidateAuthToken ( var . type , var )	var . invalidateAuthToken ( var . type , var )
Cache . Entry var = var . getCacheEntry ( )	Entry var = var . getCacheEntry ( )
if ( var . serverDate > 0 )	if ( var . lastModified > 0 )
Date var = new Date ( var . serverDate )	Date var = new Date ( var . lastModified )
var = new CountingInputStream ( new FileInputStream ( var ) )	var = new CountingInputStream ( new BufferedInputStream ( new FileInputStream ( var ) ) FileInputStream ( var ) )
FileOutputStream var = new FileOutputStream ( var )	BufferedOutputStream var = new BufferedOutputStream ( new FileOutputStream ( var ) )
String var = var . trim ( )	String var = var [ var ] . trim
if ( var . equals ( "" ) || var . equals ( "" ) = 0 )	if ( var . equals ( "" ) || var . equals ( "" ) = true )
var = 0	var = true
var . ttl = var . softTtl	var . ttl = var
return HTTP . DEFAULT_CONTENT_CHARSET	return parseCharset ( var , HTTP . DEFAULT_CONTENT_CHARSET )
final String var = getCacheKey ( var , var , var )	String var = getCacheKey ( var , var , var , var )
Request < Bitmap > var = makeImageRequest ( var , var , var , var )	Request < Bitmap > var = makeImageRequest ( var , var , var , var , var )
public ImageRequest ( String var , Response . Listener < Bitmap > var , int var , int var , Config var , Response . ErrorListener var )	public ImageRequest ( String var , Response . Listener < Bitmap > var , int var , int var , ScaleType var , Config var , Response . ErrorListener var )
if ( var == 0 && var == 0 )	if ( ( var == 0 ) && ( var == 0 ) )
if ( var * var > var )	if ( ( var * var ) < var )
int var = getResizedDimension ( var , var , var , var )	int var = getResizedDimension ( var , var , var , var , var )
int var = getResizedDimension ( var , var , var , var )	int var = getResizedDimension ( var , var , var , var , var )
public JsonArrayRequest ( String var , Response . Listener < JSONArray > var , Response . ErrorListener var )	public JsonArrayRequest ( String var , Listener < JSONArray > var , ErrorListener var )
String var = new String ( var . data , HttpHeaderParser . parseCharset ( var . headers ) . headers )	String var = new String ( var . data , HttpHeaderParser . parseCharset ( var . headers , PROTOCOL_CHARSET ) . headers , PROTOCOL_CHARSET )
public JsonObjectRequest ( int var , String var , JSONObject var , Response . Listener < JSONObject > var , Response . ErrorListener var )	public JsonObjectRequest ( int var , String var , JSONObject var , Listener < JSONObject > var , ErrorListener var )
public JsonObjectRequest ( String var , JSONObject var , Response . Listener < JSONObject > var , Response . ErrorListener var )	public JsonObjectRequest ( String var , JSONObject var , Listener < JSONObject > var , ErrorListener var )
String var = new String ( var . data , HttpHeaderParser . parseCharset ( var . headers ) . headers )	String var = new String ( var . data , HttpHeaderParser . parseCharset ( var . headers , PROTOCOL_CHARSET ) . headers , PROTOCOL_CHARSET )
public JsonRequest ( String var , String var , Response . Listener < T > var , Response . ErrorListener var )	public JsonRequest ( String var , String var , Listener < T > var , ErrorListener var )
public JsonRequest ( int var , String var , String var , Response . Listener < T > var , Response . ErrorListener var )	public JsonRequest ( int var , String var , String var , Listener < T > var , ErrorListener var )
return var != null && var . isCanceled ( )	return var . isCanceled ( )
public StringRequest ( int var , String var , Response . Listener < String > var , Response . ErrorListener var )	public StringRequest ( int var , String var , Listener < String > var , ErrorListener var )
public StringRequest ( String var , Response . Listener < String > var , Response . ErrorListener var )	public StringRequest ( String var , Listener < String > var , ErrorListener var )
if ( var . var . capacity ( ) == 128 = var . var . capacity ( ) == 1024 + 200 = var )	if ( var . var . capacity ( ) == 128 = var . var . capacity ( ) == 1024 + 200 = var . var . capacity ( ) == 4096 + 200 = var . var . capacity ( ) == 16384 + 200 = var . var . capacity ( ) == 40000 = var . var . capacity ( ) == 280000 )
if ( var . var . capacity ( ) == 4096 + 200 = var . var . capacity ( ) == 16384 + 200 = var . var . capacity ( ) == 40000 = var . var . capacity ( ) == 280000 )	if ( var . var . capacity ( ) == 128 = var . var . capacity ( ) == 1024 + 200 = var . var . capacity ( ) == 4096 + 200 = var . var . capacity ( ) == 16384 + 200 = var . var . capacity ( ) == 40000 = var . var . capacity ( ) == 280000 )
if ( ! var . renameTo ( var ) = var )	if ( ! var . renameTo ( var ) )
if ( var . var == null || var . var . var != null || var . var . volume_id == Integer . MIN_VALUE && var . var . local_id < 0 )	if ( var . var == null || var . var . var != null || var . var . volume_id == Integer . MIN_VALUE && var . var . local_id < 0 || var . size < 0 )
int var = var . get ( var )	Integer var = var . get ( var )
if ( var - ( var * AndroidUtilities . dp ( 48 ) + AndroidUtilities . dp ( 32 ) ) > var * var )	if ( var != null && var - ( var * AndroidUtilities . dp ( 48 ) + AndroidUtilities . dp ( 32 ) ) > var * var )
int var = var . get ( var )	Integer var = var . get ( var )
if ( ( var + 1 ) * AndroidUtilities . dp ( 48 ) - AndroidUtilities . dp ( 24 ) > var * var )	if ( var != null && ( var + 1 ) * AndroidUtilities . dp ( 48 ) - AndroidUtilities . dp ( 24 ) > var * var )
public DialogsSearchAdapter ( Context var , int var )	public DialogsSearchAdapter ( Context var , int var , int var )
searchDialogsInternal ( var , var , var )	searchDialogsInternal ( var , var )
var . setData ( var , var , var , var , var )	var . setData ( var , var , var , var , var , var )
( ( ProfileSearchCell ) var ) . setData ( var , null , null , var , var )	( ( ProfileSearchCell ) var ) . setData ( var , null , null , var , var , false )
var = ( int ) Math . ceil ( Math . max ( var , var . getLineWidth ( var ) - var . getLineLeft ( var ) ) , var . getLineWidth ( var ) - var . getLineLeft ( var ) )	var = ( int ) Math . ceil ( Math . max ( var , var . getLineWidth ( var ) + var . getLineLeft ( var ) ) , var . getLineWidth ( var ) + var . getLineLeft ( var ) )
var . translate ( var = AndroidUtilities . dp ( 2 + 9 ) + 9 + var - var , var = AndroidUtilities . dp ( 2 + 9 ) + 9 + var )	var . translate ( var = AndroidUtilities . dp ( 2 + 9 ) + 9 + var , var = AndroidUtilities . dp ( 2 + 9 ) + 9 + var )
var . onDraw ( var )	var . draw ( var )
if ( var != null )	if ( delegate != null )
var . didClickedImage ( this )	delegate . didClickedImage ( this )
if ( var != null )	if ( delegate != null )
var . didClickedImage ( this )	delegate . didClickedImage ( this )
if ( var != null )	if ( delegate != null )
var . didClickedImage ( this )	delegate . didClickedImage ( this )
if ( var != null )	if ( delegate != null )
var . didClickedImage ( this )	delegate . didClickedImage ( this )
var . onDraw ( var )	var . draw ( var )
if ( var . getAction ( ) == MotionEvent . ACTION_DOWN || ( linkPreviewPressed || pressedLink != null ) && var . getAction ( ) == MotionEvent . ACTION_UP . getAction ( ) == MotionEvent . ACTION_CANCEL )	if ( var . getAction ( ) == MotionEvent . ACTION_DOWN || ( linkPreviewPressed || pressedLink != null || var ) && var . getAction ( ) == MotionEvent . ACTION_UP . getAction ( ) == MotionEvent . ACTION_CANCEL )
if ( Build . VERSION . SDK_INT >= 19 && var . embed_url != null && var . embed_url . length ( ) != 0 )	if ( Build . VERSION . SDK_INT >= 16 && var . embed_url != null && var . embed_url . length ( ) != 0 )
var . onAttachedToWindow ( )	if ( var . onAttachedToWindow ( ) )
if ( currentMessageObject != var || isUserDataChanged )	if ( currentMessageObject != var || var )
var . onDraw ( var )	var . draw ( var )
CharSequence var	CharSequence var = ""
if ( var != null = var )	if ( var != null = var != null )
if ( var . getImageReceiver ( ) . getPressed != var )	return var . getImageReceiver ( ) . getBitmap != null
var . getImageReceiver ( ) . setPressed ( var )	var . getImageReceiver ( ) . setAlpha ( var )
super . setPressed ( var )	var . setScaleX ( var )
if ( var != null )	if ( var != null . getInstance ( ) . isVisible )
if ( var . contains ( "" ) )	if ( var != - 1 )
var = var . replace ( "" , "" )	var = var . substring ( 0 , var )
if ( var instanceof ChatMediaCell instanceof ChatActionCell )	if ( var instanceof ChatBaseCell instanceof ChatActionCell )
ChatMediaCell var = ( ChatMediaCell ) var	ChatBaseCell var = ( ChatBaseCell ) var
for ( int var = 0 ; var < Emoji . data . length ; var ++ )	for ( int var = 0 ; var < Emoji . data . length + 1 ; var ++ )
if ( var . getCurrentItem ( ) == 0 )	if ( var . getCurrentItem ( ) != 0 )
var . add ( var )	var . append ( var . getValue ( ) )
Emoji . data [ 0 ] = new long [ Math ] . min ( var . size ( ) , 50 )	var . add ( var . getKey ( ) )
for ( int var = 0 ; var < Emoji . data [ 0 ] . length ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
var . get ( 0 ) . data = Emoji . data [ 0 ]	var . append ( "" )
var . edit ( ) . putString ( "" , var . toString ( ) ) . commit	var . putString ( "" , var . toString ( ) )
var . addStickerTab ( var . documents . get ( 0 ) )	var . addStickerTab ( var . get ( var ) . documents . get ( 0 ) )
Emoji . data [ 0 ] = new long	long var = new long
var . get ( 0 ) . data = Emoji . data [ 0 ]	var . setLength ( 0 )
if ( var != GONE && var != null )	if ( var != null )
var . notifyDataSetChanged ( )	reloadStickersAdapter
var . notifyDataSetChanged ( )	reloadStickersAdapter
TLRPC . Document var = ( ( StickerEmojiCell ) var ) . getSticker	TLRPC . Document var = var . getSticker ( )
public EmojiGridAdapter ( long var )	public EmojiGridAdapter ( int var ) = var
this . var = var	var = var
return var . length	return Emoji . data [ var ] . length
EmojiView . this . addToRecent ( ( Long ) var . getTag ( ) )	var . onEmojiSelected ( convert ( ( Long ) var . getTag ( ) ) Long ) var . getTag ( ) )
var . searchDialogs ( null , var )	var . searchDialogs ( null )
if ( var . length ( ) != 0 )	if ( var . length ( ) != 0 || var != null && var . hasRecentRearch ( ) )
if ( var && var )	if ( var && var || var . isRecentSearchDisplayed ( ) )
if ( var instanceof String )	if ( var instanceof String || var . isRecentSearchDisplayed ( ) )
getParentActivity . unregisterReceiver ( var )	ApplicationLoader . applicationContext . unregisterReceiver ( var )
getParentActivity . registerReceiver ( var , var )	ApplicationLoader . applicationContext . registerReceiver ( var , var )
String var = Environment . getExternalStorageDirectory ( ) . getAbsolutePath	String var = Environment . getExternalStorageDirectory ( ) . getPath
HashMap < String , ArrayList < String > > var = new HashMap	HashSet < String > var = new HashSet
String var = null	BufferedReader var = null
if ( var [ 1 ] . equals ( var ) )	String var = var . nextToken ( )
var . removeAll ( var . get ( var ) )	if ( ! var . contains ( "" ) && ! var . contains ( "" ) && ! var . contains ( "" ) && ! var . contains ( "" ) && ! var . contains ( "" ) )
if ( var != null && var . length ( ) >= 6 )	if ( var != null )
if ( var != null || var != null || var != null )	if ( var != null || var != null || var != null || var != null )
runLinkRequest ( var , var , var , var , var , 0 )	runLinkRequest ( var , var , var , var , var , var , 0 )
runLinkRequest ( var , var , var , var , var , 1 )	runLinkRequest ( var , var , var , var , var , var , 1 )
var . searchDocuments ( null )	var . search ( null )
var . searchDocuments ( var )	var . search ( var )
var = new DocumentsSearchAdapter ( var )	var = new SharedLinksAdapter ( var )
MessageObject var = var . getDocument ( var )	MessageObject var = var . get ( 0 )
MediaActivity . this . onItemClick ( var , var , var , 0 )	MediaActivity . this . onItemClick ( var , var , ( ( SharedDocumentCell ) var ) . getDocument var , 0 )
if ( var == 1 )	if ( var == 1 || var == 3 )
if ( var == 1 )	if ( var == 1 || var == 3 )
if ( var == 1 )	if ( var == 1 || var == 3 )
if ( ! sharedMediaData [ 1 ] . loading && ! sharedMediaData [ 1 ] . endReached && sharedMediaData [ 1 ] . messages . isEmpty ( var ) )	if ( ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached && sharedMediaData [ var ] . messages . isEmpty ( var ) )
public DocumentsSearchAdapter ( Context var ) = var	public SharedLinksAdapter ( Context var ) = var
if ( ! sharedMediaData [ 1 ] . messages . isEmpty ( var ) )	if ( ! sharedMediaData [ var ] . messages . isEmpty ( var ) )
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto )	if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto || var . messageOwner . media instanceof TLRPC . TL_messageMediaWebPage )
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto && var . messageOwner . media . photo != null )	if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto && var . messageOwner . media . photo != null || var . messageOwner . media instanceof TLRPC . TL_messageMediaWebPage && var . messageOwner . media . webpage != null )
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto )	if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto || var . messageOwner . media instanceof TLRPC . TL_messageMediaWebPage )
if ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty var )	if ( ! ( var . messageOwner . media instanceof TLRPC . TL_messageMediaWebPage ) && ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) var )
var = new FrameLayoutTouchListener ( var )	var = new FrameLayout ( var )
return new DefaultLoadControl ( var , var , var , var , var , var , var , var )	return new DefaultLoadControl ( var , var , var , var , var , var , var , var , var , var )
var = var * 1000L	this . var = C . msToUs ( var )
var = var * 1000L	this . var = C . msToUs ( var )
var = var * 1000L	this . var = C . msToUs ( var )
var = var * 1000L	this . var = C . msToUs ( var )
var = var	this . var = var
if ( var < var > var || var = false )	if ( var < var >= var || var = false )
if ( var > var || var = false )	if ( var >= var || var = false )
this ( var , null , var , var )	this ( var , var , var )
return new ExoPlaybackException ( var , null , var , var )	return new ExoPlaybackException ( var , var , var )
return new ExoPlaybackException ( var , null , var , C . INDEX_UNSET )	return new ExoPlaybackException ( var , var , C . INDEX_UNSET )
return new ExoPlaybackException ( var , null , var , C . INDEX_UNSET )	return new ExoPlaybackException ( var , var , C . INDEX_UNSET )
super ( var , var )	super ( var )
return ( IOException ) getCause	return ( IOException ) var
return ( Exception ) getCause	return ( Exception ) var
return ( RuntimeException ) getCause	return ( RuntimeException ) var
return newSimpleInstance ( var , var , var , var )	return newSimpleInstance ( var , var , var , var , var )
return newSimpleInstance ( var , var , var , var )	return newSimpleInstance ( var , var , var , var , var )
return newSimpleInstance ( new DefaultRenderersFactory ( var ) , var )	return newSimpleInstance ( var , new DefaultRenderersFactory ( var ) , var )
return newSimpleInstance ( var , var , new DefaultLoadControl , var )	return newSimpleInstance ( var , var , var , var , var )
return newSimpleInstance ( var , var , var , null , Util . getLooper ( ) )	return newSimpleInstance ( var , var , var , var , null , Util . getLooper ( ) )
return newInstance ( var , var , new DefaultLoadControl )	return newInstance ( var , var , var , new DefaultLoadControl )
var = new DefaultBandwidthMeter . Builder ( ) . build	var = new DefaultBandwidthMeter . Builder ( var ) . build
this . var = new CopyOnWriteArraySet	this . var = new CopyOnWriteArrayList
var = new ExoPlayerImplInternal ( var , var , var , var , var , var , var , var , var , this , var )	var = new ExoPlayerImplInternal ( var , var , var , var , var , var , var , var , var , var )
seekTo ( var , C . TIME_UNSET )	this . var = var
Pair < Integer , Long > var = var . getPeriodPosition ( var , var , var , var )	Pair < Object , Long > var = var . getPeriodPosition ( window , var , var , var )
var = var . first	var = var . getIndexOfPeriod ( var . first )
stop ( false )	setPlayWhenReady ( var , false )
updatePlaybackInfo ( var , false , DISCONTINUITY_REASON_INTERNAL , TIMELINE_CHANGE_REASON_RESET , false , false )	updatePlaybackInfo ( var , false , DISCONTINUITY_REASON_INTERNAL , TIMELINE_CHANGE_REASON_RESET , false )
return var . periodId . periodIndex	return var . timeline . getIndexOfPeriod ( var . periodId . periodUid )
return var . timeline . getPeriod ( var . periodId . periodIndex , var ) . windowIndex	return var . timeline . getPeriodByUid ( var . periodId . periodUid , var ) . windowIndex
var . getPeriod ( var . periodIndex , var )	var . timeline . getPeriodByUid ( var . periodUid , var )
Timeline var = var . var	var . peekFirst ( ) . run
var . timeline . getPeriod ( var . periodId . periodIndex , var )	var . timeline . getPeriodByUid ( var . periodId . periodUid , var )
Timeline . Period var = var . timeline . getPeriod ( var . loadingMediaPeriodId . periodIndex , var )	Timeline . Period var = var . timeline . getPeriodByUid ( var . loadingMediaPeriodId . periodUid , var )
var = var . fromNewPosition ( var . periodId , 0 , var . contentPositionUs )	var = var . resetToNewPosition ( var . periodId , 0 , var . contentPositionUs )
updatePlaybackInfo ( var , var , var , var , var , false )	updatePlaybackInfo ( var , var , var , var , var )
var . addLast ( new PlaybackInfoUpdate ( var , this . var , var , var , var , var , var , var , var , var ) , this . var , var , var , var , var , var , var , var , var )	notifyListeners ( new PlaybackInfoUpdate ( var , var , var , var , var , var , var , var , var ) , var , var , var , var , var , var , var , var )
var . timeline . getPeriod ( var . periodIndex , var )	var . timeline . getPeriodByUid ( var . periodUid , var )
this . var = var	this . var = new CopyOnWriteArrayList ( var )
var = var || var . playbackState != var . playbackState	var = var . playbackState != var . playbackState
var . onSeekProcessed ( )	invokeAll ( var , EventListener :: onSeekProcessed )
stopInternal ( var . arg1 != 0 , true )	setForegroundModeInternal ( var . arg1 != 0 , ( AtomicBoolean ) var . obj )
var . prepareSource ( var , true , this , var . getTransferListener ( ) )	var . prepareSource ( this , var . getTransferListener ( ) )
var = var . fromNewPosition ( var , var , var . contentPositionUs )	var = var . copyWithNewPosition ( var , var , var . contentPositionUs , getTotalBufferedDurationUs )
var = var . fromNewPosition ( var . periodId , var , var . contentPositionUs )	var = var . copyWithNewPosition ( var . periodId , var , var . contentPositionUs , getTotalBufferedDurationUs )
var . bufferedPositionUs = var . getBufferedPositionUs ( true )	var . bufferedPositionUs = var . getBufferedPositionUs ( )
Pair < Integer , Long > var = resolveSeekPosition ( var , true )	Pair < Object , Long > var = resolveSeekPosition ( var , true )
var = getFirstMediaPeriodId	var = var . getDummyFirstMediaPeriodId ( var , var )
int var = var . first	Object var = var . first
var = var . fromNewPosition ( var , var , var )	var = var . copyWithNewPosition ( var , var , var , getTotalBufferedDurationUs )
resetInternal ( true , var , var )	resetInternal ( var || ! var , true , var , var )
resetInternal ( true , true , true )	resetInternal ( true , true , true , true )
return PlaybackInfo . DUMMY_MEDIA_PERIOD_ID	Thread . currentThread ( ) . interrupt
Pair < Integer , Long > var = resolveSeekPosition ( new SeekPosition ( var . message . getTimeline ( ) , var . message . getWindowIndex ( ) , C . msToUs ( var . message . getPositionMs ( ) ) . message . getPositionMs ( ) ) . message . getTimeline ( ) , var . message . getWindowIndex ( ) , C . msToUs ( var . message . getPositionMs ( ) ) . message . getPositionMs ( ) , false )	Pair < Object , Long > var = resolveSeekPosition ( new SeekPosition ( var . message . getTimeline ( ) , var . message . getWindowIndex ( ) , C . msToUs ( var . message . getPositionMs ( ) ) . message . getPositionMs ( ) ) . message . getTimeline ( ) , var . message . getWindowIndex ( ) , C . msToUs ( var . message . getPositionMs ( ) ) . message . getPositionMs ( ) , false )
var . setResolvedPosition ( var . first , var . second , var . timeline . getUidOfPeriod ( var . first ) . first )	var . setResolvedPosition ( var . timeline . getIndexOfPeriod ( var . first ) . first , var . second , var . first )
int var = var . periodId . periodIndex	int var = var . timeline . getIndexOfPeriod ( var . periodId . periodUid )
var = var . next	var = var . getNext ( )
long var = var . applyTrackSelection ( var . positionUs , var , var )	long var = var . applyTrackSelection ( var , var . positionUs , var , var )
var = var . fromNewPosition ( var . periodId , var , var . contentPositionUs )	var = var . copyWithNewPosition ( var . periodId , var , var . contentPositionUs , getTotalBufferedDurationUs )
var = var . copyWithTrackInfo ( var . trackGroups , var . trackSelectorResult )	var = var . copyWithTrackInfo ( var . getTrackGroups ( ) , var . getTrackSelectorResult ( ) )
var . applyTrackSelection ( var , false )	var . applyTrackSelection ( var , var , false )
while ( var != null )	while ( var != null && var . prepared )
if ( var . trackSelectorResult != null )	while ( var != null && var . prepared )
TrackSelection var = var . trackSelectorResult . selections . getAll ( )	TrackSelection var = var . getTrackSelectorResult ( ) . selections . getAll ( )
var = var . next	while ( var != null && var . prepared )
long var = var . getBufferedPositionUs ( ! var . info . isFinal )	boolean var = var . isFullyBuffered ( ) && var . info . isFinal
return var == C . TIME_END_OF_SOURCE || var . shouldStartPlayback ( var - var . toPeriodTime ( var ) , var . getPlaybackParameters ( ) . speed , var )	return var || var . shouldStartPlayback ( getTotalBufferedDurationUs , var . getPlaybackParameters ( ) . speed , var )
return var == C . TIME_UNSET || var . positionUs < var || ( var . next != null && ( var . next . prepared || var . next . info . id . isAd ( ) ) )	return var == C . TIME_UNSET || var . positionUs < var || ( var != null && ( var . prepared || var . info . id . isAd ( ) ) )
if ( var != null && ! var . prepared && ( var == null || var . next == var ) )	if ( var != null && ! var . prepared && ( var == null || var . getNext ( ) == var ) )
var = var . fromNewPosition ( getFirstMediaPeriodId , C . TIME_UNSET , C . TIME_UNSET )	var = var . resetToNewPosition ( var , C . TIME_UNSET , C . TIME_UNSET )
int var = var . first	Object var = var . first
if ( var . startPositionUs == C . TIME_UNSET )	if ( var . isEmpty ( ) )
if ( var . isEmpty ( )  )	if ( ! var . isEmpty ( ) )
Pair < Integer , Long > var = getPeriodPosition ( var , var . getFirstWindowIndex ( var ) , C . TIME_UNSET )	Pair < Object , Long > var = getPeriodPosition ( var , var . getFirstWindowIndex ( var ) , C . TIME_UNSET )
int var = var . first	Object var = var . first
if ( var . isEmpty ( ) )	if ( var . startPositionUs == C . TIME_UNSET )
if ( ! var . isEmpty ( ) )	if ( var . isEmpty ( )  )
Pair < Integer , Long > var = getPeriodPosition ( var , var . getFirstWindowIndex ( var ) , C . TIME_UNSET )	Pair < Object , Long > var = getPeriodPosition ( var , var . getFirstWindowIndex ( var ) , C . TIME_UNSET )
int var = var . first	Object var = var . first
int var = resolveSubsequentPeriod ( var , var , var )	Object var = resolveSubsequentPeriod ( var , var , var )
if ( var == C . INDEX_UNSET )	if ( var == null )
Pair < Integer , Long > var = getPeriodPosition ( var , var . getPeriod ( var , var ) , var . windowIndex , C . TIME_UNSET )	Pair < Object , Long > var = getPeriodPosition ( var , var . getPeriodByUid ( var , var ) , var . windowIndex , C . TIME_UNSET )
while ( var . next != null )	while ( var . getNext ( ) != null )
var = var . next	var = var . getNext ( )
if ( var . uid . equals ( var ) )	if ( var . info . id . equals ( var ) )
var . info = var . getUpdatedMediaPeriodInfo ( var . info , var )	var . info = var . getUpdatedMediaPeriodInfo ( var . info )
resetInternal ( false , true , false )	handleLoadingMediaPeriodChanged ( false )
int var = var . getIndexOfPeriod ( var . getUidOfPeriod ( var . first ) . first )	int var = var . getIndexOfPeriod ( var . first )
var = resolveSubsequentPeriod ( var . first , var , var )	Object var = resolveSubsequentPeriod ( var . first , var , var )
if ( var != C . INDEX_UNSET )	if ( var != null )
while ( var && var != var && var >= var . next . rendererPositionOffsetUs )	while ( var && var != var && var >= var . getNext ( ) . getStartPositionRendererTime )
var = var . fromNewPosition ( var . info . id , var . info . startPositionUs , var . info . contentPositionUs )	var = var . copyWithNewPosition ( var . info . id , var . info . startPositionUs , var . info . contentPositionUs , getTotalBufferedDurationUs )
if ( var . next == null || ! var . next . prepared )	if ( var . getNext ( ) == null )
TrackSelectorResult var = var . trackSelectorResult	TrackSelectorResult var = var . getTrackSelectorResult ( )
TrackSelectorResult var = var . trackSelectorResult	TrackSelectorResult var = var . getTrackSelectorResult ( )
MediaPeriod var = var . enqueueNextMediaPeriod ( var , var , var . getAllocator ( ) , var , var , var )	MediaPeriod var = var . enqueueNextMediaPeriod ( var , var , var . getAllocator ( ) , var , var )
var . handlePrepared ( var . getPlaybackParameters ( ) . speed )	var . handlePrepared ( var . getPlaybackParameters ( ) . speed , var . timeline )
updateLoadControlTrackSelection ( var . trackGroups , var . trackSelectorResult )	updateLoadControlTrackSelection ( var . getTrackGroups ( ) , var . getTrackSelectorResult ( ) )
if ( var . trackSelectorResult . isRendererEnabled ( var ) ++ )	if ( var . getTrackSelectorResult ( ) . isRendererEnabled ( var ) ++ )
if ( var [ var ] && ( ! var . trackSelectorResult . isRendererEnabled ( var ) || ( var . isCurrentStreamFinal ( ) && var . getStream ( ) == var . sampleStreams [ var ] ) ) )	if ( var [ var ] && ( ! var . getTrackSelectorResult ( ) . isRendererEnabled ( var ) || ( var . isCurrentStreamFinal ( ) && var . getStream ( ) == var . sampleStreams [ var ] ) ) )
var = var . copyWithTrackInfo ( var . trackGroups , var . trackSelectorResult )	var = var . copyWithTrackInfo ( var . getTrackGroups ( ) , var . getTrackSelectorResult ( ) )
MediaPeriodHolder var = var . getPlayingPeriod ( )	TrackSelectorResult var = var . getPlayingPeriod ( ) . getTrackSelectorResult
if ( var . trackSelectorResult . isRendererEnabled ( var ) )	if ( var . isRendererEnabled ( var ) )
RendererConfiguration var = var . trackSelectorResult . rendererConfigurations [ var ]	RendererConfiguration var = var . rendererConfigurations [ var ]
TrackSelection var = var . trackSelectorResult . selections . get ( var )	TrackSelection var = var . selections . get ( var )
return var . next != null && var . next . prepared && var . hasReadStreamToEnd ( )	return var != null && var . prepared && var . hasReadStreamToEnd ( )
return var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && var == var . var && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var ) && initializationDataEquals ( var )	return var == var . var && var == var . var && var == var . var && var == var . var && Float . compare ( var , var . var ) == 0 && var == var . var && Float . compare ( var , var . var ) == 0 && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && var == var . var && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var ) && initializationDataEquals ( var )
public MediaPeriodHolder ( RendererCapabilities var , long var , TrackSelector var , Allocator var , MediaSource var , Object var , MediaPeriodInfo var )	public MediaPeriodHolder ( RendererCapabilities var , long var , TrackSelector var , Allocator var , MediaSource var , MediaPeriodInfo var )
MediaPeriod var = var . createPeriod ( var . id , var )	MediaPeriod var = var . createPeriod ( var , var , var )
if ( var . id . endPositionUs != C . TIME_END_OF_SOURCE )	if ( var . endPositionUs != C . TIME_UNSET && var . endPositionUs != C . TIME_END_OF_SOURCE )
var = new ClippingMediaPeriod ( var , true , 0 , var . id . endPositionUs )	var = new ClippingMediaPeriod ( var , true , 0 , var . endPositionUs )
return var . durationUs	return var . startPositionUs + var
long var = applyTrackSelection ( var . startPositionUs , false )	long var = applyTrackSelection ( var , var . startPositionUs , false )
updatePeriodTrackSelectorResult ( null )	return null
if ( var . id . endPositionUs != C . TIME_END_OF_SOURCE )	if ( var . endPositionUs != C . TIME_UNSET && var . endPositionUs != C . TIME_END_OF_SOURCE )
if ( var != null )	var = null
MediaPeriodHolder var = new MediaPeriodHolder ( var , var , var , var , var , var , var )	MediaPeriodHolder var = new MediaPeriodHolder ( var , var , var , var , var , var )
var . next = var	var . setNext ( var )
Assertions . checkState ( var != null && var . next != null )	Assertions . checkState ( var != null && var . getNext ( ) != null )
var = var . next	var = var . getNext ( )
var = var . next	var = var . getNext ( )
var = var . next	var = var . getNext ( )
while ( var . next != null )	while ( var . getNext ( ) != null )
var = var . next	var = var . getNext ( )
var . next = null	var . setNext ( null )
int var = var . var	int var = var . getIndexOfPeriod ( var . periodUid )
var . info = getUpdatedMediaPeriodInfo ( var . info , var )	var . info = getUpdatedMediaPeriodInfo ( var . info )
var . info = getUpdatedMediaPeriodInfo ( var . info , var )	var . info = getUpdatedMediaPeriodInfo ( var . info )
if ( ! canKeepMediaPeriodHolder ( var , var ) )	if ( ! canKeepMediaPeriodHolder ( var , var ) canKeepAfterMediaPeriodHolder ( var , var . durationUs ) )
var = var . next	var = var . getNext ( )
return getUpdatedMediaPeriodInfo ( var , var . id . copyWithPeriodIndex ( var ) )	MediaPeriodId var = var . var
var . getPeriod ( var , var )	int var = var . getPeriod ( var , var ) . var
Object var = var . getPeriod ( var , var , true ) . uid	int var = var . getPeriodByUid ( var , var ) . var
var = var . next	var = var . getNext ( )
var = var . next	var = var . getNext ( )
int var = var . getNextPeriodIndex ( var . info . id . periodIndex , var , var , var , var )	int var = var . getNextPeriodIndex ( var , var , var , var , var )
while ( var . next != null && ! var . info . isLastInTimelinePeriod )	while ( var . getNext ( ) != null && ! var . info . isLastInTimelinePeriod )
var . info = getUpdatedMediaPeriodInfo ( var . info , var . info . id )	var . info = getUpdatedMediaPeriodInfo ( var . info )
int var = var . getNextPeriodIndex ( var . id . periodIndex , var , var , var , var )	int var = var . getNextPeriodIndex ( var , var , var , var , var )
Pair < Integer , Long > var = var . getPeriodPosition ( var , var , var , C . TIME_UNSET , Math . max ( 0 , var ) , var )	Pair < Object , Long > var = var . getPeriodPosition ( var , var , var , C . TIME_UNSET , Math . max ( 0 , var ) , var )
if ( var . next != null && var . next . uid . equals ( var ) )	if ( var != null && var . uid . equals ( var ) )
var = var . next . info . id . var	var = var . info . id . var
var . getPeriod ( var . periodIndex , var )	var . getPeriodByUid ( var . periodUid , var )
return getMediaPeriodInfoForContent ( var . periodIndex , var . contentPositionUs , var . windowSequenceNumber )	return getMediaPeriodInfoForContent ( var . periodUid , var , var . windowSequenceNumber )
return getMediaPeriodInfoForContent ( var . periodIndex , var . id . endPositionUs , var . windowSequenceNumber )	return getMediaPeriodInfoForContent ( var . periodUid , var . durationUs , var . windowSequenceNumber )
if ( var == 0 )	var . setNext ( null )
int var = var - 1	int var = var . getIndexOfPeriod ( var . id . periodUid )
if ( var . getAdGroupTimeUs ( var ) != C . TIME_END_OF_SOURCE || var . hasPlayedAdGroup ( var ) )	if ( var . getAdGroupCount ( ) == 1 && var . getAdGroupTimeUs ( 0 ) == 0 )
long var = var . getDurationUs ( )	long var = var . contentPositionUs
var . getPeriod ( var . periodIndex , var )	var . getPeriodByUid ( var . var . periodUid , var )
return new MediaPeriodInfo ( var , var , var . contentPositionUs , var , var , var )	return new MediaPeriodInfo ( var , var . startPositionUs , var . contentPositionUs , var , var , var )
var . getPeriod ( var . periodIndex , var )	var . getPeriodByUid ( var . periodUid , var )
return getMediaPeriodInfoForAd ( var . periodIndex , var . adGroupIndex , var . adIndexInAdGroup , var , var . windowSequenceNumber )	return getMediaPeriodInfoForAd ( var . periodUid , var . adGroupIndex , var . adIndexInAdGroup , var , var . windowSequenceNumber )
return getMediaPeriodInfoForContent ( var . periodIndex , var , var . windowSequenceNumber )	return getMediaPeriodInfoForContent ( var . periodUid , var , var . windowSequenceNumber )
long var = var . getPeriod ( var . var , var ) . getAdDurationUs ( var . var , var . var )	long var = var . getPeriodByUid ( var . var , var ) . getAdDurationUs ( var . var , var . var )
return new MediaPeriodInfo ( var , var , var , var , var , var )	return new MediaPeriodInfo ( var , var , var , var , false , false )
if ( var . getAdGroupTimeUs ( var ) != C . TIME_END_OF_SOURCE )	while ( var . getNext ( ) != null && ! var . info . isLastInTimelinePeriod )
int var = var . getAdCountInAdGroup ( var )	MediaPeriodHolder var = var . getNext ( )
boolean var = var && var . adGroupIndex == var && var . adIndexInAdGroup == var - 1	int var = var . getIndexOfPeriod ( var . uid )
int var = var . getPeriod ( var . periodIndex , var ) . var	int var = var . getIndexOfPeriod ( var . periodUid )
return ! var . getWindow ( var , var ) . isDynamic && var . isLastPeriod ( var . periodIndex , var , var , var , var ) && var	return ! var . getWindow ( var , var ) . isDynamic && var . isLastPeriod ( var , var , var , var , var ) && var
this ( var , var , var , var , var , new AnalyticsCollector . Factory ( ) , var )	this ( var , var , var , var , var , var , new AnalyticsCollector . Factory ( ) , var )
this ( var , var , var , var , var , var , Clock . DEFAULT , var )	this ( var , var , var , var , var , var , var , Clock . DEFAULT , var )
var = createExoPlayerImpl ( var , var , var , var , var , var )	var = new ExoPlayerImpl ( var , var , var , var , var , var )
var . notifySeekStarted ( )	if ( var . getTrackType ( ) == C . TRACK_TYPE_AUDIO )
var . seekToDefaultPosition ( )	var . createMessage ( var ) . setType ( C . MSG_SET_AUX_EFFECT_INFO ) . setPayload ( var ) . send
var . notifySeekStarted ( )	if ( var . getTrackType ( ) == C . TRACK_TYPE_VIDEO )
var . seekToDefaultPosition ( var )	var . createMessage ( var ) . setType ( C . MSG_SET_VIDEO_FRAME_METADATA_LISTENER ) . setPayload ( var ) . send
var . notifySeekStarted ( )	if ( var . getTrackType ( ) == C . TRACK_TYPE_VIDEO )
return var . getCurrentTag ( )	var . createMessage ( var ) . setType ( C . MSG_SET_CAMERA_MOTION_LISTENER ) . setPayload ( var ) . send
stop ( false )	prepare ( var , false , false )
return var . getNextWindowIndex ( )	var . createMessage ( var ) . setType ( C . MSG_SET_CAMERA_MOTION_LISTENER ) . setPayload ( null ) . send
return var . getPreviousWindowIndex ( )	if ( var != null && ( getPlaybackError != null || getPlaybackState == Player . STATE_IDLE ) )
return var . isCurrentWindowDynamic ( )	var . setForegroundMode ( var )
return var . isCurrentWindowSeekable ( )	float var = var * var . getVolumeMultiplier ( )
return var . getAdGroupIndexAfterPositionUs ( var )	return var . getAdGroupIndexAfterPositionUs ( var , var )
return getPeriodPosition ( var , var , var , var , 0 )	return Assertions . checkNotNull ( getPeriodPosition ( var , var , var , var , 0 ) , var , var , var , 0 )
long var = getPeriod ( var , var ) . getDurationUs	long var = getPeriod ( var , var , true ) . getDurationUs
var = getPeriod ( ++ var , var ) . getDurationUs	var = getPeriod ( ++ var , var , true ) . getDurationUs
List < WindowAndMediaPeriodId > var = new ArrayList ( var . var )	List < MediaPeriodInfo > var = new ArrayList ( var . mediaPeriodInfoQueue )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
EventTime var = generateEventTime ( var , var )	EventTime var = generateMediaPeriodEventTime ( var , var )
int var = Assertions . checkNotNull ( var ) . getCurrentWindowIndex	int var = var . getCurrentWindowIndex ( )
return generateEventTime ( var . windowIndex , var . mediaPeriodId )	return generateEventTime ( var . timeline , var . windowIndex , var . mediaPeriodId )
MediaPeriodId var = null	MediaPeriodInfo var = null
int var = var . getPeriodCount ( )	int var = var . getCurrentWindowIndex ( )
WindowAndMediaPeriodId var = var . get ( var )	MediaPeriodInfo var = updateMediaPeriodInfoToNewTimeline ( var . get ( var ) , var )
int var = var . mediaPeriodId . var	int var = var . getIndexOfPeriod ( var . mediaPeriodId . periodUid )
if ( var < var && var . getPeriod ( var , var ) . var == var )	if ( var != C . INDEX_UNSET && var . getPeriod ( var , var ) . var == var )
var = var . mediaPeriodId	var = var
var = updateMediaPeriodToNewTimeline ( var , var )	var = updateMediaPeriodInfoToNewTimeline ( var , var )
var . remove ( var )	var . add ( var )
if ( var . equals ( var ) )	var . put ( var , var )
var = new WindowAndMediaPeriodId ( var , var )	var = var . get ( var )
Object var = var . getUidOfPeriod ( var . mediaPeriodId . periodIndex )	int var = var . getIndexOfPeriod ( var . mediaPeriodId . periodUid )
int var = var . getIndexOfPeriod ( var )	int var = var . getIndexOfPeriod ( var . mediaPeriodId . periodUid )
return new WindowAndMediaPeriodId ( var , var . mediaPeriodId . copyWithPeriodIndex ( var ) )	return new MediaPeriodInfo ( var . mediaPeriodId , var , var )
if ( var . length < 5 )	if ( var . length < 6 )
return new AudioCapabilities ( var . getIntArrayExtra ( AudioManager . EXTRA_ENCODINGS ) . EXTRA_ENCODINGS , var . getIntExtra ( AudioManager . EXTRA_MAX_CHANNEL_COUNT , 0 ) . EXTRA_MAX_CHANNEL_COUNT , 0 )	return new AudioCapabilities ( var . getIntArrayExtra ( AudioManager . EXTRA_ENCODINGS ) . EXTRA_ENCODINGS , var . getIntExtra ( AudioManager . EXTRA_MAX_CHANNEL_COUNT , var ) . EXTRA_MAX_CHANNEL_COUNT , var )
var . onAudioDecoderInitialized ( var , var , var )	var . post ( )
return var != null && var . supportsEncoding ( var )	return var != null && var . supportsEncoding ( var ) && ( var == Format . NO_VALUE || var <= var . getMaxChannelCount ( ) )
var = var && isEncodingSupported ( C . ENCODING_PCM_32BIT ) && Util . isEncodingHighResolutionIntegerPcm ( var )	var = var && supportsOutput ( var , C . ENCODING_PCM_32BIT ) && Util . isEncodingHighResolutionIntegerPcm ( var )
var = AudioFormat . CHANNEL_OUT_QUAD	for ( int var = 0 ; var < var . length ; var ++ )
var = AudioFormat . CHANNEL_OUT_QUAD | AudioFormat . CHANNEL_OUT_FRONT_CENTER	for ( int var = 0 ; var < var . length ; var ++ )
var = AudioFormat . CHANNEL_OUT_5POINT1	for ( int var = 0 ; var < var . length ; var ++ )
var = AudioFormat . CHANNEL_OUT_5POINT1	if ( var == AudioFormat . CHANNEL_INVALID )
var = Util . constrainValue ( var , var , var )	return Util . constrainValue ( var , var , var )
long var = var + inputFramesToDurationUs ( getSubmittedFrames )	long var = var + inputFramesToDurationUs ( getSubmittedFrames - var . getTrimmedFrameCount ( ) )
if ( var != null )	if ( var != null && var != 0 )
if ( var && allowPassthrough ( var ) && var . getPassthroughDecoderInfo ( ) != null )	if ( var && allowPassthrough ( var . var , var ) && var . getPassthroughDecoderInfo ( ) != null )
if ( ( MimeTypes . AUDIO_RAW . equals ( var ) && ! var . isEncodingSupported ( var . var ) ) || ! var . isEncodingSupported ( C . ENCODING_PCM_16BIT ) )	if ( ( MimeTypes . AUDIO_RAW . equals ( var ) && ! var . supportsOutput ( var . var , var . var ) ) || ! var . supportsOutput ( var . var , C . ENCODING_PCM_16BIT ) )
List < MediaCodecInfo > var = var . getDecoderInfos ( var , var )	List < MediaCodecInfo > var = var . getDecoderInfos ( var . sampleMimeType , var )
return ADAPTIVE_NOT_SEAMLESS | var | var	return var | var | var
if ( allowPassthrough ( var . sampleMimeType ) )	if ( allowPassthrough ( var . var , var . sampleMimeType ) )
var . release ( )	var . flush ( )
return var . sampleMimeType . equals ( var . sampleMimeType ) && var . var == var . var && var . sampleRate == var . sampleRate && var . var == 0 && var . var == 0 && var . var == 0 && var . var == 0 && var . initializationDataEquals ( var )	return Util . areEqual ( var . sampleMimeType , var . sampleMimeType ) && var . var == var . var && var . sampleRate == var . sampleRate && var . initializationDataEquals ( var )
var = new byte [ 0 ]	var = Util . EMPTY_BYTE_ARRAY
var = new byte [ 0 ]	var = Util . EMPTY_BYTE_ARRAY
var = new byte [ 0 ]	var = Util . EMPTY_BYTE_ARRAY
var = new byte [ 0 ]	var = Util . EMPTY_BYTE_ARRAY
return var . isEncodingSupported ( var )	return var . supportsOutput ( var , var )
if ( var != null && var != var )	if ( var == var || var == var )
if ( var == null )	if ( var != null )
if ( var . drmInitData != null = null )	if ( var . drmInitData != null )
var = var . acquireSession ( Looper . myLooper ( ) , var . drmInitData )	DrmSession < ExoMediaCrypto > var = var . acquireSession ( Looper . myLooper ( ) , var . drmInitData )
if ( var == var )	if ( var != null && var != var && var != var )
var = null	setSourceDrmSession ( null )
var = new byte [ 0 ]	var = Util . EMPTY_BYTE_ARRAY
if ( var != C . ENCODING_PCM_16BIT )	if ( var != var )
var = new byte [ var ] * var * 2	var = new byte [ var ] * var
var = var * var * 2	var = var * var
return var && var == EMPTY_BUFFER	return var && var == 0 && var == EMPTY_BUFFER
var = new byte [ 0 ]	var = Util . EMPTY_BYTE_ARRAY
if ( var != null )	if ( sessionId != null )
var . provisionRequired ( this )	Util . castNonNull ( sessionId )
postKeyRequest ( ExoMediaDrm . KEY_TYPE_STREAMING , var )	postKeyRequest ( sessionId , ExoMediaDrm . KEY_TYPE_STREAMING , var )
postKeyRequest ( ExoMediaDrm . KEY_TYPE_OFFLINE , var )	postKeyRequest ( sessionId , ExoMediaDrm . KEY_TYPE_OFFLINE , var )
if ( var == null )	if ( offlineLicenseKeySetId == null )
postKeyRequest ( ExoMediaDrm . KEY_TYPE_OFFLINE , var )	postKeyRequest ( sessionId , ExoMediaDrm . KEY_TYPE_OFFLINE , var )
postKeyRequest ( ExoMediaDrm . KEY_TYPE_OFFLINE , var )	postKeyRequest ( sessionId , ExoMediaDrm . KEY_TYPE_OFFLINE , var )
postKeyRequest ( ExoMediaDrm . KEY_TYPE_RELEASE , var )	postKeyRequest ( offlineLicenseKeySetId , ExoMediaDrm . KEY_TYPE_RELEASE , var )
Pair < Long , Long > var = WidevineUtil . getLicenseDurationRemainingSec ( this )	Pair < Long , Long > var = Assertions . checkNotNull ( WidevineUtil . getLicenseDurationRemainingSec ( this ) )
var . provideKeyResponse ( var , var )	var . provideKeyResponse ( Util . castNonNull ( offlineLicenseKeySetId ) , var )
var = var . executeKeyRequest ( var , var , var )	var = var . executeKeyRequest ( var , ( KeyRequest ) var )
SchemeData var = getSchemeData ( var , var , true )	List < SchemeData > var = getSchemeDatas ( var , var , true )
if ( var == null )	if ( var . isEmpty ( ) )
SchemeData var = null	List < SchemeData > var = null
var = getSchemeData ( var , var , false )	var = getSchemeDatas ( var , var , false )
if ( var == null )	if ( var . isEmpty ( ) )
if ( var . hasInitData ( var ) )	if ( Util . areEqual ( var . var , var ) )
if ( C . WIDEVINE_UUID . equals ( var ) )	if ( var && C . WIDEVINE_UUID . equals ( var ) && Util . SDK_INT >= 19 )
if ( Util . SDK_INT < 23 && var == 0 . SDK_INT >= 23 && var == 1 )	if ( var && C . WIDEVINE_UUID . equals ( var ) && Util . SDK_INT >= 19 )
var . obtainMessage ( var , var ) . sendToTarget	Assertions . checkNotNull ( var ) . obtainMessage ( var , var ) . sendToTarget
Arrays . sort ( var , this )	Arrays . sort ( this . var , this )
var = var . readString ( )	var = Util . castNonNull ( var . readString ( ) )
DefaultKeyStatus ( int var , byte var )	public KeyStatus ( int var , byte var )
public DefaultKeyRequest ( byte var , String var )	public KeyRequest ( byte var , String var )
public DefaultProvisionRequest ( byte var , String var )	public ProvisionRequest ( byte var , String var )
public FrameworkMediaCrypto ( MediaCrypto var , boolean var )	public FrameworkMediaCrypto ( UUID var , byte var , boolean var )
this . var = Assertions . checkNotNull ( var )	this . var = var
return ! var && var . requiresSecureDecoderComponent ( var )	this . var = var
this . var = new MediaDrm ( var )	this . var = new MediaDrm ( adjustUuid ( var ) )
if ( C . WIDEVINE_UUID . equals ( var ) && needsForceL3Workaround )	if ( C . WIDEVINE_UUID . equals ( var ) && needsForceWidevineL3Workaround )
var . add ( new DefaultKeyStatus ( var . getStatusCode ( ) , var . getKeyId ( ) ) . getStatusCode ( ) , var . getKeyId ( ) )	var . add ( new KeyStatus ( var . getStatusCode ( ) , var . getKeyId ( ) ) . getStatusCode ( ) , var . getKeyId ( ) )
if ( var == null = var )	if ( var != null )
var = var	return var
if ( Util . SDK_INT < 26 && C . CLEARKEY_UUID . equals ( var ) && ( MimeTypes . VIDEO_MP4 . equals ( var ) || MimeTypes . AUDIO_MP4 . equals ( var ) ) = var )	if ( Util . SDK_INT < 26 && C . CLEARKEY_UUID . equals ( var ) && ( MimeTypes . VIDEO_MP4 . equals ( var ) || MimeTypes . AUDIO_MP4 . equals ( var ) ) )
var = var	return var
final MediaDrm . KeyRequest var = var . getKeyRequest ( var , var , var , var , var )	MediaDrm . KeyRequest var = var . getKeyRequest ( var , var , var , var , var )
byte var = var . getData ( )	byte var = adjustRequestData ( var , var . getData ( ) )
var = ClearKeyUtil . adjustRequestData ( var )	return ClearKeyUtil . adjustRequestData ( var )
return new DefaultProvisionRequest ( var . getData ( ) , var . getDefaultUrl ( ) )	return new ProvisionRequest ( var . getData ( ) , var . getDefaultUrl ( ) )
String var = var . getDefaultUrl ( )	String var = var . getLicenseServerUrl ( )
return blockingKeyRequest ( DefaultDrmSessionManager . MODE_DOWNLOAD , var , null )	return blockingKeyRequest ( DefaultDrmSessionManager . MODE_DOWNLOAD , var , var )
blockingKeyRequest ( DefaultDrmSessionManager . MODE_RELEASE , var , null )	blockingKeyRequest ( DefaultDrmSessionManager . MODE_RELEASE , var , var )
DrmSession < T > var = openBlockingKeyRequest ( DefaultDrmSessionManager . MODE_QUERY , var , null )	DrmSession < T > var = openBlockingKeyRequest ( DefaultDrmSessionManager . MODE_QUERY , var , var )
return shouldUseFloatOutput ( var ) || supportsOutputEncoding ( C . ENCODING_PCM_16BIT )	return shouldUseFloatOutput ( var ) || supportsOutput ( var . channelCount , C . ENCODING_PCM_16BIT )
if ( ! var || ! supportsOutputEncoding ( C . ENCODING_PCM_FLOAT ) )	if ( ! var || ! supportsOutput ( var . channelCount , C . ENCODING_PCM_FLOAT ) )
if ( var < 0 )	if ( var == var )
return new FfmpegDecoderException ( "" + var )	return new FfmpegDecoderException ( "" )
if ( ! MimeTypes . AUDIO_FLAC . equalsIgnoreCase ( var . sampleMimeType ) supportsOutputEncoding ( C . ENCODING_PCM_16BIT ) supportsFormatDrm ( var , var . drmInitData ) )	if ( ! MimeTypes . AUDIO_FLAC . equalsIgnoreCase ( var . sampleMimeType ) supportsOutput ( var . channelCount , C . ENCODING_PCM_16BIT ) supportsFormatDrm ( var , var . drmInitData ) )
if ( ! supportsOutputEncoding ( C . ENCODING_PCM_16BIT ) )	if ( ! supportsOutput ( var . channelCount , C . ENCODING_PCM_16BIT ) )
if ( ! MimeTypes . AUDIO_OPUS . equalsIgnoreCase ( var . sampleMimeType ) supportsOutputEncoding ( C . ENCODING_PCM_16BIT ) supportsFormatDrm ( var , var . drmInitData ) )	if ( ! MimeTypes . AUDIO_OPUS . equalsIgnoreCase ( var . sampleMimeType ) supportsOutput ( var . channelCount , C . ENCODING_PCM_16BIT ) supportsFormatDrm ( var , var . drmInitData ) )
if ( ! supportsOutputEncoding ( C . ENCODING_PCM_16BIT ) )	if ( ! supportsOutput ( var . channelCount , C . ENCODING_PCM_16BIT ) )
if ( var != null )	if ( var != null && ! OpusLibrary . opusIsSecureDecodeSupported ( ) )
int var = Math . min ( var - var , var )	int var = var - var
return ( 12000 * var / var + var ) * 4	return ( 12 * var / var + var ) * 4
return 144000 * var / var + var	return 144 * var / var + var
int var , var , var	int var
var = ( 12000 * var / var + var ) * 4	var = ( 12 * var / var + var ) * 4
var = 144000 * var / var + var	var = 144 * var / var + var
var . setValues ( var , var , var , var , var , var * 1000 , var )	var . setValues ( var , var , var , var , var , var , var )
if ( ( Ac3Util . parseTrueHdSyncframeAudioSampleCount ( var ) == C . INDEX_UNSET ) )	if ( Ac3Util . parseTrueHdSyncframeAudioSampleCount ( var ) == 0 )
var = Format . createVideoSampleFormat ( Integer . toString ( var ) , var , null , Format . NO_VALUE , var , var , var , Format . NO_VALUE , var , Format . NO_VALUE , var , var , var , var , var )	var = Format . createVideoSampleFormat ( Integer . toString ( var ) , var , null , Format . NO_VALUE , var , var , var , Format . NO_VALUE , var , var , var , var , var , var , var )
var = maybeReadSeekFrame ( var )	Seeker var = maybeReadSeekFrame ( var )
boolean var = ( var & var ) != 0	boolean var = ( var & var ) == 0
return new VbriSeeker ( var , var , var )	return new VbriSeeker ( var , var , var , var )
private VbriSeeker ( long var , long var , long var )	private VbriSeeker ( long var , long var , long var , long var )
int var = parseHdlr ( var . getLeafAtomOfType ( Atom . TYPE_hdlr ) . TYPE_hdlr . data )	int var = getTrackTypeForHdlr ( parseHdlr ( var . getLeafAtomOfType ( Atom . TYPE_hdlr ) . TYPE_hdlr . data ) . getLeafAtomOfType ( Atom . TYPE_hdlr ) . TYPE_hdlr . data )
Assertions . checkState ( var . moveNext ( ) )	while ( var == 0 && ( var = var . moveNext ( ) ) )
if ( var != 0 || var != 0 || var != 0 || var != 0 )	if ( var != 0 || var != 0 || var != 0 || var != 0 || var != 0 || ! var )
var += var - var	var += var [ var ] - var [ var ]
var |= var != var	var |= var != var [ var ]
var = var	var = var [ var ]
if ( var < var && ( var [ var ] & C . BUFFER_FLAG_KEY_FRAME ) == 0 )	while ( var [ var ] < var [ var ] && ( var [ var ] [ var ] & C . BUFFER_FLAG_KEY_FRAME ) == 0 )
Log . w ( var , "" )	Log . w ( var , "" + var )
long var = Util . scaleLargeTimestamp ( var , C . MICROS_PER_SECOND , var . timescale )	long var = Util . scaleLargeTimestamp ( var , C . MICROS_PER_SECOND , var . movieTimescale )
return parseMetaAtom ( var , var + var )	return parseUdtaMeta ( var , var + var )
var . skipBytes ( var - Atom . HEADER_SIZE )	var . setPosition ( var + var )
String var = "" + char ( ( ( var >> 10 ) & 0x1F ) + 0x60 ) + char ( ( ( var >> 5 ) & 0x1F ) + 0x60 ) + char ( ( ( var ) & 0x1F ) + 0x60 )	String var = "" + char ( ( ( var >> 10 ) & 0x1F ) + 0x60 ) + char ( ( ( var >> 5 ) & 0x1F ) + 0x60 ) + char ( ( var & 0x1F ) + 0x60 )
if ( var == Atom . TYPE_mp4a || var == Atom . TYPE_enca || var == Atom . TYPE_ac_3 || var == Atom . TYPE_ec_3 || var == Atom . TYPE_dtsc || var == Atom . TYPE_dtse || var == Atom . TYPE_dtsh || var == Atom . TYPE_dtsl || var == Atom . TYPE_samr || var == Atom . TYPE_sawb || var == Atom . TYPE_lpcm || var == Atom . TYPE_sowt || var == Atom . TYPE__mp3 || var == Atom . TYPE_alac )	if ( var == Atom . TYPE_mp4a || var == Atom . TYPE_enca || var == Atom . TYPE_ac_3 || var == Atom . TYPE_ec_3 || var == Atom . TYPE_dtsc || var == Atom . TYPE_dtse || var == Atom . TYPE_dtsh || var == Atom . TYPE_dtsl || var == Atom . TYPE_samr || var == Atom . TYPE_sawb || var == Atom . TYPE_lpcm || var == Atom . TYPE_sowt || var == Atom . TYPE__mp3 || var == Atom . TYPE_alac || var == Atom . TYPE_alaw || var == Atom . TYPE_ulaw || var == Atom . TYPE_Opus || var == Atom . TYPE_fLaC )
Track var = AtomParsers . parseTrak ( var , var . getLeafAtomOfType ( Atom . TYPE_mvhd ) . TYPE_mvhd , var , var , ( var & var ) != 0 , false )	Track var = modifyTrack ( AtomParsers . parseTrak ( var , var . getLeafAtomOfType ( Atom . TYPE_mvhd ) . TYPE_mvhd , var , var , ( var & var ) != 0 , false ) , var . getLeafAtomOfType ( Atom . TYPE_mvhd ) . TYPE_mvhd , var , var , ( var & var ) != 0 , false )
var . sampleMetadata ( var + var , C . BUFFER_FLAG_KEY_FRAME , var , 0 , null )	var . sampleMetadata ( var , C . BUFFER_FLAG_KEY_FRAME , var , 0 , null )
int var = var . initializationVectorSize	int var = var . perSampleIvSize
CeaUtil . consume ( var . getSamplePresentationTime ( var ) * 1000L , var , var )	CeaUtil . consume ( var , var , var )
if ( var . definesEncryptionData )	TrackEncryptionBox var = var . getEncryptionBoxIfEncrypted ( )
var . sampleMetadata ( var + var . presentationTimeDeltaUs , C . BUFFER_FLAG_KEY_FRAME , var . size , var , null )	var . sampleMetadata ( var , C . BUFFER_FLAG_KEY_FRAME , var . size , var , null )
if ( ! var . definesEncryptionData )	if ( var == null )
TrackEncryptionBox var = getEncryptionBox	TrackEncryptionBox var = getEncryptionBoxIfEncrypted
if ( var . initializationVectorSize != 0 )	if ( var . perSampleIvSize != 0 )
var = var . initializationVectorSize	var = var . perSampleIvSize
boolean var = var . sampleHasSubsampleEncryptionTable [ var ]	boolean var = var . sampleHasSubsampleEncryptionTable ( var )
if ( ! var . definesEncryptionData )	if ( var == null )
TrackEncryptionBox var = getEncryptionBox	TrackEncryptionBox var = getEncryptionBoxIfEncrypted
if ( var . initializationVectorSize != 0 )	if ( var . perSampleIvSize != 0 )
var . skipBytes ( var . initializationVectorSize )	var . skipBytes ( var . perSampleIvSize )
if ( var . sampleHasSubsampleEncryptionTable [ var ] )	if ( var . sampleHasSubsampleEncryptionTable ( var ) )
var = getTrackSampleTables ( var , var , var )	ArrayList < TrackSampleTable > var = getTrackSampleTables ( var , var , var )
var = getTrackSampleTables ( var , var , true )	var = AtomParsers . parseMdtaFromMeta ( var )
if ( var . type == C . TRACK_TYPE_AUDIO )	var = MetadataUtil . getFormatWithMetadata ( var . type , var , var , var , var )
var = var . copyWithGaplessInfo ( var . encoderDelay , var . encoderPadding )	var = MetadataUtil . getFormatWithMetadata ( var . type , var , var , var , var )
var = var . copyWithMetadata ( var )	var = MetadataUtil . getFormatWithMetadata ( var . type , var , var , var , var )
return var == Atom . TYPE_mdhd || var == Atom . TYPE_mvhd || var == Atom . TYPE_hdlr || var == Atom . TYPE_stsd || var == Atom . TYPE_stts || var == Atom . TYPE_stss || var == Atom . TYPE_ctts || var == Atom . TYPE_elst || var == Atom . TYPE_stsc || var == Atom . TYPE_stsz || var == Atom . TYPE_stz2 || var == Atom . TYPE_stco || var == Atom . TYPE_co64 || var == Atom . TYPE_tkhd || var == Atom . TYPE_ftyp || var == Atom . TYPE_udta	return var == Atom . TYPE_mdhd || var == Atom . TYPE_mvhd || var == Atom . TYPE_hdlr || var == Atom . TYPE_stsd || var == Atom . TYPE_stts || var == Atom . TYPE_stss || var == Atom . TYPE_ctts || var == Atom . TYPE_elst || var == Atom . TYPE_stsc || var == Atom . TYPE_stsz || var == Atom . TYPE_stz2 || var == Atom . TYPE_stco || var == Atom . TYPE_co64 || var == Atom . TYPE_tkhd || var == Atom . TYPE_ftyp || var == Atom . TYPE_udta || var == Atom . TYPE_keys || var == Atom . TYPE_ilst
return var == Atom . TYPE_moov || var == Atom . TYPE_trak || var == Atom . TYPE_mdia || var == Atom . TYPE_minf || var == Atom . TYPE_stbl || var == Atom . TYPE_edts	return var == Atom . TYPE_moov || var == Atom . TYPE_trak || var == Atom . TYPE_mdia || var == Atom . TYPE_minf || var == Atom . TYPE_stbl || var == Atom . TYPE_edts || var == Atom . TYPE_meta
var = var . readUnsignedLongToLong ( )	var = var . readLong ( )
var = var - var . getPosition ( ) + var	var = var - var . getPeekPosition ( ) + var
public DefaultOggSeeker ( long var , long var , StreamReader var , int var , long var )	public DefaultOggSeeker ( long var , long var , StreamReader var , long var , long var , boolean var )
if ( var == var - var = var )	if ( var == var - var || var = var )
var = new DefaultOggSeeker ( var , var . getLength ( ) , this , var . headerSize + var . bodySize , var . granulePosition )	var = new DefaultOggSeeker ( var , var . getLength ( ) , this , var . headerSize + var . bodySize , var . granulePosition , var )
var . data [ var ] . limit ( ) - 4 = byte ( ( var ) & 0xFF )	var . data [ var ] . limit ( ) - 4 = byte ( var & 0xFF )
var . peekFully ( var . data , 0 , 5 )	var . peekFully ( var . data , 0 , 6 )
var . advancePeekPosition ( var - 5 )	var . advancePeekPosition ( var - 6 )
var . packetStarted ( var , true )	var . packetStarted ( var , FLAG_DATA_ALIGNMENT_INDICATOR )
ParsableBitArray var = new ParsableBitArray ( var . data )	var = new ParsableBitArray ( var . data )
if ( ( var & 0xFFF6 ) != 0xFFF0 )	if ( ! AdtsReader . isAdtsSyncWord ( var ) )
if ( ++ var >= 4 && var > 188 )	if ( ++ var >= 4 && var > TsExtractor . TS_PACKET_SIZE )
var . packetStarted ( var , true )	var . packetStarted ( var , FLAG_DATA_ALIGNMENT_INDICATOR )
if ( var == var && var >= 0xF0 && var != 0xFF )	if ( var || checkSyncPositionValid ( var , var - 2 ) )
var . skipBits ( 1 )	var . skipBits ( 5 )
var . format ( Format . createVideoSampleFormat ( var , MimeTypes . VIDEO_H264 , null , Format . NO_VALUE , Format . NO_VALUE , var . width , var . height , Format . NO_VALUE , var , Format . NO_VALUE , var . pixelWidthAspectRatio , null ) , MimeTypes . VIDEO_H264 , null , Format . NO_VALUE , Format . NO_VALUE , var . width , var . height , Format . NO_VALUE , var , Format . NO_VALUE , var . pixelWidthAspectRatio , null )	var . format ( Format . createVideoSampleFormat ( var , MimeTypes . VIDEO_H264 , CodecSpecificDataUtil . buildAvcCodecString ( var . profileIdc , var . constraintsFlagsAndReservedZero2Bits , var . levelIdc ) . profileIdc , var . constraintsFlagsAndReservedZero2Bits , var . levelIdc , Format . NO_VALUE , Format . NO_VALUE , var . width , var . height , Format . NO_VALUE , var , Format . NO_VALUE , var . pixelWidthAspectRatio , null ) , MimeTypes . VIDEO_H264 , CodecSpecificDataUtil . buildAvcCodecString ( var . profileIdc , var . constraintsFlagsAndReservedZero2Bits , var . levelIdc ) . profileIdc , var . constraintsFlagsAndReservedZero2Bits , var . levelIdc , Format . NO_VALUE , Format . NO_VALUE , var . width , var . height , Format . NO_VALUE , var , Format . NO_VALUE , var . pixelWidthAspectRatio , null )
var . endNalUnit ( var , var )	boolean var = var . endNalUnit ( var , var , var , var )
var |= var == var || ( var && var == var && var . isISlice ( ) )	var |= var == var || ( var && var == var )
var = new ParsableByteArray ( var )	var = new ParsableByteArray
if ( var . getPosition ( ) != 0 )	if ( var . getPosition ( ) != var )
var . position = 0	var . position = var
var . setPosition ( 0 )	var . setPosition ( var )
var . setLimit ( var )	var . reset ( var )
int var = peakIntAtPosition ( var . data , var )	int var = peekIntAtPosition ( var . data , var )
int var = ( int ) Math . min ( var , var . getLength ( ) )	int var = ( int ) Math . min ( var , var )
long var = var . getLength ( ) - var	long var = var . getLength ( )
var . setPosition ( 0 )	var . setPosition ( var + 4 )
var . setLimit ( var )	var . reset ( var )
for ( int var = var - 4 ; var >= var ; var -- )	for ( int var = var ; var < var - 3 ; var ++ )
int var = peakIntAtPosition ( var . data , var )	int var = peekIntAtPosition ( var . data , var )
boolean var = var . getLength ( ) != C . LENGTH_UNSET	long var = var . getLength ( )
var . packetStarted ( var , true )	var . packetStarted ( var , TsPayloadReader . FLAG_DATA_ALIGNMENT_INDICATOR )
var = new ParsableByteArray ( var )	var = new ParsableByteArray
if ( var . getPosition ( ) != 0 )	if ( var . getPosition ( ) != var )
var . position = 0	var . position = var
var . setPosition ( 0 )	int var = 0
var . setLimit ( var )	var . reset ( var )
long var = readPcrFromPacket ( var , var , var )	long var = TsUtil . readPcrFromPacket ( var , var , var )
int var = ( int ) Math . min ( var , var . getLength ( ) )	int var = ( int ) Math . min ( var , var )
long var = var . getLength ( ) - var	long var = var . getLength ( )
var . setLimit ( var )	var . reset ( var )
long var = readPcrFromPacket ( var , var , var )	long var = TsUtil . readPcrFromPacket ( var , var , var )
var . get ( var ) . reset	TimestampAdjuster var = var . get ( var )
boolean var = var . getLength ( ) != C . LENGTH_UNSET && var != var	long var = var . getLength ( )
var . skipBytes ( var )	var . skipBytes ( var - 1 )
if ( var != var && ! var && var = true )	if ( var != var && ! var && var && var != C . LENGTH_UNSET = true )
int var = findSyncBytePosition ( var . data , var , var )	int var = TsUtil . findSyncBytePosition ( var . data , var , var )
int var = var . sampleData ( var , var - var , true )	int var = var . sampleData ( var , var , true )
if ( var . id != Util . getIntegerCodeForString ( "" ) )	if ( var . id != WavUtil . RIFF_FOURCC )
if ( var != Util . getIntegerCodeForString ( "" ) )	if ( var != WavUtil . WAVE_FOURCC )
while ( var . id != Util . getIntegerCodeForString ( "" ) )	while ( var . id != WavUtil . FMT_FOURCC )
Log . e ( var , "" + var )	Log . e ( var , "" + var + "" + var )
if ( var . profile == var . first && var . level >= var . second )	if ( var . var == var && var . var >= var )
return var . getDecoderInfos ( var , var )	return var . getDecoderInfos ( var . sampleMimeType , var )
var = var . getWrappedMediaCrypto ( )	var = new MediaCrypto ( var . uuid , var . sessionId )
var = var . requiresSecureDecoderComponent ( var )	var = ! var . forceAllowInsecureDecoderComponents && var . requiresSecureDecoderComponent ( var )
var = var ( var , var )	var = var ( var )
var = var ( var , var )	var = MediaCodec . createByCodecName ( var )
var = null	this . var = var
if ( var != null )	if ( var != null = var )
var . releaseSession ( var )	var = var
if ( var != null && var != var )	if ( var != null || var != null  )
var = null	setSourceDrmSession ( null )
var = false	var = null
var = false	var = null
var = false	var = var
if ( var != null && var != var )	if ( var == var || var == var )
if ( var == var )	if ( var . isEndOfStream ( ) )
if ( var . isEndOfStream ( ) )	if ( var == var )
if ( var . drmInitData != null = null )	if ( var . drmInitData != null )
var = var . acquireSession ( Looper . myLooper ( ) , var . drmInitData )	DrmSession < FrameworkMediaCrypto > var = var . acquireSession ( Looper . myLooper ( ) , var . drmInitData )
if ( var == var )	if ( var != null && var != var && var != var )
var = null	setSourceDrmSession ( null )
var = true	var = var
if ( var == null || Util . SDK_INT < 23 )	if ( Util . SDK_INT < 23 )
float var = getCodecOperatingRate ( var , var , getStreamFormats )	float var = getCodecOperatingRateV23 ( var , var , getStreamFormats )
if ( this . var == var )	if ( Util . SDK_INT < 23 )
if ( var == null || var != var == var && var != var && ( var || var > var ) )	if ( var == var == var != var || var > var )
if ( var == var && var )	if ( var == var )
if ( var != var && ( var || var > var ) )	if ( var != var || var > var )
var = true	var = var
if ( var = var )	if ( var )
var = processOutputBuffer ( var , var , var , var , var , var . flags , var . presentationTimeUs , var )	var = processOutputBuffer ( var , var , var , var , var , var . flags , var . presentationTimeUs , var , var )
var = processOutputBuffer ( var , var , var , var , var , var . flags , var . presentationTimeUs , var )	var = processOutputBuffer ( var , var , var , var , var , var . flags , var . presentationTimeUs , var , var )
return ( Util . SDK_INT <= 23 && "" . equals ( var ) ) || ( Util . SDK_INT <= 19 && "" . equals ( Util . DEVICE ) && ( "" . equals ( var ) || "" . equals ( var ) ) )	return ( Util . SDK_INT <= 23 && "" . equals ( var ) ) || ( Util . SDK_INT <= 19 && ( "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) ) && ( "" . equals ( var ) || "" . equals ( var ) ) )
List < MediaCodecInfo > var = MediaCodecUtil . getDecoderInfos ( var . sampleMimeType , var )	List < MediaCodecInfo > var = MediaCodecUtil . getDecoderInfos ( var , var )
return MediaCodecUtil . getDecoderInfos ( var . sampleMimeType , var )	return MediaCodecUtil . getDecoderInfos ( var , var )
return MimeTypes . APPLICATION_ID3 . equals ( var ) || MimeTypes . APPLICATION_EMSG . equals ( var ) || MimeTypes . APPLICATION_SCTE35 . equals ( var )	return MimeTypes . APPLICATION_ID3 . equals ( var ) || MimeTypes . APPLICATION_EMSG . equals ( var ) || MimeTypes . APPLICATION_SCTE35 . equals ( var ) || MimeTypes . APPLICATION_ICY . equals ( var )
String var = var . readNullTerminatedString ( )	String var = Assertions . checkNotNull ( var . readNullTerminatedString ( ) )
String var = var . readNullTerminatedString ( )	String var = Assertions . checkNotNull ( var . readNullTerminatedString ( ) )
var [ var ] = DownloadAction . deserializeFromStream ( var , var )	var [ var ] = DownloadAction . deserializeFromStream ( var )
DownloadAction . serializeToStream ( var , var )	var . serializeToStream ( var )
public abstract DownloadAction	public final DownloadAction
var [ var ] ++ = ProgressiveDownloadAction . DESERIALIZER	this . var = Collections . emptyList ( )
var = Class . forName ( "" )	Collections . sort ( var )
var [ var ] ++ = getDeserializer ( var )	this . var = Collections . unmodifiableList ( var )
var = Class . forName ( "" )	var . writeInt ( var . size ( ) )
var . writeToStream ( var )	var . add ( readKey ( var , var , var ) , var , var )
serializeToStream ( this , var )	serializeToStream ( var )
return Collections . emptyList ( )	return new DownloadAction ( var , var , true , Collections . emptyList ( ) , var , null )
if ( var == null || getClass != var . getClass ( ) )	if ( ! ( var instanceof DownloadAction ) )
return var . equals ( var . var ) && var == var . var && var . equals ( var . var ) && var == var . var && Arrays . equals ( var , var . var )	return var . equals ( var . var ) && var . equals ( var . var ) && var . equals ( var . var ) && var == var . var && var . equals ( var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var )
public abstract DownloadHelper	public abstract DownloadHelper < T >
public DownloadManager ( DownloaderConstructorHelper var , File var , Deserializer ... var )	public DownloadManager ( Context var , File var , DownloaderFactory var )
this ( var , var , var , var , var )	this ( var , var , var , var , var , var )
public DownloadManager ( DownloaderConstructorHelper var , int var , int var , File var , Deserializer ... var )	public DownloadManager ( Context var , File var , DownloaderFactory var , int var , int var , Requirements var )
this . var = var	this . var = var . getApplicationContext ( )
Assertions . checkState ( ! var )	return var . getRequirements ( )
if ( ! var . get ( var ) . action . isRemoveAction ++ )	var . get ( var ) . updateStopFlags ( var , var )
if ( var . id == var )	if ( var . var . equals ( var ) )
TaskState var = new TaskState [ var ] . size ( )	DownloadState var = new DownloadState [ var ] . size ( )
var . get ( var ) . stop	if ( ! var . get ( var ) . isIdle )
var . open ( )	var . stop ( )
Task var = new Task ( var ++ , this , var , var )	Download var = new Download ( this , var , var , var , var )
var . add ( var )	if ( var . addAction ( var ) )
if ( ! var || var )	if ( var . equals ( var . getRequirements ( ) ) )
Task var = var . get ( var )	Download var = var . get ( var )
boolean var = true	boolean var = var . isIdle ( )
Task var = var . get ( var )	var . add ( var )
if ( var . var . isSameMedia ( var ) )	if ( var . addAction ( var ) )
if ( var . var . var )	if ( var . size ( ) < var )
logd ( var + "" + var )	logd ( "" , var )
if ( var . var . var )	if ( var . size ( ) < var )
var . start ( )	if ( var . start ( ) )
if ( ! var )	if ( var . start ( ) )
boolean var = ! var . isActive ( )	boolean var = var . isIdle ( )
TaskState var = var . getDownloadState ( )	DownloadState var = var . getDownloadState ( )
var . onTaskStateChanged ( this , var )	var . onDownloadStateChanged ( this , var )
var = var . load ( DownloadManager . this . var )	var = var . load ( )
var . clear ( )	if ( ! var . isEmpty ( ) )
var . addAll ( var )	addDownloadForAction ( var . remove ( ) )
Task var = var . get ( var )	var . addAll ( var . get ( var ) . var )
if ( var . currentState == STATE_QUEUED )	var . addAll ( var . get ( var ) . var )
final DownloadAction var = new DownloadAction [ var ] . size ( )	ArrayList < DownloadAction > var = new ArrayList ( var . size ( ) )
var [ var ] = var . get ( var ) . action	maybeStartDownload ( var . get ( var ) )
this . var = var	this . var = System . currentTimeMillis ( )
this . var = var	var = new ArrayDeque
this . var = var	var . add ( var )
this . var = var	this . var = var . var
this . var = STATE_QUEUED	Assertions . checkState ( var == STATE_QUEUED || var == STATE_STOPPED )
int var = getExternalState	DownloadAction var = var . peek ( )
return var == STATE_FAILED || var == STATE_COMPLETED || var == STATE_CANCELED	return var == STATE_FAILED || var == STATE_COMPLETED || var == STATE_REMOVED
return TaskState . getStateString ( var )	var . onDownloadStateChange ( this )
if ( var != var )	if ( var != STATE_QUEUED )
var = var	this . var = var
var . onTaskStateChange ( this )	var . onDownloadStateChange ( this )
logd ( "" , this )	logd ( "" , var )
if ( var . isRemoveAction )	if ( var )
while ( ! Thread . interrupted ( ) )	while ( ! var )
logd ( "" + var , this )	logd ( "" + var , var )
if ( var != STATE_STARTED || ++ var > var )	if ( ++ var > var )
logd ( "" + var , this )	logd ( "" + var , var )
var . addListener ( var )	var . addListener ( this )
var . handleAction ( var )	var . handleAction ( DownloadAction . fromByteArray ( var ) )
Requirements var = getRequirements	Requirements var = var . getRequirements ( )
var . removeListener ( var )	var . detachService ( this , var )
if ( var . getDownloadCount ( ) == 0 )	boolean var = var . getDownloadCount ( ) <= 0
RequirementsHelper var = var . get ( var )	DownloadManagerHelper var = var . get ( var )
var = new RequirementsHelper ( this , var , getScheduler , var )	var = new DownloadManagerHelper ( getApplicationContext , getDownloadManager , getScheduler , var )
RequirementsHelper var = var . remove ( getClass )	DownloadManagerHelper var = var . get ( getClass )
if ( var . state == TaskState . STATE_STARTED )	if ( var . state == DownloadState . STATE_DOWNLOADING || var . state == DownloadState . STATE_REMOVING || var . state == DownloadState . STATE_RESTARTING )
TaskState var = var . getAllTaskStates ( )	DownloadState var = var . getAllDownloadStates ( )
var . start ( )	Assertions . checkState ( this . var == null )
var . stop ( )	Assertions . checkState ( this . var == var )
if ( var != null )	if ( var )
Log . var ( var , "" )	Log . e ( var , "" )
public DownloaderConstructorHelper ( Cache var , Factory var )	public DownloaderConstructorHelper ( Cache var , DataSource . Factory var )
return new CacheDataSource ( var , var , var , var , CacheDataSource . FLAG_BLOCK_ON_CACHE , null )	var = new CacheDataSourceFactory ( var , DummyDataSource . FACTORY , var , null , CacheDataSource . FLAG_BLOCK_ON_CACHE , null , var )
return ProgressiveDownloadAction . createDownloadAction ( var , var , var )	super ( DownloadAction . TYPE_PROGRESSIVE , var , var , DownloadHelper . DEFAULT_TRACK_SELECTOR_PARAMETERS , var , var , var , var , var , var , null )
this . var = new DataSpec ( var , 0 , C . LENGTH_UNSET , var , 0 )	this . var = new DataSpec ( var , 0 , C . LENGTH_UNSET , var , DataSpec . FLAG_ALLOW_CACHE_FRAGMENTATION )
this . var = var . buildCacheDataSource ( false )	this . var = var . createCacheDataSource ( )
CacheUtil . remove ( var , CacheUtil . getKey ( var ) )	CacheUtil . remove ( var , var , var )
this . var = var	this . var = getCompressibleDataSpec ( var )
this . var = var . buildCacheDataSource ( false )	this . var = var . createCacheDataSource ( )
this . var = var . buildCacheDataSource ( true )	this . var = var . createOfflineCacheDataSource ( )
CacheUtil . var ( var . get ( var ) . dataSpec , var , var , var , var , C . PRIORITY_DOWNLOAD , var , var , true )	CacheUtil . var ( var . get ( var ) . dataSpec , var , var , var , var , var , C . PRIORITY_DOWNLOAD , var , var , true )
removeUri ( var . get ( var ) . dataSpec . uri )	removeDataSpec ( var . get ( var ) . dataSpec )
removeUri ( var )	this . var = getCompressibleDataSpec ( var )
CacheUtil . getCached ( var . dataSpec , var , var )	CacheUtil . getCached ( var . var , var , var , var )
var . putInt ( var , var . getRequirementsData ( ) )	var . putInt ( var , var . getRequirements ( ) )
var = var . checkRequirements ( var )	var = var . getNotMetRequirements ( var )
var . registerReceiver ( var , var , null , new Handler )	var . registerReceiver ( var , var , null , var )
if ( var == var )	if ( this . var == var )
var = var	this . var = var
var . requirementsNotMet ( this )	var . requirementsNotMet ( this , var )
var . uid = Pair . create ( getChildUidByChildIndex ( var ) , var . uid )	var . uid = getConcatenatedUid ( getChildUidByChildIndex ( var ) , var . uid )
return Pair . create ( getChildUidByChildIndex ( var ) , var )	return getConcatenatedUid ( getChildUidByChildIndex ( var ) , var )
prepareSourceInternal ( var , var , var )	prepareSourceInternal ( var )
super . prepareSourceInternal ( var , var , var )	super . prepareSourceInternal ( var )
Window var = var . getWindow ( 0 , new Window , false )	Window var = var . getWindow ( 0 , new Window )
var . prepareSource ( Assertions . checkNotNull ( var ) , false , var , var )	var . prepareSource ( var , var )
this . var = new ArrayList	this . var = new HashMap
this . var = new MediaSourceHolder ( null )	var = new Timeline . Period ( )
addMediaSource ( var . size ( ) , var , var )	addMediaSource ( var . size ( ) , var , var , var )
addMediaSource ( var , var , null )	addPublicMediaSources ( var , Collections . singletonList ( var ) , null , null )
Assertions . checkNotNull ( var )	addPublicMediaSources ( var , Collections . singletonList ( var ) , null , null )
addMediaSources ( var . size ( ) , var , null )	addPublicMediaSources ( var . size ( ) , var , var , var )
addMediaSources ( var . size ( ) , var , var )	addPublicMediaSources ( var . size ( ) , var , null , null )
if ( var != null )	if ( var != null && var != null )
var . run ( )	var . post ( var )
removeMediaSource ( var , null )	scheduleListenerNotification ( null , null )
var . remove ( var )	Util . removeRange ( var , var , var )
if ( var != null != null )	if ( var != null != null && var != null )
if ( var != null )	if ( var != null && var != null )
var . run ( )	var . post ( var )
if ( var == var )	Assertions . checkArgument ( ( var == null ) == ( var == null ) )
if ( var != null != null )	if ( var != null != null && var != null )
if ( var != null )	if ( var != null && var != null )
var . createMessage ( this ) . setType ( var ) . setPayload ( var ) . send	var = var . cloneAndClear ( ) . cloneAndInsert ( 0 , var )
super . prepareSourceInternal ( var , var , var )	super . prepareSourceInternal ( var )
var = new Handler ( var . getApplicationLooper ( ) )	var = new Handler ( this :: handleMessage )
scheduleListenerNotification ( null )	var . removeCallbacksAndMessages ( null )
int var = findMediaSourceHolderByPeriodIndex ( var . periodIndex )	Object var = getMediaSourceHolderUid ( var . periodUid )
DeferredMediaPeriod var = new DeferredMediaPeriod ( var . mediaSource , var , var )	DeferredMediaPeriod var = new DeferredMediaPeriod ( var . mediaSource , var , var , var )
MediaPeriodId var = var . copyWithPeriodIndex ( var . periodIndex - var . firstPeriodIndexInChild )	MediaPeriodId var = var . copyWithPeriodUid ( getChildPeriodUid ( var , var . periodUid ) , var . periodUid )
var = null	if ( var != null )
var = var . cloneAndInsert ( var . index , 1 )	var = var . cloneAndInsert ( var . index , var . customData . size ( ) )
addMediaSourceInternal ( var . index , var . customData )	addMediaSourcesInternal ( var . index , var . customData )
scheduleListenerNotification ( var . actionOnCompletion )	scheduleListenerNotification ( var . handler , var . actionOnCompletion )
MessageData < Collection < MediaSourceHolder > > var = ( MessageData < Collection < MediaSourceHolder > > ) var	MessageData < Collection < MediaSourceHolder > > var = ( MessageData < Collection < MediaSourceHolder > > ) Util . castNonNull ( var . obj )
MessageData < Void > var = ( MessageData < Void > ) var	MessageData < Integer > var = ( MessageData < Integer > ) Util . castNonNull ( var . obj )
scheduleListenerNotification ( var . actionOnCompletion )	scheduleListenerNotification ( var . handler , var . actionOnCompletion )
var = var . cloneAndRemove ( var . index )	var = var . cloneAndRemove ( var . var , var . var + 1 )
scheduleListenerNotification ( var . actionOnCompletion )	scheduleListenerNotification ( var . handler , var . actionOnCompletion )
scheduleListenerNotification ( ( Runnable ) var )	scheduleListenerNotification ( var . handler , var . actionOnCompletion )
var . post ( var . get ( var ) )	var . dispatch ( Runnable :: run )
if ( var != null )	if ( var != null && var != null )
var . add ( var )	var . post ( var )
if ( ! var . isEmpty ( ) )	if ( var . isRemoved && var . hasStartedPreparing && var . activeMediaPeriods . isEmpty ( ) )
var . var = var . cloneWithNewTimeline ( var )	var . var = var . cloneWithUpdatedTimeline ( var )
long var = var . getPositionInFirstPeriodUs ( ) + var . getDefaultPositionUs ( )	long var = var . getDefaultPositionUs ( )
var . setDefaultPreparePositionUs ( var )	var . overridePreparePositionUs ( var )
MediaPeriodId var = var . id . copyWithPeriodIndex ( var . id . periodIndex - var . firstPeriodIndexInChild )	MediaPeriodId var = var . id . copyWithPeriodUid ( getChildPeriodUid ( var , var . id . var ) , var . id . var )
scheduleListenerNotification ( null )	scheduleListenerNotification
if ( var . activeMediaPeriods . isEmpty ( ) )	var . remove ( var . uid )
int var = Collections . binarySearch ( var , var )	Object var = ConcatenatedTimeline . getChildPeriodUidFromConcatenatedUid ( var )
this . var = new DeferredTimeline	this . var = DeferredTimeline . createWithDummyTimeline ( var . getTag ( ) )
return var . set ( null , C . TIME_UNSET , C . TIME_UNSET , false , true , 0 , C . TIME_UNSET , 0 , 0 , 0 )	return var . set ( var , C . TIME_UNSET , C . TIME_UNSET , false , true , 0 , C . TIME_UNSET , 0 , 0 , 0 )
public DeferredMediaPeriod ( MediaSource var , MediaPeriodId var , Allocator var )	public DeferredMediaPeriod ( MediaSource var , MediaPeriodId var , Allocator var , long var )
if ( var != C . TIME_UNSET && var == 0 )	if ( var != C . TIME_UNSET && var == var )
var . onContinueLoadingRequested ( ExtractorMediaPeriod . this )	Assertions . checkNotNull ( var ) . onContinueLoadingRequested ( ExtractorMediaPeriod . this )
var = new int [ 0 ]	var = new TrackId [ 0 ]
long var	long var = C . TIME_UNSET
if ( var [ var ] )	if ( var [ var ] && ! var [ var ] . isLastSampleQueued )
if ( ! isPendingReset && seekInsideBufferUs ( var ) )	if ( var != C . DATA_TYPE_MEDIA_PROGRESSIVE_LIVE && seekInsideBufferUs ( var , var ) )
var . maybeThrowError ( var )	var . maybeThrowError ( var . getMinimumLoadableRetryCount ( var ) )
if ( var > 0 )	if ( var == 0 )
var [ var ] = true	if ( ! var [ var ] )
var . onContinueLoadingRequested ( this )	Assertions . checkNotNull ( var ) . onPrepared ( this )
var . loadCompleted ( var . dataSpec , var . var . getLastOpenedUri ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var , var , var . var . getBytesRead ( ) )	var . loadCanceled ( var . dataSpec , var . var . getLastOpenedUri ( ) , var . var . getLastResponseHeaders ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var , var , var . var . getBytesRead ( ) )
var . onContinueLoadingRequested ( this )	Assertions . checkNotNull ( var ) . onContinueLoadingRequested ( this )
var . loadCanceled ( var . dataSpec , var . var . getLastOpenedUri ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var , var , var . var . getBytesRead ( ) )	var . loadCompleted ( var . dataSpec , var . var . getLastOpenedUri ( ) , var . var . getLastResponseHeaders ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var , var , var . var . getBytesRead ( ) )
var . onContinueLoadingRequested ( this )	Assertions . checkNotNull ( var ) . onContinueLoadingRequested ( this )
if ( isLoadableExceptionFatal ( var ) )	if ( var == C . TIME_UNSET )
var . loadError ( var . dataSpec , var . var . getLastOpenedUri ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var , var , var . var . getBytesRead ( ) , var , var )	var . loadError ( var . dataSpec , var . var . getLastOpenedUri ( ) , var . var . getLastResponseHeaders ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var , var , var . var . getBytesRead ( ) , var , ! var . isRetry ( ) )
if ( var || var || var == null || ! var )	if ( var || var || ! var || var == null )
var = new boolean [ var ]	boolean var = new boolean [ var ]
var = new boolean [ var ]	boolean var = new boolean [ var ]
boolean var = MimeTypes . isVideo ( var ) || MimeTypes . isAudio ( var )	boolean var = MimeTypes . var ( var )
var = new TrackGroupArray ( var )	var = new PreparedState ( var , new TrackGroupArray ( var ) , var )
var = ExtractorMediaSource . DEFAULT_MIN_LOADABLE_RETRY_COUNT_LIVE	Assertions . checkNotNull ( var ) . onPrepared ( this )
var . onPrepared ( this )	Assertions . checkNotNull ( var ) . onContinueLoadingRequested ( this )
ExtractingLoadable var = new ExtractingLoadable ( var , var , var , var )	ExtractingLoadable var = new ExtractingLoadable ( var , var , var , this , var )
long var = var . startLoading ( var , this , var )	long var = var . startLoading ( var , this , var . getMinimumLoadableRetryCount ( var ) )
var . loadStarted ( var . dataSpec , var . dataSpec . var , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var )	var . loadStarted ( var . dataSpec , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , var . seekTimeUs , var , var )
this . var = Assertions . checkNotNull ( var )	return Assertions . checkNotNull ( var )
this . var = Assertions . checkNotNull ( var )	Assertions . checkNotNull ( var ) . onPrepared ( this )
var = new DataSpec ( var , var , C . LENGTH_UNSET , var )	return new DataSpec ( var , var , C . LENGTH_UNSET , var , DataSpec . FLAG_ALLOW_ICY_METADATA | DataSpec . FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN | DataSpec . FLAG_ALLOW_CACHE_FRAGMENTATION )
Extractor var = var . selectExtractor ( var , var . getUri ( ) )	Uri var = Assertions . checkNotNull ( var . getUri ( ) )
var = MIN_RETRY_COUNT_DEFAULT_FOR_MEDIA	var = new DefaultLoadErrorHandlingPolicy
this ( var , var , var , var , var , var , var , var )	this ( var , var , var , var , var , var , var )
this ( var , var , var , var , var , var , null )	this ( var , var , var , new DefaultLoadErrorHandlingPolicy , var , var , null )
notifySourceInfoRefreshed ( var , false )	notifySourceInfoRefreshed ( var , var )
super . prepareSourceInternal ( var , var , var )	super . prepareSourceInternal ( var )
public MediaPeriodId ( int var )	public MediaPeriodId ( Object var )
public MediaPeriodId ( int var , long var )	public MediaPeriodId ( Object var , long var )
this ( var , C . INDEX_UNSET , C . INDEX_UNSET , var , C . TIME_END_OF_SOURCE )	this ( var , C . INDEX_UNSET , C . INDEX_UNSET , var , C . TIME_UNSET )
public MediaPeriodId ( int var , long var , long var )	public MediaPeriodId ( Object var , long var , long var )
public MediaPeriodId ( int var , int var , int var , long var )	public MediaPeriodId ( Object var , int var , int var , long var )
this ( var , var , var , var , C . TIME_END_OF_SOURCE )	this ( var , var , var , var , C . TIME_UNSET )
private MediaPeriodId ( int var , int var , int var , long var , long var )	private MediaPeriodId ( Object var , int var , int var , long var , long var )
return var == var . var && var == var . var && var == var . var && var == var . var && var == var . var	return var . equals ( var . var ) && var == var . var && var == var . var && var == var . var && var == var . var
var = 31 * var + var	var = 31 * var + var . hashCode ( )
public LoadEventInfo ( DataSpec var , Uri var , long var , long var , long var )	public LoadEventInfo ( DataSpec var , Uri var , Map < String , List < String > > , List < String > var , long var , long var , long var )
loadStarted ( var , var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var )	loadStarted ( var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var )
loadStarted ( new LoadEventInfo ( var , var , var , 0 , 0 ) , var , var , 0 , 0 , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) )	loadStarted ( new LoadEventInfo ( var , var . uri , Collections . emptyMap ( ) , var , 0 , 0 ) , var . uri , Collections . emptyMap ( ) , var , 0 , 0 , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) )
loadCompleted ( var , var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var , var , var )	loadCompleted ( var , var , var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var , var , var )
loadCompleted ( new LoadEventInfo ( var , var , var , var , var ) , var , var , var , var , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) )	loadCompleted ( new LoadEventInfo ( var , var , var , var , var , var ) , var , var , var , var , var , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) )
loadCanceled ( var , var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var , var , var )	loadCanceled ( var , var , var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var , var , var )
loadCanceled ( new LoadEventInfo ( var , var , var , var , var ) , var , var , var , var , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) )	loadCanceled ( new LoadEventInfo ( var , var , var , var , var , var ) , var , var , var , var , var , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) )
loadError ( var , var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var , var , var , var , var )	loadError ( var , var , var , var , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , C . TIME_UNSET , C . TIME_UNSET , var , var , var , var , var )
loadError ( new LoadEventInfo ( var , var , var , var , var ) , var , var , var , var , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) , var , var )	loadError ( new LoadEventInfo ( var , var , var , var , var , var ) , var , var , var , var , var , new MediaLoadData ( var , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) ) , var , var , var , var , adjustMediaTime ( var ) , adjustMediaTime ( var ) , var , var )
super . prepareSourceInternal ( var , var , var )	super . prepareSourceInternal ( var )
var [ var ] = var [ var ] . createPeriod ( var , var )	var [ var ] = var [ var ] . createPeriod ( var , var , var )
var = null	Arrays . fill ( var , null )
int var = new int [ var ] . length - 1	int var = new int [ var ] . length - var
if ( var [ var ] == var = true )	if ( var [ var ] >= var && var [ var ] < var ++ )
return new UnshuffledShuffleOrder ( var - 1 )	return new UnshuffledShuffleOrder ( var - var + var )
long var = var . startLoading ( new SourceLoadable ( var , var ) , var , this , var )	long var = var . startLoading ( new SourceLoadable ( var , var ) , var , this , var . getMinimumLoadableRetryCount ( C . DATA_TYPE_MEDIA ) . DATA_TYPE_MEDIA )
var . loadStarted ( var , var . uri , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , var , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var )	var . loadStarted ( var , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , var , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var )
var . loadCompleted ( var . var , var . dataSource . getLastOpenedUri ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , var , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var , var , var )	var . loadCompleted ( var . var , var . dataSource . getLastOpenedUri ( ) , var . dataSource . getLastResponseHeaders ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , var , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var , var , var )
var . loadCanceled ( var . var , var . dataSource . getLastOpenedUri ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var , var , var . dataSource . getBytesRead ( ) )	var . loadCanceled ( var . var , var . dataSource . getLastOpenedUri ( ) , var . dataSource . getLastResponseHeaders ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , null , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var , var , var . dataSource . getBytesRead ( ) )
boolean var = var && var >= var	boolean var = var == C . TIME_UNSET || var >= var . getMinimumLoadableRetryCount ( C . DATA_TYPE_MEDIA )
var . loadError ( var . var , var . dataSource . getLastOpenedUri ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , var , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var , var , var . dataSource . getBytesRead ( ) , var , var )	var . loadError ( var . var , var . dataSource . getLastOpenedUri ( ) , var . dataSource . getLastResponseHeaders ( ) , C . DATA_TYPE_MEDIA , C . TRACK_TYPE_UNKNOWN , var , C . SELECTION_REASON_UNKNOWN , null , 0 , var , var , var , var . dataSource . getBytesRead ( ) , var , ! var . isRetry ( ) )
return Loader . DONT_RETRY	var = Loader . DONT_RETRY
this . var = DEFAULT_MIN_LOADABLE_RETRY_COUNT	var = new DefaultLoadErrorHandlingPolicy
this ( var , var , var , var , var )	this ( var , var , var , var , DefaultLoadErrorHandlingPolicy . DEFAULT_MIN_LOADABLE_RETRY_COUNT )
this ( var , var , var , var , var , false , null )	this ( var , var , var , var , new DefaultLoadErrorHandlingPolicy ( var ) , false , null )
this ( var , var , var , var , var , var , null )	this ( var , var , var , var , new DefaultLoadErrorHandlingPolicy ( var ) , var , null )
var = new DataSpec ( var )	var = new DataSpec ( var , DataSpec . FLAG_ALLOW_GZIP )
while ( var >= 0 && ( var [ var ] == C . TIME_END_OF_SOURCE || var [ var ] > var ) -- )	while ( var >= 0 && isPositionBeforeAdGroup ( var , var ) -- )
var = new long [ 0 ]	var = new Timeline [ 0 ]
super . prepareSourceInternal ( var , var , var )	super . prepareSourceInternal ( var )
final ComponentListener var = new ComponentListener	ComponentListener var = new ComponentListener
var . attachPlayer ( var , var , var )	var . post ( )
DeferredMediaPeriod var = new DeferredMediaPeriod ( var , var , var )	DeferredMediaPeriod var = new DeferredMediaPeriod ( var , var , var , var )
MediaPeriodId var = new MediaPeriodId ( 0 , var . windowSequenceNumber )	MediaPeriodId var = new MediaPeriodId ( var , var . windowSequenceNumber )
DeferredMediaPeriod var = new DeferredMediaPeriod ( var , var , var )	DeferredMediaPeriod var = new DeferredMediaPeriod ( var , var , var , var )
var = new long [ 0 ]	var = new Timeline [ 0 ]
var = new long [ var ] . adGroupCount	var = new Timeline [ var ] . adGroupCount
MediaPeriodId var = new MediaPeriodId ( 0 , var . id . windowSequenceNumber )	MediaPeriodId var = new MediaPeriodId ( var , var . id . windowSequenceNumber )
var = var . withAdDurationsUs ( var )	var = var . withAdDurationsUs ( getAdDurations ( var , var ) , var )
createEventDispatcher ( null ) . loadError ( var , var . var , C . DATA_TYPE_AD , C . TRACK_TYPE_UNKNOWN , 0 , 0 , var , true )	createEventDispatcher ( null ) . loadError ( var , var . var , Collections . emptyMap ( ) , C . DATA_TYPE_AD , C . TRACK_TYPE_UNKNOWN , 0 , 0 , var , true )
createEventDispatcher ( var ) . loadError ( new DataSpec ( var ) , var , C . DATA_TYPE_AD , C . TRACK_TYPE_UNKNOWN , 0 , 0 , AdLoadException . createForAd ( var ) , true )	createEventDispatcher ( var ) . loadError ( new DataSpec ( var ) , var , Collections . emptyMap ( ) , C . DATA_TYPE_AD , C . TRACK_TYPE_UNKNOWN , 0 , 0 , AdLoadException . createForAd ( var ) , true )
public BaseMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var , long var )	public BaseMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var , long var , long var )
var . valueAt ( var ) . bind ( var )	var . valueAt ( var ) . bind ( var , var )
var . bind ( var )	var . bind ( var , var )
public ChunkSampleStream ( int var , int var , Format var , T var , Callback < ChunkSampleStream < T > > < T > var , Allocator var , long var , int var , EventDispatcher var )	public ChunkSampleStream ( int var , int var , Format var , T var , Callback < ChunkSampleStream < T > > < T > var , Allocator var , long var , LoadErrorHandlingPolicy var , EventDispatcher var )
if ( isPendingReset = false )	if ( isPendingReset )
if ( var == var && var . seekTimeUs == C . TIME_UNSET > var )	if ( var == var && var . clippedStartTimeUs == C . TIME_UNSET > var )
var = Long . MIN_VALUE	var = 0
maybeNotifyPrimaryTrackFormatChanged ( var . getReadIndex ( ) , 1 )	var = primarySampleIndexToMediaChunkIndex ( var . getReadIndex ( ) , 0 )
maybeNotifyPrimaryTrackFormatChanged ( var . getReadIndex ( ) , var )	maybeNotifyPrimaryTrackFormatChanged
var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )
var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )	var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )
if ( var . onChunkLoadError ( var , var , var ) )	if ( var . onChunkLoadError ( var , var , var , var ) )
var = true	var = Loader . DONT_RETRY
var . loadError ( var . dataSpec , var . getUri ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var , var , var )	var . loadError ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var , var , var )
return Loader . DONT_RETRY	var = Loader . DONT_RETRY
long var = var . startLoading ( var , this , var )	long var = var . startLoading ( var , this , var . getMinimumLoadableRetryCount ( var . type ) . type )
var . loadStarted ( var . dataSpec , var . dataSpec . uri , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var )	var . loadStarted ( var . dataSpec , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var )
int var = primaryStreamIndexToMediaChunkIndex ( var , 0 )	int var = primarySampleIndexToMediaChunkIndex ( var , 0 )
maybeNotifyPrimaryTrackFormatChanged ( var )	maybeNotifyPrimaryTrackFormatChanged ( var ++ )
public ContainerMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var , long var , int var , long var , ChunkExtractorWrapper var )	public ContainerMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var , long var , long var , int var , long var , ChunkExtractorWrapper var )
super ( var , var , var , var , var , var , var , var , var )	super ( var , var , var , var , var , var , var , var , var , var )
var . init ( null , C . TIME_UNSET )	var . init ( null , C . TIME_UNSET , C . TIME_UNSET )
super ( var , var , var , var , var , var , var , C . TIME_UNSET , var )	super ( var , var , var , var , var , var , var , C . TIME_UNSET , C . TIME_UNSET , var )
var . updateEventStream ( var , var . dynamic )	var . updateEventStream ( var , var . dynamic && var == var )
String var = var . value . split ( "" )	String var = Util . split ( var . value , "" )
var [ 1 ] + var = var	var [ var ] = var
var = DEFAULT_MIN_LOADABLE_RETRY_COUNT	var = new DefaultLoadErrorHandlingPolicy
this ( var , var , var , var , var )	this ( var , var , DefaultLoadErrorHandlingPolicy . DEFAULT_MIN_LOADABLE_RETRY_COUNT , var , var )
this ( var , null , null , null , var , new DefaultCompositeSequenceableLoaderFactory , var , var , false , null )	this ( var , null , null , null , var , new DefaultCompositeSequenceableLoaderFactory , new DefaultLoadErrorHandlingPolicy ( var ) , var , false , null )
this ( var , var , var , var , var , var , var )	this ( var , var , var , DefaultLoadErrorHandlingPolicy . DEFAULT_MIN_LOADABLE_RETRY_COUNT , var , var , var )
int var = var . var	int var = ( Integer ) var . periodUid - var
var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . type , var , var , var . bytesLoaded ( ) )	var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var , var . bytesLoaded ( ) )
if ( var || ( var != C . TIME_UNSET && var . publishTimeMs * 1000 <= var ) )	if ( var != C . TIME_UNSET && var . publishTimeMs * 1000 <= var )
Log . w ( var , "" + var . publishTimeMs + "" + var + "" + var )	Log . w ( var , "" + var . publishTimeMs + "" + var )
if ( var ++ < var )	if ( var ++ < var . getMinimumLoadableRetryCount ( var . type ) )
if ( var . utcTiming != null )	if ( var . dynamic && var . utcTiming != null )
var . loadError ( var . dataSpec , var . getUri ( ) , var . type , var , var , var . bytesLoaded ( ) , var , var )	var . loadError ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var , var . bytesLoaded ( ) , var , var )
void onUtcTimestampLoadCompleted ( ParsingLoadable < Long > var , long var , long var )	void onLoadCanceled ( ParsingLoadable < ? > var , long var , long var )
var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . type , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var , var . bytesLoaded ( ) )
startLoading ( new ParsingLoadable ( var , var , C . DATA_TYPE_MANIFEST , var ) , var , C . DATA_TYPE_MANIFEST , var , var , var )	startLoading ( new ParsingLoadable ( var , var , C . DATA_TYPE_MANIFEST , var ) , var , C . DATA_TYPE_MANIFEST , var , var , var . getMinimumLoadableRetryCount ( C . DATA_TYPE_MANIFEST ) . DATA_TYPE_MANIFEST )
var . loadStarted ( var . dataSpec , var . dataSpec . uri , var . type , var )	var . loadStarted ( var . dataSpec , var . type , var )
return var . set ( var , var , var , true , var . dynamic , var , var , 0 , getPeriodCount - 1 , var )	return var . set ( var , var , var , true , var , var , var , 0 , getPeriodCount - 1 , var )
var . updateSelectedTrack ( var , var , var )	var . updateSelectedTrack ( var , var , var , var , var )
if ( var == 0 )	if ( var . segmentIndex == null )
long var = var . getFirstSegmentNum ( )	long var = var . getFirstAvailableSegmentNum ( var , var , var )
long var = getNowUnixTimeUs - C . msToUs ( var . availabilityStartTimeMs )	long var = var - C . msToUs ( var . availabilityStartTimeMs )
if ( var . timeShiftBufferDepthMs != C . TIME_UNSET )	if ( getSegmentCount == DashSegmentIndex . INDEX_UNBOUNDED && var . timeShiftBufferDepthMs != C . TIME_UNSET )
var = var . getSegmentNum ( var ) - 1	return getSegmentNum ( var ) - 1
var = var + var - 1	while ( var > 1 && var . getSegmentStartTimeUs ( var + var - 1 ) >= var -- )
var . endOfStream = ! var . dynamic || ( var < var . getPeriodCount ( ) - 1 )	var . endOfStream = var
return ChunkedTrackBlacklistUtil . maybeBlacklistTrack ( var , var . indexOf ( var . trackFormat ) . trackFormat , var )	return var != C . TIME_UNSET && var . blacklist ( var . indexOf ( var . trackFormat ) . trackFormat , var )
return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , var , var , var , var . extractorWrapper )	return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , var , var , var , var , var . extractorWrapper )
EventSampleStream ( EventStream var , Format var , boolean var )	public EventSampleStream ( EventStream var , Format var , boolean var )
return parseXsDateTime ( new String ( var . messageData ) . messageData )	return parseXsDateTime ( Util . fromUtf8Bytes ( var . messageData ) . messageData )
return new DashManifest ( var , var , var , var , var , var , var , var , var , var , var )	return new DashManifest ( var , var , var , var , var , var , var , var , var , var , var , var )
this ( null )	String var = parseString ( var , "" , null )
public DashManifestParser ( String var )	public DashManifestParser
return buildMediaPresentationDescription ( var , var , var , var , var , var , var , var , var , var , var )	return buildMediaPresentationDescription ( var , var , var , var , var , var , var , var , var , var , var , var )
return new DashManifest ( var , var , var , var , var , var , var , var , var , var , var )	return new DashManifest ( var , var , var , var , var , var , var , var , var , var , var , var )
var . add ( buildRepresentation ( var . get ( var ) , var , var , var , var ) . get ( var ) , var , var , var , var )	var . add ( buildRepresentation ( var . get ( var ) , var , var , var ) . get ( var ) , var , var , var )
String var = var . getAttributeValue ( null , "" )	String var = XmlPullParserUtil . getAttributeValueIgnorePrefix ( var , "" )
if ( C . PLAYREADY_UUID . equals ( var ) && XmlPullParserUtil . isStartTag ( var , "" ) && var . next ( ) == XmlPullParser . TEXT )	if ( var == null && C . PLAYREADY_UUID . equals ( var ) && XmlPullParserUtil . isStartTag ( var , "" ) && var . next ( ) == XmlPullParser . TEXT )
return Representation . newInstance ( var , var . revisionId , var , var . baseUrl , var . segmentBase , var )	return Representation . newInstance ( var . revisionId , var , var . baseUrl , var . segmentBase , var )
var . setOutput ( var , null )	var . setOutput ( var , C . UTF8_NAME )
if ( "" . equals ( var ) . equals ( var ) )	if ( var . startsWith ( "" ) . startsWith ( "" ) )
if ( "" . equals ( var ) )	if ( var . startsWith ( "" ) )
return newInstance ( var , var , var , var , var , null )	return newInstance ( var , var , var , var , null )
return newInstance ( var , var , var , var , var , var , null )	return newInstance ( var , var , var , var , var , null )
return new SingleSegmentRepresentation ( var , var , var , var , ( SingleSegmentBase ) var , var , var , C . LENGTH_UNSET )	return new SingleSegmentRepresentation ( var , var , var , ( SingleSegmentBase ) var , var , var , C . LENGTH_UNSET )
return new MultiSegmentRepresentation ( var , var , var , var , ( MultiSegmentBase ) var , var )	return new MultiSegmentRepresentation ( var , var , var , ( MultiSegmentBase ) var , var )
private Representation ( String var , long var , Format var , String var , SegmentBase var , List < Descriptor > var )	private Representation ( long var , Format var , String var , SegmentBase var , List < Descriptor > var )
return new SingleSegmentRepresentation ( var , var , var , var , var , var , var , var )	return new SingleSegmentRepresentation ( var , var , var , var , var , var , var )
public SingleSegmentRepresentation ( String var , long var , Format var , String var , SingleSegmentBase var , List < Descriptor > var , String var , long var )	public SingleSegmentRepresentation ( long var , Format var , String var , SingleSegmentBase var , List < Descriptor > var , String var , long var )
super ( var , var , var , var , var , var )	super ( var , var , var , var , var )
public MultiSegmentRepresentation ( String var , long var , Format var , String var , MultiSegmentBase var , List < Descriptor > var )	public MultiSegmentRepresentation ( long var , Format var , String var , MultiSegmentBase var , List < Descriptor > var )
super ( var , var , var , var , var , var )	super ( var , var , var , var , var )
public DashDownloadHelper ( Uri var , DataSource . Factory var )	public DashDownloadHelper ( Uri var , DataSource . Factory var , RenderersFactory var )
var = ParsingLoadable . load ( var , new DashManifestParser , var , C . DATA_TYPE_MANIFEST )	return ParsingLoadable . load ( var , new DashManifestParser , var , C . DATA_TYPE_MANIFEST )
Assertions . checkNotNull ( var )	this ( var , var , DownloadHelper . DEFAULT_TRACK_SELECTOR_PARAMETERS , var , null )
Assertions . checkNotNull ( var )	this ( var , var , DownloadHelper . DEFAULT_TRACK_SELECTOR_PARAMETERS , var , null )
return var . getPeriodCount ( )	int var = var . getPeriodCount ( )
return new TrackGroupArray ( var )	var [ var ] = new TrackGroupArray ( var )
List < StreamKey > var = new ArrayList ( var . size ( ) )	super ( DownloadAction . TYPE_DASH , var , null , var , var , var )
TrackKey var = var . get ( var )	super ( DownloadAction . TYPE_DASH , var , null , var , var , var )
return DashUtil . loadManifest ( var , var )	return ParsingLoadable . load ( var , new DashManifestParser , var , C . DATA_TYPE_MANIFEST )
var = Cipher . getInstance ( "" )	return Cipher . getInstance ( "" )
var = new WebvttExtractor ( var . language , var )	return buildResult ( new WebvttExtractor ( var . language , var ) . language , var )
var = new AdtsExtractor	return buildResult ( new AdtsExtractor )
var = new Ac3Extractor	return buildResult ( new Ac3Extractor )
var = new Mp3Extractor ( 0 , 0 )	Mp3Extractor var = new Mp3Extractor ( 0 , 0 )
if ( var . endsWith ( var ) || var . startsWith ( var , var . length ( ) - 4 ) || var . startsWith ( var , var . length ( ) - 5 ) )	if ( var . endsWith ( var ) || var . startsWith ( var , var . length ( ) - 4 ) || var . startsWith ( var , var . length ( ) - 5 ) || var . startsWith ( var , var . length ( ) - 5 ) )
var = new TsExtractor ( TsExtractor . MODE_HLS , var , new DefaultTsPayloadReaderFactory ( var , var ) , var )	return new TsExtractor ( TsExtractor . MODE_HLS , var , new DefaultTsPayloadReaderFactory ( var , var ) , var )
var . updateSelectedTrack ( var , var , var )	var . updateSelectedTrack ( var , var , var , var , var )
HlsMediaPlaylist var = var . getPlaylistSnapshot ( var )	HlsMediaPlaylist var = var . getPlaylistSnapshot ( var , true )
if ( ! var . hasEndTag && var >= var )	if ( var == null || var )
var = var . mediaSequence + var . segments . size ( )	return var . mediaSequence + var . segments . size ( )
var = Util . binarySearchFloor ( var . segments , var , true , ! var . isLive ( ) || var == null ) + var . mediaSequence	return Util . binarySearchFloor ( var . segments , var , true , ! var . isLive ( ) || var == null ) + var . mediaSequence
if ( var < var . mediaSequence && var != null )	if ( var != null && var )
var = var . getPlaylistSnapshot ( var )	var = var . getPlaylistSnapshot ( var , true )
return ! var || var . blacklist ( var , ChunkedTrackBlacklistUtil . DEFAULT_TRACK_BLACKLIST_MS )	return var == C . TIME_UNSET || var . blacklist ( var , var )
if ( var != null = false )	if ( var != null )
var = var . var != var	var = var . var != var || ! var . var
if ( var && ! var )	if ( var )
Pair < Extractor , Boolean > var = var . createExtractor ( var , var . uri , trackFormat , var , var , var , var . getResponseHeaders ( ) )	Pair < Extractor , Boolean > var = var . createExtractor ( var , var . uri , trackFormat , var , var , var , var . getResponseHeaders ( ) , var )
var = var . second	boolean var = var . second
return new DefaultExtractorInput ( var , var . absoluteStreamPosition , var )	DefaultExtractorInput var = new DefaultExtractorInput ( var , var . absoluteStreamPosition , var )
if ( ! var . peekFully ( var . data , 0 , Id3Decoder . ID3_HEADER_LENGTH , true ) )	var . peekFully ( var . data , 0 , Id3Decoder . ID3_HEADER_LENGTH )
if ( ! var . peekFully ( var . data , Id3Decoder . ID3_HEADER_LENGTH , var , true ) )	var . peekFully ( var . data , Id3Decoder . ID3_HEADER_LENGTH , var )
return new HlsSampleStreamWrapper ( var , this , var , var , var , var , var , var , var )	return new HlsSampleStreamWrapper ( var , this , var , var , var , var , var , var )
var = LoadErrorHandlingPolicy . getDefault ( )	var = DefaultHlsPlaylistTracker . FACTORY
var = DEFAULT_MIN_LOADABLE_RETRY_COUNT	var = new DefaultLoadErrorHandlingPolicy
Assertions . checkState ( var == null , "" )	Assertions . checkState ( ! var )
if ( var == null )	if ( var != null )
return new HlsMediaSource ( var , var , var , var , var , var , var , var , var )	return new HlsMediaSource ( var , var , var , var , var , var . createTracker ( var , var , var ) , var , var , var , var )
this ( var , var , var , var , var )	this ( var , var , DefaultLoadErrorHandlingPolicy . DEFAULT_MIN_LOADABLE_RETRY_COUNT , var , var )
this ( var , var , var , new DefaultCompositeSequenceableLoaderFactory , LoadErrorHandlingPolicy . getDefault ( ) , var , new DefaultHlsPlaylistTracker ( var , LoadErrorHandlingPolicy . getDefault ( ) , var , var ) , LoadErrorHandlingPolicy . getDefault ( ) , var , var , false , null )	this ( var , var , var , new DefaultCompositeSequenceableLoaderFactory , new DefaultLoadErrorHandlingPolicy ( var ) , new DefaultHlsPlaylistTracker ( var , new DefaultLoadErrorHandlingPolicy ( var ) , var ) , new DefaultLoadErrorHandlingPolicy ( var ) , var , false , null )
return new HlsMediaPeriod ( var , var , var , var , var , var , var , var , var , var )	return new HlsMediaPeriod ( var , var , var , var , var , var , var , var , var )
public HlsSampleStreamWrapper ( int var , Callback var , HlsChunkSource var , Allocator var , long var , Format var , LoadErrorHandlingPolicy < Chunk > var , int var , EventDispatcher var )	public HlsSampleStreamWrapper ( int var , Callback var , HlsChunkSource var , Allocator var , long var , Format var , LoadErrorHandlingPolicy var , EventDispatcher var )
var . updateSelectedTrack ( var , var , C . TIME_UNSET )	var . updateSelectedTrack ( var , var , C . TIME_UNSET , var , var )
int var = var . getTrackGroup ( ) . indexOf ( getLastMediaChunk . trackFormat )	int var = var . getTrackGroup ( ) . indexOf ( var . trackFormat )
if ( ! var )	if ( ! var || isPendingReset )
if ( var && ! var && ! isPendingReset && seekInsideBufferUs ( var ) )	if ( var && ! var && seekInsideBufferUs ( var ) )
var = getLastMediaChunk . endTimeUs	HlsMediaChunk var = getLastMediaChunk
long var = var . startLoading ( var , this , var )	long var = var . startLoading ( var , this , var . getMinimumLoadableRetryCount ( var . type ) . type )
var . loadStarted ( var . dataSpec , var . dataSpec . uri , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var )	var . loadStarted ( var . dataSpec , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var )
var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )
var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )	var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . bytesLoaded ( ) )
long var = var . getBlacklistDurationMsFor ( var , var , var , var )	long var = var . getRetryDelayMsFor ( var . type , var , var , var )
long var = var . getRetryDelayMsFor ( var , var , var , var )	long var = var . getBlacklistDurationMsFor ( var . type , var , var , var )
var . loadError ( var . dataSpec , var . getUri ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var . var ( ) , var , ! var . isRetry ( ) )	var . loadError ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var . trackFormat , var . trackSelectionReason , var . trackSelectionData , var . startTimeUs , var . endTimeUs , var , var , var , var , ! var . isRetry ( ) )
SampleQueue var = new SampleQueue ( var )	SampleQueue var = new PrivTimestampStrippingSampleQueue ( var )
public HlsDownloadHelper ( Uri var , DataSource . Factory var )	public HlsDownloadHelper ( Uri var , DataSource . Factory var , RenderersFactory var )
var = ParsingLoadable . load ( var , new HlsPlaylistParser , var , C . DATA_TYPE_MANIFEST )	return ParsingLoadable . load ( var , new HlsPlaylistParser , var , C . DATA_TYPE_MANIFEST )
Assertions . checkNotNull ( var )	this ( var , var , DownloadHelper . DEFAULT_TRACK_SELECTOR_PARAMETERS , var , null )
Assertions . checkNotNull ( var )	this ( var , var , DownloadHelper . DEFAULT_TRACK_SELECTOR_PARAMETERS , var , null )
return new TrackGroupArray ( Arrays . copyOf ( var , var ) , var )	return new TrackGroupArray
List < StreamKey > var = new ArrayList ( var . size ( ) )	super ( DownloadAction . TYPE_HLS , var , null , var , var , var )
TrackKey var = var . get ( var )	super ( DownloadAction . TYPE_HLS , var , null , var , var , var )
ArrayList < Uri > var = new ArrayList	ArrayList < DataSpec > var = new ArrayList
addResolvedUris ( var . baseUri , var . variants , var )	addMediaPlaylistDataSpecs ( var , var . variants , var )
addResolvedUris ( var . baseUri , var . audios , var )	addMediaPlaylistDataSpecs ( var , var . audios , var )
addResolvedUris ( var . baseUri , var . subtitles , var )	addMediaPlaylistDataSpecs ( var , var . subtitles , var )
var . add ( new Segment ( 0 , new DataSpec ( var ) ) , new DataSpec ( var ) )	var . add ( new Segment ( 0 , var ) , var )
Uri var = UriUtil . resolveToUri ( var . baseUri , var . fullSegmentEncryptionKeyUri )	Uri var = UriUtil . resolveToUri ( var , var . fullSegmentEncryptionKeyUri )
var . add ( new Segment ( var , new DataSpec ( var ) ) , new DataSpec ( var ) )	var . add ( new Segment ( var , SegmentDownloader . getCompressibleDataSpec ( var ) ) , SegmentDownloader . getCompressibleDataSpec ( var ) )
public DefaultHlsPlaylistTracker ( HlsDataSourceFactory var , LoadErrorHandlingPolicy < ParsingLoadable < HlsPlaylist > > < HlsPlaylist > var , int var , ParsingLoadable . Parser < HlsPlaylist > var )	public DefaultHlsPlaylistTracker ( HlsDataSourceFactory var , LoadErrorHandlingPolicy var , HlsPlaylistParserFactory var )
ParsingLoadable < HlsPlaylist > var = new ParsingLoadable ( var . createDataSource ( C . DATA_TYPE_MANIFEST ) . DATA_TYPE_MANIFEST , var , C . DATA_TYPE_MANIFEST , var )	ParsingLoadable < HlsPlaylist > var = new ParsingLoadable ( var . createDataSource ( C . DATA_TYPE_MANIFEST ) . DATA_TYPE_MANIFEST , var , C . DATA_TYPE_MANIFEST , var . createPlaylistParser ( ) )
long var = var . startLoading ( var , this , var )	long var = var . startLoading ( var , this , var . getMinimumLoadableRetryCount ( var . type ) . type )
var . loadStarted ( var . dataSpec , var . dataSpec . uri , var . type , var )	var . loadStarted ( var . dataSpec , var . type , var )
if ( var != null )	if ( var != null && var )
var . processLoadedPlaylist ( ( HlsMediaPlaylist ) var )	var . processLoadedPlaylist ( ( HlsMediaPlaylist ) var , var )
var . loadCompleted ( var . dataSpec , var . getUri ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )
var . loadCanceled ( var . dataSpec , var . getUri ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )	var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )
long var = var . getRetryDelayMsFor ( var , var , var , var )	long var = var . getRetryDelayMsFor ( var . type , var , var , var )
var . loadError ( var . dataSpec , var . getUri ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) , var , var )	var . loadError ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) , var , var )
var . loadCompleted ( var . dataSpec , var . getUri ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )
var . loadCanceled ( var . dataSpec , var . getUri ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )	var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) )
var |= blacklistPlaylist	var |= blacklistPlaylist ( var )
long var = var . getRetryDelayMsFor ( var , var , var , var )	long var = var . getBlacklistDurationMsFor ( var . type , var , var , var )
var . loadError ( var . dataSpec , var . getUri ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) , var , ! var . isRetry ( ) )	var . loadError ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , C . DATA_TYPE_MANIFEST , var , var , var . bytesLoaded ( ) , var , ! var . isRetry ( ) )
long var = var . startLoading ( var , this , var )	long var = var . startLoading ( var , this , var . getMinimumLoadableRetryCount ( var . type ) . type )
var . loadStarted ( var . dataSpec , var . dataSpec . uri , var . type , var )	var . loadStarted ( var . dataSpec , var . type , var )
var = var . copyWithMasterPlaylistInfo ( var )	var = var . createPlaylistParser ( var )
notifyPlaylistError ( var , false )	notifyPlaylistError ( var , var )
var = SystemClock . elapsedRealtime ( ) + ChunkedTrackBlacklistUtil . DEFAULT_TRACK_BLACKLIST_MS	var = SystemClock . elapsedRealtime ( ) + var
public HlsMasterPlaylist ( String var , List < String > var , List < HlsUrl > var , List < HlsUrl > var , List < HlsUrl > var , Format var , List < Format > var , boolean var )	public HlsMasterPlaylist ( String var , List < String > var , List < HlsUrl > var , List < HlsUrl > var , List < HlsUrl > var , Format var , List < Format > var , boolean var , Map < String , String > , String var )
return new HlsMasterPlaylist ( baseUri , tags , copyRenditionsList ( var , var , var ) , var , var , copyRenditionsList ( var , var , var ) , var , var , copyRenditionsList ( var , var , var ) , var , var , var , var , hasIndependentSegments )	return new HlsMasterPlaylist ( baseUri , tags , copyRenditionsList ( var , var , var ) , var , var , copyRenditionsList ( var , var , var ) , var , var , copyRenditionsList ( var , var , var ) , var , var , var , var , hasIndependentSegments , var )
return new HlsMasterPlaylist ( null , Collections . var ( ) , var , var , var , null , null , false )	return new HlsMasterPlaylist ( null , Collections . var ( ) , var , var , var , null , null , false , Collections . emptyMap ( ) )
this ( var , null , "" , 0 , - 1 , C . TIME_UNSET , null , null , var , var , false )	this ( var , null , "" , 0 , - 1 , C . TIME_UNSET , null , null , null , var , var , false )
if ( hasIndependentSegments || ! var . hasIndependentSegments )	if ( this . var )
return new HlsMediaPlaylist ( var , baseUri , tags , var , var , var , var , var , var , var , hasIndependentSegments || var . hasIndependentSegments , var , var , var , var )	return new HlsMediaPlaylist ( var , baseUri , tags , var , var , var , var , var , var , var , hasIndependentSegments , true , var , var , var )
return parseMediaPlaylist ( new LineIterator ( var , var ) , var , var . toString ( ) )	return parseMediaPlaylist ( var , new LineIterator ( var , var ) , var , var . toString ( ) )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
var = var . next ( )	var = replaceVariableReferences ( var . next ( ) , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
if ( var == null = var )	if ( isMediaTagMuxed ( var , var ) = var )
String var = parseStringAttr ( var , var )	String var = parseStringAttr ( var , var , var )
return new HlsMasterPlaylist ( var , var , var , var , var , var , var , var )	return new HlsMasterPlaylist ( var , var , var , var , var , var , var , var , var )
boolean var = false	boolean var = var . hasIndependentSegments
String var = parseStringAttr ( var , var )	String var = parseStringAttr ( var , var , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var )
var = parseOptionalStringAttr ( var , var , "" )	var = parseOptionalStringAttr ( var , var , "" , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseStringAttr ( var , var , var )
String var = parseOptionalStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var , var , var )
if ( ! var . equals ( var ) )	if ( var . equals ( var ) )
var = parseOptionalStringAttr ( var , var )	var = parseOptionalStringAttr ( var , var , var )
if ( var . equals ( var ) || var == null != null )	if ( var . equals ( var ) )
if ( var != null )	if ( var == null )
String var = parseStringAttr ( var , var )	String var = parseStringAttr ( var , var , var )
var . add ( new Segment ( var , var , var , var , var , var , var , var , var , var , var ) , var , var , var , var , var , var , var , var , var , var )	var . add ( new Segment ( replaceVariableReferences ( var , var ) , var , var , var , var , var , var , var , var , var , var , var , var ) ( var , var ) , var , var , var , var , var , var , var , var , var , var , var , var )
if ( var . find ( ) && var . groupCount ( ) == 1 )	while ( var . find ( ) )
return var . group ( 1 )	String var = var . group ( 1 )
return new DefaultSsChunkSource ( var , var , var , var , var , var )	return new DefaultSsChunkSource ( var , var , var , var , var )
public DefaultSsChunkSource ( LoaderErrorThrower var , SsManifest var , int var , TrackSelection var , DataSource var , TrackEncryptionBox var )	public DefaultSsChunkSource ( LoaderErrorThrower var , SsManifest var , int var , TrackSelection var , DataSource var )
var . updateSelectedTrack ( var , var , var )	var . updateSelectedTrack ( var , var , var , var , var )
return var && ChunkedTrackBlacklistUtil . maybeBlacklistTrack ( var , var . indexOf ( var . trackFormat ) . trackFormat , var )	return var && var != C . TIME_UNSET && var . blacklist ( var . indexOf ( var . trackFormat ) . trackFormat , var )
return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , var , 1 , var , var )	return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , C . TIME_UNSET , var , 1 , var , var )
SsChunkSource var = var . createChunkSource ( var , var , var , var , var , var )	SsChunkSource var = var . createChunkSource ( var , var , var , var , var )
StringBuilder var = new StringBuilder	List < StreamKey > var = new ArrayList ( var . length ( ) )
String var = var . toString ( )	for ( int var = 0 ; var < var . length ( ) ; var ++ )
var = DEFAULT_MIN_LOADABLE_RETRY_COUNT	var = new DefaultLoadErrorHandlingPolicy
this ( var , var , var , var , var )	this ( var , var , DefaultLoadErrorHandlingPolicy . DEFAULT_MIN_LOADABLE_RETRY_COUNT , var , var )
this ( var , var , var , var , var , var , var )	this ( var , var , var , DefaultLoadErrorHandlingPolicy . DEFAULT_MIN_LOADABLE_RETRY_COUNT , var , var , var )
var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . type , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var , var . bytesLoaded ( ) )
var . loadCanceled ( var . dataSpec , var . getUri ( ) , var . type , var , var , var . bytesLoaded ( ) )	var . loadCompleted ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var , var . bytesLoaded ( ) )
var . loadError ( var . dataSpec , var . getUri ( ) , var . type , var , var , var . bytesLoaded ( ) , var , var )	var . loadError ( var . dataSpec , var . getUri ( ) , var . getResponseHeaders ( ) , var . type , var , var , var . bytesLoaded ( ) , var , var )
long var = var . startLoading ( var , this , var )	long var = var . startLoading ( var , this , var . getMinimumLoadableRetryCount ( var . type ) . type )
var . loadStarted ( var . dataSpec , var . dataSpec . uri , var . type , var )	var . loadStarted ( var . dataSpec , var . type , var )
public ProtectionElement ( UUID var , byte var )	public ProtectionElement ( UUID var , byte var , TrackEncryptionBox var )
for ( int var = 0 ; var < var . formats . length ; var ++ )	for ( int var = 0 ; var < var . length ; var ++ )
var . formats [ var ] = var . formats [ var ] . copyWithDrmInitData ( var )	var [ var ] = var [ var ] . copyWithDrmInitData ( var )
return new ProtectionElement ( var , PsshAtomUtil . buildPsshAtom ( var , var ) , var )	return new ProtectionElement ( var , PsshAtomUtil . buildPsshAtom ( var , var ) , var , buildTrackEncryptionBoxes ( var ) )
if ( var . equalsIgnoreCase ( "" ) )	if ( var . equalsIgnoreCase ( "" ) || var . equalsIgnoreCase ( "" ) )
if ( Util . toLowerInvariant ( var . getLastPathSegment ( ) ) . matches ( "" ) )	if ( var != null && Util . toLowerInvariant ( var ) . matches ( "" ) )
public SsDownloadHelper ( Uri var , DataSource . Factory var )	public SsDownloadHelper ( Uri var , DataSource . Factory var , RenderersFactory var )
return new TrackGroupArray ( var )	return new TrackGroupArray
byte var = byte ( var . readUnsignedByte ( ) & 0x7F )	int var = var . readUnsignedByte ( )
byte var = byte ( var . readUnsignedByte ( ) & 0x7F )	int var = var . readUnsignedByte ( )
if ( ( var & ( var | var ) ) != var )	if ( ( var & var ) != 0 )
var = handleCtrl ( var , var )	handleCtrl ( var , var , var )
var . setTab ( var - 0x20 )	var . tabOffset = var - 0x20
if ( var != var . getRow ( ) )	if ( var != var . var )
var . setRow ( var )	var . var = var
var = null	var = Collections . emptyList ( )
List < Cue > var = new ArrayList	List < Cue > var = new ArrayList ( var )
Cue var = var . get ( var ) . build	Cue var = var . get ( var ) . build ( Cue . TYPE_UNSET )
if ( var == var || var == var || var == var = null )	if ( var == var || var == var || var == var )
var = null	var = Collections . emptyList ( )
var . add ( buildSpannableString )	var . add ( buildCurrentLine )
var . append ( buildSpannableString )	var . append ( buildCurrentLine )
var += var . readBits ( 6 )	var = var . readBits ( 6 )
if ( maybeInflateData ( var , var ) )	maybeInflateData ( var )
var . var ( var , var )	var . reset ( var . data , var . limit ( ) )
var . setInput ( var , 0 , var )	if ( var . bytesLeft ( ) > 0 && var . peekUnsignedByte ( ) == var )
while ( ! var . finished ( ) && ! var . needsDictionary ( ) && ! var . needsInput ( ) )	if ( var . bytesLeft ( ) > 0 && var . peekUnsignedByte ( ) == var )
if ( var == var . length )	if ( var . bytesLeft ( ) > 0 && var . peekUnsignedByte ( ) == var )
var += var . inflate ( var , var , var . length - var )	if ( Util . inflate ( var , var , var ) )
return var . finished ( )	var . reset ( var . data , var . limit ( ) )
var . reset ( )	var . reset ( var . data , var . limit ( ) )
var . append ( var . trim ( ) )	var . append ( processLine ( var , var ) , var )
parseHeader ( var , var , var , var )	parseHeader ( var , var , var , var , var , var )
var = new TtmlSubtitle ( var . peek ( ) , var , var )	var = new TtmlSubtitle ( var . peek ( ) , var , var , var )
return TtmlNode . buildNode ( var . getName ( ) , var , var , var , var , var )	return TtmlNode . buildNode ( var . getName ( ) , var , var , var , var , var , var )
return var . equals ( TtmlNode . TAG_TT ) || var . equals ( TtmlNode . TAG_HEAD ) || var . equals ( TtmlNode . TAG_BODY ) || var . equals ( TtmlNode . TAG_DIV ) || var . equals ( TtmlNode . TAG_P ) || var . equals ( TtmlNode . TAG_SPAN ) || var . equals ( TtmlNode . TAG_BR ) || var . equals ( TtmlNode . TAG_STYLE ) || var . equals ( TtmlNode . TAG_STYLING ) || var . equals ( TtmlNode . TAG_LAYOUT ) || var . equals ( TtmlNode . TAG_REGION ) || var . equals ( TtmlNode . TAG_METADATA ) || var . equals ( TtmlNode . TAG_SMPTE_IMAGE ) || var . equals ( TtmlNode . TAG_SMPTE_DATA ) || var . equals ( TtmlNode . TAG_SMPTE_INFORMATION )	return var . equals ( TtmlNode . TAG_TT ) || var . equals ( TtmlNode . TAG_HEAD ) || var . equals ( TtmlNode . TAG_BODY ) || var . equals ( TtmlNode . TAG_DIV ) || var . equals ( TtmlNode . TAG_P ) || var . equals ( TtmlNode . TAG_SPAN ) || var . equals ( TtmlNode . TAG_BR ) || var . equals ( TtmlNode . TAG_STYLE ) || var . equals ( TtmlNode . TAG_STYLING ) || var . equals ( TtmlNode . TAG_LAYOUT ) || var . equals ( TtmlNode . TAG_REGION ) || var . equals ( TtmlNode . TAG_METADATA ) || var . equals ( TtmlNode . TAG_IMAGE ) || var . equals ( TtmlNode . TAG_DATA ) || var . equals ( TtmlNode . TAG_INFORMATION )
return new TtmlNode ( null , TtmlRenderUtil . applyTextElementSpacePolicy ( var ) , C . TIME_UNSET , C . TIME_UNSET , null , null , var )	return new TtmlNode ( null , TtmlRenderUtil . applyTextElementSpacePolicy ( var ) , C . TIME_UNSET , C . TIME_UNSET , null , null , var , null )
return new TtmlNode ( var , null , var , var , var , var , var )	return new TtmlNode ( var , null , var , var , var , var , var , var )
if ( var || var )	if ( var || var || ( var && var != null ) )
public TtmlSubtitle ( TtmlNode var , Map < String , TtmlStyle > , TtmlStyle var , Map < String , TtmlRegion > , TtmlRegion var )	public TtmlSubtitle ( TtmlNode var , Map < String , TtmlStyle > , TtmlStyle var , Map < String , TtmlRegion > , TtmlRegion var , Map < String , String > , String var )
return var . getCues ( var , var , var )	return var . getCues ( var , var , var , var )
if ( var == null || ! var . matcher ( var ) . matches )	if ( ! isWebvttHeaderLine ( var ) )
this . var = var	var [ var ] = var
var = determineIdealSelectedIndex ( var )	var = determineIdealSelectedIndex ( var , var )
return new Parameters ( var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var )	return new Parameters ( var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var )
this ( new SparseArray ( ) , new SparseBooleanArray , null , null , false , 0 , false , false , true , Integer . MAX_VALUE , Integer . MAX_VALUE , Integer . MAX_VALUE , true , true , Integer . MAX_VALUE , Integer . MAX_VALUE , true , C . AUDIO_SESSION_ID_UNSET )	this ( Integer . MAX_VALUE , Integer . MAX_VALUE , Integer . MAX_VALUE , Integer . MAX_VALUE , true , false , true , Integer . MAX_VALUE , Integer . MAX_VALUE , true , null , Integer . MAX_VALUE , Integer . MAX_VALUE , true , false , false , null , false , 0 , false , false , true , C . AUDIO_SESSION_ID_UNSET , new SparseArray ( ) , new SparseBooleanArray )
return var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && TextUtils . equals ( var , var . var ) && TextUtils . equals ( var , var . var ) && areRendererDisabledFlagsEqual ( var , var . var ) && areSelectionOverridesEqual ( var , var . var )	return var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && TextUtils . equals ( var , var . var ) && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && TextUtils . equals ( var , var . var ) && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && areRendererDisabledFlagsEqual ( var , var . var ) && areSelectionOverridesEqual ( var , var . var )
for ( int var = 0 ; var < var ; var ++ )	for ( int var = 0 ; var < rendererCount ; var ++ )
if ( C . TRACK_TYPE_VIDEO == var . getRendererType ( var ) )	if ( C . TRACK_TYPE_VIDEO == mappedTrackInfo . getRendererType ( var ) )
var = var [ var ] != null	definitions [ var ] = var . first
for ( int var = 0 ; var < var ; var ++ )	for ( int var = 0 ; var < rendererCount ; var ++ )
var = var [ var ] != null	var = definitions [ var ] != null
TrackSelection var = null	AudioTrackScore var = null
if ( ! var . forceLowestBitrate && var != null )	if ( ! var . forceHighestSupportedBitrate && ! var . forceLowestBitrate && var )
var = selectAdaptiveVideoTrack ( var , var , var , var , var , getBandwidthMeter )	var = selectAdaptiveVideoTrack ( var , var , var , var )
boolean var = var . allowMixedMimeAdaptiveness && ( var & var ) != 0	boolean var = var . allowVideoMixedMimeTypeAdaptiveness && ( var & var ) != 0
int var = getAdaptiveVideoTrackCountForMimeType ( var , var , var , var , var , var , var , var )	int var = getAdaptiveVideoTrackCountForMimeType ( var , var , var , var , var , var , var , var , var )
filterAdaptiveVideoTrackCountForMimeType ( var , var , var , var , var , var , var , var )	filterAdaptiveVideoTrackCountForMimeType ( var , var , var , var , var , var , var , var , var )
return isSupported ( var , false ) && ( ( var & var ) != 0 ) && ( var == null || Util . areEqual ( var . sampleMimeType , var ) ) && ( var . width == Format . NO_VALUE || var . width <= var ) && ( var . height == Format . NO_VALUE || var . height <= var ) && ( var . bitrate == Format . NO_VALUE || var . bitrate <= var )	return isSupported ( var , false ) && ( ( var & var ) != 0 ) && ( var == null || Util . areEqual ( var . sampleMimeType , var ) ) && ( var . width == Format . NO_VALUE || var . width <= var ) && ( var . height == Format . NO_VALUE || var . height <= var ) && ( var . frameRate == Format . NO_VALUE || var . frameRate <= var ) && ( var . bitrate == Format . NO_VALUE || var . bitrate <= var )
boolean var = var . contains ( var ) && ( var . width == Format . NO_VALUE || var . width <= var . maxVideoWidth ) && ( var . height == Format . NO_VALUE || var . height <= var . maxVideoHeight ) && ( var . bitrate == Format . NO_VALUE || var . bitrate <= var . maxVideoBitrate )	boolean var = var . contains ( var ) && ( var . width == Format . NO_VALUE || var . width <= var . maxVideoWidth ) && ( var . height == Format . NO_VALUE || var . height <= var . maxVideoHeight ) && ( var . frameRate == Format . NO_VALUE || var . frameRate <= var . maxVideoFrameRate ) && ( var . bitrate == Format . NO_VALUE || var . bitrate <= var . maxVideoBitrate )
if ( var == var )	if ( var . forceLowestBitrate && var != 0 )
if ( var . forceLowestBitrate )	if ( var == var )
var = compareFormatValues ( var . bitrate , var ) < 0	int var = compareFormatValues ( var . bitrate , var )
if ( ! var . forceLowestBitrate && var != null )	if ( ! var . forceHighestSupportedBitrate && ! var . forceLowestBitrate && var )
return isSupported ( var , false ) && var . channelCount == var . channelCount && var . sampleRate == var . sampleRate && ( var . mimeType == null || TextUtils . equals ( var . mimeType , var . sampleMimeType ) )	return isSupported ( var , false ) && ( var . channelCount != Format . NO_VALUE && var . channelCount == var . channelCount ) && ( var || ( var . sampleMimeType != null && TextUtils . equals ( var . sampleMimeType , var . mimeType ) ) ) && ( var || ( var . sampleRate != Format . NO_VALUE && var . sampleRate == var . sampleRate ) )
return compareInts ( var . var , this . var )	int var = compareFormatValues ( var , var . var )
if ( this . var != var . var . var != var . var )	if ( this . var != var . var )
int var = var	int var = compareFormatValues ( var , var . var )
this ( var , null )	this ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
DataSpec var = Assertions . checkNotNull ( this . var )	DataSpec var = castNonNull ( this . var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
DataSpec var = Assertions . checkNotNull ( this . var )	DataSpec var = castNonNull ( this . var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
this ( var , null )	this ( var )
var = URLDecoder . decode ( var , C . ASCII_NAME ) . getBytes	var = Util . getUtf8Bytes ( URLDecoder . decode ( var , C . ASCII_NAME ) , C . ASCII_NAME )
this . var = var	this . var = this . var
return "" + var + "" + Arrays . toString ( var ) + "" + var + "" + var + "" + var + "" + var + "" + var + ""	return "" + getHttpMethodString + "" + var + "" + Arrays . toString ( var ) + "" + var + "" + var + "" + var + "" + var + "" + var + ""
return new DataSpec ( var , var , var + var , var + var , var , var , var )	return new DataSpec ( var , var , var , var + var , var + var , var , var , var )
public Builder	public Builder ( Context var )
Assertions . checkArgument ( var != null && var != null )	var . setValueAt ( var , var )
this . var = var	var . put ( var , var )
this ( var , var , Clock . DEFAULT )	this ( null , new SparseArray ( ) , var , Clock . DEFAULT , false )
if ( var != null && var != null )	if ( var != null && var )
var = var	var = new ArrayList
if ( var . uri . getPath ( ) . startsWith ( "" ) )	if ( var != null && var . startsWith ( "" ) )
this ( var , var , null )	this ( var , var , var , var , false , null )
InvalidResponseCodeException var = new InvalidResponseCodeException ( var , var , var )	InvalidResponseCodeException var = new InvalidResponseCodeException ( var , var , var , var )
return makeConnection ( var , var , var , var , var , true )	return makeConnection ( var , var , var , var , var , var , var , true )
HttpURLConnection var = makeConnection ( var , var , var , var , var , false )	HttpURLConnection var = makeConnection ( var , var , var , var , var , var , var , false )
var . setRequestMethod ( "" )	var . setRequestMethod ( DataSpec . getStringForHttpMethod ( var ) )
this ( var , new DataSpec ( var , DataSpec . FLAG_ALLOW_GZIP | DataSpec . FLAG_ALLOW_CACHING_UNKNOWN_LENGTH ) , DataSpec . FLAG_ALLOW_GZIP | DataSpec . FLAG_ALLOW_CACHING_UNKNOWN_LENGTH , var , var )	this ( var , new DataSpec ( var , DataSpec . FLAG_ALLOW_GZIP ) , DataSpec . FLAG_ALLOW_GZIP , var , var )
this ( var , null )	this ( var )
this ( var , var , var , true )	this ( var , var , var )
if ( var . length == C . LENGTH_UNSET && ! var . isFlagSet ( DataSpec . FLAG_ALLOW_CACHING_UNKNOWN_LENGTH ) )	if ( var . length == C . LENGTH_UNSET && var . isFlagSet ( DataSpec . FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN ) )
var . commitFile ( var )	var . commitFile ( var , var )
return new CacheDataSink ( var , var , var )	CacheDataSink var = new CacheDataSink ( var , var , var )
this ( var , var , 0 , var )	this ( var , var , 0 )
this ( var , var , new FileDataSource , new CacheDataSink ( var , var ) , var , var , null )	this ( var , var , new FileDataSource , new CacheDataSink ( var , CacheDataSink . DEFAULT_FRAGMENT_SIZE ) , CacheDataSink . DEFAULT_FRAGMENT_SIZE , var , null )
var = var . getContentLength ( var )	var = ContentMetadata . getContentLength ( var . getContentMetadata ( var ) )
var = new DataSpec ( var , var , var , var , var )	var = new DataSpec ( var , var , null , var , var , var , var , var )
var = new DataSpec ( var , var , var , var , var )	var = new DataSpec ( var , var , null , var , var , var , var , var )
ContentMetadataInternal . setContentLength ( var , var + var )	ContentMetadataMutations . setContentLength ( var , var + var )
var . setContentLength ( var , var )	var . applyContentMetadataMutations ( var , var )
ContentMetadata var = var . getContentMetadata ( var )	Uri var = ContentMetadata . getRedirectedUri ( var . getContentMetadata ( var ) )
Uri var = ContentMetadataInternal . getRedirectedUri ( var )	Uri var = ContentMetadata . getRedirectedUri ( var . getContentMetadata ( var ) )
this ( var , var , new FileDataSourceFactory , new CacheDataSinkFactory ( var , var ) , var , var , null )	this ( var , var , new FileDataSourceFactory , new CacheDataSinkFactory ( var , CacheDataSink . DEFAULT_FRAGMENT_SIZE ) , CacheDataSink . DEFAULT_FRAGMENT_SIZE , var , null )
String var = getKey ( var )	String var = buildCacheKey ( var , var )
getCached ( var , var , var )	getCached ( var , var , var , var )
var = new DataSpec ( var . uri , var . postBody , var , var . position + var - var . var , C . LENGTH_UNSET , var . key , var . flags | DataSpec . FLAG_ALLOW_CACHING_UNKNOWN_LENGTH )	var = new DataSpec ( var . uri , var . httpMethod , var . httpBody , var , var . position + var - var . var , C . LENGTH_UNSET , var . key , var . flags )
ContentMetadataInternal . setContentLength ( var , var )	ContentMetadataMutations . setContentLength ( var , var )
long var = ContentMetadataInternal . getContentLength ( var )	long var = ContentMetadata . getContentLength ( var )
var . remove ( var . id )	var . put ( var . id , null )
if ( isMetadataEqual ( var ) )	if ( isMetadataEqual ( var , var ) )
return isMetadataEqual ( ( ( DefaultContentMetadata ) var ) . var )	return isMetadataEqual ( var , ( ( DefaultContentMetadata ) var ) . var )
if ( var . length ( ) == 0 )	if ( var == 0 )
long var = ContentMetadataInternal . getContentLength ( var . getMetadata ( ) )	long var = ContentMetadata . getContentLength ( var . getMetadata ( ) )
ContentMetadataMutations var = new ContentMetadataMutations	File var = var . listFiles ( )
removeSpan ( var . get ( var ) , false )	removeSpanInternal ( var . get ( var ) )
if ( ! var . mkdirs ( ) )	if ( var == null || ! var . mkdirs ( ) )
int var = GLES20 . glGetError ( )	GlUtil . checkGlError ( )
var . handler . post ( )	var . post ( )
logd ( var , "" , var . toString ( ) )	logd ( var , "" , String . valueOf ( var ) )
var += "" + var . mediaPeriodId . periodIndex	var += "" + var . timeline . getIndexOfPeriod ( var . mediaPeriodId . periodUid )
var = var . trim ( )	var = Util . toLowerInvariant ( var . trim ( ) )
if ( var . equals ( var ) || var . equals ( var ) || var . equals ( var ) || var . equals ( var ) )	if ( var . equals ( var ) || var . equals ( var ) || var . equals ( var ) )
public SpsData ( int var , int var , int var , float var , boolean var , boolean var , int var , int var , int var , boolean var )	public SpsData ( int var , int var , int var , int var , int var , int var , float var , boolean var , boolean var , int var , int var , int var , boolean var )
var . skipBits ( 16 )	int var = var . readBits ( 8 )
return new SpsData ( var , var , var , var , var , var , var , var , var , var )	return new SpsData ( var , var , var , var , var , var , var , var , var , var , var , var , var )
if ( Util . isLocalFileUri ( var ) )	if ( isLocalFileUri ( var ) )
if ( Util . areEqual ( var , var ) )	if ( areEqual ( var , var ) )
while ( ( -- var ) >= 0 && var [ var ] == var )	while ( -- var >= 0 && var [ var ] == var )
while ( ( -- var ) >= 0 && var . get ( var ) . compareTo ( var ) == 0 )	while ( ++ var < var && var . get ( var ) . compareTo ( var ) == 0 )
while ( ( ++ var ) < var . length && var [ var ] == var )	while ( ++ var < var . length && var [ var ] == var )
while ( ( ++ var ) < var && var . get ( var ) . compareTo ( var ) == 0 )	while ( -- var >= 0 && var . get ( var ) . compareTo ( var ) == 0 )
var = Util . toLowerInvariant ( var )	var = toLowerInvariant ( var )
if ( Util . SDK_INT < 25 && var . getDisplayId ( ) == Display . DEFAULT_DISPLAY )	if ( Util . SDK_INT <= 28 && var . getDisplayId ( ) == Display . DEFAULT_DISPLAY && isTv ( var ) )
if ( ( "" . equals ( Util . MANUFACTURER ) && Util . MODEL . contains ( "" ) ) || ( "" . equals ( Util . toLowerInvariant ( Util . MANUFACTURER ) . MANUFACTURER ) && ( Util . MODEL . startsWith ( "" ) || Util . MODEL . equals ( "" ) || Util . MODEL . equals ( "" ) ) ) )	if ( Util . SDK_INT <= 28 && var . getDisplayId ( ) == Display . DEFAULT_DISPLAY && isTv ( var ) )
Log . var ( TAG , "" , var )	Log . var ( TAG , "" + var , var )
if ( var . equals ( var . getAttributeName ( var ) ) )	if ( stripPrefix ( var . getAttributeName ( var ) ) . equals ( var ) )
List < MediaCodecInfo > var = var . getDecoderInfos ( var , var )	List < MediaCodecInfo > var = var . getDecoderInfos ( var . sampleMimeType , var )
boolean var = var . isCodecSupported ( var . codecs )	boolean var = var . var ( var )
if ( Util . SDK_INT >= 21 )	if ( var != null )
var = var . isVideoSizeAndRateSupportedV21 ( var . width , var . height , var . frameRate )	processOutputFormat ( getCodec , var . width , var . height )
if ( var == STATE_ENABLED || var == STATE_STARTED )	if ( var != null )
if ( Util . SDK_INT >= 23 && var != null && var != null && ! var )	if ( Util . SDK_INT >= 23 && var != null && ! var )
if ( areAdaptationCompatible ( var . adaptive , var , var ) && var . width <= var . width && var . height <= var . height && getMaxInputSize ( var , var ) <= var . inputSize )	if ( var . isSeamlessAdaptationSupported ( var , var , true ) && var . width <= var . width && var . height <= var . height && getMaxInputSize ( var , var ) <= var . inputSize )
renderOutputBufferV21 ( var , var , var , System . nanoTime ( ) )	renderOutputBufferV21 ( var , var , var , var )
if ( var >= var )	if ( var > 0 && var >= var )
if ( areAdaptationCompatible ( var . adaptive , var , var ) )	if ( var . isSeamlessAdaptationSupported ( var , var , false ) )
var = Math . max ( var , getMaxInputSize ( var , var . sampleMimeType , var , var ) , var . sampleMimeType , var , var )	var = Math . max ( var , getCodecMaxInputSize ( var , var . sampleMimeType , var , var ) , var . sampleMimeType , var , var )
return getMaxInputSize ( var , var . sampleMimeType , var . width , var . height )	return getCodecMaxInputSize ( var , var . sampleMimeType , var . width , var . height )
if ( Util . SDK_INT >= 27 || var . startsWith ( "" ) )	if ( var . startsWith ( "" ) )
var . onVideoDecoderInitialized ( var , var , var )	var . post ( )
var . onVideoSizeChanged ( var , var , var , var )	var . post ( )
return var != null && var . toLowerCase ( ) . contains ( "" + ApplicationLoader . applicationContext . getPackageName ( ) + "" )	return var != null && var . toLowerCase ( var ) . contains ( "" + ApplicationLoader . applicationContext . getPackageName ( var ) )
var . showSoftInput ( var , InputMethodManager . SHOW_IMPLICIT )	return var . showSoftInput ( var , InputMethodManager . SHOW_IMPLICIT )
while ( var . moveToNext ( ) )	if ( var . length ( var ) != 0 var )
long var = var . getLong ( 1 )	int var var = new int [ var ] . size ( var )
if ( BuildVars . LOGS_ENABLED )	for ( int var = 0 ; var < var . length ; var ++ )
registerLoginContentObserver ( false , var )	return generateVideoPath ( false )
registerLoginContentObserver ( false , var )	return generatePicturePath ( false )
ApplicationLoader . applicationContext . getContentResolver ( ) . unregisterContentObserver ( var )	return Settings . Global . getInt ( ApplicationLoader . applicationContext . getContentResolver ( var ) , Settings . Global . AIRPLANE_MODE_ON , 0 ) != 0
while ( var . moveToNext ( ) )	var . startActivityForResult ( var , 500 )
String var = var . getString ( 1 )	AlertDialog . Builder var = new AlertDialog . Builder ( var )
registerLoginContentObserver ( true , var )	var . setAccessible ( true )
var . close ( )	var . append ( var )
if ( Build . VERSION . SDK_INT >= 23 && ApplicationLoader . applicationContext . checkSelfPermission ( android . Manifest . permission . READ_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED )	if ( var || Build . VERSION . SDK_INT >= 23 && ApplicationLoader . applicationContext . checkSelfPermission ( android . Manifest . permission . READ_EXTERNAL_STORAGE ) != PackageManager . PERMISSION_GRANTED )
File var = getAlbumDir	File var = getAlbumDir ( var )
File var = getAlbumDir	File var = getAlbumDir ( var )
return Math . abs ( var - System . currentTimeMillis ( ) / 1000 ) > 5 * 365 * 24 * 60 * 60	return var == null || Math . abs ( var . until_date - System . currentTimeMillis ( var ) / 1000 ) > 5 * 365 * 24 * 60 * 60
if ( var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) )	if ( var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) )
String var = FirebaseInstanceId . getInstance ( ) . getToken	String var = var . getToken ( )
GcmInstanceIDListenerService . sendRegistrationToServer ( var )	GcmPushListenerService . sendRegistrationToServer ( var )
return var != null && ( var . creator || var . admin_rights != null && var . admin_rights . post_messages )	return canUserDoAction ( var , var ) || ChatObject . isChannel ( var ) && ! var . megagroup && var . admin_rights != null && var . admin_rights . edit_messages
var = 0	var [ var ] = 0
var = 0	var = null
var = 0	var = null
performSyncPhoneBook ( new HashMap < String , Contact > , Contact ( var ) , true , true , true , true , false , false )	performSyncPhoneBook ( new HashMap var ( var ) , true , true , true , true , false , false )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . hasNewContactsToImport , var , var , var , var )	AndroidUtilities . runOnUIThread ( var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoad )
if ( var == 2 == 1 )	if ( var == 3 == 2 == 1 )
if ( var == 2 = var == 1 = var = var )	if ( var == 3 = var == 2 = var == 1 = var = var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recentDocumentsDidLoaded , false , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recentDocumentsDidLoad , false , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . groupStickersDidLoaded , var . var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . groupStickersDidLoad , var . var . id )
final TLRPC . TL_messages_stickerSet var = ( TLRPC . TL_messages_stickerSet ) var	TLRPC . TL_messages_stickerSet var = ( TLRPC . TL_messages_stickerSet ) var
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . groupStickersDidLoaded , var . var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . groupStickersDidLoad , var . var . id )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recentDocumentsDidLoaded , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recentDocumentsDidLoad , var , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recentDocumentsDidLoaded , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recentDocumentsDidLoad , var , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . stickersDidLoaded , var )	var . put ( var . id , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . stickersDidLoaded , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . stickersDidLoad , var )
processLoadedFeaturedStickers ( var . sets , var . unread , false , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , var . hash )	ConnectionsManager . getInstance ( var ) . sendRequest ( var , var , var )
final LongSparseArray < TLRPC . StickerSetCovered > var = new LongSparseArray var ( var )	final LongSparseArray < TLRPC . StickerSetCovered > var = new LongSparseArray
loadStickers ( var , true , false )	loadStickers ( TYPE_FEATURED , true , false )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . featuredStickersDidLoad )
for ( int var = 0 ; var < var . var ( var ) ; var ++ )	for ( int var = 0 ; var < var . var ( ) ; var ++ )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . featuredStickersDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . featuredStickersDidLoad )
if ( var == null )	if ( var == null var )
SharedPreferences var = MessagesController . getNotificationsSettings ( var )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . archivedStickersCountDidLoaded , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . archivedStickersCountDidLoad , var )
processLoadedStickers ( var , var , false , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , var . hash )	processLoadedStickers ( var , var , false , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , var . hash )
for ( int var = 0 ; var < var . sets . size ( var ) ; var ++ )	for ( int var = 0 ; var < var . sets . size ( ) ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var . isEmpty ( var ) || ! MessagesController . getInstance ( var ) . preloadFeaturedStickers )	if ( featuredStickerSets . isEmpty ( ) || ! MessagesController . getInstance ( currentAccount ) . preloadFeaturedStickers )
for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )	for ( int var = 0 , var = featuredStickerSets . var ( ) ; var < var ; var ++ )
processLoadedStickers ( var , null , false , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , var )	processLoadedStickers ( var , null , false , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . stickersDidLoaded , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . stickersDidLoad , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . stickersDidLoaded , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . stickersDidLoad , var )
if ( var != 1 && var != null && var . getParentActivity ( var ) != null )	if ( var != 1 && var != null && var . getParentActivity ( ) != null )
if ( var == null var )	if ( var == null )
Toast . makeText ( var , LocaleController . getString ( "" , R . string . MasksRemoved ) , R . string . MasksRemoved , Toast . LENGTH_SHORT ) . show var	Toast . makeText ( var , LocaleController . getString ( "" , R . string . MasksRemoved ) , R . string . MasksRemoved , Toast . LENGTH_SHORT ) . show
if ( var != 0 var )	if ( var == var && var )
searchMessagesInChat ( var , var , var , var , 0 , true , var )	searchMessagesInChat ( var , dialog_id , mergeDialogId , guid , 0 , true , user )
if ( var || var == 0 var )	if ( var != 0 || var == 0 var )
var . limit = var + 1	var . limit = var
boolean var	boolean var = false
var . messages . remove ( var . messages . size ( var ) - 1 )	var [ var ] = var . messages . size ( var )
processLoadedMedia ( var , var , var , var , var , false , var , var , var )	processLoadedMedia ( var , var , var , var , var , 0 , var , var , var . messages . size ( var ) == 0 )
processLoadedMediaCount ( var , var , var , var , false )	processLoadedMediaCount ( var , var , var , var , false , 0 )
ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , var )
if ( var && var . messages . isEmpty ( var ) && var != 0 var )	if ( var != 0 && var . messages . isEmpty ( var ) && var != 0 var )
loadMedia ( var , var , var , var , false , var )	loadMedia ( var , var , var , var , 0 , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . mediaDidLoaded , var , var , var , var , var , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . mediaDidLoad , var , var , var , var , var , var )
SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )	SQLiteCursor var = MessagesStorage . getInstance ( currentAccount ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )
processLoadedMediaCount ( var , var , var , var , true )	processLoadedMediaCount ( var , var , var , var , true , var )
processLoadedMedia ( var , var , var , var , var , true , var , var , var )	processLoadedMedia ( var , var , var , var , var , var , var , var , var )
var . readAttachPath ( var , UserConfig . getInstance ( var ) . clientUserId )	var . readAttachPath ( var , UserConfig . getInstance ( currentAccount ) . clientUserId )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . musicDidLoaded , var , var )	AndroidUtilities . runOnUIThread ( var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . reloadInlineHints )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . reloadInlineHints )
var . putExtra ( "" , var )	var . putExtra ( "" , currentAccount )
var = MessagesController . getInstance ( var ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var . dialog_id = - var	var . dialog_id = var
var = MessagesStorage . getInstance ( var ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )	var = MessagesStorage . getInstance ( currentAccount ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
var . dialog_id = - var	var . dialog_id = var
MessagesStorage . getInstance ( var ) . updateChannelPinnedMessage ( var , 0 )	MessagesStorage . getInstance ( currentAccount ) . updateChatPinnedMessage ( var , 0 )
var . bindInteger ( 1 , var . to_id . channel_id )	var . bindLong ( 1 , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didLoadedPinnedMessage , new MessageObject ( var , var , var , var , false ) , var , var , var , false )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . pinnedMessageDidLoad , new MessageObject ( currentAccount , var , var , var , false ) , var , var , var , false )
SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , TextUtils . join ( "" , var ) , var ) . US , "" , TextUtils . join ( "" , var ) , var )	SQLiteCursor var = MessagesStorage . getInstance ( currentAccount ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , TextUtils . join ( "" , var ) , var ) . US , "" , TextUtils . join ( "" , var ) , var )
MessagesStorage . getInstance ( var ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )	MessagesStorage . getInstance ( currentAccount ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesController . getInstance ( var ) . putUsers ( var , var )	MessagesController . getInstance ( currentAccount ) . putUsers ( var , var )
MessagesController . getInstance ( var ) . putChats ( var , var )	MessagesController . getInstance ( currentAccount ) . putChats ( var , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didLoadedReplyMessages , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . replyMessagesDidLoad , var )
var = TextUtils . concat ( var , "" )	var = AndroidUtilities . concat ( var , "" )
var = TextUtils . concat ( "" , var )	var = AndroidUtilities . concat ( "" , var )
var [ 0 ] = TextUtils . concat ( var , var , var )	var [ 0 ] = AndroidUtilities . concat ( var , var , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesController . getInstance ( var ) . sortDialogs ( null )	MessagesController . getInstance ( currentAccount ) . sortDialogs ( null )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botKeyboardDidLoaded , null , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . botKeyboardDidLoad , null , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botKeyboardDidLoaded , null , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . botKeyboardDidLoad , null , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botKeyboardDidLoaded , var , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . botKeyboardDidLoad , var , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botKeyboardDidLoaded , var , var )	AndroidUtilities . runOnUIThread ( var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botInfoDidLoaded , var , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . botInfoDidLoad , var , var )
SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )	SQLiteCursor var = MessagesStorage . getInstance ( currentAccount ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botInfoDidLoaded , var , var )	AndroidUtilities . runOnUIThread ( var )
SQLitePreparedStatement var = MessagesStorage . getInstance ( var ) . getDatabase var . executeFast ( "" )	SQLitePreparedStatement var = MessagesStorage . getInstance ( currentAccount ) . getDatabase var . executeFast ( "" )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botKeyboardDidLoaded , var , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . botKeyboardDidLoad , var , var )
SQLitePreparedStatement var = MessagesStorage . getInstance ( var ) . getDatabase var . executeFast ( "" )	SQLitePreparedStatement var = MessagesStorage . getInstance ( currentAccount ) . getDatabase var . executeFast ( "" )
NotificationCenter . getInstance ( var ) . addObserver ( DownloadController . this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( DownloadController . this , NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( DownloadController . this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( DownloadController . this , NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( DownloadController . this , NotificationCenter . httpFileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( DownloadController . this , NotificationCenter . httpFileDidLoad )
if ( ConnectionsManager . isConnectedToWiFi ( var ) = wifiDownloadMask . isRoaming ( var ) = roamingDownloadMask = mobileDataDownloadMask )	if ( ApplicationLoader . isConnectedToWiFi ( var ) = wifiDownloadMask . isRoaming ( var ) = roamingDownloadMask = mobileDataDownloadMask )
if ( ConnectionsManager . isRoaming ( var ) = roamingDownloadMask )	if ( ApplicationLoader . isRoaming ( var ) = roamingDownloadMask )
if ( MessageObject . isPhoto ( var ) = var . isVoiceMessage ( var ) = var . isRoundVideoMessage ( var ) = var . isVideoMessage ( var ) = var . isMusicMessage ( var ) = var . isGifMessage ( var ) = var = var )	if ( MessageObject . isPhoto ( var ) || MessageObject . isStickerMessage ( var ) = var . isVoiceMessage ( var ) = var . isRoundVideoMessage ( var ) = var . isVideoMessage ( var ) = var . isMusicMessage ( var ) = var . isGifMessage ( var ) = var = var )
if ( ConnectionsManager . isRoaming ( var ) )	if ( ApplicationLoader . isRoaming ( var ) )
if ( ConnectionsManager . isRoaming ( var ) )	if ( ApplicationLoader . isRoaming ( var ) )
if ( var == NotificationCenter . FileDidLoaded || var == NotificationCenter . httpFileDidLoaded )	if ( var == NotificationCenter . fileDidLoad || var == NotificationCenter . httpFileDidLoad )
NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . emojiDidLoad )
private static RequestInfo	protected static RequestInfo
public FileLoadOperation ( TLRPC . FileLocation var , String var , int var )	public FileLoadOperation ( TLRPC . FileLocation var , Object var , String var , int var )
var = new TLRPC . TL_inputDocumentFileLocation ( )	var = new TLRPC . TL_inputSecureFileLocation ( )
public FileLoadOperation ( TLRPC . Document var )	public FileLoadOperation ( TLRPC . Document var , Object var )
StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )
StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )
StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )
StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )
FileLog . var ( "" + var + "" + var . id + "" + var . local_id + "" + var . access_hash + "" + var . volume_id + "" + var . secret )	FileLog . var ( var . text + "" + var + "" + var . id + "" + var . local_id + "" + var . access_hash + "" + var . volume_id + "" + var . secret )
FileLog . var ( "" + var + "" + getFileName )	FileLog . var ( var . text + "" + var + "" + getFileName )
loadFile ( null , null , null , var . var , var , var . size , false , var )	loadFile ( null , null , null , var . var , null , var , var . size , 0 , var )
loadFile ( null , var , null , null , null , 0 , var , 1 )	loadFile ( null , var , null , null , null , null , 0 , var , 1 )
loadFile ( var , null , null , null , null , 0 , var , var )	loadFile ( var , null , null , null , var , null , 0 , var , var )
loadFile ( null , null , var , null , null , 0 , var , var )	loadFile ( null , null , var , null , null , null , 0 , var , var )
loadFile ( null , null , null , var , var , var , true , var )	loadFile ( null , null , null , var , var , var , var , var , var )
if ( var != 0 || var )	if ( var != 0 || var > 0 )
var = new FileLoadOperation ( var , var , var )	var = new FileLoadOperation ( var , var , var , var )
var = new FileLoadOperation ( var )	var = new FileLoadOperation ( var , var )
var [ 0 ] = loadFileInternal ( var , null , null , null , null , 0 , true , var , var , 0 )	var [ 0 ] = loadFileInternal ( var , null , null , null , var , null , 0 , 1 , var , var , 0 )
if ( var == null )	if ( var == null || var instanceof TLRPC . TL_photoSizeEmpty )
var = FileLoader . getInstance ( var ) . loadStreamFile ( this , var , var = ( int ) var . position )	var = FileLoader . getInstance ( var ) . loadStreamFile ( this , var , var , var = ( int ) var . position )
var . onTransferStart ( this , var , false )	var . file_reference = Utilities . hexToBytes ( var . getQueryParameter ( "" ) )
FileLoader . getInstance ( var ) . loadStreamFile ( this , var , var )	FileLoader . getInstance ( var ) . loadStreamFile ( this , var , var , var )
var = ConnectionsManager . isConnectionSlow ( )	var = ApplicationLoader . isConnectionSlow ( )
StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )
StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )
StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )
StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )
if ( var != 0 )	if ( ! TextUtils . isEmpty ( var ) )
var = args [ 2 ] + "" + LocaleController . getString ( "" , R . string . AttachSticker )	var = args [ 1 ] + "" + LocaleController . getString ( "" , R . string . AttachSticker )
var = args [ 1 ] + "" + LocaleController . getString ( "" , R . string . AttachSticker )	var = args [ 2 ] + "" + LocaleController . getString ( "" , R . string . AttachSticker )
if ( var != null )	if ( var != null var )
NotificationsController . getInstance ( var ) . processNewMessages ( var , true , true )	NotificationsController . getInstance ( var ) . processNewMessages ( var , true , true , var )
FileLog . var ( "" + var )	FileLog . var ( "" + var + "" + var )
if ( ConnectionsManager . isNetworkOnline ( ) = false )	if ( ApplicationLoader . isNetworkOnline ( ) = false )
if ( var != null && var instanceof HttpURLConnection )	if ( var instanceof HttpURLConnection )
URL var = new URL ( var . httpUrl )	Uri var = Uri . parse ( var . httpUrl )
if ( ConnectionsManager . isNetworkOnline ( ) = false )	if ( ApplicationLoader . isNetworkOnline ( ) = false )
if ( var != null && var instanceof HttpURLConnection )	if ( var != null )
NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileDidLoaded , var . url )	AndroidUtilities . runOnUIThread ( )
NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var . url , 2 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . fileDidFailedLoad , var . url , 2 )
public ThumbGenerateTask ( int var , File var , TLRPC . FileLocation var , String var )	public ThumbGenerateTask ( int var , File var , ThumbGenerateInfo var )
final String var = FileLoader . getAttachFileName ( var )	final String var = FileLoader . getAttachFileName ( var . parentDocument )
final String var = var . volume_id + "" + var . local_id	final String var = "" + var . parentDocument . dc_id + "" + var . parentDocument . id
File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var + "" )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var + "" )
var += "" + var	var += "" + var . filter
if ( var != null && var && var < 100 && var < 100 )	if ( var && var < 100 && var < 100 )
if ( var != null && var != null && var . equals ( var ) )	if ( var != null && var . equals ( var ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileDidLoaded , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . fileDidLoad , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . fileDidFailedLoad , var , var )
var . count --	var . imageReceiverArray . remove ( var )
if ( var . count == 0 )	if ( var . imageReceiverArray . isEmpty ( ) )
removeFromWaitingForThumb ( var )	removeFromWaitingForThumb ( var , var )
if ( var . version == 0 )	if ( var instanceof TLRPC . Document )
String var = FileLoader . getAttachFileName ( var )	String var = FileLoader . getAttachFileName ( var . parentDocument )
var = new ThumbGenerateTask ( var , var , var , var )	var = new ThumbGenerateTask ( var , var , var )
final MessageObject var = var . getParentMessageObject ( )	final Object var = var . getParentObject ( )
if ( var != null != 0 )	if ( var != null == 0 && var )
if ( ! var . startsWith ( "" ) )	if ( ! var . startsWith ( "" ) && ! var . startsWith ( "" ) )
if ( var != 0 )	if ( var == 0 && var )
var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var . dc_id + "" + var . id + "" )
if ( var && var == null )	if ( var == null )
var . fileLocation = ( TLRPC . FileLocation ) var	var . var = var
var . count ++	var . imageReceiverArray . add ( var )
generateThumb ( var . getFileType ( ) , var , ( TLRPC . FileLocation ) var , var )	generateThumb ( var . getFileType ( ) , var , var )
TLRPC . FileLocation var = var . getThumbLocation ( )	TLObject var = var . getThumbLocation ( )
if ( var . id == 0 || var . dc_id == 0 )	if ( var . id != 0 && var . dc_id != 0 )
var = var . dc_id + "" + var . id + "" + var . version	var = "" + var . dc_id + "" + var . id
var = ! MessageObject . isGifDocument ( var ) && ! MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var )	var = ! MessageObject . isGifDocument ( var ) && ! MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) && ! MessageObject . canPreviewDocument ( var )
if ( var != null )	if ( var != null && var . parentDocument != null )
generateThumb ( var , var , var . fileLocation , var . filter )	generateThumb ( var , var , var )
NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . httpFileDidLoaded , var . url , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . httpFileDidLoad , var . url , var )
ExifInterface var	ExifInterface var = new ExifInterface ( var )
var = new ExifInterface ( var )	ExifInterface var = new ExifInterface ( var )
if ( var == null || var . var != null )	if ( var == null || var . var != null && var . var . length != 0 )
var . var = var . var . length	var . size = var . var . length
var . var = ( int ) var . getChannel ( ) . var	var . size = ( int ) var . getChannel ( ) . size
return scaleAndSaveImage ( var , var , var , var , var , 0 , 0 )	return scaleAndSaveImage ( null , var , var , var , var , var , 0 , 0 )
return scaleAndSaveImageInternal ( var , var , var , var , var , var , var , var , var )	return scaleAndSaveImageInternal ( var , var , var , var , var , var , var , var , var , var )
return scaleAndSaveImageInternal ( var , var , var , var , var , var , var , var , var )	return scaleAndSaveImageInternal ( var , var , var , var , var , var , var , var , var , var )
var = var . media . document . thumb	TLRPC . PhotoSize var = var . media . document . thumbs . get ( var )
if ( var . location instanceof TLRPC . TL_fileLocationUnavailable )	if ( var . location == null || var . location instanceof TLRPC . TL_fileLocationUnavailable )
if ( var . media . photo . sizes . get ( var ) instanceof TLRPC . TL_photoCachedSize )	if ( var instanceof TLRPC . TL_photoCachedSize )
var . media . document . thumb = var	var . media . document . thumbs . set ( var , var )
if ( var . media . webpage . photo . sizes . get ( var ) instanceof TLRPC . TL_photoCachedSize )	if ( var instanceof TLRPC . TL_photoCachedSize )
var = new Paint ( Paint . ANTI_ALIAS_FLAG )	var = new Paint ( Paint . ANTI_ALIAS_FLAG | Paint . FILTER_BITMAP_FLAG )
setImage ( var , null , var , var , null , null , var , var , var )	setImage ( var , null , var , var , null , null , 0 , var , var , var )
setImage ( null , var , var , var , null , null , var , var , 1 )	setImage ( null , var , var , var , null , null , var , var , null , 1 )
setImage ( var , null , var , null , var , var , var , var , var )	setImage ( var , null , var , null , var , var , 0 , var , var , var )
if ( ( var == null && var == null && var == null ) || ( var != null && ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) && ! ( var instanceof TLRPC . TL_document ) && ! ( var instanceof WebFile ) && ! ( var instanceof TLRPC . TL_documentEncrypted ) && ! ( var instanceof SecureDocument ) ) )	if ( ( var == null && var == null && var == null ) || ( var != null && ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) && ! ( var instanceof TLRPC . TL_document ) && ! ( var instanceof WebFile ) && ! ( var instanceof TLRPC . TL_documentEncrypted ) && ! ( var instanceof TLRPC . PhotoSize ) && ! ( var instanceof SecureDocument ) ) )
if ( ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) = null )	if ( ! ( var instanceof TLRPC . PhotoSize ) && ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) = null )
if ( var . version == 0 )	if ( var . dc_id != 0 = null )
if ( var != null )	if ( var == null && var && var instanceof MessageObject )
if ( var != null )	if ( var != null && var != null )
if ( var != null && var != null && var . equals ( var ) )	if ( var != null && var . equals ( var ) )
var = var . volume_id + "" + var . local_id	var = var . location . volume_id + "" + var . location . local_id
if ( var != null )	if ( var != null && var != null )
var = var	var = var = var
setImage ( var . fileLocation , var . httpUrl , var . filter , var . var , var . thumbLocation , var . thumbFilter , var . size , var . ext , var . cacheType )	setImage ( var . fileLocation , var . httpUrl , var . filter , var . var , var . thumbLocation , var . thumbFilter , var . size , var . ext , var . parentObject , var . cacheType )
setImage ( var , var , var , var , var , var , var , var , var )	setImage ( var , var , var , var , var , var , var , var , var , var )
setImage ( var , var , var , var , var , var , var , var , var )	setImage ( var , var , var , var , var , var , var , var , var , var )
setImage ( var , var , var , var , var , var , var , var , var )	setImage ( var , var , var , var , var , var , var , var , var , var )
if ( var != null )	if ( var != null && ! var )
drawDrawable ( var , var , int ( var * 255 ) * 255 , var )	drawDrawable ( var , var , int ( var * 255 ) * 255 , var , var )
if ( var == var )	if ( var == var || var == var )
drawDrawable ( var , var , 255 , null )	drawDrawable ( var , var , int ( var * 255 ) * 255 , null , true )
if ( var == null || ! var . equals ( var ) )	if ( ! var . equals ( var ) )
if ( var == null && var == null || var == 1.0f || var )	if ( var && var && var != null )
if ( var == null || ! var . equals ( var ) )	if ( ! var . equals ( var ) )
if ( var != null && var . isRoundVideo ( ) && var . isSending ( ) = 1.0f )	if ( var instanceof MessageObject && ( ( MessageObject ) var ) . isRoundVideo && ( ( MessageObject ) var ) . isSending = 1.0f )
if ( var == NotificationCenter . didReplacedPhotoInMemCache )	if ( var != null )
var = ( TLRPC . FileLocation ) var [ 2 ]	var = ( TLObject ) var [ 2 ]
return ! TextUtils . isEmpty ( var ) && ! isRemote	return ! TextUtils . isEmpty ( var ) && ! isRemote && ! isUnofficial
if ( var == null || var != null && ! var . isRemote ( ) )	if ( var == null || var != null && ! var . isRemote ( ) && ! var . isUnofficial ( ) )
if ( var . pathToFile == null || var . isRemote ( ) )	if ( var . pathToFile == null || var . isRemote ( ) && var . serverIndex != Integer . MAX_VALUE )
var . remove ( var . shortName )	var . remove ( var . getKey ( ) )
if ( var . isRemote ( ) && ( var || ! var . exists ( ) ) )	if ( ( var . isRemote ( ) || var . isUnofficial ( ) ) && ( var || ! var . exists ( ) || var && ! var . exists ( ) ) )
FileLog . d ( "" + var )	FileLog . d ( "" + var + "" + var )
var = var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" )	var = var . length ( ) == 2 && ( var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) ) || var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) || var != null && var . isRtl
var = createFormatter ( var , getStringInternal ( "" , R . string . var ) , R . string . var , "" )	var = createFormatter ( var , getStringInternal ( "" , R . string . formatterMonthYear2 ) , R . string . formatterMonthYear2 , "" )
return getInstance . var . format ( new Date ( var ) )	String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , getInstance . var . var ( new Date ( var ) ) Date ( var ) , getInstance . var . var ( new Date ( var ) ) Date ( var ) )
if ( var == null || var . strings . isEmpty ( ) || var == null )	if ( var == null || var . strings . isEmpty ( ) || var == null || var . isLocal ( ) )
if ( ! var . equals ( var . shortName ) )	if ( ! var . equals ( var . shortName ) && ! var . equals ( var . baseLangCode ) )
if ( var != null && var . isLocal ( ) )	if ( ! var . equals ( var . shortName ) && ! var . equals ( var . baseLangCode ) )
var = new Locale ( var . shortName )	if ( var == null || var . equals ( var . shortName ) )
var . clear ( )	var . get ( var ) . serverIndex = Integer . MAX_VALUE
for ( int var = 0 ; var < var . objects . size ( ) ; var ++ )	for ( int var = 0 , var = var . objects . var ( ) ; var < var ; var ++ )
var . put ( var . getKey ( ) , var )	if ( ! var . containsKey ( var . getKey ( ) ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . var ( ) ; var ++ )
if ( var . isBuiltIn ( ) || ! var . isRemote ( ) )	if ( var . serverIndex != Integer . MAX_VALUE || var == var )
if ( var == var )	if ( var . serverIndex != Integer . MAX_VALUE || var == var )
if ( var . version != 0 && ! var )	if ( var . baseVersion != 0 && ! var )
if ( var == 1 >= 2 && var <= 4 && ! ( var >= 12 && var <= 14 ) && ! ( var >= 22 && var <= 24 ) )	if ( var >= 2 && var <= 4 && ! ( var >= 12 && var <= 14 ) )
if ( var >= 2 && var <= 4 && ! ( var >= 12 && var <= 14 ) && ! ( var >= 22 && var <= 24 ) )	if ( var == 1 >= 2 && var <= 4 && ! ( var >= 12 && var <= 14 ) >= 0 && var <= 1 || var >= 5 && var <= 9 || var >= 12 && var <= 14 )
NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . didReceiveNewMessages )
var . flags |= 8192	var . flags |= 16384
var . geo_point = new TLRPC . TL_inputGeoPoint ( var )	var . media . geo_point = new TLRPC . TL_inputGeoPoint ( var )
var . geo_point . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( var ) )	var . media . geo_point . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( var ) )
var . geo_point . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( var ) )	var . media . geo_point . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( var ) )
var . stop_geo_live = true	var . media . stopped = true
var . stop_geo_live = true	var . media . stopped = true
var . setFlags ( Intent . FLAG_ACTIVITY_CLEAR_TASK )	var . addCategory ( Intent . CATEGORY_LAUNCHER )
pauseMessage ( var )	pauseMessage ( playingMessageObject )
if ( var != null || var != null )	if ( recordStartRunnable != null || recordingAudio != null )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . musicDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . httpFileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . didReceiveNewMessages )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . httpFileDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . musicDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . fileDidLoad )
var = var . getCurrentPosition ( )	var = audioPlayer . getCurrentPosition ( )
if ( var != null )	return flagSecureFragment != null
if ( var == NotificationCenter . musicDidLoaded )	if ( var == NotificationCenter . musicDidLoad )
if ( var == NotificationCenter . didReceivedNewMessages )	if ( var == NotificationCenter . didReceiveNewMessages )
var = 0	countLess = 0
var = 0	raisedToBack = 0
if ( var . isEmpty ( ) || var < 0 || var >= var . size ( ) )	if ( var . isEmpty ( ) || currentPlaylistNum < 0 || currentPlaylistNum >= var . size ( ) )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , false , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 0 , 0 )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , false , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 0 , 0 )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < voiceMessagesPlaylist . size ( ) ; var ++ )
MessageObject var = var . get ( var )	MessageObject var = voiceMessagesPlaylist . get ( var )
FileLoader . getInstance ( var . currentAccount ) . loadFile ( var . getDocument ( ) , false , 0 )	FileLoader . getInstance ( var . currentAccount ) . loadFile ( var . getDocument ( ) , var , 0 , 0 )
var . setVisibility ( View . VISIBLE )	currentTextureViewContainer . setVisibility ( View . VISIBLE )
if ( var == 2 == 1 )	if ( pipSwitchingState == 2 == 1 )
if ( var != null )	if ( currentAspectRatioFrameLayout != null )
if ( var . getParent ( ) == null )	if ( currentAspectRatioFrameLayout . getParent ( ) == null )
if ( var == 1 )	if ( pipSwitchingState == 1 )
var . preparePlayer ( Uri . fromFile ( var ) , "" )	videoPlayer . preparePlayer ( Uri . fromFile ( var ) , "" )
if ( var > 1.0f )	if ( currentPlaybackSpeed > 1.0f )
var . setPlaybackSpeed ( var )	videoPlayer . setPlaybackSpeed ( currentPlaybackSpeed )
NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingDidStarted , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingDidStart , var )
NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( ) )	NotificationCenter . getInstance ( playingMessageObject . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , playingMessageObject . getId ( ) )
if ( var != null )	if ( audioRecorder != null )
var . dc_id = Integer . MIN_VALUE	recordingAudio . dc_id = Integer . MIN_VALUE
var . thumb = new TLRPC . TL_photoSizeEmpty ( )	recordingAudio . file_reference = new byte [ 0 ]
var . thumb . type = ""	recordingAudio . file_reference = new byte [ 0 ]
MessageObject var = var . remove ( var )	MessageObject var = generatingWaveform . remove ( var )
long var = var	long var = recordTimeCount
var . var = int ( var / 1000 )	var . var = int ( recordTimeCount / 1000 )
var = null	recordStartRunnable = null
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . albumsDidLoaded , var , var , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . albumsDidLoad , var , var , var , var )
NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FilePreparingFailed , var , var . toString ( ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . filePreparingStarted , var , var . toString ( ) )
NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FilePreparingStarted , var , var . toString ( ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . filePreparingFailed , var , var . toString ( ) )
int var = Math . max ( var , Math . round ( var / ( 1.0f / var . aspectRatio + 1.0f / var . aspectRatio + 1.0f / var . get ( 3 ) . aspectRatio ) ) / ( 1.0f / var . aspectRatio + 1.0f / var . aspectRatio + 1.0f / var . get ( 3 ) . aspectRatio ) )	int var = Math . max ( var , Math . round ( var / ( 1.0f / var . aspectRatio + 1.0f / var . aspectRatio + 1.0f / var . aspectRatio ) ) / ( 1.0f / var . aspectRatio + 1.0f / var . aspectRatio + 1.0f / var . aspectRatio ) )
if ( ! var && var . needDrawAvatar ( ) )	if ( ! var && var . needDrawAvatarInternal ( ) )
if ( var . action instanceof TLRPC . TL_messageActionUserJoined )	if ( var . action instanceof TLRPC . TL_messageActionUserJoined || var . action instanceof TLRPC . TL_messageActionContactSignUp )
TLRPC . TL_channelAdminRights var = var . action . prev_participant . admin_rights	TLRPC . TL_chatAdminRights var = var . action . prev_participant . admin_rights
TLRPC . TL_channelAdminRights var = var . action . new_participant . admin_rights	TLRPC . TL_chatAdminRights var = var . action . new_participant . admin_rights
var = new TLRPC . TL_channelAdminRights ( )	var = new TLRPC . TL_chatAdminRights ( )
var = new TLRPC . TL_channelAdminRights ( )	var = new TLRPC . TL_chatAdminRights ( )
TLRPC . TL_channelBannedRights var = var . action . prev_participant . banned_rights	TLRPC . TL_chatBannedRights var = var . action . prev_participant . banned_rights
TLRPC . TL_channelBannedRights var = var . action . new_participant . banned_rights	TLRPC . TL_chatBannedRights var = var . action . new_participant . banned_rights
if ( var != null && ! AndroidUtilities . isBannedForever ( var . until_date ) )	if ( var != null && ! AndroidUtilities . isBannedForever ( var ) )
var = new TLRPC . TL_channelBannedRights ( )	var = new TLRPC . TL_chatBannedRights ( )
var = new TLRPC . TL_channelBannedRights ( )	var = new TLRPC . TL_chatBannedRights ( )
return var != null && var . thumb != null && var . mime_type != null && ( var . mime_type . equals ( "" ) || isNewGifDocument ( var ) )	return var != null && ! var . thumbs . isEmpty ( ) && var . mime_type != null && ( var . mime_type . equals ( "" ) || isNewGifDocument ( var ) )
if ( var instanceof TLRPC . TL_photoSizeEmpty )	if ( var == null || var instanceof TLRPC . TL_photoSizeEmpty )
if ( ! var || var == null != null && ! var . isEmpty ( ) && var . media . document . thumb != null )	if ( ! var || var == null != null && ! var . isEmpty ( ) )
var . add ( var . media . document . thumb )	var . addAll ( var . thumbs )
if ( var != null && ! var . isEmpty ( ) && var . media . document . thumb != null )	if ( var != null && ! var . isEmpty ( ) )
var . location = var . media . document . thumb . location	updatePhotoSizeLocations ( var , var . thumbs )
if ( ! ( var . media . game . document . thumb instanceof TLRPC . TL_photoSizeEmpty ) )	if ( isDocumentHasThumb ( var ) )
if ( ! var != null && ! var . isEmpty ( ) && var . media . game . document . thumb != null )	if ( ! var != null && ! var . isEmpty ( ) )
var . add ( var . media . game . document . thumb )	var . addAll ( var . thumbs )
if ( var . media . game . photo != null )	TLRPC . Photo var = var . media . game . var
var = new ArrayList ( var . media . game . photo . sizes )	var = new ArrayList ( var . sizes )
for ( int var = 0 ; var < var . media . game . photo . sizes . size ( ) ; var ++ )	for ( int var = 0 , var = var . var . var . size ( ) ; var < var ; var ++ )
if ( var instanceof TLRPC . TL_photoSizeEmpty )	if ( var == null || var instanceof TLRPC . TL_photoSizeEmpty )
var . location = var . location	var = new ArrayList ( var . sizes )
var = new ArrayList ( var . media . webpage . photo . sizes )	updatePhotoSizeLocations ( var , var . sizes )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . size ( ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . media . webpage . photo . sizes . size ( ) ; var ++ )	for ( int var = 0 , var = var . size ( ) ; var < var ; var ++ )
TLRPC . PhotoSize var = var . media . webpage . photo . sizes . get ( var )	TLRPC . PhotoSize var = var . get ( var )
if ( var instanceof TLRPC . TL_photoSizeEmpty )	if ( var instanceof TLRPC . TL_photoSizeEmpty || var instanceof TLRPC . TL_photoCachedSize )
if ( var . media . webpage . document != null )	TLRPC . Document var = var . media . webpage . var
var . add ( var . media . webpage . document . thumb )	var . addAll ( var . thumbs )
if ( var != null && ! var . isEmpty ( ) && var . media . webpage . document . thumb != null )	if ( var != null && ! var . isEmpty ( ) )
var . location = var . media . webpage . document . thumb . location	updatePhotoSizeLocations ( var , var . thumbs )
if ( var != null )	if ( ! TextUtils . isEmpty ( var ) )
addUsernamesAndHashtags ( isOutOwner , var , true )	addUsernamesAndHashtags ( isOutOwner , var , true , 0 )
var -= AndroidUtilities . dp ( 20 )	var -= AndroidUtilities . dp ( 10 )
return var . media != null && var . media . document != null && isStickerDocument ( var . media . document )	return var . media != null && isStickerDocument ( var . media . document )
return var . media != null && var . media . document != null && isMaskDocument ( var . media . document )	return var . media != null && isMaskDocument ( var . media . document )
return var . media != null && var . media . document != null && isMusicDocument ( var . media . document )	return var . media != null && isMusicDocument ( var . media . document )
return var . media != null && var . media . document != null && isGifDocument ( var . media . document )	return var . media != null && isGifDocument ( var . media . document )
return var . media != null && var . media . document != null && isRoundVideoDocument ( var . media . document )	return var . media != null && isRoundVideoDocument ( var . media . document )
return var . media != null && var . media . document != null && isVoiceDocument ( var . media . document )	return var . media != null && isVoiceDocument ( var . media . document )
return var . media != null && var . media . document != null && isNewGifDocument ( var . media . document )	return var . media != null && isNewGifDocument ( var . media . document )
return var . media != null && var . media . document != null && isVideoDocument ( var . media . document )	return var . media != null && isVideoDocument ( var . media . document )
TLRPC . Document var	TLRPC . Document var = getDocument
TLRPC . Document var	TLRPC . Document var = getDocument
NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . fileDidLoad )
var = var . getInt ( "" , 200 )	var = var . getInt ( "" , 1024 )
LocaleController . getInstance ( ) . checkUpdateForCurrentRemoteLocale ( var , var . lang_pack_version )	LocaleController . getInstance ( ) . checkUpdateForCurrentRemoteLocale ( var , var . lang_pack_version , var . base_lang_pack_version )
var . democracy = var . democracy	var . default_banned_rights = var . default_banned_rights
if ( var != var )	if ( var != var || var != var )
var . democracy = var . democracy	var . default_banned_rights = var . default_banned_rights
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var . full_chat , var , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoad , var . full_chat , var , false , null )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoad )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botInfoDidLoaded , var . bot_info , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botInfoDidLoad , var . bot_info , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . userInfoDidLoad , var . id , var , null )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , dialogId )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . peerSettingsDidLoad , dialogId )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoad )
uploadingAvatar = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . location . volume_id + "" + var . location . local_id + ""	uploadingAvatar = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . volume_id + "" + var . local_id + ""
TLRPC . TL_channels_updatePinnedMessage var = new TLRPC . TL_channels_updatePinnedMessage ( )	TLRPC . TL_messages_updatePinnedMessage var = new TLRPC . TL_messages_updatePinnedMessage ( )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , var , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoad , var , 0 , var , var )
if ( channelViewsToSend . size ( ) != 0 && Math . abs ( System . currentTimeMillis ( ) - lastViewsCheckTime ) >= 5000 )	if ( channelViewsToSend . size ( ) != 0 )
GcmInstanceIDListenerService . sendRegistrationToServer ( SharedConfig . pushString )	GcmPushListenerService . sendRegistrationToServer ( SharedConfig . pushString )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var , var , var , var , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . messagesDidLoad , var , var , var , var , var , var , var , var , var , var , var , var , var , var )
loadingNotificationSettings = 2	loadingNotificationSettings = 3
for ( int var = 0 ; var < 2 ; var ++ )	for ( int var = 0 ; var < 3 ; var ++ )
var = - var . to_id . channel_id	var . id . file_reference = new byte [ 0 ]
if ( var . to_id . chat_id != 0 )	if ( var != null && FileRefController . isFileRefError ( var . text ) && var != null )
var = - var . to_id . chat_id	FileRefController . getInstance ( currentAccount ) . requestReference ( var , var )
var = var . to_id . user_id	MessagesStorage . getInstance ( currentAccount ) . loadUserInfo ( var , var , var )
if ( ! var . contains ( var . id ) )	if ( fullUsers . get ( var . id ) == null )
var . add ( var . id )	fullUsers . put ( var . id , var )
var . channel = getInputChannel ( var )	var = getInputChannel ( var )
final AlertDialog var = new AlertDialog ( var , 1 )	final AlertDialog var = new AlertDialog ( var , 3 )
var . setCanceledOnTouchOutside ( false )	MessagesStorage . getInstance ( var ) . updateUserInfo ( var , false )
TLRPC . TL_channels_toggleInvites var = new TLRPC . TL_channels_toggleInvites ( )	TLRPC . TL_account_getContactSignUpNotification var = new TLRPC . TL_account_getContactSignUpNotification ( )
var . var = var	var . commit ( )
ConnectionsManager . getInstance ( currentAccount ) . sendRequest ( var , var , var , ConnectionsManager . RequestFlagInvokeAfter )	ConnectionsManager . getInstance ( currentAccount ) . sendRequest ( var , var , var )
TLRPC . TL_channels_editAbout var = new TLRPC . TL_channels_editAbout ( )	TLRPC . TL_messages_editChatAbout var = new TLRPC . TL_messages_editChatAbout ( )
var . channel = getInputChannel ( var )	var . peer = getInputPeer ( - var )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoad , var , 0 , false , null )
TLRPC . TL_messages_toggleChatAdmins var = new TLRPC . TL_messages_toggleChatAdmins ( )	SparseArray < MessageObject > var = pollsToCheck . get ( var )
var . var = var	pollsToCheck . put ( var , var )
var . var = var	if ( var . type != MessageObject . TYPE_POLL )
var . is_admin = var	if ( var . is_admin && var )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoad , var , 0 , false , null )
var . banned_rights = new TLRPC . TL_channelBannedRights ( )	var . banned_rights = new TLRPC . TL_chatBannedRights ( )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoad , var , 0 , false , null )
needShortPollChannels . delete ( var )	var . writeInt32 ( var )
needShortPollChannels . put ( var , 0 )	needShortPollChannels . put ( var . id , 0 )
if ( shortPollChannels . indexOfKey ( var ) < 0 )	if ( shortPollChannels . indexOfKey ( var . id ) < 0 )
getChannelDifference ( var , 3 , 0 , null )	getChannelDifference ( var . id , 3 , 0 , null )
if ( var == null )	if ( var != null != null )
if ( ConnectionsManager . isConnectedOrConnectingToWiFi ( ) )	if ( ApplicationLoader . isConnectedOrConnectingToWiFi ( ) )
var . local_id = var . id = UserConfig . getInstance ( currentAccount ) . getNewMessageId	UserConfig . getInstance ( currentAccount ) . notificationsSignUpSettingsLoaded = true
var . to_id . user_id = UserConfig . getInstance ( currentAccount ) . getClientUserId	if ( ! UserConfig . getInstance ( currentAccount ) . notificationsSignUpSettingsLoaded )
if ( var == null )	if ( updatesOnMainThread == null )
var = new ArrayList	updatesOnMainThread = new ArrayList
if ( var == null )	if ( updatesOnMainThread == null )
var = new ArrayList	updatesOnMainThread = new ArrayList
var . put ( var . chat_id , Math . max ( var . max_date , var . date ) . max_date , var . date )	var . put ( var . chat_id , var . max_date )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . blockedUsersDidLoad )
if ( baseUpdate instanceof TLRPC . TL_updateChatAdmins )	if ( baseUpdate instanceof TLRPC . TL_updateChatDefaultBannedRights )
if ( updatesOnMainThread == null )	if ( var . peer . channel_id != 0 )
updatesOnMainThread = new ArrayList	var = var . peer . channel_id
MessagesStorage . getInstance ( currentAccount ) . updateChannelPinnedMessage ( var . channel_id , var . id )	MessagesStorage . getInstance ( currentAccount ) . updateChatPinnedMessage ( var . channel_id , var . id )
LocaleController . getInstance ( ) . saveRemoteLocaleStrings ( var . difference , currentAccount )	AndroidUtilities . runOnUIThread ( )
StatsController . getInstance ( currentAccount ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , messagesArr . size ( ) )	StatsController . getInstance ( currentAccount ) . incrementReceivedItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , messagesArr . size ( ) )
var = var . peer . peer . user_id	var = var . peer . user_id
if ( var . peer . peer . chat_id != 0 )	if ( var . peer . chat_id != 0 )
var = - var . peer . peer . chat_id	var = - var . peer . chat_id
var = - var . peer . peer . channel_id	var = - var . peer . channel_id
var . putBoolean ( "" , var . notify_settings . mute_until < var )	var . putInt ( "" , var . notify_settings . mute_until )
var . putBoolean ( "" , var . notify_settings . mute_until < var )	var . putInt ( "" , var . notify_settings . mute_until )
var |= UPDATE_MASK_CHANNEL	var |= UPDATE_MASK_CHAT
if ( ! notificationsPreferences . getBoolean ( "" , true ) )	boolean var = var . getBoolean ( "" , true )
if ( ! notificationsPreferences . getBoolean ( "" , true ) )	boolean var = var . getBoolean ( "" , true )
DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var . messageOwner . media . document , var . messageOwner . date , false )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var , var . messageOwner . media . document , var . messageOwner . date , false )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . didReceivedNewMessages , var , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . didReceiveNewMessages , var , var )
final AlertDialog var = new AlertDialog ( var . getParentActivity ( ) , 1 )	final AlertDialog progressDialog = new AlertDialog var
var . setMessage ( LocaleController . getString ( "" , R . string . Loading ) , R . string . Loading )	final AlertDialog var = new AlertDialog ( var . getParentActivity ( ) , 3 )
progressDialog [ 0 ] . setCanceledOnTouchOutside ( false )	dialogs . remove ( var )
progressDialog [ 0 ] . setCancelable ( false )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . dialogsNeedReload , true )
ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( reqId , true )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . dialogsNeedReload , true )
var . dismiss ( )	return clearingHistoryDialogs . get ( var ) != null
var . executeFast ( "" ) . stepThis var . dispose var	var . executeFast ( "" + var ) . stepThis var . dispose var
if ( var < 48 )	if ( var < var )
MediaController . SearchImage var = new MediaController . SearchImage ( var )	TLRPC . Message var = TLRPC . Message . TLdeserialize ( var , var . readInt32 ( false ) , false )
var . imageUrl = var . stringValue ( 1 )	var [ 1 ] = var . stringValue ( 1 )
var . localUrl = var . stringValue ( 3 )	var . parent = var . stringValue ( 3 )
var . height = var . intValue ( 5 )	var . var = var
var . date = var . intValue ( 7 )	var . bindByteBuffer ( 1 , var )
int var = var . readInt32 ( false )	final int var = var . readInt32 ( false )
TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . photo . sizes , AndroidUtilities . getPhotoSize ( var ) )	NativeByteBuffer var = new NativeByteBuffer ( var . getObjectSize ( var ) )
var . thumbPhotoSize = var	var . default_banned_rights = var
var . add ( var )	FileLog . var ( var )
final ArrayList < TLRPC . WallPaper > var = new ArrayList var ( var )	final ArrayList < TLRPC . TL_wallPaper > var = new ArrayList var ( var )
TLRPC . WallPaper var = TLRPC . WallPaper . TLdeserialize ( var , var . readInt32 ( false ) , false )	TLRPC . TL_wallPaper var = TLRPC . TL_wallPaper . TLdeserialize ( var , var . readInt32 ( false ) , false )
var . executeFast ( "" + var ) . stepThis var . dispose var	var . executeFast ( "" ) . stepThis var . dispose var
if ( var . next ( var ) )	if ( var . next ( var ) var )
if ( var instanceof TLRPC . TL_channelFull && var . pinned_msg_id != 0 )	if ( var != null && var . pinned_msg_id != 0 )
var . readAttachPath ( var , UserConfig . getInstance ( var ) . clientUserId )	var . readAttachPath ( var , var )
final ArrayList < TLObject > var = new ArrayList var ( var )	final ArrayList < MessageObject > var = new ArrayList var ( var )
var . add ( ( ( TLRPC . TL_messageMediaDocument ) var ) . document )	var [ 0 ] = ( ( TLRPC . TL_messageMediaDocument ) var ) . document
var . add ( ( ( TLRPC . TL_messageMediaPhoto ) var ) . photo )	var [ 0 ] = ( ( TLRPC . TL_messageMediaPhoto ) var ) . photo
if ( var == null || var == null )	if ( var == null || var == null || var == null )
StringBuilder var = new StringBuilder ( "" )	StringBuilder var = new StringBuilder var
var . democracy = var . democracy	var . default_banned_rights = var . default_banned_rights
var . dialog_id = - var . to_id . chat_id	MessageObject . getDialogId ( var )
var . dialog_id = var . to_id . user_id	MessageObject . getDialogId ( var )
var . dialog_id = - var . to_id . chat_id	var . bindLong ( 2 , var . dialog_id )
if ( var . action != null && var . action instanceof TLRPC . TL_messageEncryptedAction && ! ( var . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL || var . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionScreenshotMessages ) = false )	if ( var . action instanceof TLRPC . TL_messageEncryptedAction && ! ( var . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL || var . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionScreenshotMessages ) = false )
var = var . intValue ( 7 )	var = Math . max ( 0 , var . intValue ( 7 ) )
var = var . executeFast ( "" )	SQLitePreparedStatement var = var . executeFast ( "" )
SQLiteCursor var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )	SQLiteCursor var = var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )	SQLiteCursor var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )
var . executeFast ( "" ) . stepThis var . dispose var	var = var . executeFast ( "" )
while ( var . next ( var ) )	if ( var . next ( var ) )
var . executeFast ( String . format ( Locale . US , "" , - var ) . US , "" , - var ) . stepThis var . dispose var	var . executeFast ( String . format ( Locale . US , "" , var ) . US , "" , var ) . stepThis var . dispose var
SQLitePreparedStatement var = null	SQLiteCursor var = null
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStart )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStart )
createNotification ( var )	createNotification ( var , false )
var . setFlags ( Intent . FLAG_ACTIVITY_CLEAR_TASK )	var . addCategory ( Intent . CATEGORY_LAUNCHER )
if ( var != null && var . getCover ( ) != null )	if ( var != null )
var . putBitmap ( RemoteControlClient . MetadataEditor . BITMAP_KEY_ARTWORK , var . getCover ( ) )	var . putBitmap ( RemoteControlClient . MetadataEditor . BITMAP_KEY_ARTWORK , var )
createNotification ( var )	createNotification ( var , false )
if ( ! var . getBoolean ( "" , true ) )	if ( ! var . localChannel && ! var . getBoolean ( "" , true ) || var . localChannel && ! var . getBoolean ( "" , true ) )
if ( var == 0 && var != 0 && var . getBoolean ( "" , true ) || var != 0 && var . getBoolean ( "" , true ) var )	if ( var == 0 && var != 0 && var . getBoolean ( "" , true ) || var != 0 && ( ! var && var . getBoolean ( "" , true ) || var && var . getBoolean ( "" , true ) ) var )
StringBuilder var = new StringBuilder ( "" )	StringBuilder var = new StringBuilder var
if ( var != null && var . megagroup var )	if ( var != null && ( ! ChatObject . var ( var ) || var . megagroup ) var )
if ( ! var . getBoolean ( "" , true ) )	if ( ! var . localChannel && ! var . getBoolean ( "" , true ) || var . localChannel && ! var . getBoolean ( "" , true ) )
if ( var . getBoolean ( "" , true ) var )	if ( ! var && var . getBoolean ( "" , true ) || var && var . getBoolean ( "" , true ) var )
StringBuilder var = new StringBuilder ( "" )	StringBuilder var = new StringBuilder var
if ( var != null && var . megagroup var )	if ( var != null && ( ! ChatObject . var ( var ) || var . megagroup ) var )
if ( var [ 0 ] != 0 )	if ( preview != null )
String var = var = getStringForMessage ( var , false , text )	String var = getStringForMessage ( var , false , text , null )
String var = getStringForMessage ( var , false , text )	String var = var = getStringForMessage ( var , false , text , null )
String var = getShortStringForMessage ( var , senderName )	String var = getShortStringForMessage ( var , senderName , preview )
if ( Build . VERSION . SDK_INT >= 28 )	if ( preview [ 0 ] && var != 0 && Build . VERSION . SDK_INT >= 28 )
var . media . var . thumb = var . thumb	var . media . var . thumbs = var . thumbs
var . media . document . var = new TLRPC . TL_photoCachedSize ( var )	var = new TLRPC . TL_photoCachedSize ( var )
var . media . document . var . bytes = var	var . bytes = var
var . media . document . var . w = var . media . thumb_w	var . w = var . media . thumb_w
var . media . document . var . h = var . media . thumb_h	var . h = var . media . thumb_h
var . media . document . var . type = ""	var . type = ""
var . media . document . var . location = new TLRPC . TL_fileLocationUnavailable ( var )	var . location = new TLRPC . TL_fileLocationUnavailable ( var )
var . media . document . var = new TLRPC . TL_photoSizeEmpty ( var )	var . media . document . thumbs . add ( var )
var . media . document . var . type = ""	var . media . document . flags |= 1
var . media . document . var = new TLRPC . TL_photoCachedSize ( var )	var = new TLRPC . TL_photoCachedSize ( var )
var . media . document . var . bytes = var	var . bytes = var
var . media . document . var . w = var . media . thumb_w	var . w = var . media . thumb_w
var . media . document . var . h = var . media . thumb_h	var . h = var . media . thumb_h
var . media . document . var . type = ""	var . type = ""
var . media . document . var . location = new TLRPC . TL_fileLocationUnavailable ( var )	var . location = new TLRPC . TL_fileLocationUnavailable ( var )
var . media . document . var = new TLRPC . TL_photoSizeEmpty ( var )	var . media . document . thumbs . add ( var )
var . media . document . var . type = ""	var . media . document . flags |= 1
var . media . document . thumb = ( ( TLRPC . TL_decryptedMessageMediaExternalDocument ) var . media ) . thumb	var . media . document . thumbs . add ( ( ( TLRPC . TL_decryptedMessageMediaExternalDocument ) var . media ) . thumb )
var . media . document . thumb = new TLRPC . TL_photoSizeEmpty ( var )	TLRPC . PhotoSize var = new TLRPC . TL_photoSizeEmpty ( var )
final AlertDialog var = new AlertDialog ( var , 1 )	final AlertDialog var = new AlertDialog ( var , 3 )
ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )	var . setOnCancelListener ( var )
performSendMessageRequestMulti ( ( TLRPC . TL_messages_sendMultiMedia ) var . var , var . msgObjs , var . var )	performSendMessageRequestMulti ( ( TLRPC . TL_messages_sendMultiMedia ) var . var , var . msgObjs , var . var , var . var , var . delayedMessage )
performSendMessageRequest ( var . var , var . msgObj , var . var )	performSendMessageRequest ( var . var , var . msgObj , var . var , var . delayedMessage , var . var )
NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FilePreparingStarted )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileNewChunkAvailable )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FilePreparingFailed )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . httpFileDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . httpFileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . filePreparingFailed )
NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . fileNewChunkAvailable )
NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . filePreparingStarted )
performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath , var , true )	performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath , null , var . parentObject )
performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath )	performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath , null , var . parentObject )
performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath )	performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath , null , var . parentObject )
performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath )	performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath , null , var . parentObject )
performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath )	performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath , null , var . parentObject )
performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath )	performSendMessageRequest ( var . sendRequest , var . obj , var . originalPath , var , true , null , var . parentObject )
if ( var == NotificationCenter . FilePreparingStarted )	if ( var == NotificationCenter . filePreparingStarted )
if ( var == NotificationCenter . FileNewChunkAvailable )	if ( var == NotificationCenter . fileNewChunkAvailable )
if ( var == NotificationCenter . FilePreparingFailed )	if ( var == NotificationCenter . filePreparingFailed )
if ( var == NotificationCenter . httpFileDidLoaded )	if ( var == NotificationCenter . httpFileDidLoad )
if ( var . thumb . var instanceof TLRPC . TL_fileLocationUnavailable )	if ( var . thumbs . isEmpty ( ) || var . thumbs . get ( 0 ) . var instanceof TLRPC . TL_fileLocationUnavailable )
var . thumb = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , var . sendEncryptedRequest != null )	var . thumbs . add ( ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , var . sendEncryptedRequest != null ) , 90 , 90 , 55 , var . sendEncryptedRequest != null )
var . thumb = null	var . thumbs . clear ( )
var . var = var . thumb . var	var . var = var . thumbs . get ( 0 ) . var
if ( var == NotificationCenter . FileDidLoaded )	if ( var == NotificationCenter . fileDidLoad )
if ( var == NotificationCenter . httpFileDidFailedLoad || var == NotificationCenter . FileDidFailedLoad )	if ( var == NotificationCenter . httpFileDidFailedLoad || var == NotificationCenter . fileDidFailedLoad )
editMessageMedia ( var , null , null , null , null , null , true )	editMessageMedia ( var , null , null , null , null , null , true , var )
sendMessage ( ( TLRPC . TL_photo ) var . messageOwner . media . photo , null , var , var . replyMessageObject , var . messageOwner . message , var . messageOwner . entities , null , null , var . messageOwner . media . ttl_seconds )	sendMessage ( ( TLRPC . TL_photo ) var . messageOwner . media . photo , null , var , var . replyMessageObject , var . messageOwner . message , var . messageOwner . entities , null , null , var . messageOwner . media . ttl_seconds , var )
sendMessage ( ( TLRPC . TL_document ) var . messageOwner . media . document , null , var . messageOwner . attachPath , var , var . replyMessageObject , var . messageOwner . message , var . messageOwner . entities , null , null , var . messageOwner . media . ttl_seconds )	sendMessage ( ( TLRPC . TL_document ) var . messageOwner . media . document , null , var . messageOwner . attachPath , var , var . replyMessageObject , var . messageOwner . message , var . messageOwner . entities , null , null , var . messageOwner . media . ttl_seconds , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , null , null , null )
TLRPC . TL_document var = new TLRPC . TL_document ( )	TLRPC . TL_document_layer82 var = new TLRPC . TL_document_layer82 ( )
if ( var . thumb instanceof TLRPC . TL_photoSize )	if ( var instanceof TLRPC . TL_photoSize )
File var = FileLoader . getPathToAttach ( var . thumb , true )	File var = FileLoader . getPathToAttach ( var , true )
var . thumb = new TLRPC . TL_photoCachedSize ( )	TLRPC . PhotoSize var = new TLRPC . TL_photoCachedSize ( )
var . thumb . var = var . thumb . var	var . local_id = var . var . local_id
var . thumb . size = var . thumb . size	var . secret = var . var . secret
var . thumb . w = var . thumb . w	var . w = var . w
var . thumb . h = var . thumb . h	var . h = var . h
var . thumb . type = var . thumb . type	var . type = var . type
var . thumb . bytes = var	var . thumbs . add ( var )
if ( var . thumb == null )	if ( var . thumbs . isEmpty ( ) )
var . thumb = new TLRPC . TL_photoSizeEmpty ( )	var = new TLRPC . TL_photoSizeEmpty ( )
var . thumb . type = ""	var . type = ""
sendMessage ( ( TLRPC . TL_document ) var , null , null , var , var , null , null , null , null , 0 )	sendMessage ( ( TLRPC . TL_document ) var , null , null , var , var , null , null , null , null , 0 , var )
updateMediaPaths ( var , var , null , true )	updateMediaPaths ( var , var , var . id , null , true )
StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var )
var = new TLRPC . TL_inputMediaUploadedPhoto ( )	TLRPC . TL_inputMediaUploadedPhoto var = new TLRPC . TL_inputMediaUploadedPhoto ( )
if ( var == null )	if ( var . id . file_reference == null )
var = new TLRPC . TL_inputMediaUploadedDocument ( )	TLRPC . TL_inputMediaUploadedDocument var = new TLRPC . TL_inputMediaUploadedDocument ( )
var . mime_type = var . mime_type	var . var = var
var . attributes = var . attributes	var . inputUploadMedia = var
var = new TLRPC . TL_inputMediaGifExternal ( )	TLRPC . TL_inputMediaGifExternal var = new TLRPC . TL_inputMediaGifExternal ( )
( ( TLRPC . TL_inputMediaGifExternal ) var ) . url = args [ 0 ]	var . url = args [ 0 ]
var . var = var . thumb . var	var . var = var . thumbs . get ( 0 ) . var
var . mime_type = var . mime_type	var . var = var
var . attributes = var . attributes	var . inputUploadMedia = var
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
performSendMessageRequest ( var , var , var )	performSendMessageRequest ( var , var , var , null , true , var , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , null , var , var )
if ( var . alert )	if ( var . message != null . url != null )
sendMessage ( null , null , null , null , null , null , null , null , var . getDialogId ( ) , var . messageOwner . attachPath , null , null , true , var , null , var . messageOwner . reply_markup , var . messageOwner . params , 0 )	sendMessage ( null , null , null , null , null , null , null , null , null , var . getDialogId ( ) , var . messageOwner . attachPath , null , null , true , var , null , var . messageOwner . reply_markup , var . messageOwner . params , 0 , null )
sendMessage ( null , null , null , null , null , var , null , null , var , null , var , null , true , null , null , var , var , 0 )	sendMessage ( null , null , null , null , null , var , null , null , null , var , null , var , null , true , null , null , var , var , 0 , null )
sendMessage ( var , null , null , null , null , null , null , null , var , null , var , var , var , null , var , var , var , 0 )	sendMessage ( var , null , null , null , null , null , null , null , null , var , null , var , var , var , null , var , var , var , 0 , null )
sendMessage ( null , null , var , null , null , null , null , null , var , null , var , null , true , null , null , var , var , 0 )	sendMessage ( null , null , var , null , null , null , null , null , null , var , null , var , null , true , null , null , var , var , 0 , null )
sendMessage ( null , null , null , null , null , null , null , var , var , null , null , null , true , null , null , var , var , 0 )	sendMessage ( null , null , null , null , null , null , null , var , null , var , null , null , null , true , null , null , var , var , 0 , null )
sendMessage ( null , var , null , var , null , null , null , null , var , var , var , null , true , null , var , var , var , var )	sendMessage ( null , var , null , null , var , null , var , null , null , var , var , var , null , true , null , var , var , var , var , var )
var . var = 4	var . performMediaUpload = false
var . var = var	var . var = null
var . messageObjects = new ArrayList	var = new ArrayList
var . messages = new ArrayList	var = new ArrayList
var . originalPaths = new ArrayList	var = new ArrayList
var . extraHashMap = new HashMap	var = new HashMap
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , null , null , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
if ( var >= 1 && var <= 3 || var >= 5 && var <= 8 || var == 9 && var != null )	if ( var >= 1 && var <= 3 || var >= 5 && var <= 8 || var == 9 && var != null || var == 10 )
if ( var . access_hash == 0 )	if ( var == 2 || var == 9 && var != null )
var = new TLRPC . TL_inputMediaUploadedPhoto ( )	TLRPC . TL_inputMediaUploadedPhoto var = new TLRPC . TL_inputMediaUploadedPhoto ( )
var = new TLRPC . TL_inputMediaUploadedDocument ( )	TLRPC . TL_inputMediaUploadedDocument var = new TLRPC . TL_inputMediaUploadedDocument ( )
var . var = var . thumb . var	var . var = var . thumbs . get ( 0 ) . var
if ( var . access_hash == 0 )	if ( var != null || var != null || var . access_hash == 0 = null )
if ( var == null && var != null && var . length ( ) > 0 && var . startsWith ( "" ) && var != null )	if ( var == null && ! TextUtils . isEmpty ( var ) && var . startsWith ( "" ) && var != null )
var = new TLRPC . TL_inputMediaGifExternal ( )	TLRPC . TL_inputMediaGifExternal var = new TLRPC . TL_inputMediaGifExternal ( )
( ( TLRPC . TL_inputMediaGifExternal ) var ) . url = args [ 0 ]	var . url = args [ 0 ]
var = new TLRPC . TL_inputMediaUploadedDocument ( )	TLRPC . TL_inputMediaUploadedDocument var = new TLRPC . TL_inputMediaUploadedDocument ( )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , null , null , var )
performSendMessageRequest ( var , var , null , null , true )	performSendMessageRequest ( var , var , null , null , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
performSendMessageRequest ( var , var , var )	performSendMessageRequest ( var , var , var , null , true , var , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , null , var , var )
if ( var . thumb != null && var . thumb . bytes != null )	if ( var != null && var . bytes != null )
( ( TLRPC . TL_decryptedMessageMediaDocument ) var . media ) . thumb = var . thumb . bytes	( ( TLRPC . TL_decryptedMessageMediaDocument ) var . media ) . var = var . bytes
if ( var . thumb != null && var . thumb . bytes != null )	if ( var != null && var . bytes != null )
( ( TLRPC . TL_decryptedMessageMediaVideo ) var . media ) . thumb = var . thumb . bytes	( ( TLRPC . TL_decryptedMessageMediaVideo ) var . media ) . var = var . bytes
var . media . thumb_h = var . thumb . h	var . media . thumb_h = var . h
var . media . thumb_w = var . thumb . w	var . media . thumb_w = var . w
if ( var . thumb == null )	if ( var != null )
( ( TLRPC . TL_decryptedMessageMediaExternalDocument ) var . media ) . thumb = var . thumb	( ( TLRPC . TL_decryptedMessageMediaExternalDocument ) var . media ) . var = var
if ( var . thumb != null && var . thumb . bytes != null )	if ( var != null )
( ( TLRPC . TL_decryptedMessageMediaDocument ) var . media ) . thumb = var . thumb . bytes	( ( TLRPC . TL_decryptedMessageMediaDocument ) var . media ) . var = var . bytes
var . media . thumb_h = var . thumb . h	var . media . thumb_h = var . h
var . media . thumb_w = var . thumb . w	var . media . thumb_w = var . w
( ( TLRPC . TL_decryptedMessageMediaDocument ) var . media ) . thumb = var . thumb . bytes	( ( TLRPC . TL_decryptedMessageMediaDocument ) var . media ) . var = var . bytes
var . media . thumb_h = var . thumb . h	var . media . thumb_h = var . h
var . media . thumb_w = var . thumb . w	var . media . thumb_w = var . w
var . upload = true	var . var = true
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
performSendMessageRequest ( var , var , null )	performSendMessageRequest ( var , var , var , var , var )
FileLoader . getInstance ( currentAccount ) . loadFile ( var . var , "" , 0 , 0 )	FileLoader . getInstance ( currentAccount ) . loadFile ( var . var , var , "" , 0 , 2 , 0 )
FileLoader . getInstance ( currentAccount ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( currentAccount ) . loadFile ( var , var , 2 , 0 )
FileLoader . getInstance ( currentAccount ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( currentAccount ) . loadFile ( var , var , 2 , 0 )
if ( var . var != null || var . httpLocation != null || var . upload || var >= 0 )	if ( var . performMediaUpload var . messageObjects . isEmpty ( ) )
String var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . var . volume_id + "" + var . var . local_id + ""	String var = FileLoader . getPathToAttach ( var . var ) . toString
var . upload = false	var . performMediaUpload = false
var . addDelayedRequest ( var . sendRequest , var . messageObjects , var . originalPaths )	var . addDelayedRequest ( var . sendRequest , var . messageObjects , var . originalPaths , var . parentObjects , var )
performSendMessageRequestMulti ( ( TLRPC . TL_messages_sendMultiMedia ) var . sendRequest , var . messageObjects , var . originalPaths )	performSendMessageRequestMulti ( ( TLRPC . TL_messages_sendMultiMedia ) var . sendRequest , var . messageObjects , var . originalPaths , var . parentObjects , var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
for ( int var = 0 ; var < updatesArr . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
StatsController . getInstance ( currentAccount ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )	StatsController . getInstance ( currentAccount ) . incrementSentItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )
void performSendMessageRequest ( final TLObject var , final MessageObject var , final String var )	void performSendMessageRequest ( final TLObject var , final MessageObject var , final String var , DelayedMessage var , Object var )
StatsController . getInstance ( currentAccount ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )	StatsController . getInstance ( currentAccount ) . incrementSentItemsCount ( ApplicationLoader . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )
MessagesStorage . getInstance ( currentAccount ) . putSentFile ( var , var . media . photo , 0 )	MessagesStorage . getInstance ( currentAccount ) . putSentFile ( var , var . media . photo , 0 , "" + var . to_id . channel_id + "" + var . id )
if ( MessageObject . isVideoMessage ( var ) MessageObject . isVoiceMessage ( var ) && ! MessageObject . isRoundVideoMessage ( var ) )	if ( var . media . ttl_seconds == 0 )
MessagesStorage . getInstance ( currentAccount ) . putSentFile ( var , var . media . document , 2 )	MessagesStorage . getInstance ( currentAccount ) . putSentFile ( var , var . media . document , 1 , "" + var . to_id . channel_id + "" + var . id )
MessagesStorage . getInstance ( currentAccount ) . putSentFile ( var , var . media . document , 1 )	MessagesStorage . getInstance ( currentAccount ) . putSentFile ( var , var . media . document , 2 , "" + var . to_id . channel_id + "" + var . id )
TLRPC . PhotoSize var = var . media . document . thumb	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . media . document . thumbs , 320 )
TLRPC . PhotoSize var = var . media . document . thumb	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . media . document . thumbs , 320 )
if ( var != null && var . var instanceof TLRPC . TL_fileLocationUnavailable || var instanceof TLRPC . TL_photoSizeEmpty )	if ( var == null || var != null && var . var instanceof TLRPC . TL_fileLocationUnavailable || var instanceof TLRPC . TL_photoSizeEmpty )
var . media . document . thumb = var . media . document . thumb	var . media . document . thumbs = var . media . document . thumbs
DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var . media . document , var . date , false )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var , var . media . document , var . date , false )
if ( var == null && AndroidUtilities . getPhotoSize ( ) != 800 )	if ( var == null )
TLRPC . TL_photo var = new TLRPC . TL_photo ( )	TLRPC . TL_photo var = ( TLRPC . TL_photo ) var
var . thumb = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , var )	TLRPC . PhotoSize var = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , var )
var . thumb = new TLRPC . TL_photoSizeEmpty ( )	var . file_reference = new byte [ 0 ]
prepareSendingDocuments ( var , var , var , var , var , var , var , var )	prepareSendingDocuments ( var , var , var , var , var , var , var , var , var )
if ( ! prepareSendingDocumentInternal ( var , var . get ( var ) , var . get ( var ) , null , var , var , var , null , null , var ) = true )	if ( ! prepareSendingDocumentInternal ( var , var . get ( var ) , var . get ( var ) , null , var , var , var , var , null , var , false ) = true )
if ( ! prepareSendingDocumentInternal ( var , null , null , var . get ( var ) , var , var , var , null , null , var ) = true )	if ( ! prepareSendingDocumentInternal ( var , null , null , var . get ( var ) , var , var , var , var , null , var , false ) = true )
var = ImageLoader . loadBitmap ( var , null , 90 , 90 , true )	var = ImageLoader . loadBitmap ( var , null , var , var , true )
var . thumb = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , false )	TLRPC . PhotoSize var = ImageLoader . scaleAndSaveImage ( var , var , var , 55 , false )
var . thumb = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , false )	TLRPC . PhotoSize var = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , false )
var . thumb = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , false )	TLRPC . PhotoSize var = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , false )
if ( var . thumb == null )	if ( var . thumbs . isEmpty ( ) )
var . thumb = new TLRPC . TL_photoSize ( )	TLRPC . TL_photoSize var = new TLRPC . TL_photoSize ( )
var . thumb . w = wh [ 0 ]	var . w = wh [ 0 ]
var . thumb . h = wh [ 1 ]	var . h = wh [ 1 ]
var . thumb . size = 0	var . size = 0
var . thumb . type = ""	var . type = ""
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , var . send_message . message , var . send_message . entities , var . send_message . reply_markup , var , 0 )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , var . send_message . message , var . send_message . entities , var . send_message . reply_markup , var , 0 , var )
var = ( TLRPC . TL_document ) var	var = ( TLRPC . TL_document ) var [ 0 ]
var = ImageLoader . loadBitmap ( var . getAbsolutePath ( ) , null , 90 , 90 , true )	var = ImageLoader . loadBitmap ( var . getAbsolutePath ( ) , null , var , var , true )
var . thumb = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , var )	TLRPC . PhotoSize var = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , var )
if ( var . thumb == null )	if ( var . thumbs . isEmpty ( ) )
var . thumb = new TLRPC . TL_photoSize ( )	TLRPC . PhotoSize var = new TLRPC . TL_photoSize ( )
var . thumb . w = var . searchImage . width	var . w = var . searchImage . width
var . thumb . h = var . searchImage . height	var . h = var . searchImage . height
var . thumb . size = 0	var . size = 0
var . thumb . type = ""	var . type = ""
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , var . caption , var . entities , null , var , 0 )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var . messageOwner . attachPath , var , var , null , null , null , var , 0 , var )
var . var = var	var . file_reference = new byte [ 0 ]
if ( var . var == null )	if ( var != null )
var . var = new TLRPC . TL_photoSizeEmpty ( )	var . thumbs . add ( var )
var . var . type = ""	var . flags |= 1
if ( var . var )	if ( var != null && var . needConvert ( ) )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , var , var , var . caption , var . entities , null , var , var . ttl )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , var . caption , var . entities , null , var , 0 , var )
prepareSendingDocumentInternal ( var , var . path , var . path , null , null , var , var , var . caption , var . entities , var )	prepareSendingDocumentInternal ( var , var . path , var . path , null , null , var , var , var . caption , var . entities , var , var )
prepareSendingDocumentInternal ( var , var . get ( var ) , var . get ( var ) , null , var , var , var , var . get ( var ) , var . get ( var ) , var )	prepareSendingDocumentInternal ( var , var . get ( var ) , var . get ( var ) , null , var , var , var , var . get ( var ) , var . get ( var ) , var , var )
if ( var > 90 )	if ( var > var )
float var = 90.0f / var	float var = var / var
TLRPC . PhotoSize var = ImageLoader . scaleAndSaveImage ( var , 90 , 90 , 55 , var )	TLRPC . PhotoSize var = ImageLoader . scaleAndSaveImage ( var , var , var , 55 , var )
if ( var . var == null )	if ( var != null )
var . var = new TLRPC . TL_photoSizeEmpty ( )	var . thumbs . add ( var )
var . var . type = ""	var . flags |= 1
var . var . type = ""	var . file_reference = new byte [ 0 ]
if ( var . muted )	if ( var != null && var . needConvert ( ) )
SendMessagesHelper . getInstance ( var ) . editMessageMedia ( var , null , var , var , var , var , false )	SendMessagesHelper . getInstance ( var ) . editMessageMedia ( var , null , var , var , var , var , false , var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , var , var , var , var , null , var , var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , var , var , var . caption , var . entities , null , var , var . ttl , var )
if ( var == NotificationCenter . FileDidLoaded )	if ( var == NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . fileDidLoad )
FileLoader . getInstance ( var ) . loadFile ( var . var . photo_small , null , 0 , 1 )	FileLoader . getInstance ( var ) . loadFile ( var . var . photo_small , var , null , 0 , 1 , 1 )
NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . fileDidLoad )
if ( var == NotificationCenter . didReceivedNewMessages )	if ( var == NotificationCenter . didReceiveNewMessages )
NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . didReceiveNewMessages )
var . await ( 15 , TimeUnit . SECONDS )	var . await ( 30 , TimeUnit . SECONDS )
NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . didReceiveNewMessages )
progressDialog [ 0 ] . setButton ( DialogInterface . BUTTON_NEGATIVE , LocaleController . getString ( "" , R . string . Cancel ) , R . string . Cancel , var , var )	progressDialog [ 0 ] . setOnCancelListener ( var )
if ( "" . equals ( var ) || "" . equals ( var ) || "" . equals ( var ) )	if ( "" . equals ( var ) || "" . equals ( var ) )
this . var = new FileDataSource ( var )	var . addTransferListener ( var )
this . var = new AssetDataSource ( var , var )	var = new AssetDataSource ( var )
this . var = var	var . addTransferListener ( var . get ( var ) )
if ( var . uri . getPath ( ) . startsWith ( "" ) = var )	if ( var != null && var . startsWith ( "" ) )
var = var	var = getAssetDataSource
if ( var . uri . getPath ( ) . endsWith ( "" ) = var = var )	if ( var . uri . getPath ( ) . endsWith ( "" ) )
var = var	var = getEncryptedFileDataSource
var = var	var = getFileDataSource
if ( "" . equals ( var ) )	if ( var != null )
var = FileLoader . getStreamLoadOperation ( var )	var . add ( var )
if ( var . equals ( var ) = var )	if ( var . equals ( var ) )
var = var	var = getAssetDataSource
if ( var . equals ( var ) = var )	if ( var . equals ( var ) )
var = var	var = getContentDataSource
return var . read ( var , var , var )	return Assertions . checkNotNull ( var ) . read ( var , var , var )
tryInit ( MediaRecorder . AudioSource . MIC , 48000 )	var = tryInit ( MediaRecorder . AudioSource . MIC , 48000 )
tryInit ( MediaRecorder . AudioSource . VOICE_COMMUNICATION , 44100 )	var = tryInit ( MediaRecorder . AudioSource . VOICE_COMMUNICATION , 44100 )
tryInit ( MediaRecorder . AudioSource . MIC , 44100 )	var = tryInit ( MediaRecorder . AudioSource . MIC , 44100 )
var . setEnabled ( VoIPServerConfig . getBoolean ( "" , true ) , true )	var . setEnabled ( VoIPServerConfig . getBoolean ( "" , true ) , true && isGoodAudioEffect ( var ) )
var . setEnabled ( VoIPServerConfig . getBoolean ( "" , true ) , true )	var . setEnabled ( VoIPServerConfig . getBoolean ( "" , true ) , true && isGoodAudioEffect ( var ) )
Log . i ( "" , "" )	FileLog . d ( "" )
AndroidUtilities . runOnUIThread ( var , 700 )	AndroidUtilities . runOnUIThread ( var , var )
return "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || MessagesController . getGlobalMainSettings ( ) . getBoolean ( "" , false )	return "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || "" . equals ( Build . PRODUCT ) || MessagesController . getGlobalMainSettings ( ) . getBoolean ( "" , false )
FileLog . d ( "" + var )	FileLog . d ( "" + stateToString ( var ) )
var = AcousticEchoCanceler . isAvailable ( )	var = NoiseSuppressor . isAvailable ( )
if ( ! BuildConfig . DEBUG )	if ( ! BuildVars . DEBUG_VERSION )
JSONObject var = new JSONObject ( var )	var = new JSONObject ( var )
nativeSetConfig ( var , var )	nativeSetConfig ( var )
var . placeCall ( Uri . fromParts ( "" , UserConfig . getInstance ( currentAccount ) . getClientUserId + "" + var . id , null ) , UserConfig . getInstance ( currentAccount ) . getClientUserId + "" + var . id , null , var )	var . placeCall ( Uri . fromParts ( "" , "" + var . id , null ) , "" + var . id , null , var )
if ( var . code == 403 && "" . equals ( var . text ) )	if ( var . code == 403 )
var = ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) != null	ContactsController . getInstance ( currentAccount ) . createOrUpdateConnectionServiceContact ( var . id , var . first_name , var . last_name )
controller . setRemoteEndpoints ( var , var . protocol . udp_p2p && var , BuildVars . DEBUG_VERSION && var . getBoolean ( "" , false ) , false , var . protocol . max_layer )	controller . setRemoteEndpoints ( var , var . p2p_allowed , var . getBoolean ( "" , false ) , false , var . protocol . max_layer )
if ( spPlayID == 0 )	if ( spPlayID == 0 = null )
native_init ( var , var , var , var , var , var , var , var , var , var , var , var , var , isNetworkOnline , getCurrentNetworkType )	native_init ( var , var , var , var , var , var , var , var , var , var , var , var , var , ApplicationLoader . isNetworkOnline ( ) , ApplicationLoader . getCurrentNetworkType ( ) )
final TLObject var = TLClassStore . var ( ) . TLdeserialize ( var , var . readInt32 ( true ) , true )	final TLObject var = TLClassStore . var ( ) . TLdeserialize ( var , var , true )
MessagesController . getInstance ( var ) . processUpdates ( ( TLRPC . Updates ) var , false )	Utilities . stageQueue . postRunnable ( )
MessagesController . getInstance ( var ) . updateTimerProc	Utilities . stageQueue . postRunnable ( )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didUpdateConnectionState )
if ( var != null || var == 0 && Math . abs ( var - System . currentTimeMillis ( ) ) < 10000 || ! isNetworkOnline )	if ( var != null || var == 0 && Math . abs ( var - System . currentTimeMillis ( ) ) < 10000 || ! ApplicationLoader . isNetworkOnline ( ) )
FileLog . d ( "" + var + "" + var + "" + Math . abs ( var - System . currentTimeMillis ( ) ) - System . currentTimeMillis ( ) + "" + isNetworkOnline )	FileLog . d ( "" + var + "" + var + "" + Math . abs ( var - System . currentTimeMillis ( ) ) - System . currentTimeMillis ( ) + "" + ApplicationLoader . isNetworkOnline ( ) )
ConnectivityManager var = ( ConnectivityManager ) ApplicationLoader . applicationContext . getSystemService ( Context . CONNECTIVITY_SERVICE )	native_setNetworkAvailable ( var , ApplicationLoader . isNetworkOnline ( ) , ApplicationLoader . getCurrentNetworkType ( ) , ApplicationLoader . isConnectionSlow ( ) )
NetworkInfo var = var . getActiveNetworkInfo ( )	native_setNetworkAvailable ( var , ApplicationLoader . isNetworkOnline ( ) , ApplicationLoader . getCurrentNetworkType ( ) , ApplicationLoader . isConnectionSlow ( ) )
ConnectivityManager var = ( ConnectivityManager ) ApplicationLoader . applicationContext . getSystemService ( Context . CONNECTIVITY_SERVICE )	var = var . replace ( '_' , '-' ) . toLowerCase
NetworkInfo var = var . getNetworkInfo ( ConnectivityManager . TYPE_WIFI )	var = var . replace ( '_' , '-' ) . toLowerCase
if ( var != null && ( var == NetworkInfo . State . CONNECTED || var == NetworkInfo . State . CONNECTING || var == NetworkInfo . State . SUSPENDED ) )	for ( int var = 0 ; var < UserConfig . MAX_ACCOUNT_COUNT ; var ++ )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didUpdateConnectionState )
if ( TL_channelBannedRights . var != var )	if ( TL_statsURL . var != var )
TL_channelBannedRights var = new TL_channelBannedRights	TL_statsURL var = new TL_statsURL
var = new TL_pageFull	var = new TL_pagePart_layer82
var = new TL_pagePart	var = new TL_page
var = var . readString ( var )	q = var . readString ( var )
var . writeString ( var )	var . writeString ( q )
thumb = PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var )	thumbs . add ( PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var ) , var . readInt32 ( var ) , var )
thumb . serializeToStream ( var )	alternative_connections . get ( var ) . serializeToStream ( var )
thumb = PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var )	PhotoSize var = PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var )
thumb . serializeToStream ( var )	thumbs . get ( 0 ) . serializeToStream ( var )
thumb = PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var )	thumbs . add ( PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var ) , var . readInt32 ( var ) , var )
thumb . serializeToStream ( var )	thumbs . get ( 0 ) . serializeToStream ( var )
thumb = PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var )	thumbs . add ( PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var ) , var . readInt32 ( var ) , var )
thumb . serializeToStream ( var )	var . serializeToStream ( var )
thumb = PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var )	thumbs . add ( PhotoSize . TLdeserialize ( var , var . readInt32 ( var ) , var ) , var . readInt32 ( var ) , var )
thumb . serializeToStream ( var )	var . get ( var ) . serializeToStream ( var )
caption = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )
caption = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )
caption = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )
url = var . readString ( var )	var = var . readString ( var )
caption = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )
caption = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )
caption = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )
caption = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = RichText . TLdeserialize ( var , var . readInt32 ( var ) , var )
var = new TL_updateChatAdmins	var = new TL_updateUserPinnedMessage
var = new TL_updateContactRegistered	var = new TL_updateChatPinnedMessage
var . readString ( var )	caption = var . readString ( var )
var . writeString ( "" )	var . writeString ( var )
banned_rights = TL_channelBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = TL_chatBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )
admin_rights = TL_channelAdminRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	TL_pollAnswer var = TL_pollAnswer . TLdeserialize ( var , var . readInt32 ( var ) , var )
if ( TL_channelAdminRights . var != var )	if ( TL_poll . var != var )
TL_channelAdminRights var = new TL_channelAdminRights	TL_poll var = new TL_poll
admins_enabled = ( flags & 8 ) != 0	var = ( var & 8 ) != 0
admin = ( flags & 16 ) != 0	var = ( var & 16 ) != 0
democracy = ( flags & 1024 ) != 0	creator = ( flags & 1 ) != 0
democracy = ( flags & 1024 ) != 0	left = ( flags & 4 ) != 0
creator = ( flags & 1 ) != 0	left = ( flags & 4 ) != 0
left = ( flags & 4 ) != 0	broadcast = ( flags & 32 ) != 0
democracy = ( flags & 1024 ) != 0	verified = ( flags & 128 ) != 0
admin_rights = TL_channelAdminRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	banned_rights = TL_chatBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )
banned_rights = TL_channelBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	admin_rights_layer92 = TL_channelAdminRights_layer92 . TLdeserialize ( var , var . readInt32 ( var ) , var )
if ( ( flags & 32768 ) != 0 )	if ( ( var & 128 ) != 0 )
banned_rights . serializeToStream ( var )	var . serializeToStream ( var )
left = ( flags & 4 ) != 0	can_view_participants = ( flags & 8 ) != 0
broadcast = ( flags & 32 ) != 0	can_set_username = ( flags & 64 ) != 0
verified = ( flags & 128 ) != 0	can_set_stickers = ( flags & 128 ) != 0
democracy = ( flags & 1024 ) != 0	hidden_prehistory = ( flags & 1024 ) != 0
admin_rights = TL_channelAdminRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	admin_rights = TL_chatAdminRights . TLdeserialize ( var , var . readInt32 ( var ) , var )
banned_rights = TL_channelBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	message = Message . TLdeserialize ( var , var . readInt32 ( var ) , var )
if ( ( flags & 16384 ) != 0 )	if ( ( flags & 16 ) != 0 )
admin_rights . serializeToStream ( var )	var . writeInt32 ( migrated_from_chat_id )
if ( ( flags & 32768 ) != 0 )	if ( ( flags & 256 ) != 0 )
banned_rights . serializeToStream ( var )	stickerset . serializeToStream ( var )
democracy = ( flags & 1024 ) != 0	can_set_username = ( flags & 128 ) != 0
admin_rights = TL_channelAdminRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = TL_chatBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )
banned_rights = TL_channelBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = TL_chatBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )
admins_enabled = ( flags & 8 ) != 0	id = var . readInt32 ( var )
WallPaper var = null	PageListOrderedItem var = null
var = new TL_wallPaper	TL_wallPaper var = new TL_wallPaper
var = new TL_wallPaperSolid	var = new TL_account_wallPapers
if ( var == null && var )	if ( var )
color = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeInt32 ( color )	var . writeInt32 ( var )
bg_color = var . readInt32 ( var )	var = var . readInt32 ( var )
color = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeInt32 ( bg_color )	var . writeInt32 ( var )
var . writeInt32 ( color )	var . writeInt32 ( kicked_by )
id = var . readInt64 ( var )	var = var . readInt64 ( var )
access_hash = var . readInt64 ( var )	var = var . readInt64 ( var )
var . writeInt64 ( id )	var . writeInt64 ( var )
var . writeInt64 ( access_hash )	var . writeInt64 ( var )
var . writeBool ( var )	var . serializeToStream ( var )
WallPaper var = WallPaper . TLdeserialize ( var , var . readInt32 ( var ) , var )	banned_rights_layer92 = TL_channelBannedRights_layer92 . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeBool ( var )	var . writeInt32 ( var )
if ( ( var & 1 ) != 0 )	if ( ( flags & 8192 ) != 0 )
var . writeBool ( var )	var . writeInt64 ( access_hash )
var . writeBool ( var )	var . writeInt32 ( var )
return ExportedChatInvite . TLdeserialize ( var , var , var )	return Updates . TLdeserialize ( var , var , var )
if ( ( var & 8192 ) != 0 )	if ( ( flags & 8192 ) != 0 )
var . serializeToStream ( var )	var . get ( var ) . serializeToStream ( var )
var . var . thumb = var . var . thumb	var . var . thumbs . add ( var . var . thumb )
var . var . thumb = new TL_photoSizeEmpty	var . var . file_reference = new byte [ 0 ]
var . var . thumb . type = ""	var . var . thumbs . add ( var )
var . openSearchField ( ! var , var )	var . openSearchField ( ! var , var , var )
if ( var == null var )	if ( var == null )
return super . dispatchKeyEvent ( var )	return super . onTouchEvent ( var )
if ( var != null )	if ( var == null )
var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 48 ) . MATCH_PARENT , 48 )	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 50 ) . MATCH_PARENT , 50 )
var . layout ( var - getPaddingRight var - var . getMeasuredWidth ( var ) , getPaddingTop var , var - getPaddingRight var + var . getMeasuredWidth ( var ) , getPaddingTop var + var . getMeasuredHeight ( var ) )	var . layout ( var - getPaddingRight var - var . getMeasuredWidth ( var ) , getPaddingTop var , var - getPaddingRight var , getPaddingTop var + var . getMeasuredHeight ( var ) )
setText ( var , false )	return setText ( var , false )
if ( var )	if ( var && getMeasuredHeight != 0 )
if ( var + var != 0 )	if ( var + var != 0 || var != 0 )
var . translate ( var + var , 0 )	var . translate ( var + var , var )
if ( var + var != 0 )	if ( var + var != 0 || var != 0 )
var . put ( var , 0xff212121 )	var . put ( var , 0xff222222 )
var . put ( var , 0xff3a8ccf )	var . put ( var , 0xff3a95d5 )
var . put ( var , 0xff737373 )	var . put ( var , 0xff81868b )
var . put ( var , 0xff3b84c0 )	var . put ( var , 0xff4092cd )
var . put ( var , 0xff348bc1 )	var . put ( var , 0xff3a95d5 )
var . put ( var , 0xff37a919 )	var . put ( var , 0xff37a818 )
var . put ( var , 0xffed3d39 )	var . put ( var , 0xffed3939 )
var . put ( var , 0xff212121 )	var . put ( var , 0xff222222 )
var . put ( var , 0xff2f8cc9 )	var . put ( var , 0xff3a95d5 )
var . put ( var , 0xff3e90cf )	var . put ( var , 0xff3a95d5 )
var . put ( var , 0xffededed )	var . put ( var , 0xffde3a3a )
var . put ( var , 0xffc7c7c7 )	var . put ( var , 0xffb0b5ba )
var . put ( var , 0xff45abef )	var . put ( var , 0xffe14d4d )
var . put ( var , 0xffa0d6fa )	var . put ( var , 0xff52ade9 )
var . put ( var , 0xffdb585c )	var . put ( var , 0xf6f0f2f5 )
var . put ( var , 0xffffb0ad )	var . put ( var , 0xfff57e7e )
var . put ( var , 0xff44a8ea )	var . put ( var , 0xff6b7378 )
var . put ( var , 0xffa0d6fa )	var . put ( var , 0xff52ade9 )
var . put ( var , 0xfff2f2f2 )	var . put ( var , 0xffeef3f5 )
var . put ( var , 0xff8a8a8a )	var . put ( var , 0xff7f8991 )
var . put ( var , 0xff636363 )	var . put ( var , 0xffc9cdd1 )
var . put ( var , 0xffbfd6ea )	var . put ( var , 0xffe6eff7 )
var . put ( var , 0xfff37fa6 )	var . put ( var , 0xfff5f5f5 )
var . put ( var , 0xff56a14c )	var . put ( var , var )
var . put ( var , 0xff4492ac )	var . put ( var , var )
var . put ( var , 0xff598fba )	var . put ( var , var )
var . put ( var , 0xfff9cbc5 )	var . put ( var , var )
var . put ( var , 0xfffdddc8 )	var . put ( var , var )
var . put ( var , 0xffcdc4ed )	var . put ( var , var )
var . put ( var , 0xffc0edba )	var . put ( var , var )
var . put ( var , 0xffb8e2f0 )	var . put ( var , var )
var . put ( var , 0xffd7eafa )	var . put ( var , var )
var . put ( var , 0xffbc4b41 )	var . put ( var , var )
var . put ( var , 0xffe67429 )	var . put ( var , var )
var . put ( var , 0xff735fbe )	var . put ( var , var )
var . put ( var , 0xff39849d )	var . add ( var )
var . put ( var , 0xff4981ad )	var . put ( var , 0xff889198 )
var . put ( var , 0xffffffff )	var . name = ""
var . put ( var , 0xffffffff )	var . put ( var , 0x66728fa6 )
var . put ( var , 0xff212121 )	var . put ( var , 0xff222222 )
var . put ( var , 0xff212121 )	var . put ( var , 0xff222222 )
var . put ( var , 0xff737373 )	var . put ( var , 0xff889198 )
var . put ( var , 0xff6aa1ce )	var . put ( var , 0xff65a9e0 )
var . put ( var , 0xff5792c2 )	var . put ( var , 0xff569dd6 )
var . put ( var , 0xff212121 )	var . put ( var , 0xff222222 )
var . put ( var , 0xff4a97d6 )	var . put ( var , 0xff3a95d5 )
var . put ( var , 0xff858585 )	var . put ( var , 0xfff5f5f5 )
var . put ( var , 0xff737373 )	var . put ( var , 0xff81868a )
var . put ( var , 0xfff0f0f0 )	var . put ( var , 0xfff0f3f5 )
var . put ( var , 0xffffffff )	var . put ( var , 0xffb7bec3 )
var . put ( var , 0xff212121 )	var . put ( var , 0xff222222 )
var . put ( var , 0xFF4a97d6 )	var . put ( var , 0xff85caff )
if ( var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) )	if ( var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) )
var = var . getDrawable ( R . drawable . photo_w )	var = var . getDrawable ( R . drawable . msg_round_file_s ) . mutate
if ( var == null = var )	if ( var == null )
if ( var == null = var )	if ( var == null )
var . setColorFilter ( new PorterDuffColorFilter ( getColor ( var ) , PorterDuff . Mode . MULTIPLY ) ( var ) , PorterDuff . Mode . MULTIPLY )	var = new PorterDuffColorFilter ( var , PorterDuff . Mode . MULTIPLY )
var = result [ 0 ]	var = var = result [ 0 ]
var = result [ 1 ]	var = var = result [ 1 ]
var = MessagesController . getGlobalMainSettings ( )	long var = getSelectedBackgroundId
int var = var . getInt ( "" , 1000001 )	int var = var . getInt ( "" , ( int ) var )
if ( var == 1000001 )	if ( var == DEFAULT_BACKGROUND_ID )
if ( var == 0 - 1 < var . size ( ) )	if ( var == 0 )
if ( var == 0 - 1 < var . size ( ) )	if ( var == 0 )
( ( GraySectionCell ) var ) . setText ( LocaleController . getString ( "" , R . string . Contacts ) , R . string . Contacts . toUpperCase )	var . setText ( LocaleController . getString ( "" , R . string . Contacts ) , R . string . Contacts )
var . setTextAndIcon ( LocaleController . getString ( "" , R . string . InviteFriends ) , R . string . InviteFriends , R . drawable . menu_invite )	var . setTextAndIcon ( LocaleController . getString ( "" , R . string . InviteFriends ) , R . string . InviteFriends , R . drawable . menu_invite , false )
var . setTextAndIcon ( LocaleController . getString ( "" , R . string . InviteToGroupByLink ) , R . string . InviteToGroupByLink , R . drawable . menu_invite )	var . setTextAndIcon ( LocaleController . getString ( "" , R . string . InviteToGroupByLink ) , R . string . InviteToGroupByLink , R . drawable . profile_link , false )
var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewGroup ) , R . string . NewGroup , R . drawable . menu_newgroup )	var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewGroup ) , R . string . NewGroup , R . drawable . menu_newgroup , false )
var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewSecretChat ) , R . string . NewSecretChat , R . drawable . menu_secret )	var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewSecretChat ) , R . string . NewSecretChat , R . drawable . menu_secret , false )
var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewChannel ) , R . string . NewChannel , R . drawable . menu_broadcast )	var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewChannel ) , R . string . NewChannel , R . drawable . menu_broadcast , false )
var . setText ( var . first_name + "" + var . last_name )	var . setText ( var . first_name + "" + var . last_name , false )
var . setText ( var . first_name )	var . setText ( var . first_name , false )
var . setText ( var . last_name )	var . setText ( var . last_name , false )
if ( var == 0 - 1 < var . size ( ) )	if ( var == 0 )
var . setLayoutParams ( new RecyclerView . LayoutParams ( AndroidUtilities . dp ( 80 ) , AndroidUtilities . dp ( 100 ) ) . dp ( 80 ) , AndroidUtilities . dp ( 100 ) )	var . setLayoutParams ( new RecyclerView . LayoutParams ( AndroidUtilities . dp ( 80 ) , AndroidUtilities . dp ( 86 ) ) . dp ( 80 ) , AndroidUtilities . dp ( 86 ) )
var = ContactsController . formatName ( var . first_name , var . last_name )	var = UserObject . getFirstName ( var )
if ( var != null && var . equals ( var ) && ! var . isEmpty ( ) )	if ( var . equals ( var ) && ! var . isEmpty ( ) )
if ( var != null && lastSearchText != null && var . equals ( lastSearchText ) )	if ( var != null && var . equals ( lastSearchText ) )
if ( var == null || var . length ( ) == 0 )	if ( TextUtils . isEmpty ( var ) )
searchAdapterHelper . queryServerSearch ( null , true , true , true , true , 0 , false )	searchAdapterHelper . queryServerSearch ( null , true , true , true , true , 0 , 0 )
searchAdapterHelper . queryServerSearch ( var , true , true , true , true , 0 , false )	searchAdapterHelper . queryServerSearch ( var , true , true , true , true , 0 , 0 )
var . setLayoutParams ( new RecyclerView . LayoutParams ( RecyclerView . LayoutParams . MATCH_PARENT , AndroidUtilities . dp ( 100 ) ) . LayoutParams . MATCH_PARENT , AndroidUtilities . dp ( 100 ) )	var . setLayoutParams ( new RecyclerView . LayoutParams ( RecyclerView . LayoutParams . MATCH_PARENT , AndroidUtilities . dp ( 86 ) ) . LayoutParams . MATCH_PARENT , AndroidUtilities . dp ( 86 ) )
var . setText ( LocaleController . getString ( "" , R . string . ChatHints ) , R . string . ChatHints . toUpperCase )	var . setText ( LocaleController . getString ( "" , R . string . ChatHints ) , R . string . ChatHints )
var . setText ( LocaleController . getString ( "" , R . string . Recent ) , R . string . Recent . toUpperCase )	var . setText ( LocaleController . getString ( "" , R . string . Recent ) , R . string . Recent )
var . setText ( LocaleController . getString ( "" , R . string . Hashtags ) , R . string . Hashtags . toUpperCase )	var . setText ( LocaleController . getString ( "" , R . string . Hashtags ) , R . string . Hashtags )
var . filter . q = var	var . q = var
var . queryServerSearch ( null , true , var , var , true , var , false )	var . queryServerSearch ( null , true , var , var , true , var , 0 )
var . queryServerSearch ( var , true , var , var , true , var , false )	var . queryServerSearch ( var , true , var , var , true , var , - 1 )
ArrayList < TLRPC . User > var = new ArrayList var ( var )	ArrayList < TLObject > var = new ArrayList var ( var )
if ( var . id == UserConfig . getInstance ( var ) . getClientUserId var || var && ! var . mutual_contact )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId var || var && ! var . mutual_contact || var != null && var . indexOfKey ( var . user_id ) >= 0 )
return var . getAdapterPosition ( ) != var . size ( )	return var . getItemViewType ( ) == 0
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . RequestFlagFailOnServerErrors
if ( var . length ( ) > 0 && var != 0 )	if ( var != 0 )
var = var . participants	var . addAll ( var . participants )
req . limit = 50	lastFoundChannel = query . toLowerCase ( )
channelReqId2 = ConnectionsManager . getInstance ( currentAccount ) . sendRequest ( req , var , var )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
if ( var == null )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
TLRPC . TL_channels_channelParticipants var = ( TLRPC . TL_channels_channelParticipants ) var	TLRPC . User var = ( TLRPC . User ) globalSearchMap . get ( var . keyAt ( var ) )
lastFoundChannel2 = query . toLowerCase ( )	TLRPC . User var = ( TLRPC . User ) globalSearchMap . get ( var . keyAt ( var ) )
groupSearch2 = var . participants	globalSearch . remove ( var )
delegate . onDataSetChanged ( )	localServerSearch . remove ( var )
groupSearch2 . clear ( )	groupSearchMap . clear ( )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . fileDidFailedLoad )
if ( var == NotificationCenter . FileDidLoaded || var == NotificationCenter . FileDidFailedLoad )	if ( var == NotificationCenter . fileDidLoad || var == NotificationCenter . fileDidFailedLoad )
int var = Math . min ( 10 , var . var ( ) )	int var = Math . min ( 6 , var . var ( ) )
File var = FileLoader . getPathToAttach ( var . thumb , "" , true )	File var = FileLoader . getPathToAttach ( var , "" , true )
var . add ( FileLoader . getAttachFileName ( var . thumb , "" ) . thumb , "" )	var . add ( FileLoader . getAttachFileName ( var , "" ) , "" )
FileLoader . getInstance ( var ) . loadFile ( var . thumb . location , "" , 0 , 1 )	FileLoader . getInstance ( var ) . loadFile ( var . location , var . get ( var ) , "" , 0 , 1 , 1 )
addStickerToResult ( var )	addStickerToResult ( var , "" )
addStickerToResult ( var )	addStickerToResult ( var , "" )
addStickersToResult ( var )	addStickersToResult ( var , null )
searchServerStickers ( var )	searchServerStickers ( var , var )
addStickersToResult ( var . var )	addStickersToResult ( var . var , "" + var )
( ( StickerCell ) var . itemView ) . setSticker ( stickers . get ( var ) , var )	( ( StickerCell ) var . itemView ) . setSticker ( stickers . get ( var ) , stickersParents . get ( var ) , var )
if ( var . getSystemWindowInsetBottom ( ) == 0 )	if ( var . getSystemWindowInsetLeft ( ) != 0 )
var . setVisibility ( INVISIBLE )	var = var . getSystemWindowInsetLeft ( )
var . setVisibility ( VISIBLE )	var [ 1 ] . setVisibility ( VISIBLE )
if ( var >= 3500 && var > Math . abs ( var ) )	if ( ! var && var >= 3500 && var > Math . abs ( var ) )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , var . getMeasuredWidth ( ) ) , "" , var . getMeasuredWidth ( ) , ObjectAnimator . ofFloat ( this , "" , ( float ) var . getMeasuredWidth ( ) ) , "" , ( float ) var . getMeasuredWidth ( ) )	var . playTogether ( ObjectAnimator . ofFloat ( var , View . TRANSLATION_X , var . getMeasuredWidth ( ) ) , View . TRANSLATION_X , var . getMeasuredWidth ( ) , ObjectAnimator . ofFloat ( this , var , ( float ) var . getMeasuredWidth ( ) ) , var , ( float ) var . getMeasuredWidth ( ) )
int var = var . getTop ( ) - AndroidUtilities . dp ( 54 ) + var	int var = location [ 1 ] + var - AndroidUtilities . dp ( 54 )
int var	int location = new int [ 2 ]
var . setLayoutFrozen ( true )	var [ 0 ] . setLayoutFrozen ( true )
var . setLayoutFrozen ( false )	var . setVerticalScrollBarEnabled ( false )
var . setBackgroundDrawable ( var . getResources ( ) . getDrawable ( R . drawable . menu_copy ) . drawable . menu_copy )	var . setBackgroundDrawable ( var = var . getResources ( ) . getDrawable ( R . drawable . menu_copy ) . drawable . menu_copy )
var . setTextColor ( 0xff000000 )	var . setTextColor ( 0xffa8a8a8 )
var . put ( var . name . toLowerCase ( ) , var . size ( ) )	tableHalfLinePaint . setStyle ( Paint . Style . STROKE )
var . id = var . mid = ( ( int ) var . id ) + var	var . id = var . mid = - ( ( Long ) var . audio_id ) . hashCode
var . put ( ( TLRPC . TL_pageBlockAudio ) var , var )	var . put ( var , var )
setRichTextParents ( null , var . text )	tableHalfLinePaint . setStrokeWidth ( AndroidUtilities . dp ( 1 ) / 2.0f )
setRichTextParents ( null , var . caption )	webpageUrlPaint = new Paint ( Paint . ANTI_ALIAS_FLAG )
for ( int var = 0 ; var < var . items . size ( ) ; var ++ )	for ( int var = 0 ; var < var . length ; var ++ )
for ( int var = 0 ; var < var . items . size ( ) ; var ++ )	for ( int var = 0 ; var < listView . length ; var ++ )
for ( int var = 0 ; var < var . items . size ( ) ; var ++ )	for ( int var = 0 ; var < listView . length ; var ++ )
setRichTextParents ( null , var . items . get ( var ) . text )	var . texts . add ( var )
setRichTextParents ( null , var . items . get ( var ) . caption )	var . texts . add ( var )
if ( var instanceof TLRPC . TL_pageBlockCover && var . cover . caption != null && ! ( var . cover . caption instanceof TLRPC . TL_textEmpty ) && var > 1 )	if ( ( var != null && ! ( var instanceof TLRPC . TL_textEmpty ) || var != null && ! ( var instanceof TLRPC . TL_textEmpty ) ) && var > 1 )
var . put ( var . name . toLowerCase ( ) , var . size ( ) )	var . put ( var , var . size ( ) )
var . notifyDataSetChanged ( )	TLRPC . TL_pageBlockBlockquote var = ( TLRPC . TL_pageBlockBlockquote ) var
if ( var . size ( ) == 1 || var )	if ( var . size ( ) == 1 || var == - 1 )
var = var . getInt ( var + "" , 0 ) - var . getPaddingTop ( )	var = var . getInt ( var + "" , 0 ) - var [ 0 ] . getPaddingTop
var . scrollToPositionWithOffset ( var , var )	var [ 0 ] . scrollToPositionWithOffset ( var , var )
var . scrollToPositionWithOffset ( 0 , 0 )	var [ 0 ] . scrollToPositionWithOffset ( 0 , 0 )
updateInterfaceForCurrentPage ( false )	closePhoto ( false )
if ( var != null )	if ( var instanceof TLRPC . TL_pageBlockVideo )
Integer var = var . get ( var . toLowerCase ( ) )	TLRPC . TL_pageBlockVideo var = ( TLRPC . TL_pageBlockVideo ) var
updateInterfaceForCurrentPage ( true )	var . setUseFullscreen ( true )
if ( var instanceof TLRPC . TL_textUrl )	if ( var instanceof TLRPC . TL_textPhone )
return getText ( var , ( ( TLRPC . TL_textFixed ) var ) . text , var )	return getText ( var , var , ( ( TLRPC . TL_textFixed ) var ) . text , var , var )
return getText ( var , ( ( TLRPC . TL_textItalic ) var ) . text , var )	return getText ( var , var , ( ( TLRPC . TL_textItalic ) var ) . text , var , var )
return getText ( var , ( ( TLRPC . TL_textBold ) var ) . text , var )	return getText ( var , var , ( ( TLRPC . TL_textBold ) var ) . text , var , var )
return getText ( var , ( ( TLRPC . TL_textUnderline ) var ) . text , var )	return getText ( var , var , ( ( TLRPC . TL_textUnderline ) var ) . text , var , var )
return getText ( var , ( ( TLRPC . TL_textStrike ) var ) . text , var )	return getText ( var , var , ( ( TLRPC . TL_textStrike ) var ) . text , var , var )
SpannableStringBuilder var = new SpannableStringBuilder ( getText ( var , ( ( TLRPC . TL_textEmail ) var ) . text , var ) , ( ( TLRPC . TL_textEmail ) var ) . text , var )	SpannableStringBuilder var = new SpannableStringBuilder ( getText ( var , var , ( ( TLRPC . TL_textEmail ) var ) . text , var , var ) , var , ( ( TLRPC . TL_textEmail ) var ) . text , var , var )
SpannableStringBuilder var = new SpannableStringBuilder ( getText ( var , ( ( TLRPC . TL_textUrl ) var ) . text , var ) , ( ( TLRPC . TL_textUrl ) var ) . text , var )	SpannableStringBuilder var = new SpannableStringBuilder ( getText ( var , var , ( ( TLRPC . TL_textUrl ) var ) . text , var , var ) , var , ( ( TLRPC . TL_textUrl ) var ) . text , var , var )
if ( ( var & var ) != 0 )	if ( ( var & var ) != 0 || ( var & var ) != 0 )
var . setSpan ( new TextPaintSpan ( getTextPaint ( var , var , var ) , var , var ) ( var , var , var ) , var , var , var , var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( var , 0 , var . length ( var ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( var instanceof TLRPC . TL_pageBlockBlockquote || var instanceof TLRPC . TL_pageBlockPullquote )	if ( var instanceof TLRPC . TL_pageBlockPullquote )
if ( var instanceof TLRPC . TL_pageBlockEmbed )	if ( var instanceof TLRPC . TL_pageBlockKicker )
if ( ( var & var ) != 0 )	if ( ( var & var ) != 0 || ( var & var ) != 0 )
var . setFlags ( var . getFlags ( ) | TextPaint . UNDERLINE_TEXT_FLAG )	var . setFlags ( var . getFlags ( ) )
if ( var == null )	if ( quoteLinePaint == null var )
var . setColor ( 0xff262626 )	preformattedBackgroundPaint . setColor ( 0xff1b1b1b )
var . setColor ( 0xffebebeb )	urlPaint . setColor ( 0xff233846 )
var . setColor ( 0xffe5dec8 )	urlPaint . setColor ( 0xffcadee6 )
var . setColor ( 0xff262626 )	urlPaint . setColor ( 0xffdceaf7 )
var . setColor ( 0xff4d4b45 )	var . setColor ( 0xff8f97a0 )
var . setColor ( 0xff666666 )	var . setColor ( getGrayTextColor )
var . setTextSize ( AndroidUtilities . dp ( 14 ) )	var . setTextSize ( AndroidUtilities . dp ( 14 ) + var )
return new StaticLayout ( var , var , var , Layout . Alignment . ALIGN_CENTER , 1.0f , 0.0f , false )	var = new StaticLayout ( var , var , var , Layout . Alignment . ALIGN_CENTER , 1.0f , 0.0f , false )
if ( var == null || var != var )	if ( var == null || var == null || var != var )
if ( var == null || var == null )	if ( var != null || var == null || var == null )
if ( var >= var && var <= var + var . getWidth ( ) && var >= var && var <= var + var . getHeight ( ) )	if ( var >= var + var && var <= var + var + var && var >= var && var <= var + var . getHeight ( ) )
showProgressView ( true )	var . setUseFullscreen ( true )
var . var = var . getUrl ( )	var . dismiss ( )
showProgressView ( false )	var . setApplyTopPadding ( false )
if ( var instanceof TLRPC . TL_webPage && ( ( TLRPC . TL_webPage ) var ) . cached_page instanceof TLRPC . TL_pageFull )	if ( var instanceof TLRPC . TL_webPage && ( ( TLRPC . TL_webPage ) var ) . cached_page instanceof TLRPC . TL_page )
addPageToStack ( ( TLRPC . TL_webPage ) var , var )	addPageToStack ( ( TLRPC . TL_webPage ) var , var , 1 )
if ( var . getAction ( ) == MotionEvent . ACTION_CANCEL = true )	if ( var . getAction ( ) == MotionEvent . ACTION_CANCEL = false )
for ( int var = 0 ; var < var . cached_page . documents . size ( ) ; var ++ )	for ( int var = 0 ; var < currentPage . cached_page . documents . size ( ) ; var ++ )
TLRPC . Document var = var . cached_page . documents . get ( var )	TLRPC . Document var = currentPage . cached_page . documents . get ( var )
if ( var == NotificationCenter . FileDidLoaded )	if ( var == NotificationCenter . fileDidLoad )
if ( var == NotificationCenter . emojiDidLoaded )	if ( var == NotificationCenter . emojiDidLoad )
if ( var && var != 2 && var != null )	if ( nightModeEnabled && selectedColor != 2 && adapter != null )
var . notifyDataSetChanged ( )	adapter [ var ] . notifyDataSetChanged
if ( var == NotificationCenter . messagePlayingDidStarted )	if ( var == NotificationCenter . messagePlayingDidStart )
if ( var != null )	if ( listView != null )
int var = var . getChildCount ( )	int var = listView [ var ] . getChildCount
View var = var . getChildAt ( var )	View var = listView [ var ] . getChildAt ( var )
if ( var != null )	if ( listView != null )
int var = var . getChildCount ( )	int var = listView [ var ] . getChildCount
View var = var . getChildAt ( var )	View var = listView [ var ] . getChildAt ( var )
if ( var != null )	if ( listView != null )
int var = var . getChildCount ( )	int var = listView [ var ] . getChildCount
View var = var . getChildAt ( var )	View var = listView [ var ] . getChildAt ( var )
var . notifyDataSetChanged ( )	adapter [ var ] . notifyDataSetChanged
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < tableTextPaints . size ( ) ; var ++ )
updateFontEntry ( var . keyAt ( var ) , var . valueAt ( var ) , var , var , var , var )	updateFontEntry ( tableTextPaints . keyAt ( var ) , tableTextPaints . valueAt ( var ) , var , var , var , var )
var . setGlowColor ( 0xfff5f6f7 )	listView [ var ] . setGlowColor ( 0xfff5f6f7 )
var . setGlowColor ( 0xfff5efdc )	var . setBackgroundColor ( 0xfff5efdc )
var . setGlowColor ( 0xff141414 )	var . setBackgroundColor ( 0xff141414 )
if ( var != null )	if ( var != 0 )
if ( var == 2 )	if ( var == - 1 )
var . setColor ( 0xffebebeb )	var . setBackgroundColor ( 0xffffffff )
if ( var == 1 )	if ( var == - 1 )
var . setColor ( 0xff262626 )	var [ 0 ] . scrollToPositionWithOffset ( var , var - AndroidUtilities . dp ( 56 ) - var )
var . setColor ( 0xffffffff )	channelNamePaint . setColor ( 0xffffffff )
if ( var != null )	if ( embedPostDatePaint != null )
if ( var == 1 )	if ( var . charAt ( var . length ( ) - 1 ) == '\n' )
var . setColor ( 0xff666666 )	var = new StaticLayout ( var , var , var , var , 1.0f , AndroidUtilities . dp ( 4 ) , false )
if ( var != null )	if ( var == null )
if ( var == 1 )	if ( var <= 1 var )
var . valueAt ( var ) . setColor ( getTextColor )	var . setTextColor ( getTextColor )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( detailsTextPaints . keyAt ( var ) , detailsTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( relatedArticleTextPaints . keyAt ( var ) , relatedArticleTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( relatedArticleTextPaints . keyAt ( var ) , relatedArticleTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( photoCreditTextPaints . keyAt ( var ) , photoCreditTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( photoCreditTextPaints . keyAt ( var ) , photoCreditTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( photoCaptionTextPaints . keyAt ( var ) , photoCaptionTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( mediaCaptionTextPaints . keyAt ( var ) , mediaCaptionTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	updateFontEntry ( mediaCaptionTextPaints . keyAt ( var ) , mediaCaptionTextPaints . valueAt ( var ) , var , var , var , var )
var . valueAt ( var ) . setColor ( getTextColor )	var . setColor ( getTextColor )
var . valueAt ( var ) . setColor ( getTextColor )	relatedArticleHeaderPaint . setColor ( getTextColor )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < innerSpans . length ; var ++ )
var . valueAt ( var ) . setColor ( getTextColor )	listTextNumPaint . setColor ( getTextColor )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < innerSpans . length ; var ++ )
var . valueAt ( var ) . setColor ( getTextColor )	var . setColor ( getTextColor )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < innerSpans . length ; var ++ )
var . valueAt ( var ) . setColor ( getTextColor )	var . setColor ( getTextColor )
var = var	parentFragment = var
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStart )
var = var . getResources ( ) . getDrawable ( R . drawable . slide_dot_small )	slideDotDrawable = var . getResources ( ) . getDrawable ( R . drawable . slide_dot_small )
var = new FrameLayout ( var )	titleTextView = new SimpleTextView ( activity )
var = new View ( var )	var = new TL_pageBlockOrderedListItem
var . setBackgroundColor ( 0xff000000 )	var . setTextColor ( 0xff000000 )
var . addView ( var )	var . items . add ( var )
var . setClipToPadding ( false )	var . setAllowReset ( false )
var . setPadding ( 0 , AndroidUtilities . dp ( 56 ) , 0 , 0 )	listView [ var ] . setPadding ( 0 , AndroidUtilities . dp ( 56 ) , 0 , 0 )
var . setTopGlowOffset ( AndroidUtilities . dp ( 56 ) )	listView [ var ] . setTopGlowOffset ( AndroidUtilities . dp ( 56 ) )
if ( var == var . size ( ) && var != null >= 0 && var < var . size ( ) )	if ( var == var . localBlocks . size ( ) && currentPage != null )
showProgressView ( true )	var = new LinkPath ( true )
showProgressView ( false )	var . setAllowReset ( false )
if ( var >= 0 && var < var . size ( ) )	if ( var == var . localBlocks . size ( ) && currentPage != null )
MessagesController . getInstance ( var ) . openByUserName ( var . channel . username , var , 2 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( var . channel . username , parentFragment , 2 )
var . setColor ( 0xff000000 )	. setColor ( 0xff000000 )
int var = var . findFirstVisibleItemPosition ( )	int var = layoutManager [ 0 ] . findFirstVisibleItemPosition
int var = var . findLastVisibleItemPosition ( )	int var = layoutManager [ 0 ] . findLastVisibleItemPosition
int var = var . getItemCount ( )	int var = layoutManager [ 0 ] . getItemCount
var = var . findViewByPosition ( var - 2 )	var = layoutManager [ 0 ] . findViewByPosition ( var - 2 )
var = var . findViewByPosition ( var )	var = layoutManager [ 0 ] . findViewByPosition ( var )
int var = var . getChildCount ( )	int var = layoutManager [ 0 ] . getChildCount
var = ( var - 2 - var ) * var * ( var . getMeasuredHeight ( ) - var . getTop ( ) ) / var	var = ( var - 2 - var ) * var * ( listView [ 0 ] . getMeasuredHeight - var . getTop ( ) ) / var
var . setRotated ( false )	backDrawable . setRotated ( false )
var . setImageDrawable ( var )	backButton . setImageDrawable ( backDrawable )
for ( int var = 0 ; var < 3 ; var ++ )	for ( int var = 0 ; a < 3 ; a ++ )
var [ var ] = new ColorCell ( var )	colorCells [ var ] = new ColorCell ( parentActivity )
var . notifyDataSetChanged ( )	adapter [ var ] . notifyDataSetChanged
var [ var ] . select ( var == var )	colorCells [ var ] . select ( var == var )
var . notifyDataSetChanged ( )	adapter [ var ] . notifyDataSetChanged
for ( int var = 0 ; var < 2 ; var ++ )	for ( int var = 0 ; a < 2 ; a ++ )
var [ var ] . select ( var == var )	fontCells [ var ] . select ( var == var )
var . notifyDataSetChanged ( )	adapter [ var ] . notifyDataSetChanged
var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 1 , 15 , 4 , 15 , 4 ) . MATCH_PARENT , 1 , 15 , 4 , 15 , 4 )	settingsContainer . addView ( divider , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 1 , 15 , 4 , 15 , 4 ) . MATCH_PARENT , 1 , 15 , 4 , 15 , 4 )
var . setScaleType ( ImageView . ScaleType . CENTER )	shareButton . setScaleType ( ImageView . ScaleType . CENTER )
captionTextViewOld = new TextView ( var )	captionTextViewNext = new TextView ( activity )
captionTextViewOld . setMaxLines ( 10 )	var = AndroidUtilities . dp ( 10 )
captionTextViewOld . setBackgroundColor ( 0x7f000000 )	captionTextView . setBackgroundColor ( 0x7f000000 )
captionTextViewOld . setPadding ( AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) , AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) )	captionTextView . setPadding ( AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) , AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) )
captionTextViewOld . setLinkTextColor ( 0xffffffff )	captionTextView . setLinkTextColor ( 0xffffffff )
captionTextViewOld . setTextColor ( 0xffffffff )	captionTextViewNext . setTextColor ( 0xffffffff )
captionTextViewOld . setGravity ( Gravity . CENTER_VERTICAL | Gravity . LEFT )	captionTextViewNext . setGravity ( Gravity . CENTER_VERTICAL | Gravity . LEFT )
captionTextViewOld . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 16 )	captionTextView . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 16 )
captionTextViewOld . setVisibility ( View . INVISIBLE )	var . setOrientation ( TableLayout . HORIZONTAL )
var . addView ( captionTextViewOld , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )	photoContainerView . addView ( captionTextView , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )
captionTextView = captionTextViewNew = new TextView ( var )	captionTextView = new TextView ( activity )
captionTextViewNew . setMaxLines ( 10 )	captionTextViewNext . setMaxLines ( 10 )
captionTextViewNew . setBackgroundColor ( 0x7f000000 )	captionTextViewNext . setBackgroundColor ( 0x7f000000 )
captionTextViewNew . setPadding ( AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) , AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) )	captionTextViewNext . setPadding ( AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) , AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 8 ) )
captionTextViewNew . setLinkTextColor ( 0xffffffff )	captionTextViewNext . setLinkTextColor ( 0xffffffff )
captionTextViewNew . setTextColor ( 0xffffffff )	lineProgressView . setProgressColor ( 0xffffffff )
captionTextViewNew . setGravity ( Gravity . CENTER_VERTICAL | Gravity . LEFT )	titleTextView . setGravity ( Gravity . CENTER_VERTICAL | Gravity . LEFT )
captionTextViewNew . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 16 )	captionTextViewNext . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 16 )
captionTextViewNew . setVisibility ( View . INVISIBLE )	var . addView ( var , new HorizontalScrollView . LayoutParams ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT )
var . addView ( captionTextViewNew , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )	photoContainerView . addView ( captionTextViewNext , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )
videoPlayerTime = new TextView ( var )	videoPlayerTime = new TextView ( activity )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , AndroidUtilities . dp ( 100 ) , 0 ) , "" , AndroidUtilities . dp ( 100 ) , 0 )	var . playTogether ( ObjectAnimator . ofFloat ( nightModeHintView , View . TRANSLATION_Y , AndroidUtilities . dp ( 100 ) ) , View . TRANSLATION_Y , AndroidUtilities . dp ( 100 ) )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , AndroidUtilities . dp ( 100 ) ) , "" , AndroidUtilities . dp ( 100 ) )	var . playTogether ( ObjectAnimator . ofFloat ( nightModeHintView , View . TRANSLATION_Y , AndroidUtilities . dp ( 100 ) , 0 ) , View . TRANSLATION_Y , AndroidUtilities . dp ( 100 ) , 0 )
var . setTopGlowOffset ( var )	listView [ var ] . setTopGlowOffset ( currentHeaderHeight )
var . add ( var . cover )	var . thumb = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 56 , true )
if ( var . cached_page instanceof TLRPC . TL_pagePart )	if ( var . cached_page instanceof TLRPC . TL_pagePart_layer82 || var . cached_page . part )
if ( var . size ( ) == 1 )	if ( pagesStack . size ( ) == 1 )
updateInterfaceForCurrentPage ( false )	createPaint ( false )
var . setTranslationY ( 0 )	settingsButton . setMenuYOffset ( Math . abs ( var . get ( 0 ) . height ) . get ( 0 ) . height )
var . setAlpha ( 1.0f )	listView [ 0 ] . setAlpha ( 1.0f )
captionTextViewNew . setVisibility ( View . GONE )	captionTextView . setVisibility ( View . GONE )
captionTextViewOld . setVisibility ( View . GONE )	captionTextViewNext . setVisibility ( View . GONE )
var . setAlpha ( 0.0f )	var [ 1 ] . setTranslationX ( 0.0f )
var . setAlpha ( 0.0f )	lineProgressView . setPivotX ( 0.0f )
var . setAlpha ( 0.0f )	titleTextView . setPivotX ( 0.0f )
var . scrollToPositionWithOffset ( 0 , 0 )	var [ 0 ] . scrollToPositionWithOffset ( 0 , 0 )
checkScroll ( - AndroidUtilities . dp ( 56 ) )	captionTextView . setVisibility ( View . GONE )
addPageToStack ( var , var )	boolean var = addPageToStack ( var , var , 0 )
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int )	NotificationCenter . getInstance ( currentAccount ) . setAllowedNotificationsDutingAnimation ( new int )
AnimatorSet var = new AnimatorSet	int var = getSelectedColor
var . setDuration ( 250 )	var . setDrawLines ( var . bordered )
var . setInterpolator ( new DecelerateInterpolator )	var . setStriped ( var . striped )
var . start ( )	var . setColumnCount ( var )
var . setDuration ( 150 )	var += var . getHeight ( ) + AndroidUtilities . dp ( 8 )
var . start ( )	progressViewAnimation . start ( )
var . dismiss ( )	visibleDialog . dismiss ( )
var . setRotation ( 0 , true )	backDrawable . setRotation ( 0 , true )
int var = var . findFirstVisibleItemPosition ( )	int var = layoutManager [ 0 ] . findFirstVisibleItemPosition
String var = "" + var . id	String var = "" + currentPage . id
if ( var == null || ! var || checkAnimation )	if ( parentActivity == null || ! isVisible || checkAnimation )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
if ( var != 0 )	if ( openUrlReqId != 0 )
showProgressView ( false )	listView [ var ] . setClipToPadding ( false )
if ( var != 0 )	if ( previewsReqId != 0 )
showProgressView ( false )	( ( DefaultItemAnimator ) listView [ var ] . getItemAnimator ) . setDelayAnimations ( false )
var . clear ( )	for ( int var = 0 ; var < listView . length ; var ++ )
var . clear ( )	for ( int var = 0 ; var < listView . length ; var ++ )
var . notifyDataSetChanged ( )	adapter [ var ] . cleanup
MessagesController . getInstance ( var ) . loadFullChat ( var . id , 0 , true )	AndroidUtilities . runOnUIThread ( , 1000 )
MessagesStorage . getInstance ( var ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , true , var . id )	MessagesStorage . getInstance ( var ) . updateDialogsWithDeletedMessages ( new ArrayList ( ) , null , true , var . id )
showActionBar ( 120 )	int var = AndroidUtilities . dp ( 120 )
var = new BlockHeaderCell ( var )	var = new BlockHeaderCell ( var , this )
var = new BlockEmbedCell ( var )	var = new BlockPhotoCell ( var , this , 0 )
var = new BlockSubtitleCell ( var )	var = new BlockTitleCell ( var , this )
var = new BlockPullquoteCell ( var )	var = new BlockFooterCell ( var , this )
var = new BlockBlockquoteCell ( var )	var = new BlockCollageCell ( var , this )
var = new BlockSlideshowCell ( var )	var = new BlockChannelCell ( var , this , 0 )
var = new BlockPhotoCell ( var , 0 )	var = new BlockSubtitleCell ( var , this )
var = new BlockAuthorDateCell ( var )	var = new BlockAudioCell ( var , this )
var = new BlockTitleCell ( var )	var = new BlockKickerCell ( var , this )
var = new BlockListCell ( var )	var = new BlockOrderedListItemCell ( var , this )
var = new BlockEmbedPostCell ( var )	TextView var = new TextView ( var )
var = new BlockCollageCell ( var )	var = new BlockRelatedArticlesShadowCell ( var )
var = new BlockChannelCell ( var , 0 )	var = new BlockEmbedCell ( var , this )
var = new BlockAudioCell ( var )	var = new BlockDetailsBottomCell ( var )
var = var . cover	var = var . var
var . setBlock ( ( TLRPC . TL_pageBlockVideo ) var , var == 0 , var == var . size ( ) - 1 )	var . setBlock ( ( TLRPC . TL_pageBlockVideo ) var , var == 0 , var == var - 1 )
var . setBlock ( ( TLRPC . TL_pageBlockPhoto ) var , var == 0 , var == var . size ( ) - 1 )	var . setBlock ( ( TLRPC . TL_pageBlockPhoto ) var , var == 0 , var == var - 1 )
BlockListCell var = ( BlockListCell ) var . itemView	BlockListItemCell var = ( BlockListItemCell ) var . itemView
var . setBlock ( ( TLRPC . TL_pageBlockList ) var )	var . setBlock ( ( TLRPC . TL_pageBlockMap ) var , var == 0 , var == var - 1 )
var . setBlock ( ( TLRPC . TL_pageBlockAudio ) var , var == 0 , var == var . size ( ) - 1 )	var . setBlock ( ( TLRPC . TL_pageBlockAudio ) var , var == 0 , var == var - 1 )
var . setBackgroundColor ( 0xff262626 )	var . setBackgroundColor ( 0xffff0000 )
if ( var instanceof TLRPC . TL_pageBlockList )	if ( var instanceof TLRPC . TL_pageBlockMap )
return var || var != 0 || checkLayoutForLinks ( var , this , var , var , var ) || super . onTouchEvent ( var )	return var || var != 0 || checkLayoutForLinks ( var , this , var , var , var ) || checkLayoutForLinks ( var , this , var , var , var + var ) || super . onTouchEvent ( var )
var = var . getWidth ( )	var = ( ( View ) getParent ) . getMeasuredWidth
TLRPC . PhotoSize var = var . var	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 48 )
var = var / ( float ) var . h	var = var / var
var += AndroidUtilities . dp ( 8 ) + var . getHeight ( )	var += AndroidUtilities . dp ( 4 ) + var . getHeight ( )
var . translate ( var , var = var . getImageY ( ) + var . getImageHeight ( ) + AndroidUtilities . dp ( 8 ) )	var = var . getImageY ( ) + var . getImageHeight ( ) + AndroidUtilities . dp ( 8 )
public BlockAudioCell ( Context var )	public BlockAudioCell ( Context var , WebpageAdapter var )
var = var . get ( var )	var = var . audioBlocks . get ( var )
var . caption = new TLRPC . TL_textPlain ( )	TLRPC . TL_textPlain var = new TLRPC . TL_textPlain ( )
if ( var != var )	if ( var != null )
var += AndroidUtilities . dp ( 8 ) + var . getHeight ( )	var += AndroidUtilities . dp ( 4 ) + var . getHeight ( )
int var = ( int ) Math . ceil ( var . measureText ( var ) )	int var = ( int ) Math . ceil ( audioTimePaint . measureText ( var ) )
if ( MediaController . getInstance ( ) . setPlaylist ( var , var , false ) )	if ( MediaController . getInstance ( ) . setPlaylist ( var . audioMessages , var , false ) )
public BlockEmbedPostCell ( Context var )	public BlockEmbedPostCell ( Context var , WebpageAdapter var )
var = 0	var = var
return checkLayoutForLinks ( var , this , var , var , var ) || super . onTouchEvent ( var )	return checkLayoutForLinks ( var , this , var , var , var ) || checkLayoutForLinks ( var , this , var , var , var + var ) || super . onTouchEvent ( var )
if ( var != var )	if ( var != null = 1 )
var += AndroidUtilities . dp ( 8 ) + var . getHeight ( )	var += AndroidUtilities . dp ( 4 ) + var . getHeight ( )
public BlockParagraphCell ( Context var )	public MessageGroupedLayoutAttempt ( int var , int var , float var , float var )
var = 0	var = new int
if ( var . level == 0 )	var = AndroidUtilities . dp ( 14 * var . level )
var = AndroidUtilities . dp ( 4 )	var = AndroidUtilities . dp ( 4 ) + var . getHeight ( )
var = AndroidUtilities . dp ( 8 )	var -= AndroidUtilities . dp ( 8 )
if ( var . caption != null )	if ( var . charAt ( 0 ) == 'w' )
if ( var != null )	if ( var == null || var < var )
boolean var = var . loadVideo ( var . url , var , null , var . autoplay )	boolean var = var . loadVideo ( var . url , var , currentPage , null , false )
var = AndroidUtilities . dp ( 18 )	var = var - AndroidUtilities . dp ( 36 )
var = var - AndroidUtilities . dp ( 36 )	var -= AndroidUtilities . dp ( 36 )
if ( var != var )	if ( var != 0 )
var += AndroidUtilities . dp ( 8 ) + var . getHeight ( )	var -= AndroidUtilities . dp ( 8 )
public BlockCollageCell ( Context var )	public BlockCollageCell ( Context var , WebpageAdapter var )
var . bottom = var . right = AndroidUtilities . dp ( 2 )	var -= AndroidUtilities . dp ( 2 )
var = new BlockPhotoCell ( getContext , 2 )	var = new BlockVideoCell ( getContext , var , 1 )
var = new BlockVideoCell ( getContext , 2 )	var = new BlockPhotoCell ( getContext , var , 1 )
TLRPC . PageBlock var = var . items . get ( var )	TLRPC . PageBlock var = var . items . get ( var . items . size ( ) - var - 1 )
var = 0	var = var
int var = ( int ) Math . ceil ( var . items . size ( ) / ( float ) var )	TLObject var = var . items . get ( var . items . size ( ) - var - 1 )
var . setSpanCount ( var )	var = createLayoutForText ( this , null , var . caption . text , var , var , var )
var = var * var - AndroidUtilities . dp ( 2 )	var -= AndroidUtilities . dp ( 2 )
var . layout ( var , 0 , var + var . getMeasuredWidth ( ) , var . getMeasuredHeight ( ) )	var . layout ( var , AndroidUtilities . dp ( 8 ) , var + var . getMeasuredWidth ( ) , var . getMeasuredHeight ( ) + AndroidUtilities . dp ( 8 ) )
public BlockSlideshowCell ( Context var )	public BlockSlideshowCell ( Context var , WebpageAdapter var )
var = new BlockPhotoCell ( getContext , 1 )	var = new BlockVideoCell ( getContext , var , 2 )
var = new BlockVideoCell ( getContext , 1 )	var = new BlockPhotoCell ( getContext , var , 2 )
int var = var . getCurrentItem ( )	int var = var . getCount ( )
int var = AndroidUtilities . dp ( 4 ) + AndroidUtilities . dp ( 13 ) * var	int var = var + AndroidUtilities . dp ( 4 ) + AndroidUtilities . dp ( 13 ) * var
var . notifyDataSetChanged ( )	var . forceLayout ( )
if ( var != var )	if ( var != null )
var . layout ( var , var , var + var . getMeasuredWidth ( ) , var + var . getMeasuredHeight ( ) )	var . layout ( 0 , var , var . getMeasuredWidth ( ) , var + var . getMeasuredHeight ( ) )
public BlockListCell ( Context var )	public BlockListItemCell ( Context var , WebpageAdapter var )
int var = AndroidUtilities . dp ( 36 )	int var = var - AndroidUtilities . dp ( 18 ) - var
StaticLayout var = var . get ( var )	int var = var . getLineAscent ( 0 )
var = false	var = true
var . clear ( )	var -= AndroidUtilities . dp ( 10 )
var . clear ( )	var -= AndroidUtilities . dp ( 8 )
if ( var == 0 )	if ( var . index == 0 && var . parent . level == 0 )
if ( var == 0 )	if ( var . index == 0 && var . parent . level == 0 )
TLRPC . RichText var = var . items . get ( var )	TLObject var = var . items . get ( var )
var = AndroidUtilities . dp ( 18 + 6 ) + var	var = AndroidUtilities . dp ( 18 + 6 ) + var . parent . maxNumWidth + var . parent . level * AndroidUtilities . dp ( 12 )
public BlockHeaderCell ( Context var )	public BlockRelatedArticlesCell ( Context var , WebpageAdapter var )
if ( var != var )	if ( var . title != null )
public BlockSubtitleCell ( Context var )	public BlockSubtitleCell ( Context var , WebpageAdapter var )
if ( var != var )	if ( var != null = 1 )
public BlockPullquoteCell ( Context var )	public BlockPullquoteCell ( Context var , WebpageAdapter var )
if ( var != var )	if ( var != null = 1 )
public BlockBlockquoteCell ( Context var )	public BlockBlockquoteCell ( Context var , WebpageAdapter var )
if ( var != var )	if ( var != null = 1 )
var += AndroidUtilities . dp ( 8 ) + var . getHeight ( )	var = AndroidUtilities . dp ( 8 )
var = 0	var = null
if ( var != null && var instanceof TLRPC . TL_pageBlockCover )	if ( channelBlock != null && var instanceof TLRPC . TL_pageBlockCover )
var = var . getWidth ( )	var = ( ( View ) getParent ) . getMeasuredWidth
if ( var != null )	if ( var != null = false )
var += AndroidUtilities . dp ( 8 ) + var . getHeight ( )	var += AndroidUtilities . dp ( 4 ) + var . getHeight ( )
boolean var = var instanceof TLRPC . TL_pageBlockCover && var != null && var . size ( ) > 1 && var . get ( 1 ) instanceof TLRPC . TL_pageBlockChannel	boolean var = var instanceof TLRPC . TL_pageBlockCover && var . blocks != null && var . blocks . var ( ) > 1 && var . blocks . get ( 1 ) instanceof TLRPC . TL_pageBlockChannel
if ( var != null )	if ( var != null = 0 )
var . translate ( var , var = var . getImageY ( ) + var . getImageHeight ( ) + AndroidUtilities . dp ( 8 ) )	var = var . getImageY ( ) + var . getImageHeight ( ) + AndroidUtilities . dp ( 8 )
public BlockChannelCell ( Context var , int var )	public BlockChannelCell ( Context var , WebpageAdapter var , int var )
var . setColor ( 0xff262626 )	var . setColor ( 0xff1b1b1b )
loadChannel ( this , var . var )	loadChannel ( this , var , var . var )
if ( var != var )	if ( var != null )
var = createLayoutForText ( var . channel . title , null , var - AndroidUtilities . dp ( 36 + 16 ) + 16 - var , var )	var = createLayoutForText ( this , var . channel . title , null , var - AndroidUtilities . dp ( 36 + 16 ) + 16 - var , var , Layout . Alignment . ALIGN_LEFT , var )
if ( var != var )	if ( var != null = 1 )
public BlockTitleCell ( Context var )	public BlockMapCell ( Context var , WebpageAdapter var , int var )
var = 0	var = var
var += AndroidUtilities . dp ( 8 + 8 ) + var . getHeight ( )	var += AndroidUtilities . dp ( 4 ) + var . getHeight ( )
if ( var == - 1 )	if ( ! var && var == 0 && var . level <= 0 )
if ( var . getLineLeft ( var ) > 0 )	if ( var . getLineLeft ( var ) != 0 )
var = 1	var = true
public BlockFooterCell ( Context var )	public BlockTitleCell ( Context var , WebpageAdapter var )
if ( var != var )	if ( var != null = 1 )
public BlockPreformattedCell ( Context var )	public BlockDividerCell ( Context var )
var = 0	var = var
if ( var != var )	if ( var != null = 1 )
var . translate ( AndroidUtilities . dp ( 12 ) , AndroidUtilities . dp ( 16 ) )	var . setTextSize ( AndroidUtilities . dp ( 16 ) + var )
public BlockSubheaderCell ( Context var )	public BlockDetailsBottomCell ( Context var )
var = 0	var . setScrollX ( 0 )
if ( var != var )	if ( var != null = 1 )
var . setVisibility ( View . INVISIBLE )	var . setVisibility ( View . GONE )
var . setVisibility ( View . INVISIBLE )	var . setVisibility ( View . GONE )
return getPhotoWithId ( var . photo_id )	return getPhotoWithId ( ( ( TLRPC . TL_pageBlockPhoto ) var ) . photo_id )
if ( var . video_id != 0 )	if ( var instanceof TLRPC . TL_pageBlockVideo )
return getDocumentWithId ( var . video_id )	return getDocumentWithId ( ( ( TLRPC . TL_pageBlockVideo ) var ) . video_id )
if ( var . video_id != 0 )	if ( var instanceof TLRPC . TL_pageBlockVideo )
if ( var != null && var . video_id != 0 )	if ( var != null && var instanceof TLRPC . TL_pageBlockVideo )
size [ 0 ] = var . thumb . size	size [ 0 ] = var . size
return var . thumb . location	return var
var . setVisibility ( View . INVISIBLE )	var . setVisibility ( View . GONE )
int var = var . getChildCount ( var )	int var = listView [ 0 ] . getChildCount var
View var = var . getChildAt ( var )	View var = listView [ 0 ] . getChildAt ( var )
CharSequence var = Emoji . replaceEmoji ( new SpannableStringBuilder ( var . toString ( var ) ) . toString ( var ) , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false )	CharSequence var = Emoji . replaceEmoji ( var , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false )
var . setTag ( null )	var [ var ] . setBackgroundDrawable ( null )
var . setTextColor ( 0xffffffff )	var . setVisibility ( View . VISIBLE )
var . setVisibility ( View . INVISIBLE )	var . setVisibility ( View . GONE )
TLRPC . FileLocation var = getFileLocation ( var , size )	TLRPC . PhotoSize var = getFileLocation ( var , size )
if ( ! ( var instanceof TLRPC . TL_fileLocationUnavailable ) var )	if ( ! ( var . location instanceof TLRPC . TL_fileLocationUnavailable ) var )
var . setImageBitmap ( var . getResources ( var ) . getDrawable ( R . drawable . photoview_placeholder ) . drawable . photoview_placeholder )	var . setImageBitmap ( parentActivity . getResources ( var ) . getDrawable ( R . drawable . photoview_placeholder ) . drawable . photoview_placeholder )
if ( var == null || var || checkPhotoAnimation var || var == null )	if ( pageSwitchAnimation != null || parentActivity == null || var || checkPhotoAnimation var || var == null )
NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoad )
int var = var . indexOf ( var )	int var = adapter [ 0 ] . photoBlocks . indexOf ( var )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0.0f , 1.0f ) , "" , 0.0f , 1.0f , ObjectAnimator . ofInt ( var , "" , 0 , 255 ) , "" , 0 , 255 , ObjectAnimator . ofFloat ( var , "" , 0 , 1.0f ) , "" , 0 , 1.0f , ObjectAnimator . ofFloat ( var , "" , 0 , 1.0f ) , "" , 0 , 1.0f , ObjectAnimator . ofFloat ( var , "" , 0 , 1.0f ) , "" , 0 , 1.0f )	var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0.0f , 1.0f ) , "" , 0.0f , 1.0f , ObjectAnimator . ofInt ( var , AnimationProperties . COLOR_DRAWABLE_ALPHA , 0 , 255 ) , AnimationProperties . COLOR_DRAWABLE_ALPHA , 0 , 255 , ObjectAnimator . ofFloat ( var , View . ALPHA , 0 , 1.0f ) , View . ALPHA , 0 , 1.0f , ObjectAnimator . ofFloat ( var , View . ALPHA , 0 , 1.0f ) , View . ALPHA , 0 , 1.0f , ObjectAnimator . ofFloat ( var , View . ALPHA , 0 , 1.0f ) , View . ALPHA , 0 , 1.0f , ObjectAnimator . ofFloat ( groupedPhotosListView , View . ALPHA , 0 , 1.0f ) , View . ALPHA , 0 , 1.0f )
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int var )	NotificationCenter . getInstance ( currentAccount ) . setAllowedNotificationsDutingAnimation ( new int var )
NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0.0f , 1.0f ) , "" , 0.0f , 1.0f , ObjectAnimator . ofInt ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 )	var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0.0f , 1.0f ) , "" , 0.0f , 1.0f , ObjectAnimator . ofInt ( var , AnimationProperties . COLOR_DRAWABLE_ALPHA , 0 ) , AnimationProperties . COLOR_DRAWABLE_ALPHA , 0 , ObjectAnimator . ofFloat ( var , View . ALPHA , 0 ) , View . ALPHA , 0 , ObjectAnimator . ofFloat ( var , View . ALPHA , 0 ) , View . ALPHA , 0 , ObjectAnimator . ofFloat ( var , View . ALPHA , 0 ) , View . ALPHA , 0 , ObjectAnimator . ofFloat ( groupedPhotosListView , View . ALPHA , 0 ) , View . ALPHA , 0 )
var . setLayerType ( View . LAYER_TYPE_NONE , null )	var [ var ] . setLayerType ( View . LAYER_TYPE_NONE , null )
View var = var . getChildAt ( var )	ImageReceiver var = getImageReceiverView ( var . getChildAt ( var ) , var , var )
ImageReceiver var = getImageReceiverFromListView ( var , var , coords )	ImageReceiver var = getImageReceiverView ( var . blockLayout . itemView , var , var )
var . parentView = var	var . parentView = listView [ 0 ]
if ( var == NotificationCenter . closeChats == NotificationCenter . messagePlayingDidReset )	if ( var == NotificationCenter . closeChats == NotificationCenter . messagePlayingDidReset || var == NotificationCenter . messagePlayingDidStart || var == NotificationCenter . messagePlayingPlayStateChanged )
if ( var == NotificationCenter . messagePlayingDidReset )	if ( var == NotificationCenter . messagePlayingDidReset || var == NotificationCenter . messagePlayingDidStart || var == NotificationCenter . messagePlayingPlayStateChanged )
var . media . document . thumb = new TLRPC . TL_photoSizeEmpty ( )	var . media . document . file_reference = new byte [ 0 ]
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . blockedUsersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoad )
if ( var == NotificationCenter . updateInterfaces == NotificationCenter . blockedUsersDidLoaded )	if ( var == NotificationCenter . updateInterfaces == NotificationCenter . blockedUsersDidLoad )
if ( var == NotificationCenter . blockedUsersDidLoaded )	if ( var == NotificationCenter . blockedUsersDidLoad )
final AlertDialog var = new AlertDialog ( getParentActivity var , 1 )	final AlertDialog var = new AlertDialog ( getParentActivity var , 3 )
var . setCanceledOnTouchOutside ( false )	var . setCanCacnel ( false )
var . putInt ( "" , 3 ) . commit var	var . putInt ( "" , 3 )
var . putInt ( "" , 0 ) . commit var	var . putInt ( "" , 0 )
var . putInt ( "" , 1 ) . commit var	var . putInt ( "" , 1 )
var . putInt ( "" , 2 ) . commit var	var . putInt ( "" , 2 )
var . setInexactRepeating ( AlarmManager . ELAPSED_REALTIME_WAKEUP , AlarmManager . INTERVAL_DAY , AlarmManager . INTERVAL_DAY , var )	var . setInexactRepeating ( AlarmManager . RTC_WAKEUP , 0 , AlarmManager . INTERVAL_DAY , var )
final AlertDialog var = new AlertDialog ( getParentActivity var , 1 )	final AlertDialog var = new AlertDialog ( getParentActivity var , 3 )
var . setCanceledOnTouchOutside ( false )	var . setCanCacnel ( false )
var . setCancelable ( false )	showDialog ( var . create ( var ) )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 )	CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 , 21 )
var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 48 ) . MATCH_PARENT , 48 )	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 50 ) . MATCH_PARENT , 50 )
var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 48 ) . MATCH_PARENT , 48 )	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 50 ) . MATCH_PARENT , 50 )
if ( var == NotificationCenter . didReceivedNewMessages && var == NotificationCenter . messagesDeleted && var )	if ( var == NotificationCenter . didReceiveNewMessages && var == NotificationCenter . messagesDeleted && var )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceiveNewMessages )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceiveNewMessages )
VoIPHelper . startCall ( var , getParentActivity , null )	var . setDelegate ( var , var , var )
if ( var == null || var . user . id != var || var . type != var )	if ( currentRow == null || currentRow . user . id != var || currentRow . type != var )
var = new AlertDialog ( getParentActivity , 1 )	var = new AlertDialog ( getParentActivity , 3 )
var . setMessage ( LocaleController . getString ( "" , R . string . Loading ) , R . string . Loading )	var . setText ( LocaleController . getString ( "" , R . string . SentSmsCodeTitle ) , R . string . SentSmsCodeTitle )
var . setCancelable ( false )	var . setCanCacnel ( false )
var . allow_flashcall = false	var . settings . allow_flashcall = false
if ( var . allow_flashcall )	if ( var . settings . allow_flashcall )
var . current_number = var . contains ( var ) || var . contains ( var )	var . settings . current_number = var . contains ( var ) || var . contains ( var )
if ( ! var . current_number )	if ( ! var . settings . current_number )
var . allow_flashcall = false	var . settings . allow_flashcall = false
var . current_number = false	var . settings . current_number = false
var . allow_flashcall = false	var . settings . allow_flashcall = false
var = new EditTextBoldCursor ( var )	var = new ImageView ( var )
var . setHint ( LocaleController . getString ( "" , R . string . Code ) , R . string . Code )	var . setGravity ( Gravity . TOP | Gravity . CENTER_HORIZONTAL )
var . setCursorColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText )	codeField [ var ] . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText )
var . setCursorWidth ( 1.5f )	codeField [ var ] . setCursorWidth ( 1.5f )
var . setCursorSize ( AndroidUtilities . dp ( 20 ) )	codeField [ var ] . setCursorSize ( AndroidUtilities . dp ( 20 ) )
var . setImeOptions ( EditorInfo . IME_ACTION_NEXT | EditorInfo . IME_FLAG_NO_EXTRACT_UI )	codeField [ var ] . setImeOptions ( EditorInfo . IME_ACTION_NEXT | EditorInfo . IME_FLAG_NO_EXTRACT_UI )
var . setInputType ( InputType . TYPE_CLASS_PHONE )	codeField [ var ] . setInputType ( InputType . TYPE_CLASS_PHONE )
var . setMaxLines ( 1 )	codeField [ var ] . setMaxLines ( 1 )
var . setPadding ( 0 , 0 , 0 , 0 )	codeField [ var ] . setPadding ( 0 , 0 , 0 , 0 )
if ( var == 3 )	if ( currentType == 3 )
var . setEnabled ( false )	codeField [ var ] . setEnabled ( false )
var . setInputType ( InputType . TYPE_NULL )	codeField [ var ] . setInputType ( InputType . TYPE_NULL )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 14 )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 15 )
var . setPadding ( 0 , AndroidUtilities . dp ( 2 ) , 0 , AndroidUtilities . dp ( 12 ) )	var . setPadding ( 0 , AndroidUtilities . dp ( 2 ) , 0 , AndroidUtilities . dp ( 10 ) )
if ( var != 0 && var != 4 )	if ( ! var )
var . putExtra ( Intent . EXTRA_SUBJECT , "" + var + "" + var )	mailer . putExtra ( Intent . EXTRA_SUBJECT , "" + version + "" + var )
var . phone_number = var	var . phone_number = phone
AlertsCreator . processError ( currentAccount , var , CancelAccountDeletionActivity . this , var )	AlertDialog var = ( AlertDialog ) AlertsCreator . processError ( currentAccount , var , CancelAccountDeletionActivity . this , var )
var . setText ( "" )	codeField [ var ] . setText ( "" )
if ( var != 0 )	if ( length == 0 = 5 )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . CancelAccountResetInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) , R . string . CancelAccountResetInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var )	CharSequence var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . CancelAccountResetInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) , R . string . CancelAccountResetInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var )
if ( var != 3 )	if ( currentType != 3 )
AndroidUtilities . showKeyboard ( var )	var . replace ( 0 , var , var . substring ( var , var + 1 ) , var + 1 )
var . setText ( LocaleController . formatString ( "" , R . string . CallText , 1 , 0 ) , R . string . CallText , 1 , 0 )	timeText . setText ( LocaleController . formatString ( "" , R . string . CallText , 1 , 0 ) , R . string . CallText , 1 , 0 )
if ( var == 2 && ( var == 4 || var == 3 ) )	if ( currentType == 2 && ( nextType == 4 || nextType == 3 ) )
if ( var <= 1000 )	if ( codeTime <= 1000 )
var . setProgress ( 1.0f - ( float ) var / ( float ) var )	progressView . setProgress ( 1.0f - ( float ) time / ( float ) timeout )
if ( var == 3 == 2 )	if ( currentType == 3 == 2 || currentType == 4 )
if ( var == 2 )	if ( currentType == 2 || currentType == 4 )
if ( var == 4 == 3 )	if ( nextType == 4 || nextType == 2 == 3 )
if ( var == 3 && ( var == 4 || var == 2 ) || var == 2 && ( var == 4 || var == 3 ) )	if ( currentType == 3 && ( nextType == 4 || nextType == 2 ) || currentType == 2 && ( nextType == 4 || nextType == 3 ) || currentType == 4 && nextType == 2 )
if ( var != null )	if ( codeField != null )
var . requestFocus ( )	codeField [ var ] . requestFocus
var . setText ( var )	codeField [ 0 ] . setText ( var )
return new ThemeDescription	Override public ThemeDescription getThemeDescriptions
var = new ImageView ( var )	var = new TextView ( var )
var . setScaleType ( ImageView . ScaleType . CENTER )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 13 )
if ( var == 0 )	if ( TextUtils . isEmpty ( var ) )
var . setImageDrawable ( null )	var . setVisibility ( GONE )
var . setImageResource ( var )	var . setText ( var )
var . didPressUrl ( var )	didPressUrl ( var )
int var = MeasureSpec . getSize ( var ) - AndroidUtilities . dp ( 71 + 16 )	int var = MeasureSpec . getSize ( var ) - AndroidUtilities . dp ( 23 + 23 )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var . setDuplicateParentStateEnabled ( false )	var . setColors ( Theme . key_switchTrack , Theme . key_switchTrackChecked , Theme . key_windowBackgroundWhite , Theme . key_windowBackgroundWhite )
var . setFocusableInTouchMode ( false )	var . setColors ( Theme . key_switchTrack , Theme . key_switchTrackChecked , Theme . key_windowBackgroundWhite , Theme . key_windowBackgroundWhite )
var . setImage ( var . cover . thumb . location , null , "" , null )	var . setImage ( var , null , "" , null , var )
if ( ! var . covers . isEmpty ( ) )	if ( var != null && var . location != null )
var . setChecked ( var )	var . setChecked ( var , true )
var = new RadialProgress ( this )	var = new RadialProgress2 ( this )
if ( var != 0 )	if ( var instanceof TLRPC . TL_photoSize )
var . swapMiniBackground ( getMiniDrawableForCurrentState )	var . setImageOverlay ( var , var )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
var . setMiniBackground ( getMiniDrawableForCurrentState , true , false )	var . setMiniIcon ( getMiniIconForCurrentState , false , true )
var . setMiniBackground ( getMiniDrawableForCurrentState , true , false )	var . setMiniIcon ( getMiniIconForCurrentState , false , true )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
var . setMiniBackground ( getMiniDrawableForCurrentState , true , false )	var . setMiniIcon ( getMiniIconForCurrentState , false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
var . setBackground ( getDrawableForCurrentState , true , false )	updateButtonState ( false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setAlphaForPrevious ( false )	var . setImageOverlay ( null , null )
var . setAlphaForPrevious ( false )	if ( var == 2 )
var . setMiniBackground ( getMiniDrawableForCurrentState , var == 1 , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setProgress ( 0 , var )	var . setProgress ( 1 , var )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , true , var )	var . setIcon ( getIconForCurrentState , var , var )
updateButtonState ( true )	String var = var . getArtworkUrl ( true )
var . setImage ( var . messageOwner . action . newUserPhoto . photo_small , "" , var , null , 0 )	var . setImage ( var . messageOwner . action . newUserPhoto . photo_small , "" , var , null , var , 0 )
var . setImage ( var . location , "" , var , null , 0 )	var . setImage ( var , "" , var , null , var , 0 )
var = new RadialProgress ( this )	var = new RadialProgress2 ( this )
var . didPressedUrl ( var , var , false )	var . didPressUrl ( var , var , false )
var . didPressedUrl ( var , var , false )	var . didPressUrl ( var , var , false )
var . didPressedBotButton ( this , var . var )	var . didPressBotButton ( this , var . var )
var . didPressedInstantButton ( this , var )	var . didPressInstantButton ( this , var )
var . didPressedImage ( this )	var . didPressImage ( this )
var . setBackground ( getDrawableForCurrentState var , false , false )	var . setIcon ( getIconForCurrentState var , false , true )
didPressedButton ( false )	updateButtonState ( false , false , false )
var . didPressedImage ( this )	var . didPressImage ( this )
if ( var && Build . VERSION . SDK_INT >= 21 && var != null )	if ( var != - 1 && Build . VERSION . SDK_INT >= 21 && var != null )
var . didPressedInstantButton ( this , var )	var . didPressInstantButton ( this , var )
var . didPressedOther ( this )	var . didPressOther ( this )
if ( var >= var . getImageX ( var ) && var <= var . getImageX ( var ) + var && var >= var . getImageY ( var ) && var <= var . getImageY ( var ) + var . getImageHeight ( var ) )	if ( var >= var . getImageX ( var ) && var <= var . getImageX ( var ) + var . getImageWidth ( var ) && var >= var . getImageY ( var ) && var <= var . getImageY ( var ) + var . getImageHeight ( var ) )
didPressedButton ( false )	updateButtonState ( false , false , false )
didPressedMiniButton ( false )	updateButtonState ( false , false , false )
didPressedButton ( false )	updateButtonState ( false , false , false )
didPressedButton ( true )	didPressButton ( true )
didPressedButton ( true )	didPressMiniButton ( true )
didPressedMiniButton ( true )	didPressButton ( true )
var . didPressedBotButton ( this , var . get ( var ) . var )	var . didPressBotButton ( this , var . get ( var ) . var )
var . didPressedUserAvatar ( this , var )	var . didPressUserAvatar ( this , var )
var . didPressedChannelAvatar ( this , var , 0 )	var . didPressChannelAvatar ( this , var , 0 )
var . didPressedChannelAvatar ( this , var , var . messageOwner . fwd_from . channel_post )	var . didPressChannelAvatar ( this , var , var . messageOwner . fwd_from . channel_post )
var . didPressedUserAvatar ( this , var )	var . didPressUserAvatar ( this , var )
var . didPressedReplyMessage ( this , var . messageOwner . reply_to_msg_id )	var . didPressReplyMessage ( this , var . messageOwner . reply_to_msg_id )
var . didPressedShare ( this )	var . didPressShare ( this )
FileLoader . getInstance ( var ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var , var , 1 , 0 )
var . setBackground ( getDrawableForCurrentState var , false , false )	var . setIcon ( getIconForCurrentState var , false , false )
var . didPressedImage ( this )	var . didPressImage ( this )
didPressedButton ( false )	updateButtonState ( false , false , false )
var . didPressedUserAvatar ( this , var )	var . didPressUserAvatar ( this , var )
var . didPressedImage ( this )	var . didPressImage ( this )
var . setBackground ( getDrawableForCurrentState var , false , false )	var . setIcon ( getIconForCurrentState var , false , true )
var . didPressedImage ( this )	var . didPressImage ( this )
var . didPressedImage ( this )	var . didPressImage ( this )
var . didPressedImage ( this )	var . didPressImage ( this )
var . didPressedImage ( this )	var . didPressImage ( this )
TLRPC . FileLocation var = null	TLRPC . PhotoSize var = null
TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . replyMessageObject . photoThumbs , 80 )	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . replyMessageObject . photoThumbs , 40 )
var = var . location	var = var
var . didPressedUrl ( var , var , true )	var . didPressUrl ( var , var , true )
var . didPressedUrl ( var , var , true )	var . didPressUrl ( var , var , true )
var . didPressedUrl ( var , var , true )	var . didPressUrl ( var , var , true )
var . didLongPressed ( this )	var . didLongPress ( this )
var = var . mime_type != null && var . mime_type . toLowerCase ( var ) . startsWith ( "" ) || var . thumb != null && ! ( var . thumb instanceof TLRPC . TL_photoSizeEmpty ) && ! ( var . thumb . location instanceof TLRPC . TL_fileLocationUnavailable )	var = var . mime_type != null && var . mime_type . toLowerCase ( var ) . startsWith ( "" ) || MessageObject . isDocumentHasThumb ( var )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , AndroidUtilities . getPhotoSize ( var ) )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 40 )
if ( var != null var )	if ( var == null || var == var )
var . setImage ( null , null , null , null , var . location , var , 0 , null , 1 )	var . setImage ( var , null , "" , null , var , var , 0 , null , var , 1 )
var = new StaticLayout ( LocaleController . getString ( "" , R . string . AttachLiveLocation ) , R . string . AttachLiveLocation , Theme . chat_locationTitlePaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )	var = new StaticLayout ( TextUtils . ellipsize ( LocaleController . getString ( "" , R . string . AttachLiveLocation ) , R . string . AttachLiveLocation , Theme . chat_locationTitlePaint , var , TextUtils . TruncateAt . END ) . getString ( "" , R . string . AttachLiveLocation ) , R . string . AttachLiveLocation , Theme . chat_locationTitlePaint , var , TextUtils . TruncateAt . END , Theme . chat_locationTitlePaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
if ( var || var || var || isPhotoDataChanged ( var ) || var != var || var != var )	if ( var || var || var || var || isPhotoDataChanged ( var ) || var != var || var != var )
if ( Build . VERSION . SDK_INT >= 21 && var != null )	if ( ! var && Build . VERSION . SDK_INT >= 21 && var != null )
var . setParentMessageObject ( null )	var . setImageOverlay ( var )
if ( ( var . equals ( "" ) || var . equals ( "" ) || "" . equals ( var ) ) && var . messageOwner . media . webpage . cached_page instanceof TLRPC . TL_pageFull && ( var . messageOwner . media . webpage . photo instanceof TLRPC . TL_photo || MessageObject . isVideoDocument ( var . messageOwner . media . webpage . document ) ) )	if ( ( var . equals ( "" ) || var . equals ( "" ) || "" . equals ( var ) ) && var . messageOwner . media . webpage . cached_page instanceof TLRPC . TL_page && ( var . messageOwner . media . webpage . photo instanceof TLRPC . TL_photo || MessageObject . isVideoDocument ( var . messageOwner . media . webpage . document ) ) )
if ( var && var . needDrawAvatar ( var ) && ! var . isOut ( var ) var )	if ( var && var . needDrawAvatar ( var ) && ! var . isOutOwner ( var ) var )
var = Math . min ( AndroidUtilities . displaySize . x , AndroidUtilities . displaySize . y ) - AndroidUtilities . dp ( 132 )	var = AndroidUtilities . displaySize . x - AndroidUtilities . dp ( 132 )
var = Math . min ( AndroidUtilities . displaySize . x , AndroidUtilities . displaySize . y ) - AndroidUtilities . dp ( 80 )	var = int ( Math . min ( AndroidUtilities . displaySize . x , AndroidUtilities . displaySize . y ) . displaySize . x , AndroidUtilities . displaySize . y * 0.65f )
boolean var = var . toLowerCase ( var ) . equals ( "" )	boolean var = var != null && var . toLowerCase ( var ) . equals ( "" )
var = var . thumb	var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )
var = var . thumb	var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )
var = var . thumb	var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 40 )
var = var != null && ( var . equals ( "" ) || var . equals ( "" ) && var != var || var . equals ( "" ) || var == var )	var = var != null && ( var . equals ( "" ) || var . equals ( "" ) && var != var || var . equals ( "" ) || var == var || var == var )
var . setImage ( var , null , var , null , null , "" , var . size , null , 1 )	var . setImage ( var , null , var , null , null , "" , var . size , null , var , 1 )
var . setImage ( null , null , var . location , String . format ( Locale . US , "" , var , var ) . US , "" , var , var , 0 , null , 0 )	var . setImage ( null , null , var , String . format ( Locale . US , "" , var , var ) . US , "" , var , var , 0 , null , var , 0 )
var += AndroidUtilities . dp ( 86 )	var = var + AndroidUtilities . dp ( 31 )
if ( TextUtils . isEmpty ( var . caption ) && var . getLineCount ( var ) > 0 )	if ( ! var && TextUtils . isEmpty ( var . caption ) && var . getLineCount ( var ) > 0 )
var . setImage ( var , "" , var , null , 0 )	var . setImage ( var , "" , var , null , var , 0 )
int var = var - ( int ) Math . ceil ( var . getLineWidth ( 0 ) )	int var = var - ( int ) Math . ceil ( var . getLineWidth ( 0 ) ) - AndroidUtilities . dp ( 24 )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 40 )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 40 )
if ( ! var . needDrawBluredPreview ( var ) )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 40 )
var . setNeedsQualityThumb ( true )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 40 )
if ( ! var . needDrawBluredPreview ( var ) )	if ( var . var == 5 )
var . setNeedsQualityThumb ( true )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 40 )
if ( ! var . needDrawBluredPreview ( var ) )	if ( ! var . needDrawBluredPreview ( var ) && ( var == null || var == var ) && ( var == null || ! "" . equals ( var . var ) ) )
if ( var != null && var == var = null )	if ( var != null && var == var )
if ( var . var == 5 )	if ( var . var == 5 var )
if ( var . getLineCount ( var ) > 0 )	if ( var > 0 )
if ( var . getLineCount ( var ) > 0 )	if ( var != null && var . getLineCount ( var ) > 0 )
if ( var != - 1 && var - var < var )	if ( var == null && var != - 1 && var - var < var )
if ( Build . VERSION . SDK_INT >= 21 && var )	if ( Build . VERSION . SDK_INT >= 21 && var var )
if ( var != null && ( var . checkLayout ( var ) || var != null && var != AndroidUtilities . displaySize . y ) )	if ( var != null && ( var . checkLayout ( var ) || ( var . var == MessageObject . TYPE_POLL || var != null ) && var != AndroidUtilities . displaySize . y ) )
var . setHideCurrentDrawable ( false )	updateButtonState ( false , var && ! var . cancelEditing , true )
if ( var || var var )	if ( var || var || var == var var )
var . set ( var - AndroidUtilities . dp ( 4 ) , var - AndroidUtilities . dp ( 1.5f ) , var + var + AndroidUtilities . dp ( 4 ) , var + AndroidUtilities . dp ( 16.5f ) )	var . set ( var - AndroidUtilities . dp ( 4 ) , var - AndroidUtilities . dp ( 1.5f ) , var + var + AndroidUtilities . dp ( 4 ) , var + var )
int var = 4	int var = int ( var / 360 )
if ( var . messageOwner . destroyTime != 0 )	if ( var . messageOwner . destroyTime != 0 var )
if ( var . isOutOwner ( var ) = 6 = 5 )	if ( var . isOutOwner ( var ) var )
var . setHideCurrentDrawable ( true )	String var = var . getArtworkUrl ( true )
if ( var == var )	if ( var . getAction ( var ) == MotionEvent . ACTION_DOWN var )
var . setAlphaForMiniPrevious ( true )	didPressButton ( true )
var . setAlphaForPrevious ( true )	didPressButton ( true )
if ( var == var var )	if ( var == var )
if ( var == - 1 && var == var )	if ( var && Build . VERSION . SDK_INT >= 21 && var != null )
if ( var == var || var . var == 5 )	if ( var == var || var == var || var . var == 5 )
if ( var . var == 8 || var . var == 5 || var == var || var == var || var . var == 9 || var == var || var == var )	if ( var . var == 8 || var . var == 5 || var == var || var == var || var == var || var . var == 9 || var == var || var == var )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , var , var )
if ( TextUtils . isEmpty ( var ) )	if ( var . isSendError ( var ) || TextUtils . isEmpty ( var ) && ! var . isSending ( var ) && ! var . isEditing ( var ) )
var . setBackground ( getDrawableForCurrentState var , ! var , var )	var . setIcon ( getIconForCurrentState var , var , var )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , var , var )
if ( ! ( FileLoader . getInstance ( var ) . isLoadingFile ( var ) ) var )	if ( ! FileLoader . getInstance ( var ) . isLoadingFile ( var ) = 0 )
var . setMiniBackground ( getMiniDrawableForCurrentState var , var == 1 , var )	var . setMiniIcon ( getMiniIconForCurrentState var , var , var )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , var , var )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , var , var )
var . setBackground ( getDrawableForCurrentState var , true , var )	var . setIcon ( getIconForCurrentState var , var , var )
if ( var . var == 0 && var != var && var != var )	if ( var . var == 0 && var != var && var != var && var != var )
var . setBackground ( getDrawableForCurrentState var , var , var )	var . setIcon ( getIconForCurrentState var , var , var )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , var , var )
if ( var . messageOwner . attachPath != null && var . messageOwner . attachPath . length ( var ) > 0 )	if ( ! TextUtils . isEmpty ( var . messageOwner . attachPath ) var )
var . setBackground ( getDrawableForCurrentState var , var , var )	var . setIcon ( getIconForCurrentState var , var , var )
if ( var . messageOwner . attachPath != null && var . messageOwner . attachPath . length ( var ) != 0 )	if ( ! TextUtils . isEmpty ( var . messageOwner . attachPath ) )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , var , var )
if ( ! ( FileLoader . getInstance ( var ) . isLoadingFile ( var ) ) var )	if ( ! FileLoader . getInstance ( var ) . isLoadingFile ( var ) = 0 )
var . setMiniBackground ( getMiniDrawableForCurrentState var , var == 1 , var )	var . setMiniIcon ( getMiniIconForCurrentState var , var , var )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , var , var )
var . setBackground ( getDrawableForCurrentState var , var , var )	var . setIcon ( getIconForCurrentState var , var , var )
var . setMiniBackground ( getMiniDrawableForCurrentState var , true , false )	var . setMiniIcon ( getMiniIconForCurrentState var , false , true )
if ( var == 0 )	if ( var == 0 var )
var . setMiniBackground ( getMiniDrawableForCurrentState var , true , false )	var . setMiniIcon ( getMiniIconForCurrentState var , false , true )
var . setBackground ( getDrawableForCurrentState var , false , false )	var . setIcon ( getIconForCurrentState var , false , true )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , true , 1 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , var , 1 , 1 )
FileLoader . getInstance ( var ) . loadFile ( var . messageOwner . media . document , false , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . messageOwner . media . document , var , 0 , 0 )
var . setImage ( var . messageOwner . media . webpage . document , null , var . location , var , var . messageOwner . media . webpage . document . size , null , 0 )	var . setImage ( var . messageOwner . media . webpage . document , null , var , var , var . messageOwner . media . webpage . document . size , null , var , 0 )
FileLoader . getInstance ( var ) . loadFile ( var . messageOwner . media . webpage . document , false , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . messageOwner . media . webpage . document , var , 0 , 0 )
var . setBackground ( getDrawableForCurrentState var , true , var )	var . setIcon ( getIconForCurrentState var , false , var )
var . setBackground ( getDrawableForCurrentState var , false , false )	var . setIcon ( getIconForCurrentState var , false , var )
var . didPressedCancelSendButton ( this )	var . didPressCancelSendButton ( this )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , false , var )
FileLoader . getInstance ( var ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var , var , 1 , 0 )
var . setBackground ( getDrawableForCurrentState var , true , false )	var . setIcon ( getIconForCurrentState var , true , var )
var . setBackground ( getDrawableForCurrentState var , false , var )	var . setIcon ( getIconForCurrentState var , false , var )
var . setMiniBackground ( getMiniDrawableForCurrentState var , true , false )	var . setMiniIcon ( getMiniIconForCurrentState var , false , var )
var . didPressedImage ( this )	var . didPressImage ( this )
if ( var != null )	if ( var . getIcon ( var ) != MediaActionDrawable . ICON_CHECK )
var . didPressedCancelSendButton ( this )	var . didPressCancelSendButton ( this )
var . setBackground ( getDrawableForCurrentState var , false , false )	var . setIcon ( getIconForCurrentState var , false , var )
updateButtonState ( true , false )	updateButtonState ( false , true , false )
didPressedButton ( true )	didPressButton ( true )
updateButtonState ( true , false )	didPressButton ( true )
didPressedButton ( true )	didPressButton ( true )
updateButtonState ( true , false )	updateButtonState ( false , true , false )
updateButtonState ( true , false )	updateButtonState ( false , true , false )
updateButtonState ( false , false )	var = false
var . setCheckBackground ( false , true )	var . setIcon ( MediaActionDrawable . ICON_CHECK , false , true )
if ( var . isFromUser ( var ) )	return MediaActionDrawable . ICON_CANCEL
if ( var . isMegagroup ( var ) )	return MediaActionDrawable . ICON_DOWNLOAD
MessagesController . getInstance ( var ) . addToViewsQueue ( var . messageOwner )	MessagesController . getInstance ( var ) . addToViewsQueue ( var )
var . setImage ( var , "" , var , null , 0 )	var . setImage ( var , "" , var , null , var , 0 )
TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . replyMessageObject . photoThumbs2 , 80 )	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . replyMessageObject . photoThumbs2 , 320 )
var = FileLoader . getClosestPhotoSizeWithSize ( var . replyMessageObject . photoThumbs , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . replyMessageObject . photoThumbs , 320 )
var = var . location	var = var
var . setImage ( var . location , "" , null , null , 1 )	var . setImage ( var , "" , null , null , var . replyMessageObject , 1 )
setDrawableBounds ( Theme . chat_shareIconDrawable , var + AndroidUtilities . dp ( 9 ) , var + AndroidUtilities . dp ( 9 ) )	setDrawableBounds ( Theme . chat_shareIconDrawable , var + AndroidUtilities . dp ( 8 ) , var + AndroidUtilities . dp ( 9 ) )
if ( var != 1.0f || var != 1.0f )	if ( ( var != 1.0f || var != 1.0f ) && var . var != 5 )
public CheckBoxCell ( Context var , int var )	public CheckBoxCell ( Context var , int var , int var )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var = new RadialProgress ( this )	var = new RadialProgress2 ( this )
var = new ArrayList	var = new ArrayList ( var . thumbs )
var . add ( var . thumb )	var = new ArrayList ( var . thumbs )
var = var . thumb	var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )
var = var . thumb	var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )
var = var . thumb	var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )
var = var	var = var = var
var . swapBackground ( getDrawableForCurrentState )	var . setPressed ( var , false )
var . swapBackground ( getDrawableForCurrentState )	var . setPressed ( var , false )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
FileLoader . getInstance ( var ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var , var , 1 , 0 )
FileLoader . getInstance ( var ) . loadFile ( WebFile . createWithWebDocument ( var . content ) . content , true , 1 )	FileLoader . getInstance ( var ) . loadFile ( WebFile . createWithWebDocument ( var . content ) . content , 1 , 1 )
var . setBackground ( getDrawableForCurrentState , true , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setBackground ( null , false , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setProgress ( 0 , var )	var . setProgress ( 1 , var )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , true , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , true , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , var , var )
updateButtonState ( false )	updateButtonState ( false , true )
updateButtonState ( true )	updateButtonState ( true , var )
if ( ChatObject . isChannel ( var ) && var . messageOwner . action instanceof TLRPC . TL_messageActionHistoryClear )	if ( ChatObject . isChannel ( var ) && ( var . messageOwner . action instanceof TLRPC . TL_messageActionHistoryClear || var . messageOwner . action instanceof TLRPC . TL_messageActionChannelMigrateFrom ) )
TLRPC . TL_dialog var = getDialogsArray . get ( var )	TLRPC . TL_dialog var = var . get ( var )
var . setImage ( ( TLObject ) null , "" , var , null , 0 )	var . setImage ( null , "" , var , null , 0 )
var . setImage ( var , "" , var , null , 0 )	var . setImage ( var , "" , var , null , var , 0 )
var . drawLine ( 0 , getMeasuredHeight - 1 , getMeasuredWidth - AndroidUtilities . dp ( AndroidUtilities . leftBaseline ) . leftBaseline , getMeasuredHeight - 1 , Theme . dividerPaint )	var . drawLine ( 0 , getMeasuredHeight - 1 , getMeasuredWidth - var , getMeasuredHeight - 1 , Theme . dividerPaint )
var . drawLine ( AndroidUtilities . dp ( AndroidUtilities . leftBaseline ) . leftBaseline , getMeasuredHeight - 1 , getMeasuredWidth , getMeasuredHeight - 1 , Theme . dividerPaint )	var . drawLine ( var , getMeasuredHeight - 1 , getMeasuredWidth , getMeasuredHeight - 1 , Theme . dividerPaint )
var . setImage ( var , "" , var , null , 0 )	var . setImage ( var , "" , var , null , var , 0 )
setMeasuredDimension ( MeasureSpec . getSize ( var ) , AndroidUtilities . dp ( 16 ) + 1 )	setMeasuredDimension ( MeasureSpec . getSize ( var ) , getPaddingTop + getPaddingBottom + 1 )
var . drawLine ( getPaddingLeft , AndroidUtilities . dp ( 8 ) , getWidth - getPaddingRight , AndroidUtilities . dp ( 8 ) , Theme . dividerPaint )	setPadding ( 0 , AndroidUtilities . dp ( 8 ) , 0 , AndroidUtilities . dp ( 8 ) )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
int var = ( int ) Math . ceil ( Theme . chat_livePaint . measureText ( var ) )	int var = ( int ) Math . ceil ( Theme . dialogs_countTextPaint . measureText ( var ) )
int var = Math . max ( AndroidUtilities . dp ( 12 ) , var )	int var = Math . max ( AndroidUtilities . dp ( 10 ) , var )
var . set ( var , var , var + var + AndroidUtilities . dp ( 11 ) , var + AndroidUtilities . dp ( 23 ) )	var . set ( var , var , var + var + AndroidUtilities . dp ( 14 ) , var + AndroidUtilities . dp ( 23 ) )
var . drawText ( var , var . left + ( var . width ( ) - var ) / 2 - AndroidUtilities . dp ( 0.5f ) , var + AndroidUtilities . dp ( 16 ) , Theme . dialogs_countTextPaint )	var . drawText ( var , var . left + ( var . width ( ) - var ) / 2 , var + AndroidUtilities . dp ( 16 ) , Theme . dialogs_countTextPaint )
var = new EditText ( var )	var = new EditTextBoldCursor ( var )
int var = getMeasuredWidth - getPaddingLeft - getPaddingRight - AndroidUtilities . dp ( 34 )	int var = getMeasuredWidth - getPaddingLeft - getPaddingRight - AndroidUtilities . dp ( 42 )
if ( var . cover != null && var . cover . thumb != null && var . cover . thumb . location != null var . covers . isEmpty ( ) && var . covers . get ( 0 ) . thumb != null )	if ( var != null && var . location != null )
var . setImage ( var . cover . thumb . location , null , "" , null )	var . setImage ( var , null , "" , null , var )
var . drawCircle ( AndroidUtilities . dp ( 8 ) , 0 , AndroidUtilities . dp ( 4 ) , var )	var . drawCircle ( var . getRight ( ) + AndroidUtilities . dp ( 12 ) , AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 4 ) , var )
return AndroidUtilities . dp ( 12 )	var . drawCircle ( var . getRight ( ) + AndroidUtilities . dp ( 12 ) , AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 4 ) , var )
return AndroidUtilities . dp ( 26 )	var . drawCircle ( var . getRight ( ) + AndroidUtilities . dp ( 12 ) , AndroidUtilities . dp ( 20 ) , AndroidUtilities . dp ( 4 ) , var )
addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . TOP | Gravity . LEFT , var , 8 , 100 , 0 ) . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . TOP | Gravity . LEFT , var , 8 , 100 , 0 )	addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT , var , 8 , 40 , 0 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT , var , 8 , 40 , 0 )
addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . TOP | Gravity . LEFT , var , 30 , 100 , 0 ) . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . TOP | Gravity . LEFT , var , 30 , 100 , 0 )	addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT , var , 30 , 100 , 0 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT , var , 30 , 100 , 0 )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 13 )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 14 )
public GroupCreateUserCell ( Context var , boolean var )	public GroupCreateUserCell ( Context var , boolean var , int var )
var . setTextSize ( 17 )	var . setTextSize ( 16 )
var . setTextSize ( 16 )	var . setTextSize ( 15 )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 72 ) , MeasureSpec . EXACTLY ) . dp ( 72 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 58 ) , MeasureSpec . EXACTLY ) . dp ( 58 ) , MeasureSpec . EXACTLY )
var . setTag ( Theme . key_groupcreate_offlineText )	var . setTag ( Theme . key_windowBackgroundWhiteGrayText )
var . setTextColor ( Theme . getColor ( Theme . key_groupcreate_offlineText ) . key_groupcreate_offlineText )	var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText ) . key_windowBackgroundWhiteGrayText )
var . setTag ( Theme . key_groupcreate_offlineText )	var . setTag ( Theme . key_windowBackgroundWhiteGrayText )
var . setTextColor ( Theme . getColor ( Theme . key_groupcreate_offlineText ) . key_groupcreate_offlineText )	var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText ) . key_windowBackgroundWhiteGrayText )
var . setTag ( Theme . key_groupcreate_offlineText )	var . setTag ( Theme . key_windowBackgroundWhiteBlueText )
var . setTextColor ( Theme . getColor ( Theme . key_groupcreate_onlineText ) . key_groupcreate_onlineText )	var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText ) . key_windowBackgroundWhiteBlueText )
var . setTag ( Theme . key_groupcreate_offlineText )	var . setTag ( Theme . key_windowBackgroundWhiteGrayText )
var . setTextColor ( Theme . getColor ( Theme . key_groupcreate_offlineText ) . key_groupcreate_offlineText )	var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText ) . key_windowBackgroundWhiteGrayText )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
public HeaderCell ( Context var )	public HeaderCell ( Context var , boolean var , int var , int var , boolean var )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 38 ) , MeasureSpec . EXACTLY ) . dp ( 38 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( var ) , MeasureSpec . EXACTLY ) . dp ( var ) , MeasureSpec . EXACTLY )
var . setMaxLines ( 2 )	var . setMaxLines ( 1 )
var . setLines ( 2 )	var . setLines ( 1 )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 100 ) , MeasureSpec . EXACTLY ) . dp ( 100 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 86 ) , MeasureSpec . EXACTLY ) . dp ( 86 ) , MeasureSpec . EXACTLY )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	var = MessagesController . getInstance ( var ) . getUser ( var )
var . setText ( ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name )	var . setText ( UserObject . getFirstName ( var ) )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
checkUnreadCounter ( 0 )	update ( 0 )
if ( var == var && var != null )	if ( var != null )
var . setTag ( Theme . key_groupcreate_offlineText )	var . setTag ( Theme . key_windowBackgroundWhiteGrayText )
var . setTextColor ( Theme . getColor ( Theme . key_groupcreate_offlineText ) . key_groupcreate_offlineText )	var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText ) . key_windowBackgroundWhiteGrayText )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var . setImage ( ( TLRPC . FileLocation ) null , "" , var )	var . setImage ( null , "" , var , null )
public ManageChatUserCell ( Context var , int var , boolean var )	public ManageChatUserCell ( Context var , int var , int var , boolean var )
var . setRoundRadius ( AndroidUtilities . dp ( 24 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 23 ) )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var = new SimpleTextView ( var )	var = new TextView ( var )
var . setTextSize ( 16 )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 16 )
var . setImage ( var . photo . photo_small , "" , var )	var . setImage ( var . photo . photo_small , "" , var , var )
var . setImage ( var . photo . photo_small , "" , var )	var . setImage ( var . photo . photo_small , "" , var , var )
var . getImageReceiver ( ) . setImage ( var . photo , null , String . format ( Locale . US , "" , var , var ) . US , "" , var , var , null , null , null , - 1 , null , 1 )	var . getImageReceiver ( ) . setImage ( WebFile . createWithWebDocument ( var . photo ) . photo , null , String . format ( Locale . US , "" , var , var ) . US , "" , var , var , null , null , null , - 1 , null , var , 1 )
var . setImage ( var . thumbPhotoSize . location , null , var )	var . setImage ( var . thumbPhotoSize , null , var , var )
var . setImage ( var . photoSize . location , "" , var )	var . setImage ( var . photoSize , "" , var , var )
if ( var . document != null && var . document . var != null )	if ( var . document != null && MessageObject . isDocumentHasThumb ( var . document ) )
var . setImage ( var . document . var . location , null , var )	var . setImage ( var , null , var , var )
var -= var	var -= getPaddingLeft + getPaddingRight
var -= var	var -= getPaddingLeft + getPaddingRight
if ( ! LocaleController . isRTL )	if ( LocaleController . isRTL )
var += var	var += getPaddingLeft
var += var	var += getPaddingLeft
var . setImage ( var , "" , var , null , 0 )	var . setImage ( var , "" , var , null , var , 0 )
public RadioButtonCell ( Context var )	public RadioButtonCell ( Context var , boolean var )
public RadioCell ( Context var )	public RadioCell ( Context var , boolean var , int var )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 48 ) , MeasureSpec . EXACTLY ) . dp ( 48 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 50 ) , MeasureSpec . EXACTLY ) . dp ( 50 ) , MeasureSpec . EXACTLY )
if ( ( var . flags & 2 ) == 0 )	if ( ! var . official_app )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
public ShadowSectionCell ( Context var )	public ShadowSectionCell ( Context var , int var )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var = new RadialProgress ( this )	var = new RadialProgress2 ( this )
var . swapBackground ( getDrawableForCurrentState )	var . setImageOverlay ( var , var )
if ( var != 0 )	if ( ! TextUtils . isEmpty ( var ) )
var . swapMiniBackground ( getMiniDrawableForCurrentState )	var . setImageOverlay ( var )
var . setMiniBackground ( getMiniDrawableForCurrentState , true , false )	var . setMiniIcon ( getMiniIconForCurrentState , false , true )
var . setMiniBackground ( getMiniDrawableForCurrentState , true , false )	var . setMiniIcon ( getMiniIconForCurrentState , false , true )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
var . setMiniBackground ( getMiniDrawableForCurrentState , true , false )	var . setMiniIcon ( getMiniIconForCurrentState , false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
var . setBackground ( getDrawableForCurrentState , true , false )	updateButtonState ( false , true )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , true )
var . setAlphaForPrevious ( false )	updateButtonState ( false , false )
var . setAlphaForPrevious ( false )	if ( var == 2 )
if ( ! TextUtils . isEmpty ( var . messageOwner . attachPath ) )	if ( ! TextUtils . isEmpty ( var ) )
var = FileLoader . getPathToAttach ( var . getDocument ( ) )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
if ( var . exists ( ) && var . length ( ) == 0 )	boolean var = var . attachPathExists || var . mediaExists
var = var . exists ( )	boolean var = var . attachPathExists || var . mediaExists
if ( ! ( FileLoader . getInstance ( var ) . isLoadingFile ( var ) ) )	if ( ! FileLoader . getInstance ( var ) . isLoadingFile ( var ) )
var . setProgress ( 0 , var )	var . setMiniIcon ( getMiniIconForCurrentState , var , var )
var . setMiniBackground ( getMiniDrawableForCurrentState , var == 1 , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , var , var )
DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , true , var )	var . setIcon ( getIconForCurrentState , var , var )
updateButtonState ( true )	String var = var . getArtworkUrl ( true )
var . setLines ( 1 )	super . onDraw ( var )
var . setMaxLines ( 1 )	var . setMaxLines ( 2 )
var . setSingleLine ( true )	var . setRoundRadius ( AndroidUtilities . dp ( 4 ) )
if ( var != null && var . length ( var ) != 0 )	if ( var . getLineCount ( ) > 1 )
if ( var . contains ( "" ) || var . contains ( "" ) = 1 )	var . layout ( var . getLeft ( ) , var + var . getTop ( ) , var . getRight ( ) , var + var . getBottom ( ) )
var . setImageResource ( getThumbForNameOrMime ( var , var ) , var )	var . setImageResource ( AndroidUtilities . getThumbForNameOrMime ( var , var , false ) , var , false )
if ( var != null || var != 0 var )	if ( var != null || var != 0 )
if ( var != null && var . getDocument ( var ) != null var )	if ( var != null && var . getDocument ( ) != null )
var . setImageResource ( getThumbForNameOrMime ( var , var . getDocument ( var ) . mime_type ) , var . getDocument ( var ) . mime_type )	var . setImageResource ( AndroidUtilities . getThumbForNameOrMime ( var , var . getDocument ( ) . mime_type , false ) , var . getDocument ( ) . mime_type , false )
if ( var . getDocument ( var ) . thumb instanceof TLRPC . TL_photoSizeEmpty || var . getDocument ( var ) . thumb == null var )	if ( var instanceof TLRPC . TL_photoSizeEmpty || var == null )
var . setImage ( var . getDocument ( var ) . thumb . location , "" , ( Drawable ) null )	var . setImage ( var , "" , ( Drawable ) null , var )
var = FileLoader . getAttachFileName ( var . getDocument ( var ) )	String var = FileLoader . getAttachFileName ( var . getDocument ( ) )
DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
var . setTextSize ( AndroidUtilities . dp ( 16 ) )	var . setTextSize ( AndroidUtilities . dp ( 14 ) )
var . setTextSize ( AndroidUtilities . dp ( 16 ) )	var . setTextSize ( AndroidUtilities . dp ( 14 ) )
var = ChatMessageCell . generateStaticLayout ( var , var , var , var , 0 , 3 )	var = ChatMessageCell . generateStaticLayout ( var , var , var , var , 0 , var )
var = var + var . getLineBottom ( var . getLineCount ( ) - 1 ) + AndroidUtilities . dp ( 1 )	var = var + var . getLineBottom ( var . getLineCount ( ) - 1 ) + AndroidUtilities . dp ( 5 )
var = ChatMessageCell . generateStaticLayout ( var , var , var , var , 0 , 3 )	var = ChatMessageCell . generateStaticLayout ( var , var , var , var , 0 , var )
var += var . getLineBottom ( var . getLineCount ( ) - 1 ) + AndroidUtilities . dp ( 1 )	var += var . getLineBottom ( var . getLineCount ( ) - 1 ) + AndroidUtilities . dp ( 5 )
var . setBounds ( var , AndroidUtilities . dp ( 10 ) , var + var , AndroidUtilities . dp ( 62 ) )	var . setBounds ( var , AndroidUtilities . dp ( 11 ) , var + var , AndroidUtilities . dp ( 63 ) )
var . setImageCoords ( var , AndroidUtilities . dp ( 10 ) , var , var )	var . setImageCoords ( var , AndroidUtilities . dp ( 11 ) , var , var )
var += var . getLineBottom ( var . getLineCount ( ) - 1 )	var += var . getLineBottom ( var . getLineCount ( ) - 1 ) + AndroidUtilities . dp ( 4 )
var += var . getLineBottom ( var . getLineCount ( ) - 1 )	var += var . getLineBottom ( var . getLineCount ( ) - 1 ) + AndroidUtilities . dp ( 5 )
var += var . getLineBottom ( var . getLineCount ( ) - 1 )	var += var . getLineBottom ( var . getLineCount ( ) - 1 ) + AndroidUtilities . dp ( 5 )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 40 ) , MeasureSpec . EXACTLY ) . dp ( 40 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 32 ) , MeasureSpec . EXACTLY ) . dp ( 32 ) , MeasureSpec . EXACTLY )
var . setBackgroundResource ( R . drawable . phototime )	var . drawRoundRect ( var , AndroidUtilities . dp ( 4 ) , AndroidUtilities . dp ( 4 ) , Theme . chat_timeBackgroundPaint )
var . setPadding ( AndroidUtilities . dp ( 3 ) , 0 , AndroidUtilities . dp ( 3 ) , 0 )	var . setPadding ( AndroidUtilities . dp ( 5 ) , 0 , AndroidUtilities . dp ( 5 ) , 0 )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 16 , Gravity . BOTTOM | Gravity . LEFT ) . MATCH_PARENT , 16 , Gravity . BOTTOM | Gravity . LEFT )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , 17 , Gravity . BOTTOM | Gravity . LEFT , 4 , 0 , 0 , 4 ) . WRAP_CONTENT , 17 , Gravity . BOTTOM | Gravity . LEFT , 4 , 0 , 0 , 4 )
var . setImageResource ( R . drawable . ic_video )	var . setImageResource ( R . drawable . play_mini_video )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . LEFT | Gravity . CENTER_VERTICAL , 18 , - 0.7f , 0 , 0 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . LEFT | Gravity . CENTER_VERTICAL , 18 , - 0.7f , 0 , 0 )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . LEFT | Gravity . CENTER_VERTICAL , 13 , - 0.7f , 0 , 0 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . LEFT | Gravity . CENTER_VERTICAL , 13 , - 0.7f , 0 , 0 )
var . imageView . getImageReceiver ( ) . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )	var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
var . videoInfoContainer . setVisibility ( VISIBLE )	var . setVisibility ( VISIBLE )
if ( var instanceof TLRPC . TL_documentAttributeVideo )	if ( var . mediaExists || DownloadController . getInstance ( var ) . canDownloadMedia ( var ) )
var = var . var	var = null
var . videoTextView . setText ( String . format ( "" , var , var ) , var , var )	var . setText ( String . format ( "" , var , var ) , var , var )
var . imageView . setImage ( null , null , null , ApplicationLoader . applicationContext . getResources ( ) . getDrawable ( R . drawable . photo_placeholder_in ) . drawable . photo_placeholder_in , null , var , "" , null , 0 )	var . setImage ( null , null , null , ApplicationLoader . applicationContext . getResources ( ) . getDrawable ( R . drawable . photo_placeholder_in ) . drawable . photo_placeholder_in , null , var , "" , null , 0 , var )
var . imageView . setImageResource ( R . drawable . photo_placeholder_in )	var . setImageResource ( R . drawable . photo_placeholder_in )
var . videoInfoContainer . setVisibility ( INVISIBLE )	var . setVisibility ( INVISIBLE )
var . imageView . setImage ( null , null , null , ApplicationLoader . applicationContext . getResources ( ) . getDrawable ( R . drawable . photo_placeholder_in ) . drawable . photo_placeholder_in , null , var . location , "" , null , 0 )	var . setImage ( null , null , null , ApplicationLoader . applicationContext . getResources ( ) . getDrawable ( R . drawable . photo_placeholder_in ) . drawable . photo_placeholder_in , null , var , "" , null , 0 , var )
var . videoInfoContainer . setVisibility ( INVISIBLE )	var . setVisibility ( INVISIBLE )
var . imageView . setImageResource ( R . drawable . photo_placeholder_in )	var . setImageResource ( R . drawable . photo_placeholder_in )
var = ( AndroidUtilities . dp ( 490 ) - ( ( var + 1 ) * AndroidUtilities . dp ( 4 ) ) ) / var	var = ( AndroidUtilities . dp ( 490 ) - ( var - 1 ) * AndroidUtilities . dp ( 2 ) ) / var
var = ( AndroidUtilities . displaySize . x - ( ( var + 1 ) * AndroidUtilities . dp ( 4 ) ) ) / var	var = ( AndroidUtilities . displaySize . x - ( var - 1 ) * AndroidUtilities . dp ( 2 ) ) / var
var . setImage ( var , null , var )	var . setImage ( var , null , var , var )
var . setImage ( var , null , var )	var . setImage ( var , null , var , var )
var . setImage ( var , null , var )	var . setImage ( var , null , var , var )
if ( var != null && var . thumb != null )	if ( var != null )
var . setImage ( var . thumb . location , null , "" , null )	var . setImage ( var , null , "" , null , var )
if ( var . thumb != null )	if ( var != null )
var . setImage ( var . thumb . location , null , "" , null )	var . setImage ( var , null , "" , null , var )
if ( var . thumb != null && var . thumb . location != null )	if ( var != null )
var . setImage ( var . thumb . location , null , "" , null )	var . setImage ( var , null , "" , null , var )
var . measure ( MeasureSpec . makeMeasureSpec ( var - AndroidUtilities . dp ( 24 ) , MeasureSpec . AT_MOST ) - AndroidUtilities . dp ( 24 ) , MeasureSpec . AT_MOST , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 20 ) , MeasureSpec . EXACTLY ) . dp ( 20 ) , MeasureSpec . EXACTLY )	var . measure ( MeasureSpec . makeMeasureSpec ( var - AndroidUtilities . dp ( 23 ) , MeasureSpec . AT_MOST ) - AndroidUtilities . dp ( 23 ) , MeasureSpec . AT_MOST , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 20 ) , MeasureSpec . EXACTLY ) . dp ( 20 ) , MeasureSpec . EXACTLY )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
var . setVisibility ( INVISIBLE )	var . setVisibility ( GONE )
public TextCheckCell ( Context var )	public TextCheckCell ( Context var , int var )
var . setDuplicateParentStateEnabled ( false )	var . setColors ( Theme . key_switchTrack , Theme . key_switchTrackChecked , Theme . key_windowBackgroundWhite , Theme . key_windowBackgroundWhite )
var . setChecked ( var )	var . setChecked ( var , false )
var . setChecked ( var )	var . setChecked ( var , false )
var . setChecked ( var )	var . setChecked ( var , true )
var = new Switch2 ( var )	var = new Switch ( var )
var . setScaleType ( ImageView . ScaleType . CENTER )	var . setMaxLines ( 1 )
var . setVisibility ( INVISIBLE )	var . invalidate ( )
public TextInfoPrivacyCell ( Context var )	public TextInfoPrivacyCell ( Context var , int var )
super . onAttachedToWindow ( )	var . setTextColor ( Theme . getColor ( var ) )
var . setPadding ( 0 , AndroidUtilities . dp ( 10 ) , 0 , AndroidUtilities . dp ( 17 ) )	var . setPadding ( 0 , AndroidUtilities . dp ( 10 ) , 0 , AndroidUtilities . dp ( var ) )
public TextSettingsCell ( Context var )	public TextSettingsCell ( Context var , int var )
int var = AndroidUtilities . dp ( 16 + 11 )	int var = AndroidUtilities . dp ( 16 + 15 )
var . setTextSize ( 17 )	var . setTextSize ( 16 )
var . setTextSize ( 14 )	var . setTextSize ( 15 )
var = new ImageView ( var )	var = new TextView ( var )
var . setImageResource ( R . drawable . admin_star )	var . setTextColor ( Theme . getColor ( Theme . key_profile_creatorIcon ) . key_profile_creatorIcon )
setTag ( Theme . key_profile_adminIcon )	var . setText ( LocaleController . getString ( "" , R . string . ChannelAdmin ) , R . string . ChannelAdmin )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
public WallpaperCell ( Context var )	public WallpaperView ( Context var )
var . setBackgroundResource ( R . drawable . wall_selection )	var = new CheckBox ( var , R . drawable . round_check2 )
if ( var instanceof TLRPC . TL_wallPaperSolid )	if ( var instanceof WallpapersListActivity . ColorWallpaper )
var . setBackgroundColor ( 0xff000000 | var . bg_color )	var . setBackgroundColor ( 0xff000000 | var . color )
for ( int var = 0 ; var < var . sizes . var ( ) ; var ++ )	for ( int var = 0 ; var < var . length ; var ++ )
if ( var == null )	if ( var != null )
final AlertDialog var = new AlertDialog ( getParentActivity , 1 )	final AlertDialog var = new AlertDialog ( getParentActivity , 3 )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . userInfoDidLoad , var . id , var , null )
ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )	var . setOnCancelListener ( var )
var = new AlertDialog ( getParentActivity , 1 )	var = new AlertDialog ( getParentActivity , 3 )
var . setMessage ( LocaleController . getString ( "" , R . string . Loading ) , R . string . Loading )	var . setMessage ( LocaleController . getString ( "" , R . string . StopVerification ) , R . string . StopVerification )
var . setCanceledOnTouchOutside ( false )	var . setCanCacnel ( false )
var . setCancelable ( false )	if ( var [ var ] . onBackPressed ( false ) )
return var . compareTo ( var )	var . dispatchKeyEvent ( var )
boolean var = getParentActivity . checkSelfPermission ( Manifest . permission . RECEIVE_SMS ) == PackageManager . PERMISSION_GRANTED	boolean var = var == 4 && var == 2 || var == 0
if ( Build . VERSION . SDK_INT >= 23 )	if ( Build . VERSION . SDK_INT >= 26 )
if ( var . getBoolean ( "" , true ) || getParentActivity . shouldShowRequestPermissionRationale ( Manifest . permission . READ_PHONE_STATE ) || getParentActivity . shouldShowRequestPermissionRationale ( Manifest . permission . RECEIVE_SMS ) )	if ( var . getBoolean ( "" , true ) || getParentActivity . shouldShowRequestPermissionRationale ( Manifest . permission . READ_PHONE_STATE ) )
var . setMessage ( LocaleController . getString ( "" , R . string . AllowReadCallAndSms ) , R . string . AllowReadCallAndSms )	timeText . setText ( LocaleController . getString ( "" , R . string . SendingSms ) , R . string . SendingSms )
var . allow_flashcall = var && var	var . settings . allow_flashcall = var && var
if ( var . allow_flashcall )	if ( var . settings . allow_flashcall )
var . current_number = var . contains ( var ) || var . contains ( var )	var . settings . current_number = var . contains ( var ) || var . contains ( var )
if ( ! var . current_number )	if ( ! var . settings . current_number )
var . allow_flashcall = false	var . settings . allow_flashcall = false
var . current_number = false	var . settings . current_number = false
var . allow_flashcall = false	var . settings . allow_flashcall = false
var . putString ( "" , "" + var . getText ( ) + var . getText ( ) )	var . putString ( "" , "" + var . getText ( ) + "" + var . getText ( ) )
var . requestFocus ( )	codeField . requestFocus ( )
var . setHint ( LocaleController . getString ( "" , R . string . Code ) , R . string . Code )	var . setText ( LocaleController . getString ( "" , R . string . SentAppCodeTitle ) , R . string . SentAppCodeTitle )
var . setCursorSize ( AndroidUtilities . dp ( 20 ) )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 18 )
var . setHintTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteHintText ) . key_windowBackgroundWhiteHintText )	var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText , PorterDuff . Mode . MULTIPLY )
var . setBackgroundDrawable ( Theme . createEditTextDrawable ( var , false ) , false )	var . setTypeface ( AndroidUtilities . getTypeface ( "" ) )
var . setImeOptions ( EditorInfo . IME_ACTION_NEXT | EditorInfo . IME_FLAG_NO_EXTRACT_UI )	var . setGravity ( Gravity . TOP | Gravity . CENTER_HORIZONTAL )
var . setInputType ( InputType . TYPE_CLASS_PHONE )	var . setOrientation ( HORIZONTAL )
var . setPadding ( 0 , 0 , 0 , 0 )	codeField [ var ] . setPadding ( 0 , 0 , 0 , 0 )
if ( var == 3 )	if ( currentType == 3 )
var . setEnabled ( false )	codeField [ var ] . setEnabled ( false )
var . setInputType ( InputType . TYPE_NULL )	codeField [ var ] . setInputType ( InputType . TYPE_NULL )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 14 )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 15 )
var . setPadding ( 0 , AndroidUtilities . dp ( 2 ) , 0 , AndroidUtilities . dp ( 12 ) )	var . setPadding ( 0 , AndroidUtilities . dp ( 2 ) , 0 , AndroidUtilities . dp ( 10 ) )
if ( var != 0 && var != 4 )	if ( ! var )
var . putExtra ( Intent . EXTRA_TEXT , "" + var + "" + var + "" + Build . VERSION . SDK_INT + "" + Build . MANUFACTURER + Build . MODEL + "" + Locale . getDefault ( ) + "" + var )	mailer . putExtra ( Intent . EXTRA_TEXT , "" + var + "" + version + "" + Build . VERSION . SDK_INT + "" + Build . MANUFACTURER + Build . MODEL + "" + Locale . getDefault ( ) + "" + var )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 )	var . setGravity ( Gravity . CENTER_HORIZONTAL | Gravity . TOP )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 14 )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 15 )
var . setPadding ( 0 , AndroidUtilities . dp ( 24 ) , 0 , 0 )	var . setPadding ( 0 , AndroidUtilities . dp ( 2 ) , 0 , AndroidUtilities . dp ( 10 ) )
var . setText ( LocaleController . getString ( "" , R . string . WrongNumber ) , R . string . WrongNumber )	var . setText ( LocaleController . getString ( "" , R . string . DidNotGetTheCodeSms ) , R . string . DidNotGetTheCodeSms )
AlertsCreator . processError ( currentAccount , var , ChangePhoneActivity . this , var )	AlertDialog var = ( AlertDialog ) AlertsCreator . processError ( currentAccount , var , ChangePhoneActivity . this , var )
var . setText ( "" )	codeField [ var ] . setText ( "" )
if ( var != 0 )	if ( length == 0 = 5 )
if ( var == 3 )	if ( currentType == 3 )
if ( var != 3 )	if ( currentType != 3 )
if ( var == 2 && ( var == 4 || var == 3 ) )	if ( currentType == 2 && ( nextType == 4 || nextType == 3 ) )
if ( var <= 1000 )	if ( codeTime <= 1000 )
int var = var / 1000 / 60	int var = time / 1000 / 60
var . setText ( LocaleController . formatString ( "" , R . string . CallText , var , var ) , R . string . CallText , var , var )	timeText . setText ( LocaleController . formatString ( "" , R . string . CallText , var , var ) , R . string . CallText , var , var )
if ( var == 3 == 2 )	if ( currentType == 3 == 2 || currentType == 4 )
if ( var == 2 )	if ( currentType == 2 || currentType == 4 )
if ( var == 4 == 3 )	if ( nextType == 4 || nextType == 2 == 3 )
if ( var == 2 == 3 )	if ( currentType == 2 == 3 )
var = false	waitingForEvent = false
if ( var == 3 && ( var == 4 || var == 2 ) || var == 2 && ( var == 4 || var == 3 ) )	if ( currentType == 3 && ( nextType == 4 || nextType == 2 ) || currentType == 2 && ( nextType == 4 || nextType == 3 ) || currentType == 4 && nextType == 2 )
if ( var != null )	if ( var == KeyEvent . KEYCODE_DEL && var . length ( ) == 0 )
if ( ! AndroidUtilities . checkPhonePattern ( var , var ) )	if ( ! AndroidUtilities . checkPhonePattern ( pattern , var ) )
var . setText ( var )	codeField [ 0 ] . setText ( var )
return new ThemeDescription	Override public ThemeDescription getThemeDescriptions
final AlertDialog var = new AlertDialog ( getParentActivity , 1 )	final AlertDialog var = new AlertDialog ( getParentActivity , 3 )
ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )	var . setOnCancelListener ( var )
NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStart )
NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStart )
if ( var == NotificationCenter . messagePlayingDidStarted )	if ( var == NotificationCenter . messagePlayingDidStart )
var . updateButtonState ( false , false )	var . updateButtonState ( false , true , false )
var . updateButtonState ( false , false )	var . updateButtonState ( false , true , false )
( ( SizeNotifierFrameLayout ) fragmentView ) . setBackgroundImage ( Theme . getCachedWallpaper ( ) )	var . setBackgroundImage ( Theme . getCachedWallpaper ( ) , Theme . isWallpaperMotion ( ) )
var . getSearchField ( ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
var . setBackgroundImage ( Theme . getCachedWallpaper ( ) )	var . setBackgroundImage ( Theme . getCachedWallpaper ( ) , Theme . isWallpaperMotion ( ) )
MessagesController . getInstance ( currentAccount ) . saveGif ( var )	MessagesController . getInstance ( currentAccount ) . saveGif ( var , var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < admins . size ( ) ; var ++ )
showDialog ( ShareAlert . createShareAlert ( var , var . getMessageObject ( ) , null , ChatObject . isChannel ( var ) && ! var . megagroup && var . username != null && var . username . length ( ) > 0 , null , false ) , var . getMessageObject ( ) , null , ChatObject . isChannel ( var ) && ! var . megagroup && var . username != null && var . username . length ( ) > 0 , null , false )	showDialog ( ShareAlert . createShareAlert ( var , var . getMessageObject ( ) , null , ChatObject . isChannel ( currentChat ) && ! currentChat . megagroup && currentChat . username != null && currentChat . username . length ( ) > 0 , null , false ) , var . getMessageObject ( ) , null , ChatObject . isChannel ( currentChat ) && ! currentChat . megagroup && currentChat . username != null && currentChat . username . length ( ) > 0 , null , false )
var = new AlertDialog ( getParentActivity , 1 )	var = new AlertDialog ( getParentActivity , 3 )
final int var = MessagesController . getInstance ( currentAccount ) . createChat ( var . getText ( ) . toString , new ArrayList < Integer > ( ) , var . getText ( ) . toString , ChatObject . CHAT_TYPE_CHANNEL , ChannelCreateActivity . this )	final int var = MessagesController . getInstance ( currentAccount ) . createChat ( var . getText ( ) . toString , new ArrayList ( ) , var . getText ( ) . toString , ChatObject . CHAT_TYPE_CHANNEL , ChannelCreateActivity . this )
var = new AlertDialog ( getParentActivity , 1 )	var = new AlertDialog ( getParentActivity , 3 )
var . setCanceledOnTouchOutside ( false )	avatarEditor . setClickable ( false )
var . setCancelable ( false )	avatarEditor . setEnabled ( false )
var . setDrawPhoto ( true )	var . hidePopup ( true )
var . openCamera ( )	var = Gravity . TOP | Gravity . LEFT
var . openGallery ( )	var = var . topMargin + getPaddingTop
var . setMaxLines ( 4 )	var . setOrientation ( LinearLayout . VERTICAL )
var . setHintTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteHintText ) . key_windowBackgroundWhiteHintText )	var . setAlpha ( int ( 0x55 * var . getImageReceiver ( ) . getCurrentAlpha ) * var . getImageReceiver ( ) . getCurrentAlpha )
var . setBackgroundDrawable ( Theme . createEditTextDrawable ( var , false ) , false )	avatarEditor . setScaleType ( ImageView . ScaleType . CENTER )
var . setCursorWidth ( 1.5f )	avatarProgressView . setProgressColor ( 0xffffffff )
var . setImeOptions ( EditorInfo . IME_ACTION_DONE )	descriptionTextView . setImeOptions ( EditorInfo . IME_ACTION_DONE )
if ( var == EditorInfo . IME_ACTION_DONE && var != null )	if ( var == EditorInfo . IME_ACTION_DONE && doneButton != null )
if ( var == 1 )	if ( currentStep == 1 )
var = new EditTextBoldCursor ( var )	avatarProgressView = new RadialProgressView ( context )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 18 )	descriptionTextView . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 18 )
var . setHintTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteHintText ) . key_windowBackgroundWhiteHintText )	descriptionTextView . setHintTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteHintText ) . key_windowBackgroundWhiteHintText )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText )	descriptionTextView . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText )
var . setMaxLines ( 1 )	descriptionTextView . setLines ( 1 )
var . setLines ( 1 )	descriptionTextView . setMaxLines ( 1 )
var . setBackgroundDrawable ( null )	descriptionTextView . setBackgroundDrawable ( null )
var . setPadding ( 0 , 0 , 0 , 0 )	descriptionTextView . setPadding ( 0 , 0 , 0 , 0 )
var . setSingleLine ( true )	descriptionTextView . setSingleLine ( true )
var . setInputType ( InputType . TYPE_TEXT_VARIATION_EMAIL_ADDRESS | InputType . TYPE_TEXT_FLAG_MULTI_LINE | InputType . TYPE_TEXT_FLAG_AUTO_CORRECT )	descriptionTextView . setInputType ( InputType . TYPE_TEXT_VARIATION_EMAIL_ADDRESS | InputType . TYPE_TEXT_FLAG_MULTI_LINE | InputType . TYPE_TEXT_FLAG_AUTO_CORRECT )
var . setImeOptions ( EditorInfo . IME_ACTION_DONE )	descriptionTextView . setImeOptions ( EditorInfo . IME_ACTION_DONE )
var . setHint ( LocaleController . getString ( "" , R . string . ChannelUsernamePlaceholder ) , R . string . ChannelUsernamePlaceholder )	descriptionTextView . setHint ( LocaleController . getString ( "" , R . string . ChannelUsernamePlaceholder ) , R . string . ChannelUsernamePlaceholder )
var . setCursorColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText )	descriptionTextView . setCursorColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText )
var . setCursorSize ( AndroidUtilities . dp ( 20 ) )	descriptionTextView . setCursorSize ( AndroidUtilities . dp ( 20 ) )
var . setCursorWidth ( 1.5f )	descriptionTextView . setCursorWidth ( 1.5f )
var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 ) . MATCH_PARENT , 36 )	publicContainer . addView ( descriptionTextView , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 ) . MATCH_PARENT , 36 )
checkUserName ( var . getText ( ) . toString )	checkUserName ( descriptionTextView . getText ( ) . toString )
android . content . ClipData var = android . content . ClipData . newPlainText ( "" , var . link )	android . content . ClipData var = android . content . ClipData . newPlainText ( "" , invite . link )
TLRPC . TL_channels_exportInvite var = new TLRPC . TL_channels_exportInvite ( )	TLRPC . TL_messages_exportChatInvite var = new TLRPC . TL_messages_exportChatInvite ( )
var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( - chatId )
var . clearFocus ( )	descriptionTextView . clearFocus ( )
AndroidUtilities . hideKeyboard ( var )	AndroidUtilities . hideKeyboard ( descriptionTextView )
var = false	donePressed = false
var . onActivityResult ( var , var , var )	imageUpdater . onActivityResult ( var , var , var )
var . requestFocus ( )	nameTextView . openKeyboard ( )
MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , var )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , uploadedAvatar , avatar , avatarBig )
if ( var != null )	if ( avatarAnimation == null || avatarEditor == null )
if ( var . length ( ) > 0 )	if ( descriptionTextView . length ( ) > 0 )
checkUserName ( var . getText ( ) . toString )	checkUserName ( descriptionTextView . getText ( ) . toString )
if ( var != null && var . equals ( var ) )	checkReqId = ConnectionsManager . getInstance ( currentAccount ) . sendRequest ( var , var , var , ( lastCheckName != null && lastCheckName . equals ( var ) ) )
int var = var . getChildCount ( )	int var = adminnedChannelsLayout . getChildCount ( )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . userInfoDidLoad )
NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceiveNewMessages )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . FileNewChunkAvailable )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . fileNewChunkAvailable )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . blockedUsersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStart )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . botInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . replyMessagesDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . botKeyboardDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . peerSettingsDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didLoadedPinnedMessage )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . botKeyboardDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . peerSettingsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . botInfoDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . pinnedMessageDidLoad )
MessagesController . getInstance ( currentAccount ) . loadChatInfo ( var . id , var , ChatObject . isChannel ( var ) )	MessagesController . getInstance ( currentAccount ) . loadChatInfo ( var . id , var , true )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatOnlineCountDidLoad )
NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . pinnedMessageDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . FileNewChunkAvailable )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . botInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . fileNewChunkAvailable )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . botKeyboardDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStart )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didLoadedPinnedMessage )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . replyMessagesDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . peerSettingsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . botInfoDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . botKeyboardDidLoad )
MessagesController . getInstance ( currentAccount ) . startShortPoll ( var . id , true )	MessagesController . getInstance ( currentAccount ) . startShortPoll ( var , true )
var += getMessageContent ( var , var , true )	var += getMessageContent ( var , var , var == null || ! var . self )
var . setPositiveButton ( LocaleController . getString ( "" , R . string . OK ) , R . string . OK , var , var )	var . showWithAction ( var , var == var , var , var )
if ( var != var var )	if ( var == var var )
showDialog ( AlertsCreator . createReportAlert ( getParentActivity var , var , 0 , ChatActivity . this ) var , var , 0 , ChatActivity . this )	AlertsCreator . createReportAlert ( getParentActivity var , var , 0 , ChatActivity . this )
DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , ! var )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , var , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , ! var )
var . getSearchField ( var ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
var . getSearchField ( var ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
var . getSearchField ( var ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
if ( ChatObject . isChannel ( var ) && ! var . creator && ( ! var . megagroup || var . username != null && var . username . length ( var ) > 0 ) )	if ( var != null && ! var . creator )
if ( var . self )	if ( var != null && var . self )
updateMessagesVisisblePart ( true )	updateMessagesVisiblePart ( true )
var . setBackgroundImage ( Theme . getCachedWallpaper ( var ) )	var . setBackgroundImage ( Theme . getCachedWallpaper ( var ) , Theme . isWallpaperMotion ( var ) )
if ( var != null && var . self var )	if ( var != null && var . self || var != null && var . creator var )
var . setSecretText ( LocaleController . formatString ( "" , R . string . EncryptedPlaceholderTitleOutgoing , UserObject . getFirstName ( var ) ) , R . string . EncryptedPlaceholderTitleOutgoing , UserObject . getFirstName ( var ) )	var . setStatusText ( LocaleController . formatString ( "" , R . string . EncryptedPlaceholderTitleOutgoing , UserObject . getFirstName ( var ) ) , R . string . EncryptedPlaceholderTitleOutgoing , UserObject . getFirstName ( var ) )
var . setSecretText ( LocaleController . formatString ( "" , R . string . EncryptedPlaceholderTitleIncoming , UserObject . getFirstName ( var ) ) , R . string . EncryptedPlaceholderTitleIncoming , UserObject . getFirstName ( var ) )	var . setStatusText ( LocaleController . formatString ( "" , R . string . EncryptedPlaceholderTitleIncoming , UserObject . getFirstName ( var ) ) , R . string . EncryptedPlaceholderTitleIncoming , UserObject . getFirstName ( var ) )
Theme . chat_shareDrawable . setColorFilter ( Theme . colorFilter )	Theme . chat_shareDrawable . setColorFilter ( Theme . colorFilter2 )
Theme . chat_shareDrawable . setBounds ( int ( var - AndroidUtilities . dp ( 16 ) * var ) - AndroidUtilities . dp ( 16 ) * var , int ( var - AndroidUtilities . dp ( 16 ) * var ) - AndroidUtilities . dp ( 16 ) * var , int ( var + AndroidUtilities . dp ( 16 ) * var ) + AndroidUtilities . dp ( 16 ) * var , int ( var + AndroidUtilities . dp ( 16 ) * var ) + AndroidUtilities . dp ( 16 ) * var )	Theme . chat_replyIconDrawable . setBounds ( int ( var - AndroidUtilities . dp ( 7 ) * var ) - AndroidUtilities . dp ( 7 ) * var , int ( var - AndroidUtilities . dp ( 6 ) * var ) - AndroidUtilities . dp ( 6 ) * var , int ( var + AndroidUtilities . dp ( 7 ) * var ) + AndroidUtilities . dp ( 7 ) * var , int ( var + AndroidUtilities . dp ( 5 ) * var ) + AndroidUtilities . dp ( 5 ) * var )
Theme . chat_replyIconDrawable . setBounds ( int ( var - AndroidUtilities . dp ( 10 ) * var ) - AndroidUtilities . dp ( 10 ) * var , int ( var - AndroidUtilities . dp ( 8 ) * var ) - AndroidUtilities . dp ( 8 ) * var , int ( var + AndroidUtilities . dp ( 10 ) * var ) + AndroidUtilities . dp ( 10 ) * var , int ( var + AndroidUtilities . dp ( 6 ) * var ) + AndroidUtilities . dp ( 6 ) * var )	Theme . chat_shareDrawable . setBounds ( int ( var - AndroidUtilities . dp ( 14 ) * var ) - AndroidUtilities . dp ( 14 ) * var , int ( var - AndroidUtilities . dp ( 14 ) * var ) - AndroidUtilities . dp ( 14 ) * var , int ( var + AndroidUtilities . dp ( 14 ) * var ) + AndroidUtilities . dp ( 14 ) * var , int ( var + AndroidUtilities . dp ( 14 ) * var ) + AndroidUtilities . dp ( 14 ) * var )
updateMessagesVisisblePart ( true )	updateMessagesVisiblePart ( true )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 7.3f , 52 , 0 ) . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 7.3f , 52 , 0 )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 7.3f , 40 , 0 ) . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 7.3f , 40 , 0 )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 25.3f , 52 , 0 ) . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 25.3f , 52 , 0 )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 25.3f , 40 , 0 ) . MATCH_PARENT , AndroidUtilities . dp ( 18 ) , Gravity . TOP | Gravity . LEFT , 18 , 25.3f , 40 , 0 )
var . addView ( var , LayoutHelper . createFrame ( 48 , 48 , Gravity . RIGHT | Gravity . TOP ) , 48 , Gravity . RIGHT | Gravity . TOP )	var . addView ( var , LayoutHelper . createFrame ( 36 , 48 , Gravity . RIGHT | Gravity . TOP ) , 48 , Gravity . RIGHT | Gravity . TOP )
mentionsAdapter . setChatInfo ( info )	mentionsAdapter . setChatInfo ( chatInfo )
searchItem . getSearchField ( ) . setHint ( null )	searchItem . setSearchFieldHint ( null )
contentView . addView ( fragmentLocationContextView = new FragmentContextView ( context , this , true ) , this , true , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )	contentView . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )
if ( stickersAdapter != null && ! chatActivityEnterView . isEditingMessage ( ) && ChatObject . canSendStickers ( currentChat ) )	if ( stickersAdapter != null && ! chatActivityEnterView . isEditingMessage ( ) && ( currentChat == null || ChatObject . canSendStickers ( currentChat ) ) )
if ( ChatObject . canSendEmbed ( currentChat ) && chatActivityEnterView . isMessageWebPageSearchEnabled ( ) && ( ! chatActivityEnterView . isEditingMessage ( ) || ! chatActivityEnterView . isEditingCaption ( ) ) )	if ( ( currentChat == null || ChatObject . canSendEmbed ( currentChat ) ) && chatActivityEnterView . isMessageWebPageSearchEnabled ( ) && ( ! chatActivityEnterView . isEditingMessage ( ) || ! chatActivityEnterView . isEditingCaption ( ) ) )
if ( var == null )	if ( var == null || getParentActivity == null )
if ( getParentActivity == null )	if ( var == null || getParentActivity == null )
searchItem . getSearchField ( ) . setHint ( LocaleController . getString ( "" , R . string . SearchMembers ) , R . string . SearchMembers )	searchItem . setSearchFieldHint ( LocaleController . getString ( "" , R . string . SearchMembers ) , R . string . SearchMembers )
AlertDialog . Builder var = null	TLRPC . MessageAction var = null
var = new AlertDialog . Builder ( getParentActivity )	AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity )
var = new AlertDialog . Builder ( getParentActivity )	PhotoViewer . getInstance ( ) . setParentActivity ( getParentActivity )
if ( info instanceof TLRPC . TL_chatFull )	if ( chatInfo instanceof TLRPC . TL_chatFull )
for ( int var = 0 ; var < info . participants . participants . size ( ) ; var ++ )	for ( int var = 0 ; var < chatInfo . participants . participants . size ( ) ; var ++ )
TLRPC . ChatParticipant var = info . participants . participants . get ( var )	TLRPC . ChatParticipant var = chatInfo . participants . participants . get ( var )
if ( info instanceof TLRPC . TL_channelFull )	if ( chatInfo instanceof TLRPC . TL_channelFull )
URLSpanBotCommand . enabled = ! info . bot_info . isEmpty ( ) && currentChat != null && currentChat . megagroup	URLSpanBotCommand . enabled = ! chatInfo . bot_info . isEmpty ( ) && currentChat != null && currentChat . megagroup
SendMessagesHelper . getInstance ( currentAccount ) . sendSticker ( var , dialog_id , replyingMessageObject )	SendMessagesHelper . getInstance ( currentAccount ) . sendSticker ( var , dialog_id , replyingMessageObject , var )
if ( getParentActivity == null || currentChat == null || currentChat . banned_rights == null || fragmentView == null || mediaBanTooltip != null && mediaBanTooltip . getVisibility ( ) == View . VISIBLE )	if ( getParentActivity == null || currentChat == null || fragmentView == null || mediaBanTooltip != null && mediaBanTooltip . getVisibility ( ) == View . VISIBLE )
if ( AndroidUtilities . isBannedForever ( currentChat . banned_rights . until_date ) )	if ( AndroidUtilities . isBannedForever ( currentChat . banned_rights ) )
PhotoAlbumPickerActivity var = new PhotoAlbumPickerActivity ( false , var , true , ChatActivity . this )	PhotoAlbumPickerActivity var = new PhotoAlbumPickerActivity ( 0 , var , true , ChatActivity . this )
DocumentSelectActivity var = new DocumentSelectActivity	DocumentSelectActivity var = new DocumentSelectActivity ( true )
SendMessagesHelper . prepareSendingDocuments ( var , var , null , null , dialog_id , replyingMessageObject , null , editingMessageObject )	SendMessagesHelper . prepareSendingDocuments ( var , var , null , null , null , dialog_id , replyingMessageObject , null , editingMessageObject )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs2 , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs2 , 320 )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 320 )
replyImageLocation = var . location	replyImageLocation = var
replyImageView . setImage ( replyImageLocation , "" , ( Drawable ) null )	replyImageView . setImage ( replyImageLocation , "" , ( Drawable ) null , var )
if ( var != null && ! var . isOut ( ) && var . isUnread ( ) )	if ( ! var . isOut ( ) && var . isUnread ( ) )
if ( var instanceof ChatActionCell && ( ( ChatActionCell ) var ) . getMessageObject . isDateObject )	if ( var instanceof ChatActionCell && var . isDateObject )
if ( ChatObject . isChannel ( currentChat ) && currentChat . banned_rights != null && currentChat . banned_rights . send_messages )	if ( currentChat != null && ! ChatObject . canSendMessages ( currentChat ) && ( ! ChatObject . isChannel ( currentChat ) || currentChat . megagroup ) )
if ( ( ! var . isRoundVideo ( ) || var . isRoundVideo ( ) && BuildVars . DEBUG_VERSION ) && ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto || var . getDocument ( ) != null || var . isMusic ( ) || var . isVideo ( ) ) )	if ( ! var . isRoundVideo ( ) && ( var . messageOwner . media instanceof TLRPC . TL_messageMediaPhoto || var . getDocument ( ) != null || var . isMusic ( ) || var . isVideo ( ) ) )
SendMessagesHelper . prepareSendingDocument ( var , var , null , null , dialog_id , replyingMessageObject , null , editingMessageObject )	SendMessagesHelper . prepareSendingDocument ( var , var , null , null , null , dialog_id , replyingMessageObject , null , editingMessageObject )
if ( var . type < 0 || var == 1 && var . messageOwner . action instanceof TLRPC . TL_messageActionChatMigrateTo )	if ( var . type < 0 || var == 1 && var instanceof TLRPC . TL_messageActionChatMigrateTo )
if ( var != RecyclerView . NO_POSITION )	if ( var != - 1 )
chatLayoutManager . scrollToPositionWithOffset ( var + var - var , var )	chatLayoutManager . scrollToPositionWithOffset ( var , var )
if ( messages . get ( messages . size ( ) - 1 ) == scrollToMessage || messages . get ( messages . size ( ) - 2 ) == scrollToMessage )	if ( chatAdapter . loadingUpRow != - 1 && ( messages . get ( messages . size ( ) - 1 ) == scrollToMessage || messages . get ( messages . size ( ) - 2 ) == scrollToMessage ) )
chatLayoutManager . scrollToPositionWithOffset ( var , var )	chatLayoutManager . scrollToPositionWithOffset ( var + var - var , var )
if ( var == 0 && currentEncryptedChat != null && ! endReached [ 0 ] )	if ( var == 0 && ( mergeDialogId != 0 && var == 0 || currentEncryptedChat != null && ! endReached [ 0 ] ) )
if ( var == NotificationCenter . emojiDidLoaded )	if ( var == NotificationCenter . emojiDidLoad )
if ( ( var & MessagesController . UPDATE_MASK_CHANNEL ) != 0 && ChatObject . isChannel ( currentChat ) )	if ( ( var & MessagesController . UPDATE_MASK_CHAT ) != 0 && currentChat != null )
if ( var == NotificationCenter . didReceivedNewMessages )	if ( var == NotificationCenter . didReceiveNewMessages )
if ( currentEncryptedChat != null && var . isOut ( ) && var . messageOwner . action != null && var . messageOwner . action instanceof TLRPC . TL_messageEncryptedAction && var . messageOwner . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL && getParentActivity != null )	if ( currentEncryptedChat != null && var . isOut ( ) && var . messageOwner . action instanceof TLRPC . TL_messageEncryptedAction && var . messageOwner . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL && getParentActivity != null )
if ( avatarContainer != null && currentEncryptedChat != null && var . messageOwner . action != null && var . messageOwner . action instanceof TLRPC . TL_messageEncryptedAction && var . messageOwner . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL )	if ( avatarContainer != null && currentEncryptedChat != null && var instanceof TLRPC . TL_messageEncryptedAction && var . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL )
avatarContainer . setTime ( ( ( TLRPC . TL_decryptedMessageActionSetMessageTTL ) var . messageOwner . action . encryptedAction ) . ttl_seconds )	avatarContainer . setTime ( ( ( TLRPC . TL_decryptedMessageActionSetMessageTTL ) var . encryptedAction ) . ttl_seconds )
final int var = var . messageOwner . action . var	if ( currentChat != null && currentChat . creator && ( var instanceof TLRPC . TL_messageActionChatCreate || var instanceof TLRPC . TL_messageActionChatEditPhoto && messages . size ( ) < 4 ) )
AndroidUtilities . runOnUIThread ( )	AndroidUtilities . runOnUIThread ( var )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( var , NotificationCenter . closeChats )	if ( currentChat != null && currentChat . creator && ( var instanceof TLRPC . TL_messageActionChatCreate || var instanceof TLRPC . TL_messageActionChatEditPhoto && messages . size ( ) < 4 ) )
if ( currentChat != null && currentChat . megagroup && ( var . messageOwner . action instanceof TLRPC . TL_messageActionChatAddUser || var . messageOwner . action instanceof TLRPC . TL_messageActionChatDeleteUser ) = true )	if ( currentChat != null && currentChat . megagroup && ( var instanceof TLRPC . TL_messageActionChatAddUser || var instanceof TLRPC . TL_messageActionChatDeleteUser ) = true )
if ( avatarContainer != null && currentEncryptedChat != null && var . messageOwner . action != null && var . messageOwner . action instanceof TLRPC . TL_messageEncryptedAction && var . messageOwner . action . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL )	if ( avatarContainer != null && currentEncryptedChat != null && var instanceof TLRPC . TL_messageEncryptedAction && var . encryptedAction instanceof TLRPC . TL_decryptedMessageActionSetMessageTTL )
avatarContainer . setTime ( ( ( TLRPC . TL_decryptedMessageActionSetMessageTTL ) var . messageOwner . action . encryptedAction ) . ttl_seconds )	avatarContainer . setTime ( ( ( TLRPC . TL_decryptedMessageActionSetMessageTTL ) var . encryptedAction ) . ttl_seconds )
final int var = var . messageOwner . action . var	final int var = var . messageOwner . action . channel_id
if ( currentChat != null && currentChat . megagroup && ( var . messageOwner . action instanceof TLRPC . TL_messageActionChatAddUser || var . messageOwner . action instanceof TLRPC . TL_messageActionChatDeleteUser ) = true )	if ( currentChat != null && currentChat . megagroup && ( var instanceof TLRPC . TL_messageActionChatAddUser || var instanceof TLRPC . TL_messageActionChatDeleteUser ) = true )
if ( info != null && info . pinned_msg_id == var )	if ( chatInfo != null && chatInfo . pinned_msg_id == var != null && userInfo . pinned_msg_id == var )
info . pinned_msg_id = 0	chatInfo . pinned_msg_id = 0
MessagesStorage . getInstance ( currentAccount ) . updateChannelPinnedMessage ( info . var , 0 )	MessagesStorage . getInstance ( currentAccount ) . updateChatPinnedMessage ( chatInfo . var , 0 )
if ( var == 0 && info != null && info . pinned_msg_id == var )	if ( var == 0 && ( chatInfo != null && chatInfo . pinned_msg_id == var || userInfo != null && userInfo . pinned_msg_id == var ) )
info . pinned_msg_id = 0	chatInfo . pinned_msg_id = 0
MessagesStorage . getInstance ( currentAccount ) . updateChannelPinnedMessage ( var , 0 )	MessagesStorage . getInstance ( currentAccount ) . updateChatPinnedMessage ( var , 0 )
if ( var == NotificationCenter . chatInfoDidLoaded )	if ( var == NotificationCenter . chatInfoDidLoad )
if ( var . participants == null && info != null )	if ( var . participants == null && chatInfo != null )
var . participants = info . participants	var . participants = chatInfo . participants
info = var	chatInfo = var
chatActivityEnterView . setChatInfo ( info )	chatActivityEnterView . setChatInfo ( chatInfo )
mentionsAdapter . setChatInfo ( info )	mentionsAdapter . setChatInfo ( chatInfo )
SendMessagesHelper . getInstance ( currentAccount ) . setCurrentChatInfo ( info )	SendMessagesHelper . getInstance ( currentAccount ) . setCurrentChatInfo ( chatInfo )
if ( info instanceof TLRPC . TL_chatFull instanceof TLRPC . TL_channelFull )	if ( chatInfo instanceof TLRPC . TL_chatFull instanceof TLRPC . TL_channelFull )
for ( int var = 0 ; var < info . participants . participants . size ( ) ; var ++ )	for ( int var = 0 ; var < chatInfo . participants . participants . size ( ) ; var ++ )
TLRPC . ChatParticipant var = info . participants . participants . get ( var )	TLRPC . ChatParticipant var = chatInfo . participants . participants . get ( var )
if ( info instanceof TLRPC . TL_channelFull )	if ( chatInfo instanceof TLRPC . TL_channelFull )
URLSpanBotCommand . enabled = ! info . bot_info . isEmpty ( ) && currentChat != null && currentChat . megagroup	URLSpanBotCommand . enabled = ! chatInfo . bot_info . isEmpty ( ) && currentChat != null && currentChat . megagroup
botsCount = info . bot_info . size ( )	botsCount = chatInfo . bot_info . size ( )
for ( int var = 0 ; var < info . bot_info . size ( ) ; var ++ )	for ( int var = 0 ; var < chatInfo . bot_info . size ( ) ; var ++ )
TLRPC . BotInfo var = info . bot_info . get ( var )	TLRPC . BotInfo var = chatInfo . bot_info . get ( var )
if ( ChatObject . isChannel ( currentChat ) && mergeDialogId == 0 && info . migrated_from_chat_id != 0 )	if ( ChatObject . isChannel ( currentChat ) && mergeDialogId == 0 && chatInfo . migrated_from_chat_id != 0 )
mergeDialogId = - info . migrated_from_chat_id	mergeDialogId = - chatInfo . migrated_from_chat_id
maxMessageId [ 1 ] = info . migrated_from_max_id	maxMessageId [ 1 ] = chatInfo . migrated_from_max_id
if ( var == NotificationCenter . contactsDidLoaded )	if ( var == NotificationCenter . contactsDidLoad )
if ( var == NotificationCenter . blockedUsersDidLoaded )	if ( var == NotificationCenter . blockedUsersDidLoad )
if ( var == NotificationCenter . FileNewChunkAvailable )	if ( var == NotificationCenter . fileNewChunkAvailable )
if ( var == NotificationCenter . messagePlayingDidStarted )	if ( var == NotificationCenter . messagePlayingDidStart )
var . updateButtonState ( false , false )	showBottomOverlayProgress ( false , false )
var . updateButtonState ( false )	setItemAnimationsEnabled ( false )
var . updateButtonState ( false , false )	showBottomOverlayProgress ( false , false )
var . updateButtonState ( false )	updatePinnedMessageView ( false )
if ( var == NotificationCenter . didLoadedReplyMessages )	if ( var == NotificationCenter . replyMessagesDidLoad )
if ( var == NotificationCenter . didLoadedPinnedMessage )	if ( var == NotificationCenter . pinnedMessageDidLoad )
if ( var . getDialogId ( ) == dialog_id && info != null && info . pinned_msg_id == var . getId ( ) )	if ( var . getDialogId ( ) == dialog_id && ( chatInfo != null && chatInfo . pinned_msg_id == var . getId ( ) || userInfo != null && userInfo . pinned_msg_id == var . getId ( ) ) )
if ( var == NotificationCenter . botInfoDidLoaded )	if ( var == NotificationCenter . botInfoDidLoad )
if ( var == NotificationCenter . botKeyboardDidLoaded )	if ( var == NotificationCenter . botKeyboardDidLoad )
if ( var == NotificationCenter . peerSettingsDidLoaded )	if ( var == NotificationCenter . peerSettingsDidLoad )
if ( var == NotificationCenter . userInfoDidLoaded )	if ( var == NotificationCenter . userInfoDidLoad )
if ( var . phone_calls_available )	if ( userInfo . phone_calls_available )
( ( SizeNotifierFrameLayout ) fragmentView ) . setBackgroundImage ( Theme . getCachedWallpaper ( ) )	contentView . setBackgroundImage ( Theme . getCachedWallpaper ( ) , Theme . isWallpaperMotion ( ) )
MessagesController . getInstance ( currentAccount ) . loadFullUser ( currentUser , classGuid , false )	MessagesController . getInstance ( currentAccount ) . loadUserInfo ( var , true , classGuid )
if ( pinnedMessageObject != null && info . pinned_msg_id != pinnedMessageObject . getId ( ) = null )	if ( pinnedMessageObject != null && chatInfo . var != pinnedMessageObject . getId ( ) = null )
if ( info . pinned_msg_id != 0 && pinnedMessageObject == null )	if ( userInfo . var != 0 && pinnedMessageObject == null )
pinnedMessageObject = messagesDict [ 0 ] . get ( info . pinned_msg_id )	pinnedMessageObject = messagesDict [ 0 ] . get ( userInfo . var )
if ( info == null || info . pinned_msg_id == 0 || info . pinned_msg_id == var . getInt ( "" + dialog_id , 0 ) || actionBar != null && ( actionBar . isActionModeShowed ( ) || actionBar . isSearchFieldVisible ( ) ) )	if ( chatInfo == null && userInfo == null || var == 0 || var == var . getInt ( "" + dialog_id , 0 ) || actionBar != null && ( actionBar . isActionModeShowed ( ) || actionBar . isSearchFieldVisible ( ) ) )
TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( pinnedMessageObject . photoThumbs2 , AndroidUtilities . dp ( 50 ) )	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( pinnedMessageObject . photoThumbs2 , AndroidUtilities . dp ( 320 ) )
pinnedImageLocation = var . location	pinnedImageLocation = var
pinnedMessageImageView . setImage ( pinnedImageLocation , "" , ( Drawable ) null )	pinnedMessageImageView . setImage ( pinnedImageLocation , "" , ( Drawable ) null , pinnedMessageObject )
if ( loadingPinnedMessage != info . pinned_msg_id )	if ( loadingPinnedMessage != var )
if ( ChatObject . isChannel ( currentChat ) && currentChat . banned_rights != null && currentChat . banned_rights . send_media )	if ( currentChat != null && ! ChatObject . canSendMedia ( currentChat ) )
replyImageView . setImage ( replyImageLocation , "" , ( Drawable ) null )	replyImageView . setImage ( replyImageLocation , "" , ( Drawable ) null , replyingMessageObject )
pinnedMessageImageView . setImage ( pinnedImageLocation , "" , ( Drawable ) null )	pinnedMessageImageView . setImage ( pinnedImageLocation , "" , ( Drawable ) null , pinnedMessageObject )
if ( bottomOverlayChat != null && bottomOverlayChat . getVisibility ( ) != View . VISIBLE )	if ( bottomOverlayChat != null && bottomOverlayChat . getVisibility ( ) != View . VISIBLE && ! actionBar . isSearchFieldVisible ( ) )
if ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty || var . messageOwner . action instanceof TLRPC . TL_messageActionChatDeleteUser )	if ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty || var . messageOwner . action instanceof TLRPC . TL_messageActionChatDeleteUser || var . messageOwner . action instanceof TLRPC . TL_messageActionChatJoinedByLink || var . messageOwner . action instanceof TLRPC . TL_messageActionChatAddUser )
if ( requestId != 0 )	if ( var != 0 )
progressDialog [ 0 ] . setCanceledOnTouchOutside ( false )	progressDialog [ 0 ] . setOnCancelListener ( var )
progressDialog [ 0 ] . setCancelable ( false )	progressDialog [ 0 ] . dismiss var
ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )	progressDialog [ 0 ] . setOnCancelListener ( var )
var = ! finalSelectedObject . isSendError ( ) && ( finalSelectedObject . messageOwner . action == null || finalSelectedObject . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && ( finalSelectedObject . isOut ( ) || canRevokeInbox || currentChat != null && ( currentChat . creator || currentChat . admin && currentChat . admins_enabled ) ) && ( var - finalSelectedObject . messageOwner . date ) <= revokeTimeLimit	var = ! finalSelectedObject . isSendError ( ) && ( finalSelectedObject . messageOwner . action == null || finalSelectedObject . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && ( finalSelectedObject . isOut ( ) || canRevokeInbox || ChatObject . hasAdminRights ( currentChat ) ) && ( var - finalSelectedObject . messageOwner . date ) <= revokeTimeLimit
if ( ( var . isOut ( ) || canRevokeInbox ) || currentChat != null && ( currentChat . creator || currentChat . admin && currentChat . admins_enabled ) )	if ( ( var . isOut ( ) || canRevokeInbox ) || ChatObject . canBlockUsers ( currentChat ) )
MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( currentChat . id , var , info )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( currentChat . id , var , chatInfo )
boolean var = var . getDialogId ( ) != mergeDialogId && info != null && info . pinned_msg_id == var . getId ( ) && ( currentChat . creator || currentChat . admin_rights != null && ( currentChat . megagroup && currentChat . admin_rights . pin_messages || ! currentChat . megagroup && currentChat . admin_rights . edit_messages ) )	boolean var = var . getDialogId ( ) != mergeDialogId && var && ( chatInfo != null && chatInfo . pinned_msg_id == var . getId ( ) || userInfo != null && userInfo . pinned_msg_id == var . getId ( ) )
if ( selectedObject . contentType == 0 && selectedObject . getId ( ) > 0 && ! selectedObject . isOut ( ) && ( ChatObject . isChannel ( currentChat ) || currentUser != null && currentUser . bot ) )	if ( selectedObject . contentType == 0 && selectedObject . getId ( ) > 0 && ! selectedObject . isOut ( ) && ( currentChat != null || currentUser != null && currentUser . bot ) )
if ( var . messageOwner . action != null && var . messageOwner . action instanceof TLRPC . TL_messageActionPhoneCall )	if ( var . messageOwner . action instanceof TLRPC . TL_messageActionPhoneCall )
if ( ChatObject . isChannel ( currentChat ) && currentChat . megagroup && ! TextUtils . isEmpty ( currentChat . username ) && ChatObject . hasAdminRights ( currentChat ) )	if ( ChatObject . isChannel ( currentChat ) && currentChat . megagroup && ! TextUtils . isEmpty ( currentChat . username ) )
if ( selectedObject . contentType == 0 && selectedObject . getId ( ) > 0 && ! selectedObject . isOut ( ) && ( ChatObject . isChannel ( currentChat ) || currentUser != null && currentUser . bot ) )	if ( selectedObject . contentType == 0 && ! selectedObject . isMediaEmptyWebpage ( ) && selectedObject . getId ( ) > 0 && ! selectedObject . isOut ( ) && ( currentChat != null || currentUser != null && currentUser . bot ) )
DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , selectedObject . getDocument ( ) , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , false )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , selectedObject , selectedObject . getDocument ( ) , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , true )
DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , selectedObject . getDocument ( ) , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , true )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , selectedObject , selectedObject . getDocument ( ) , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , false )
if ( var != null && var > 0 )	if ( var != null )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0.0f ) , "" , 0.0f , ObjectAnimator . ofFloat ( var , "" , 1.0f ) , "" , 1.0f )	var . playTogether ( ObjectAnimator . ofFloat ( var , View . var , 0.0f ) , View . var , 0.0f , ObjectAnimator . ofFloat ( var , var , 1.0f ) , var , 1.0f )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoad )
actionBar . setTitle ( LocaleController . getString ( "" , R . string . GroupMembers ) , R . string . GroupMembers )	actionBar . setTitle ( LocaleController . getString ( "" , R . string . ChannelMembers ) , R . string . ChannelMembers )
if ( var == - 1 )	if ( checkDiscard  )
if ( var != null )	if ( var != null && var . getAdapter ( ) != var )
var . getSearchField ( ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
if ( var . getAdapter ( ) == var )	boolean var = var . getAdapter ( ) == var
var = var . var	var = var . user_id
var = ( TLRPC . ChatParticipant ) var	if ( var instanceof TLRPC . ChatParticipant )
var = var . var	var = var . user_id
if ( var . user_id == var )	if ( var != 0 && var . user_id == var )
var = true	var = var . admin_rights
ArrayList < String > var = new ArrayList	final ArrayList < String > var
final ArrayList < Integer > var = new ArrayList	final ArrayList < Integer > var
if ( var . get ( var ) == 0 )	if ( var . get ( var ) == 2 )
if ( var == NotificationCenter . chatInfoDidLoaded )	if ( var == NotificationCenter . chatInfoDidLoad )
if ( var . var == var && ! var )	if ( var . var == var && ( ! var || ! ChatObject . var ( var ) ) )
if ( var && ! var )	if ( var && ! var && needOpenSearch )
if ( var == null )	if ( TextUtils . isEmpty ( var ) )
updateSearchResults ( new ArrayList ( ) , new ArrayList ( ) )	updateSearchResults ( new ArrayList ( ) , new ArrayList ( ) , new ArrayList ( ) )
ArrayList < TLRPC . ChatParticipant > var = new ArrayList var ( var )	ArrayList < TLObject > var = new ArrayList var ( var )
TLRPC . ChatParticipant var = var . get ( var )	TLRPC . TL_contact var = var . get ( var )
updateSearchResults ( var , var )	updateSearchResults ( var , var , var )
return var . size ( )	int var = var . size ( )
if ( var instanceof TLRPC . ChatParticipant )	if ( var instanceof TLRPC . ChannelParticipant )
TLRPC . ChatParticipant var = ( TLRPC . ChatParticipant ) getItem ( ( Integer ) var . getTag ( ) )	TLRPC . ChannelParticipant var = ( TLRPC . ChannelParticipant ) getItem ( ( Integer ) var . getTag ( ) )
if ( var instanceof TLRPC . User )	if ( var instanceof TLRPC . ChatParticipant )
if ( var != null && var != null && var . length ( ) > 0 )	if ( var != null && ! TextUtils . isEmpty ( var ) )
var . setData ( var , var , var )	var . setData ( var , var , var , false )
TLRPC . ChatParticipant var = var . getItem ( ( Integer ) var . getTag ( ) )	TLObject var = listViewAdapter . getItem ( ( Integer ) var . getTag ( ) )
TLRPC . ChatParticipant var = getItem ( var )	TLObject var = getItem ( var )
TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var = new CheckBoxCell ( var , 1 )	var = new CheckBoxCell ( var , 1 , 21 )
var . setSize ( 18 )	ShadowSectionCell var = new ShadowSectionCell ( var , 18 )
if ( var instanceof TLRPC . TL_channels_joinChannel || var instanceof TLRPC . TL_channels_editAdmin || var instanceof TLRPC . TL_channels_inviteToChannel || var instanceof TLRPC . TL_messages_addChatUser || var instanceof TLRPC . TL_messages_startBot || var instanceof TLRPC . TL_channels_editBanned )	if ( var instanceof TLRPC . TL_channels_joinChannel || var instanceof TLRPC . TL_channels_editAdmin || var instanceof TLRPC . TL_channels_inviteToChannel || var instanceof TLRPC . TL_messages_addChatUser || var instanceof TLRPC . TL_messages_startBot || var instanceof TLRPC . TL_channels_editBanned || var instanceof TLRPC . TL_messages_editChatDefaultBannedRights || var instanceof TLRPC . TL_messages_editChatAdmin )
if ( var instanceof TLRPC . TL_messages_sendMessage || var instanceof TLRPC . TL_messages_sendMedia || var instanceof TLRPC . TL_messages_sendBroadcast || var instanceof TLRPC . TL_messages_sendInlineBotResult || var instanceof TLRPC . TL_messages_forwardMessages )	if ( var instanceof TLRPC . TL_messages_sendMessage || var instanceof TLRPC . TL_messages_sendMedia || var instanceof TLRPC . TL_messages_sendBroadcast || var instanceof TLRPC . TL_messages_sendInlineBotResult || var instanceof TLRPC . TL_messages_forwardMessages || var instanceof TLRPC . TL_messages_sendMultiMedia )
if ( var . text . equals ( "" ) )	if ( var . text . equals ( "" ) . text . equals ( "" ) )
if ( var == 4 )	if ( var != 0 )
if ( var == 5 )	if ( var == 4 )
if ( var == 5 )	if ( var == 4 )
var . dismissCurrentDialig ( )	var . getDismissRunnable ( ) . run
if ( var == 3 )	if ( var == 4 )
if ( var == 2 )	if ( var == 3 )
return var . create ( )	BottomSheet var = var . create ( )
var . dismissCurrentDialig ( var )	var . getDismissRunnable ( var ) . run var
var . dismissCurrentDialig ( var )	var . getDismissRunnable ( var ) . run var
var . dismissCurrentDialig ( )	var . getDismissRunnable ( ) . run
var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 48 ) . MATCH_PARENT , 48 )	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 50 ) . MATCH_PARENT , 50 )
public AnimatedArrowDrawable ( int var )	public AnimatedArrowDrawable ( int var , boolean var )
getVideoFrame ( var , var , var )	if ( getVideoFrame ( var , var , var ) == 0 )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStart )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . musicDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . musicDidLoad )
if ( var == NotificationCenter . messagePlayingDidReset || var == NotificationCenter . messagePlayingPlayStateChanged == NotificationCenter . messagePlayingDidStarted )	if ( var == NotificationCenter . messagePlayingDidReset || var == NotificationCenter . messagePlayingPlayStateChanged == NotificationCenter . messagePlayingDidStart )
var . updateButtonState ( false )	var . updateButtonState ( false , true )
if ( var == NotificationCenter . messagePlayingDidStarted )	if ( var == NotificationCenter . messagePlayingDidStart )
if ( var == NotificationCenter . musicDidLoaded )	if ( var == NotificationCenter . musicDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . musicDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . musicDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStart )
var = false	var = 0
var = true	var = 1
if ( var != null && Theme . avatar_photoDrawable != null )	if ( var != null )
setImage ( var , null , var , null , null , null , null , null , 0 )	setImage ( var , null , var , null , null , null , null , null , 0 , null )
setImage ( var , null , var , var , null , null , null , var , 0 )	setImage ( var , null , var , var , null , null , null , var , 0 , var )
setImage ( var , null , var , var , null , null , null , null , 0 )	setImage ( var , null , var , var , null , null , null , null , 0 , var )
setImage ( var , null , var , null , var , null , null , null , 0 )	setImage ( var , null , var , null , var , null , null , null , 0 , var )
setImage ( var , null , var , var , null , null , null , null , var )	setImage ( var , null , var , var , null , null , null , null , var , var )
setImage ( var , null , var , null , var , null , null , null , var )	setImage ( var , null , var , null , var , null , null , null , var , var )
setImage ( var , null , var , null , null , var , null , null , var )	setImage ( var , null , var , null , null , var , null , null , var , var )
setImage ( null , var , var , var , null , null , null , null , 0 )	setImage ( null , var , var , var , null , null , null , null , 0 , null )
var . setImage ( var , var , var , var , var , var , var , var , 0 )	var . setImage ( var , var , var , var , var , var , var , var , var , 0 )
FileLoader . getInstance ( var ) . loadFile ( var . document , true , 1 )	FileLoader . getInstance ( var ) . loadFile ( var . document , "" , 2 , 1 )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . fileDidFailedLoad )
if ( var == NotificationCenter . FileDidFailedLoad )	if ( var == NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . featuredStickersDidLoad )
NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoad )
int var = var . getWidth ( ) / 2 + AndroidUtilities . dp ( 4 + 5 )	int var = getWidth / 2 + AndroidUtilities . dp ( 4 + 5 )
int var = var . getHeight ( ) / 2 - AndroidUtilities . dp ( 13 - 5 )	int var = getHeight / 2 - AndroidUtilities . dp ( 13 - 5 )
SendMessagesHelper . prepareSendingDocument ( null , null , var . getContentUri ( ) , "" , var , var , var , null )	SendMessagesHelper . prepareSendingDocument ( null , null , var . getContentUri ( ) , null , "" , var , var , var , null )
var . setMaxLines ( 4 )	var . setMaxLines ( 6 )
if ( ChatObject . isChannel ( var ) )	if ( var != null && ! ChatObject . canSendMedia ( var ) )
if ( var . banned_rights != null && var . banned_rights . send_media )	if ( var != null && ! ChatObject . canSendMedia ( var ) )
var . setImageDrawable ( var = new AnimatedArrowDrawable ( Theme . getColor ( Theme . key_chat_messagePanelIcons ) . key_chat_messagePanelIcons ) . getColor ( Theme . key_chat_messagePanelIcons ) . key_chat_messagePanelIcons )	var . setImageDrawable ( var = new AnimatedArrowDrawable ( Theme . getColor ( Theme . key_chat_messagePanelIcons ) . key_chat_messagePanelIcons , false ) . getColor ( Theme . key_chat_messagePanelIcons ) . key_chat_messagePanelIcons , false )
var . drawRect ( 0 , var , getMeasuredWidth , getMeasuredHeight , Theme . chat_composeBackgroundPaint )	var . drawRect ( 0 , var , getWidth , getHeight , Theme . chat_composeBackgroundPaint )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoad )
NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
if ( ChatObject . isChannel ( var ) )	if ( var != null )
var . setStickersBanned ( var . banned_rights != null && var . banned_rights . send_stickers , var . id )	var . setStickersBanned ( ! ChatObject . canSendStickers ( var ) , var . id )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . featuredStickersDidLoad )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , null , null , null , null , 0 )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , null , null , null , null , 0 , null )
if ( var . isFocused ( ) && ! var )	if ( var != null && var . isFocused ( ) && ! var )
ChatActivityEnterView . this . onStickerSelected ( var )	ChatActivityEnterView . this . onStickerSelected ( var , var )
DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , false )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var , var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , false )
if ( ( int ) dialog_id == 0 )	if ( ( int ) dialog_id == 0 && MessageObject . isGifDocument ( var ) )
MessagesController . getInstance ( currentAccount ) . saveGif ( var )	MessagesController . getInstance ( currentAccount ) . saveGif ( var , var )
SendMessagesHelper . getInstance ( currentAccount ) . sendSticker ( var , dialog_id , replyingMessageObject )	SendMessagesHelper . getInstance ( currentAccount ) . sendSticker ( var , dialog_id , replyingMessageObject , var )
MessagesController . getInstance ( currentAccount ) . saveGif ( var )	MessagesController . getInstance ( currentAccount ) . saveGif ( var , var )
SendMessagesHelper . getInstance ( currentAccount ) . sendSticker ( var , dialog_id , replyingMessageObject )	SendMessagesHelper . getInstance ( currentAccount ) . sendSticker ( var , dialog_id , replyingMessageObject , var )
if ( var == NotificationCenter . featuredStickersDidLoaded )	if ( var == NotificationCenter . featuredStickersDidLoad )
var . setLines ( 1 )	var . setLineSpacing ( - AndroidUtilities . dp ( 2 ) , 1.0f )
var . setSingleLine ( true )	openCamera ( true )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 85 ) , MeasureSpec . EXACTLY ) . dp ( 85 ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 90 ) , MeasureSpec . EXACTLY ) . dp ( 90 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 85 ) , MeasureSpec . EXACTLY ) . dp ( 85 ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 92 ) , MeasureSpec . EXACTLY ) . dp ( 92 ) , MeasureSpec . EXACTLY )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . albumsDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . albumsDidLoad )
if ( var instanceof ChatActivity = 294 = 199 )	if ( var instanceof ChatActivity = 298 = 203 )
var = 294	var = 298
var = 199	var = 203
super . onMeasure ( var , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 294 ) , MeasureSpec . EXACTLY ) . dp ( 294 ) , MeasureSpec . EXACTLY )	super . onMeasure ( var , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 298 ) , MeasureSpec . EXACTLY ) . dp ( 298 ) , MeasureSpec . EXACTLY )
super . onMeasure ( var , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 199 ) , MeasureSpec . EXACTLY ) . dp ( 199 ) , MeasureSpec . EXACTLY )	super . onMeasure ( var , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 203 ) , MeasureSpec . EXACTLY ) . dp ( 203 ) , MeasureSpec . EXACTLY )
var = AndroidUtilities . dp ( 105 + 95 * ( var / 4 ) )	var = AndroidUtilities . dp ( 105 + 97 * ( var / 4 ) )
var . addView ( var , LayoutHelper . createFrame ( 85 , 90 , Gravity . LEFT | Gravity . TOP ) , 90 , Gravity . LEFT | Gravity . TOP )	var . addView ( var , LayoutHelper . createFrame ( 85 , 91 , Gravity . LEFT | Gravity . TOP ) , 91 , Gravity . LEFT | Gravity . TOP )
var = AndroidUtilities . generateVideoPath ( var )	var = AndroidUtilities . generateVideoPath ( var instanceof ChatActivity && ( ( ChatActivity ) var ) . isSecretChat var )
final File var = AndroidUtilities . generatePicturePath ( var )	final File var = AndroidUtilities . generatePicturePath ( var instanceof ChatActivity && ( ( ChatActivity ) var ) . isSecretChat var )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . albumsDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . albumsDidLoad )
if ( ! var || var && Build . VERSION . SDK_INT >= 18 && ! AndroidUtilities . isTablet ( var ) && ( Build . VERSION . SDK_INT < 26 || Build . VERSION . SDK_INT >= 28 ) && var instanceof ChatActivity = var )	if ( ! var || var && Build . VERSION . SDK_INT >= 18 && ! AndroidUtilities . isTablet ( var ) && AndroidUtilities . shouldEnableAnimation ( var ) && var instanceof ChatActivity = var )
var = var . banned_rights == null || ! var . banned_rights . send_media	if ( AndroidUtilities . isBannedForever ( var . banned_rights ) )
var . get ( var ) . setEnabled ( var )	AttachButton var = var . get ( var )
if ( var . megagroup && var . participants_count <= 200 )	if ( var . megagroup )
if ( onlineCount > 1 && var . participants_count != 0 )	if ( onlineCount > 1 )
var = String . format ( "" , LocaleController . formatPluralString ( "" , var . participants_count ) , var . participants_count , LocaleController . formatPluralString ( "" , onlineCount ) , onlineCount )	var = String . format ( "" , LocaleController . formatPluralString ( "" , var . participants_count ) , var . participants_count , LocaleController . formatPluralString ( "" , Math . min ( onlineCount , var . participants_count ) , var . participants_count ) , Math . min ( onlineCount , var . participants_count ) , var . participants_count )
avatarImageView . setImage ( var , "" , avatarDrawable )	avatarImageView . setImage ( var , "" , avatarDrawable , var )
avatarImageView . setImage ( var , "" , avatarDrawable )	avatarImageView . setImage ( var , "" , avatarDrawable , var )
avatarImageView . setImage ( var , "" , avatarDrawable )	avatarImageView . setImage ( var , "" , avatarDrawable , var )
if ( var instanceof TLRPC . TL_chatFull || var instanceof TLRPC . TL_channelFull && var . participants_count <= 200 && var . participants != null )	if ( var instanceof TLRPC . TL_chatFull || var instanceof TLRPC . TL_channelFull && var . participants_count <= 200 && var . participants != null instanceof TLRPC . TL_channelFull && var . participants_count > 200 )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didUpdateConnectionState )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didUpdateConnectionState )
if ( var == NotificationCenter . didUpdatedConnectionState )	if ( var == NotificationCenter . didUpdateConnectionState )
public ChatBigEmptyView ( Context var , boolean var )	public ChatBigEmptyView ( Context var , int var )
if ( var != null )	if ( var != null && var . var != null )
var = new ImageView ( var )	ImageView var = new ImageView ( var )
var . setDimVisibility ( false )	var . updateBitmap ( var , var )
if ( ! var . hasChanges ( ) && var . getBaseRotation ( ) < var && var )	if ( var == null || ! var . hasChanges ( ) && var . getBaseRotation ( ) < var && var )
var . loadVideo ( null , null , null , false )	var . loadVideo ( null , null , null , null , false )
boolean var = var . loadVideo ( var , null , var , true )	boolean var = var . loadVideo ( var , null , null , var , true )
var . loadVideo ( null , null , null , false )	var . loadVideo ( null , null , null , null , false )
listener . onStickerSelected ( var )	listener . onStickerSelected ( var , var )
var . onStickerSelected ( var . getSticker ( var ) )	var . onStickerSelected ( var . getSticker ( var ) , var . getParentObject ( var ) )
var . onGifSelected ( var . get ( var ) )	var . onGifSelected ( var . get ( var ) , "" )
DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_IMAGE , null , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
if ( AndroidUtilities . isInMultiwindow var )	if ( AndroidUtilities . isInMultiwindow || var var )
if ( AndroidUtilities . isInMultiwindow var )	if ( AndroidUtilities . isInMultiwindow || var var )
NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recentImagesDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . groupStickersDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recentDocumentsDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . featuredStickersDidLoad )
NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recentDocumentsDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recentDocumentsDidLoad )
if ( var == null || var . banned_rights == null )	if ( var . banned_rights == null )
if ( AndroidUtilities . isBannedForever ( var . banned_rights . until_date ) var )	if ( AndroidUtilities . isBannedForever ( var . banned_rights ) var )
if ( var == NotificationCenter . recentDocumentsDidLoaded )	if ( var == NotificationCenter . recentDocumentsDidLoad )
if ( var == NotificationCenter . featuredStickersDidLoaded )	if ( var == NotificationCenter . featuredStickersDidLoad )
if ( var == NotificationCenter . groupStickersDidLoaded )	if ( var == NotificationCenter . groupStickersDidLoad )
if ( var == NotificationCenter . emojiDidLoaded )	if ( var == NotificationCenter . emojiDidLoad )
( ( StickerEmojiCell ) var . itemView ) . setSticker ( var , false )	( ( StickerEmojiCell ) var . itemView ) . setSticker ( var , var . get ( var ) , false )
var . setSticker ( var , false )	var . setSticker ( var , var . get ( var ) , false )
var . put ( "" , var )	var . put ( var = "" , var )
var . put ( "" , var )	var . put ( var = "" , var )
var . put ( 1 + var + var , var . get ( var ) )	var . put ( var , var . get ( var ) )
if ( var . emoticon . equals ( var ) )	if ( Emoji . isValidEmoji ( var ) )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( reqId2 , true )
FeaturedStickerSetInfoCell var = ( FeaturedStickerSetInfoCell ) var . getParent ( var )	FeaturedStickerSetInfoCell var = ( FeaturedStickerSetInfoCell ) var . getParent ( )
TLRPC . StickerSetCovered var = var . getStickerSet ( var )	TLRPC . StickerSetCovered var = var . getStickerSet ( )
if ( var . isInstalled ( var ) var )	if ( var . isInstalled ( ) )
var . onStickerSetRemove ( var . getStickerSet ( var ) )	listener . onStickerSetRemove ( var . getStickerSet ( ) )
var . onStickerSetAdd ( var . getStickerSet ( var ) )	listener . onStickerSetAdd ( var . getStickerSet ( ) )
var . setSticker ( var , false )	var . setSticker ( var , cacheParent . get ( var ) , false )
for ( int var = - 1 , var var = var . size ( var ) , var var = var . size ( var ) , var var = var . size ( var ) ; var < var + var + var ; var ++ )	for ( int var = - 1 , var = serverPacks . size ( ) var = localPacks . size ( ) var = emojiArrays . size ( ) ; var < var + var + var ; var ++ )
for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
var . put ( 1 + var + var , var . get ( var ) )	cache . put ( var , var . get ( var ) )
if ( var != null )	if ( var != null && getParent != null )
if ( var != null && var . getVisibility ( ) == VISIBLE )	if ( var != null && var . getVisibility ( ) == VISIBLE && var . getParent ( ) != null )
if ( var != null )	if ( var != null && getParent != null )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStart )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStart )
if ( var == NotificationCenter . messagePlayingDidStarted || var == NotificationCenter . messagePlayingPlayStateChanged || var == NotificationCenter . messagePlayingDidReset || var == NotificationCenter . didEndedCall )	if ( var == NotificationCenter . messagePlayingDidStart || var == NotificationCenter . messagePlayingPlayStateChanged || var == NotificationCenter . messagePlayingDidReset || var == NotificationCenter . didEndedCall )
var . setImage ( var , null , "" , var , null , null , 0 , null , 1 )	var . setImage ( var , null , "" , var , null , null , 0 , null , var , 1 )
File var = null	Bitmap var = null
var = ImageLoader . scaleAndSaveImage ( var , 2048 , 2048 , 89 , false , 320 , 320 )	PhotoPickerActivity var = new PhotoPickerActivity ( 0 , null , var , var , new ArrayList ( ) , 1 , false , null )
var = ImageLoader . scaleAndSaveImage ( var , 100 , 100 , 80 , false )	var = ImageLoader . scaleAndSaveImage ( var , 150 , 150 , 80 , false , 150 , 150 )
if ( var != null && var != null )	if ( var )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var . drawRect ( var . left , var . top , var . right , var . bottom , var )	var . set ( var . left , var . top , var . right , var . bottom )
if ( var >= var )	if ( var >= var || var <= var && var <= var )
public StickerView ( Context var , Point var , Size var , TLRPC . Document var )	public StickerView ( Context var , Point var , Size var , TLRPC . Document var , Object var )
this ( var , var , 0.0f , 1.0f , var , var )	this ( var , var , 0.0f , 1.0f , var , var , var )
public StickerView ( Context var , Point var , float var , float var , Size var , TLRPC . Document var )	public StickerView ( Context var , Point var , float var , float var , Size var , TLRPC . Document var , Object var )
var . setImage ( var , null , var . thumb . location , null , "" , 1 )	var . setImage ( var , null , var , null , "" , var , 1 )
this ( var , var , var . getRotation ( ) , var . getScale ( ) , var . var , var . var )	this ( var , var , var . getRotation ( ) , var . getScale ( ) , var . var , var . var , var . var )
if ( ! var )	if ( ! var && var != 5 )
int var = var . getInt ( "" , 1000001 )	long var = Theme . getSelectedBackgroundId ( )
if ( var == 1000001 )	if ( var == Theme . DEFAULT_BACKGROUND_ID )
var = 1	var = true
var = var	this . var = var
if ( var == null )	if ( var != null )
var . setVisibility ( VISIBLE )	var . updateLayout ( )
var . setBitmap ( var , var , var )	var . setBitmap ( var , var , var , var )
if ( var != null )	if ( var != null && ! var . isRecycled ( var ) )
createSticker ( var )	createSticker ( var , var )
StickerView var = new StickerView ( getContext , var . var , var . angle , var . scale , baseStickerSize , var )	StickerView var = new StickerView ( getContext , var . var , var . angle , var . scale , baseStickerSize , var , var )
NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
if ( var == NotificationCenter . emojiDidLoaded )	if ( var == NotificationCenter . emojiDidLoad )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , var , 1 , 0 )
for ( int var = 0 ; var < internalGetSectionCount ; var ++ )	for ( int var = 0 , var = internalGetSectionCount ; var < var ; var ++ )
for ( int var = 0 ; var < internalGetSectionCount ; var ++ )	for ( int var = 0 , var = internalGetSectionCount ; var < var ; var ++ )
for ( int var = 0 ; var < internalGetSectionCount ; var ++ )	for ( int var = 0 , var = internalGetSectionCount ; var < var ; var ++ )
int var = var . getTop ( ) + var . getHeight ( )	int var = var . getTop ( ) - var - var + var . getHeight ( )
var . setTag ( 0 )	var . setTag ( var + var )
var . set ( var . getLeft ( ) , var . getTop ( ) , var . getRight ( ) , var . getBottom ( ) )	var . set ( var . getLeft ( ) , var . getTop ( ) , var . getRight ( ) , var . getBottom ( ) - var )
var . onPageSelected ( var )	var . setOnClickListener ( var )
var . onPageSelected ( var )	var . setOnClickListener ( var )
var . onPageSelected ( var )	var . setOnClickListener ( var )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
var . onPageSelected ( var )	var . setOnClickListener ( var )
var . setImage ( var . thumb . location , null , "" , null )	var . setImage ( var , null , "" , null , var )
if ( var . thumb != null )	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )
var . setImage ( var . thumb . location , null , "" , null )	var . setImage ( var , null , "" , null , var )
if ( Build . VERSION . SDK_INT >= 21 )	if ( Build . VERSION . SDK_INT >= 21 && ! var )
int var = ( int ) Math . ceil ( var . getIntrinsicWidth ( ) * var )	int var = ( int ) Math . ceil ( var . getIntrinsicWidth ( ) * var * var )
int var = ( int ) Math . ceil ( var . getIntrinsicHeight ( ) * var )	int var = ( int ) Math . ceil ( var . getIntrinsicHeight ( ) * var * var )
int var = ( getMeasuredWidth - var ) / 2	int var = ( getMeasuredWidth - var ) / 2 + ( int ) var
int var = ( var - var + var ) / 2 + var	int var = ( var - var + var ) / 2 + var + ( int ) var
return createStaticLayout ( var , 0 , var . length ( ) , var , var , var , var , var , var , var , var , var )	return createStaticLayout ( var , 0 , var . length ( ) , var , var , var , var , var , var , var , var , var , true )
SpannableStringBuilder var = new SpannableStringBuilder ( var . subSequence ( 0 , Math . max ( 0 , var - 1 ) , var - 1 ) , Math . max ( 0 , var - 1 ) , var - 1 )	SpannableStringBuilder var = new SpannableStringBuilder ( var . subSequence ( 0 , Math . max ( 0 , var - 3 ) , var - 3 ) , Math . max ( 0 , var - 3 ) , var - 3 )
var . onStickerSelected ( var )	var . onStickerSelected ( var , var )
DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_MASK , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_MASK , var , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
MessagesController . getInstance ( var ) . saveRecentSticker ( var , true )	MessagesController . getInstance ( var ) . saveRecentSticker ( var , var , true )
DataQuery . getInstance ( var ) . addRecentSticker ( var , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )	DataQuery . getInstance ( var ) . addRecentSticker ( var , null , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . stickersDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recentImagesDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recentDocumentsDidLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recentDocumentsDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . stickersDidLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recentDocumentsDidLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recentDocumentsDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . stickersDidLoad )
if ( var == NotificationCenter . recentDocumentsDidLoaded )	if ( var == NotificationCenter . recentDocumentsDidLoad )
( ( StickerEmojiCell ) var . itemView ) . setSticker ( var , false )	( ( StickerEmojiCell ) var . itemView ) . setSticker ( var , var . get ( var ) , false )
public StickersAlert ( Context var , TLRPC . Photo var )	public StickersAlert ( Context var , Object var , TLRPC . Photo var )
if ( var != null )	if ( inputStickerSet != null )
if ( var == null && var . short_name != null )	if ( stickerSet == null && inputStickerSet . short_name != null )
var = DataQuery . getInstance ( currentAccount ) . getStickerSetByName ( var . short_name )	stickerSet = DataQuery . getInstance ( currentAccount ) . getStickerSetByName ( inputStickerSet . short_name )
if ( var . getAction ( var ) == MotionEvent . ACTION_DOWN && var != 0 && var . getY ( var ) < var )	if ( var . getAction ( ) == MotionEvent . ACTION_DOWN && scrollOffsetY != 0 && var . getY ( ) < scrollOffsetY )
return ! isDismissed var && super . onTouchEvent ( var )	return ! isDismissed && super . onTouchEvent ( var )
boolean var = StickerPreviewViewer . getInstance ( var ) . onInterceptTouchEvent ( var , var , 0 , null )	boolean var = StickerPreviewViewer . getInstance ( ) . onInterceptTouchEvent ( var , gridView , 0 , previewDelegate )
if ( var != null var )	if ( stickerSetCovereds != null )
var . setHighlightColor ( Theme . getColor ( Theme . key_dialogLinkSelection ) . key_dialogLinkSelection )	titleTextView . setHighlightColor ( Theme . getColor ( Theme . key_dialogLinkSelection ) . key_dialogLinkSelection )
containerView . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 48 ) . MATCH_PARENT , 48 )	containerView . addView ( titleTextView , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 50 ) . MATCH_PARENT , 50 )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 30 )	stickerEmojiTextView . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 30 )
var . onStickerSelected ( var )	delegate . onStickerSelected ( selectedSticker , stickerSet )
DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , var . getTag ( var ) != null )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , stickerSet , selectedSticker , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , previewFavButton . getTag ( ) != null )
NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoad )
if ( var != null var )	if ( stickerSet != null )
if ( var . set . title . charAt ( var ) != '@' ++ )	if ( stickerSet . set . title . charAt ( var ) != '@' ++ )
if ( var . set == null || ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . set . id ) var )	if ( stickerSet . set == null || ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( stickerSet . set . id ) )
NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
if ( var == NotificationCenter . emojiDidLoaded )	if ( var == NotificationCenter . emojiDidLoad )
( ( StickerEmojiCell ) var . itemView ) . setSticker ( var , false )	( ( StickerEmojiCell ) var . itemView ) . setSticker ( var , var . get ( var ) , false )
( ( StickerEmojiCell ) var . itemView ) . setSticker ( var . documents . get ( var ) , var )	( ( StickerEmojiCell ) var . itemView ) . setSticker ( stickerSet . documents . get ( var ) , stickerSet , showEmoji )
var = var . getResources ( ) . getDrawable ( R . drawable . switch_thumb )	var = new Paint ( Paint . ANTI_ALIAS_FLAG )
var = var . getResources ( ) . getDrawable ( R . drawable . switch_track )	var = new Paint ( Paint . ANTI_ALIAS_FLAG )
if ( AndroidUtilities . density < 1 = 0 )	var . setStyle ( Paint . Style . STROKE )
var = AndroidUtilities . dp ( 30 )	var . setStrokeWidth ( AndroidUtilities . dp ( 2 ) )
final ViewConfiguration var = ViewConfiguration . get ( var )	var . setStrokeCap ( Paint . Cap . ROUND )
var = var . getScaledTouchSlop ( )	var . setStrokeCap ( Paint . Cap . ROUND )
var = var . getScaledMinimumFlingVelocity ( )	var . setStrokeWidth ( AndroidUtilities . dp ( 2 ) )
var . setCallback ( null )	var . cancel ( )
var = var	var = null
var . setCallback ( this )	var . cancel ( )
var = 0	var = null
var . getPadding ( var )	var . setDuration ( 250 )
var = 0	var = null
final int var = getMeasuredHeight	int var = getMeasuredHeight / 2
if ( var < var )	if ( var && var )
final int var = getThumbOffset	cancelIconAnimator
final int var = var + var + var . left + var . right + var	var = getResources . getDrawable ( var ) . mutate
final float var = var . getX ( )	int var = AndroidUtilities . dp ( 31 )
final float var = var . getY ( )	int var = AndroidUtilities . dp ( 20 )
final float var = var . getX ( )	int var = ( getMeasuredHeight - AndroidUtilities . dp ( 14 ) ) / 2
getParent . requestDisallowInterceptTouchEvent ( true )	int var = var + AndroidUtilities . dp ( 7 ) + int ( AndroidUtilities . dp ( 17 ) * var )
super . onTouchEvent ( var )	int var = Color . red ( var )
var . clear ( )	int var = Color . green ( var )
return super . onTouchEvent ( var )	int var = Color . green ( var )
MotionEvent var = MotionEvent . obtain ( var )	int var = Color . blue ( var )
var . setAction ( MotionEvent . ACTION_CANCEL )	int var = Color . blue ( var )
super . onTouchEvent ( var )	int var = Color . alpha ( var )
var . recycle ( )	int var = Color . alpha ( var )
super . onLayout ( var , var , var , var , var )	var . drawCircle ( var , var , AndroidUtilities . dp ( 10 ) , var )
var = true	var = Theme . getColor ( var )
int var = 0	int var = var + AndroidUtilities . dp ( 2 )
var . getPadding ( var )	var = Color . var ( var )
var . setEmpty ( )	var = Color . var ( var )
var = Math . max ( 0 , var . var - var . var )	var = Color . var ( var )
var = Math . max ( 0 , var . var - var . var )	var = Color . var ( var )
if ( LocaleController . isRTL )	var = Color . var ( var )
var = getPaddingLeft + var	var = Color . var ( var )
var = var + var - var - var	var = Color . var ( var )
var = getWidth - getPaddingRight - var	var = Color . var ( var )
var = var - var + var + var	var = Color . var ( var )
var = getPaddingTop	var = int ( var + ( var - var ) * var )
var = ( getPaddingTop + getHeight - getPaddingBottom ) / 2 - var / 2	var = int ( var + ( var - var ) * var )
var = var + var	var = int ( var + ( var - var ) * var )
var = getHeight - getPaddingBottom	var = int ( var + ( var - var ) * var )
var = var - var	var = int ( var + ( var - var ) * var )
final int var = var	var = int ( var + ( var - var ) * var )
var = Insets . NONE	var = int ( var + ( var - var ) * var )
int var = var	int var = int ( var + ( var - var ) * var )
int var = var	int var = int ( var + ( var - var ) * var )
var . setBounds ( var , var , var , var )	var . drawCircle ( var , var , AndroidUtilities . dp ( 8 ) , var )
var . setBounds ( var , var + var , var , var + var )	var . setBounds ( var - var . getIntrinsicWidth ( ) / 2 , var - var . getIntrinsicHeight ( ) / 2 , var + var . getIntrinsicWidth ( ) / 2 , var + var . getIntrinsicHeight ( ) / 2 )
var . setHotspotBounds ( var , var , var , var )	var -= AndroidUtilities . dp ( 10.8f ) - AndroidUtilities . dp ( 1.3f ) * var
super . draw ( var )	var -= AndroidUtilities . dp ( 10.8f ) - AndroidUtilities . dp ( 1.3f ) * var
super . onDraw ( var )	var . draw ( var )
final Rect var = var	var -= AndroidUtilities . dp ( 10.8f ) - AndroidUtilities . dp ( 1.3f ) * var
var . getPadding ( var )	var -= AndroidUtilities . dp ( 8.5f ) - AndroidUtilities . dp ( 0.5f ) * var
var . copyBounds ( var )	int var = ( int ) AndroidUtilities . dpf2 ( 4.6f ) + var
var . right -= var . right	int var = int ( AndroidUtilities . dpf2 ( 9.5f ) + var )
var . draw ( var )	int var = var + AndroidUtilities . dp ( 2 )
var . draw ( var )	int var = ( int ) AndroidUtilities . dpf2 ( 7.5f ) + var
final int var = var . save ( )	int var = ( int ) AndroidUtilities . dpf2 ( 5.4f ) + var
var . draw ( var )	int var = var + AndroidUtilities . dp ( 7 )
var . restoreToCount ( var )	int var = var + AndroidUtilities . dp ( 7 )
var = 1 - var	var = int ( var + ( var - var ) * var )
return int ( var * getThumbScrollRange + 0.5f )	var = int ( var + ( var - var ) * var )
var . getPadding ( var )	var . drawLine ( var , var , var , var , var )
final Insets var	var . drawLine ( var , var , var , var , var )
if ( var != null )	var . drawLine ( var , var , var , var , var )
var = Insets . NONE	var . drawLine ( var , var , var , var , var )
var = Insets . NONE	var = ( int ) AndroidUtilities . dpf2 ( 7.5f ) + var
var . setState ( var )	var = var + AndroidUtilities . dp ( 7 )
var . setState ( var )	var = var - AndroidUtilities . dp ( 7 )
super . drawableHotspotChanged ( var , var )	var . drawLine ( var , var , var , var , var )
if ( var != null )	if ( var == 2 || var != null )
var . setHotspot ( var , var )	var . setAlpha ( int ( 255 * ( 1.0f - var ) ) * ( 1.0f - var ) )
var . setHotspot ( var , var )	var . drawLine ( var , var , var , var - AndroidUtilities . dp ( 5 ) , var )
return super . verifyDrawable ( var ) || var == var || var == var	var . rotate ( - 90 * var , var , var )
super . jumpDrawablesToCurrentState ( )	var . drawLine ( var , var , var + AndroidUtilities . dp ( 4 ) , var , var )
var . jumpToCurrentState ( )	var . drawLine ( var , var , var + AndroidUtilities . dp ( 4 ) , var , var )
var . jumpToCurrentState ( )	var . drawLine ( var , var , var + AndroidUtilities . dp ( 4 ) , var , var )
var . end ( )	var . restore ( )
final AlertDialog var = new AlertDialog ( getContext , 1 )	final AlertDialog var = new AlertDialog ( getContext , 3 )
var . setMessage ( LocaleController . getString ( "" , R . string . Loading ) , R . string . Loading )	builder12 . setNegativeButton ( LocaleController . getString ( "" , R . string . Cancel ) , R . string . Cancel , null )
var . setCanceledOnTouchOutside ( false )	var . setCanCacnel ( false )
var . setNegativeButton ( LocaleController . getString ( "" , R . string . Cancel ) , R . string . Cancel , null )	builder12 . setNegativeButton ( LocaleController . getString ( "" , R . string . Cancel ) , R . string . Cancel , null )
var . show ( )	builder12 . show ( )
addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . RIGHT | Gravity . BOTTOM , 16 , 0 , 16 , 16 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . RIGHT | Gravity . BOTTOM , 16 , 0 , 16 , 16 )	addView ( acceptTextView , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . RIGHT | Gravity . BOTTOM , 16 , 0 , 16 , 16 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . RIGHT | Gravity . BOTTOM , 16 , 0 , 16 , 16 )
var . onAcceptTerms ( var )	delegate . onAcceptTerms ( currentAccount )
public TextPaintImageReceiverSpan ( View var , TLRPC . Document var , int var , int var )	public TextPaintImageReceiverSpan ( View var , TLRPC . Document var , Object var , int var , int var , boolean var , boolean var )
var . setImageCoords ( ( int ) var , var , var , var )	var . setImageCoords ( ( int ) var , var - 1 , var , var )
FileLoader . getInstance ( var ) . loadFile ( var . document , true , 1 )	FileLoader . getInstance ( var ) . loadFile ( var . document , "" , 1 , 1 )
if ( var == NotificationCenter . FileDidFailedLoad )	if ( var == NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . fileDidLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . fileDidFailedLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . fileDidLoad )
public WallpaperUpdater ( Activity var , WallpaperUpdaterDelegate var )	public WallpaperUpdater ( Activity var , BaseFragment var , WallpaperUpdaterDelegate var )
AlertDialog . Builder var = new AlertDialog . Builder ( var )	BottomSheet . Builder var = new BottomSheet . Builder ( var )
var . setItems ( var , var , var )	var . setItems ( var , var , var , var )
var . didSelectWallpaper ( null , null )	var . didSelectWallpaper ( null , null , false )
var . didSelectWallpaper ( var , var )	var . didSelectWallpaper ( var , var , false )
var . didSelectWallpaper ( var , var )	var . didSelectWallpaper ( var , var , true )
if ( ConnectionsManager . isNetworkOnline ( ) = false )	if ( ApplicationLoader . isNetworkOnline ( ) = false )
var . setHint ( LocaleController . getString ( "" , R . string . CallReportHint ) , R . string . CallReportHint )	var . setTitle ( LocaleController . getString ( "" , R . string . CallReportHint ) , R . string . CallReportHint )
SendMessagesHelper . prepareSendingDocument ( var . getAbsolutePath ( ) , var . getAbsolutePath ( ) , null , "" , var , null , null , null )	SendMessagesHelper . prepareSendingDocument ( var . getAbsolutePath ( ) , var . getAbsolutePath ( ) , null , TextUtils . join ( "" , var ) , var , "" , var , null , null , null )
if ( ! var . getBoolean ( "" , true ) )	var . setChecked ( ! var . isChecked ( ) , true )
NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , ( long ) var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . peerSettingsDidLoad , ( long ) var )
var . setImage ( var , "" , var = new AvatarDrawable ( var ) )	var . setImage ( var , "" , var = new AvatarDrawable ( var ) , var )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoad )
var = arguments . getBoolean ( "" , false )	hideFloatingButton ( false )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoad )
var . getSearchField ( ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
if ( var . getAdapter ( ) == this )	if ( var != null && var . getAdapter ( ) == this )
var . setLayoutManager ( new LinearLayoutManager ( var , LinearLayoutManager . VERTICAL , false ) , LinearLayoutManager . VERTICAL , false )	var . setLayoutManager ( var = new LinearLayoutManager ( var , LinearLayoutManager . VERTICAL , false ) , LinearLayoutManager . VERTICAL , false )
presentFragment ( new GroupCreateActivity , false )	presentFragment ( new GroupCreateActivity ( var ) , false )
if ( var == RecyclerView . SCROLL_STATE_DRAGGING && var && var )	if ( var == RecyclerView . SCROLL_STATE_DRAGGING = false )
if ( var . bot && var . bot_nochats && ! var )	if ( var . bot_nochats )
var . getSearchField ( ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
TextCheckCell var = ( TextCheckCell ) var	TextCheckCell var = ( TextCheckCell ) view
var . setText ( LocaleController . getString ( "" , R . string . ProxySettings ) , R . string . ProxySettings , true )	var . setText ( LocaleController . getString ( "" , R . string . ProxySettings ) , R . string . ProxySettings , false )
NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didUpdateConnectionState )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . replyMessagesDidLoad )
NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didUpdateConnectionState )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . replyMessagesDidLoad )
var . getSearchField ( var ) . setHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )	var . setSearchFieldHint ( LocaleController . getString ( "" , R . string . Search ) , R . string . Search )
var . setImage ( var , "" , var )	var . setImage ( var , "" , var , var )
actionBar . openSearchField ( ( String ) var )	actionBar . openSearchField ( ( String ) var , false )
var = var . id	final long var = var . id
AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity var )	AlertsCreator . createClearOrDeleteDialogAlert ( DialogsActivity . this , var == 2 , var , null , var == 0 , var )
if ( TextUtils . isEmpty ( var . username ) var )	AlertsCreator . createClearOrDeleteDialogAlert ( DialogsActivity . this , var == 2 , var , null , var == 0 , var )
if ( var != null && var . megagroup && TextUtils . isEmpty ( var . username ) var )	if ( var == 2 && ( ! var . megagroup || ! TextUtils . isEmpty ( var . username ) ) var )
var . setPositiveButton ( LocaleController . getString ( "" , R . string . OK ) , R . string . OK , var , var )	var . showWithAction ( var , var == 2 , var )
TLRPC . User var = null	TLRPC . User var
if ( var == 1 var )	if ( var == 1 )
var . setPositiveButton ( LocaleController . getString ( "" , R . string . OK ) , R . string . OK , var , var )	AlertsCreator . createClearOrDeleteDialogAlert ( DialogsActivity . this , var == 2 , var , var , var == 0 , var )
var . addState ( new int var , ObjectAnimator . ofFloat ( var , "" , AndroidUtilities . dp ( 2 ) , AndroidUtilities . dp ( 4 ) ) , "" , AndroidUtilities . dp ( 2 ) , AndroidUtilities . dp ( 4 ) . setDuration ( 200 ) )	var . addState ( new int , ObjectAnimator . ofFloat ( floatingButton , View . TRANSLATION_Z , AndroidUtilities . dp ( 2 ) , AndroidUtilities . dp ( 4 ) ) , View . TRANSLATION_Z , AndroidUtilities . dp ( 2 ) , AndroidUtilities . dp ( 4 ) . setDuration ( 200 ) )
var . setStateListAnimator ( var )	floatingButton . setStateListAnimator ( var )
var . setOnClickListener ( var )	floatingButtonContainer . setOnClickListener ( var )
Bundle var = new Bundle var	Bundle var = new Bundle
var = new FrameLayout ( var )	floatingButtonContainer = new FrameLayout ( context )
if ( ( var . unread_count != 0 || var . unread_mark ) && ! MessagesController . getInstance ( currentAccount ) . isDialogMuted ( var . id ) )	TLRPC . EncryptedChat var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( var )
var = Theme . createSimpleSelectorCircleDrawable ( AndroidUtilities . dp ( 56 ) , Theme . getColor ( Theme . key_chats_actionUnreadBackground ) . key_chats_actionUnreadBackground , Theme . getColor ( Theme . key_chats_actionUnreadPressedBackground ) . key_chats_actionUnreadPressedBackground )	sheet . setItemColor ( 3 , Theme . getColor ( Theme . key_dialogTextRed2 ) . key_dialogTextRed2 , Theme . getColor ( Theme . key_dialogRedIcon ) . key_dialogRedIcon )
var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_chats_actionUnreadIcon ) . key_chats_actionUnreadIcon , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_chats_actionUnreadIcon ) . key_chats_actionUnreadIcon , PorterDuff . Mode . MULTIPLY )	var . setItemColor ( 3 , Theme . getColor ( Theme . key_dialogTextRed2 ) . key_dialogTextRed2 , Theme . getColor ( Theme . key_dialogRedIcon ) . key_dialogRedIcon )
var . setTextColor ( Theme . getColor ( Theme . key_chat_goDownButtonCounter ) . key_chat_goDownButtonCounter )	var . setItemColor ( 3 , Theme . getColor ( Theme . key_dialogTextRed2 ) . key_dialogTextRed2 , Theme . getColor ( Theme . key_dialogRedIcon ) . key_dialogRedIcon )
var . setPadding ( AndroidUtilities . dp ( 8 ) , 0 , AndroidUtilities . dp ( 8 ) , AndroidUtilities . dp ( 1 ) )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , 23 , Gravity . TOP | Gravity . CENTER_HORIZONTAL ) . WRAP_CONTENT , 23 , Gravity . TOP | Gravity . CENTER_HORIZONTAL )	contentView . addView ( undoView , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )
checkUnreadButton ( true )	undoView . hide ( true , false )
if ( var . getVisibility ( var ) != View . GONE )	if ( floatingButtonContainer . getVisibility ( ) != View . GONE )
var . setOpenedDialogId ( var = var )	dialogsAdapter . setOpenedDialogId ( openedDialogId = var )
actionBar . openSearchField ( var )	actionBar . openSearchField ( searchString , false )
var . didSelectDialogs ( DialogsActivity . this , var , var , false )	delegate . didSelectDialogs ( DialogsActivity . this , var , var , false )
checkUnreadCount ( false )	undoView . showWithAction ( var , false , )
int var = MessagesController . getInstance ( currentAccount ) . unreadUnmutedDialogs	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
if ( ( var . unread_count != 0 || var . unread_mark ) && ! MessagesController . getInstance ( currentAccount ) . isDialogMuted ( var . id ) )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( ( int ) - var , MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId ) . getInstance ( currentAccount ) . getClientUserId , null )
var . setTag ( 1 )	TLRPC . User var = ( TLRPC . User ) var [ 1 ]
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 , var . getMeasuredHeight ( var ) ) , "" , 0 , var . getMeasuredHeight ( var ) )	var . playTogether ( ObjectAnimator . ofFloat ( commentView , View . TRANSLATION_Y , 0 , commentView . getMeasuredHeight ( ) ) , View . TRANSLATION_Y , 0 , commentView . getMeasuredHeight ( ) )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , var . getMeasuredHeight ( var ) , 0 ) , "" , var . getMeasuredHeight ( var ) , 0 )	var . playTogether ( ObjectAnimator . ofFloat ( commentView , View . TRANSLATION_Y , commentView . getMeasuredHeight ( ) , 0 ) , View . TRANSLATION_Y , commentView . getMeasuredHeight ( ) , 0 )
var . setClickable ( ! var )	floatingButtonContainer . setClickable ( ! floatingHidden )
var . getViewTreeObserver ( var ) . removeOnGlobalLayoutListener ( this )	floatingButtonContainer . getViewTreeObserver ( ) . removeOnGlobalLayoutListener ( this )
checkUnreadCount ( true )	var . hide ( true , false )
if ( var == NotificationCenter . emojiDidLoaded )	if ( var == NotificationCenter . emojiDidLoad )
if ( var == NotificationCenter . contactsDidLoaded )	if ( var == NotificationCenter . contactsDidLoad )
if ( var == NotificationCenter . didLoadedReplyMessages )	if ( var == NotificationCenter . replyMessagesDidLoad )
if ( var == NotificationCenter . didUpdatedConnectionState )	if ( var == NotificationCenter . didUpdateConnectionState )
var . setClickable ( ! var )	floatingButtonContainer . setClickable ( ! var )
( ( HintDialogCell ) var ) . checkUnreadCounter ( var )	( ( HintDialogCell ) var ) . update ( var )
return new ThemeDescription var	return new ThemeDescription
( ( GraySectionCell ) var ) . setText ( LocaleController . getString ( "" , R . string . Recent ) , R . string . Recent . toUpperCase )	( ( GraySectionCell ) var ) . setText ( LocaleController . getString ( "" , R . string . Recent ) , R . string . Recent )
final AlertDialog var = new AlertDialog ( this , 1 )	final AlertDialog var = new AlertDialog ( this , 3 )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . featuredStickersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . stickersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . stickersDidLoad )
if ( var == NotificationCenter . featuredStickersDidLoaded == NotificationCenter . stickersDidLoaded )	if ( var == NotificationCenter . featuredStickersDidLoad == NotificationCenter . stickersDidLoad )
if ( var == NotificationCenter . stickersDidLoaded )	if ( var == NotificationCenter . stickersDidLoad )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoad )
var = new GroupCreateUserCell ( var , true )	var = new GroupCreateUserCell ( var , true , 0 )
var . queryServerSearch ( null , true , false , false , false , 0 , false )	var . queryServerSearch ( null , true , false , false , false , 0 , 0 )
var . queryServerSearch ( var , true , false , false , false , 0 , false )	var . queryServerSearch ( var , true , false , true , false , 0 , 0 )
updateSearchResults ( new ArrayList < TLRPC . User > . User ( ) , new ArrayList < CharSequence > ( ) )	updateSearchResults ( new ArrayList ( ) , new ArrayList ( ) )
ActionBarMenu var = actionBar . createMenu ( )	int var = MeasureSpec . getSize ( var )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )	floatingButtonContainer . addView ( progressView , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )
if ( var == var )	if ( var == var && var != null )
LinearLayout var = ( LinearLayout ) fragmentView	final LayoutParams var = ( LayoutParams ) var . getLayoutParams ( )
var . setDrawPhoto ( true )	var . hidePopup ( true )
var . openCamera ( )	avatarProgressView . setProgressColor ( 0xffffffff )
var . openGallery ( )	decoration . setSkipRows ( 2 )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlackText ) . key_windowBackgroundWhiteBlackText )	floatingButtonIcon . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_chats_actionIcon ) . key_chats_actionIcon , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_chats_actionIcon ) . key_chats_actionIcon , PorterDuff . Mode . MULTIPLY )
var . setBackgroundDrawable ( Theme . createEditTextDrawable ( var , false ) , false )	floatingButtonIcon . setImageResource ( R . drawable . checkbig )
var . setImeOptions ( EditorInfo . IME_FLAG_NO_EXTRACT_UI )	floatingButtonIcon . setPadding ( 0 , AndroidUtilities . dp ( 2 ) , 0 , 0 )
var . setCursorWidth ( 1.5f )	avatarAnimation . setDuration ( 180 )
var . invalidate ( )	avatarProgressView . setVisibility ( View . VISIBLE )
var . setAdapter ( var = new GroupCreateAdapter ( var ) )	listView . setAdapter ( adapter = new GroupCreateAdapter ( context ) )
var = var . location	avatarEditor . setImageDrawable ( null )
var . currentPicturePath = var . getString ( "" )	imageUpdater . currentPicturePath = var . getString ( "" )
var . requestFocus ( )	avatarProgressView . setAlpha ( 0.0f )
AndroidUtilities . showKeyboard ( var )	avatarProgressView . setVisibility ( View . INVISIBLE )
if ( var == null )	if ( listView == null )
MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , var )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , uploadedAvatar , avatar , avatarBig )
if ( var == null )	if ( avatarEditor == null )
var . setEnabled ( false )	avatarEditor . setClickable ( false )
var . playTogether ( ObjectAnimator . ofFloat ( var . getImageView ( ) , "" , 0.1f ) . getImageView ( ) , "" , 0.1f , ObjectAnimator . ofFloat ( var . getImageView ( ) , "" , 0.1f ) . getImageView ( ) , "" , 0.1f , ObjectAnimator . ofFloat ( var . getImageView ( ) , "" , 0.0f ) . getImageView ( ) , "" , 0.0f , ObjectAnimator . ofFloat ( var , "" , 1.0f ) , "" , 1.0f , ObjectAnimator . ofFloat ( var , "" , 1.0f ) , "" , 1.0f , ObjectAnimator . ofFloat ( var , "" , 1.0f ) , "" , 1.0f )	doneItemAnimation . playTogether ( ObjectAnimator . ofFloat ( floatingButtonIcon , "" , 0.1f ) , "" , 0.1f , ObjectAnimator . ofFloat ( floatingButtonIcon , "" , 0.1f ) , "" , 0.1f , ObjectAnimator . ofFloat ( floatingButtonIcon , "" , 0.0f ) , "" , 0.0f , ObjectAnimator . ofFloat ( progressView , "" , 1.0f ) , "" , 1.0f , ObjectAnimator . ofFloat ( progressView , "" , 1.0f ) , "" , 1.0f , ObjectAnimator . ofFloat ( progressView , "" , 1.0f ) , "" , 1.0f )
var . getImageView ( ) . setVisibility ( View . VISIBLE )	avatarProgressView . setVisibility ( View . VISIBLE )
var . setEnabled ( true )	floatingButtonContainer . setEnabled ( true )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0.1f ) , "" , 0.1f , ObjectAnimator . ofFloat ( var , "" , 0.1f ) , "" , 0.1f , ObjectAnimator . ofFloat ( var , "" , 0.0f ) , "" , 0.0f , ObjectAnimator . ofFloat ( var . getImageView ( ) , "" , 1.0f ) . getImageView ( ) , "" , 1.0f , ObjectAnimator . ofFloat ( var . getImageView ( ) , "" , 1.0f ) . getImageView ( ) , "" , 1.0f , ObjectAnimator . ofFloat ( var . getImageView ( ) , "" , 1.0f ) . getImageView ( ) , "" , 1.0f )	doneItemAnimation . playTogether ( ObjectAnimator . ofFloat ( progressView , "" , 0.1f ) , "" , 0.1f , ObjectAnimator . ofFloat ( progressView , "" , 0.1f ) , "" , 0.1f , ObjectAnimator . ofFloat ( progressView , "" , 0.0f ) , "" , 0.0f , ObjectAnimator . ofFloat ( floatingButtonIcon , "" , 1.0f ) , "" , 1.0f , ObjectAnimator . ofFloat ( floatingButtonIcon , "" , 1.0f ) , "" , 1.0f , ObjectAnimator . ofFloat ( floatingButtonIcon , "" , 1.0f ) , "" , 1.0f )
var . getImageView ( ) . setVisibility ( View . INVISIBLE )	avatarEditor . setVisibility ( View . INVISIBLE )
return 1 + var . size ( )	return 2 + selectedContacts . size ( )
var = new GroupCreateSectionCell ( var )	floatingButtonContainer = new FrameLayout ( context )
var = new GroupCreateUserCell ( var , false )	showAvatarProgress ( false , false )
GroupCreateSectionCell var = ( GroupCreateSectionCell ) var . itemView	HeaderCell var = ( HeaderCell ) var . itemView
TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . get ( var - 1 ) - 1 )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( selectedContacts . get ( var - 2 ) - 2 )
if ( var . getItemViewType ( ) == 1 )	if ( var . getItemViewType ( ) == 2 )
NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoad )
NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoad )
if ( var == NotificationCenter . chatInfoDidLoaded )	if ( var == NotificationCenter . chatInfoDidLoad )
var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( - var )
TLRPC . TL_help_getInviteText var = new TLRPC . TL_help_getInviteText ( var )	TLRPC . TL_help_getInviteText var = new TLRPC . TL_help_getInviteText ( )
var . last_name = var . substring ( var + 1 , var . length ( var ) ) . trim var	var . last_name = var . substring ( var + 1 ) . trim
privacyRules = rules . rules	lastseenPrivacyRules = rules . rules
privacyRules = var	phonePrivacyRules = var
if ( var == null && var == null )	if ( ( var == null || UserObject . isDeleted ( var ) ) && var == null )
return ( ( SpannableStringBuilder ) var ) . subSequence ( var , var )	return var . subSequence ( var , var )
return ( ( SpannedString ) var ) . subSequence ( var , var )	return var . subSequence ( var , var )
if ( spans != null && spans . length > 0 )	if ( var != null && var . length > 0 )
if ( spansMentions != null && spansMentions . length > 0 )	if ( var != null && var . length > 0 )
if ( spansUrlReplacement != null && spansUrlReplacement . length > 0 )	if ( var != null && var . length > 0 )
int mobileDataDownloadMask var = new int [ 4 ]	int var = new int [ 4 ]
int wifiDownloadMask var = new int [ 4 ]	int var = new int [ 4 ]
int roamingDownloadMask var = new int [ 4 ]	int var = new int [ 4 ]
int mobileMaxFileSize var = new int [ 7 ]	int var = new int [ 7 ]
int wifiMaxFileSize var = new int [ 7 ]	int var = new int [ 7 ]
int roamingMaxFileSize var = new int [ 7 ]	int var = new int [ 7 ]
var = var . var [ var ]	int var = var . var [ var ]
var = var . sizes [ typeToIndex ] ( var )	int var = var . sizes [ typeToIndex ] ( var )
final File result = new File [ 1 ]	final File var = new File [ 1 ]
Utilities . stageQueue . postRunnable ( var )	Utilities . stageQueue . postRunnable ( )
final int result = new int [ 1 ]	final int var = new int [ 1 ]
var . await ( var )	var . await ( )
if ( var != null )	if ( ! var )
if ( var instanceof AnimatedFileDrawable || var instanceof LottieDrawable = var instanceof BitmapDrawable )	if ( var instanceof LottieDrawable instanceof AnimatedFileDrawable = var instanceof BitmapDrawable )
String var = FileLoader . getDocumentFileName ( var . document )	if ( var != null && MessageObject . isAnimatedStickerDocument ( var . document ) )
if ( var . startsWith ( "" ) && var . endsWith ( "" ) )	var . lottieFile = "" . equals ( var . document . mime_type )
var . lottieFile = true	var . lottieFile = "" . equals ( var . mime_type )
if ( var . startsWith ( "" ) && var . endsWith ( "" ) )	var . lottieFile = "" . equals ( var . mime_type )
var . lottieFile = true	var . lottieFile = "" . equals ( var . mime_type )
return getStippedKey ( var , var )	return getStippedKey ( var , var , var )
var . setTranslate ( var . left , var . top )	var . setTranslate ( var . left + var , var . top + var )
if ( ! ( var instanceof AnimatedFileDrawable ) )	if ( ! ( var instanceof AnimatedFileDrawable ) && ! ( var instanceof LottieDrawable ) )
if ( ! ( var instanceof AnimatedFileDrawable ) )	if ( ! ( var instanceof AnimatedFileDrawable ) && ! ( var instanceof LottieDrawable ) )
public LruCache	public LruCache < T >
Iterator < HashMap . Entry < String , BitmapDrawable > , BitmapDrawable > var = var . entrySet ( ) . var	Iterator < HashMap . Entry < String , T > , T > var = var . entrySet ( ) . var
HashMap . Entry < String , BitmapDrawable > var = var . next ( )	HashMap . Entry < String , T > var = var . next ( )
BitmapDrawable var = var . getValue ( )	T var = var . getValue ( )
if ( isRoundVideo = 5 )	if ( isRoundVideo = var )
var = 5	var = var
if ( isSticker = 13 )	if ( isSticker = var )
var = 13	var = var
var = 13	var = var
if ( var == 13 )	if ( var == var || var == var )
if ( var . to_id . channel_id != 0 && ( var . via_bot_id == 0 && var . reply_to_msg_id == 0 || var != 13 ) )	if ( var . to_id . channel_id != 0 && ( var . via_bot_id == 0 && var . reply_to_msg_id == 0 || var != var && var != var ) )
if ( var == 5 )	if ( var == var )
if ( var == 13 )	if ( var == var || var == var )
return var == 13 && ! var	return var == var
if ( var != 1000 == 13 )	if ( var != 1000 == var )
return var == 13	return var == var
return ( var . flags & TLRPC . MESSAGE_FLAG_FWD ) != 0 && var . fwd_from != null && var . fwd_from . saved_from_peer == null && UserConfig . getInstance ( var ) . getClientUserId != getDialogId	return ( var . flags & TLRPC . MESSAGE_FLAG_FWD ) != 0 && var . fwd_from != null && ( var . fwd_from . saved_from_peer == null || var . fwd_from . saved_from_peer . channel_id != var . fwd_from . channel_id ) && UserConfig . getInstance ( var ) . getClientUserId != getDialogId
if ( var == null || var . to_id == null || var . media != null && ( isRoundVideoDocument ( var . media . document ) || isStickerDocument ( var . media . document ) ) || var . action != null && ! ( var . action instanceof TLRPC . TL_messageActionEmpty ) || isForwardedMessage ( var ) || var . via_bot_id != 0 || var . id < 0 )	if ( var == null || var . to_id == null || var . media != null && ( isRoundVideoDocument ( var . media . document ) || isStickerDocument ( var . media . document ) || isAnimatedStickerDocument ( var . media . document ) || isLocationMessage ( var ) ) || var . action != null && ! ( var . action instanceof TLRPC . TL_messageActionEmpty ) || isForwardedMessage ( var ) || var . via_bot_id != 0 || var . id < 0 )
if ( var == null || var . to_id == null || var . media != null && ( isRoundVideoDocument ( var . media . document ) || isStickerDocument ( var . media . document ) ) || var . action != null && ! ( var . action instanceof TLRPC . TL_messageActionEmpty ) || isForwardedMessage ( var ) || var . via_bot_id != 0 || var . id < 0 )	if ( var == null || var . to_id == null || var . media != null && ( isRoundVideoDocument ( var . media . document ) || isStickerDocument ( var . media . document ) || isAnimatedStickerDocument ( var . media . document ) ) || var . action != null && ! ( var . action instanceof TLRPC . TL_messageActionEmpty ) || isForwardedMessage ( var ) || var . via_bot_id != 0 || var . id < 0 )
return ( var . out || var . from_id == UserConfig . getInstance ( var ) . getClientUserId ) && ( var . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaDocument && ! isStickerMessage ( var ) || var . media instanceof TLRPC . TL_messageMediaEmpty || var . media instanceof TLRPC . TL_messageMediaWebPage || var . media == null )	return ( var . out || var . from_id == UserConfig . getInstance ( var ) . getClientUserId ) && ( var . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaDocument && ! isStickerMessage ( var ) && ! isAnimatedStickerMessage ( var ) || var . media instanceof TLRPC . TL_messageMediaEmpty || var . media instanceof TLRPC . TL_messageMediaWebPage || var . media == null )
if ( var . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaDocument && ! isStickerMessage ( var ) || var . media instanceof TLRPC . TL_messageMediaEmpty || var . media instanceof TLRPC . TL_messageMediaWebPage || var . media == null )	if ( var . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaDocument && ! isStickerMessage ( var ) && ! isAnimatedStickerMessage ( var ) || var . media instanceof TLRPC . TL_messageMediaEmpty || var . media instanceof TLRPC . TL_messageMediaWebPage || var . media == null )
if ( var == 8 || var == 3 || var == 9 || var == 2 || var == 14 || var == 5 )	if ( var == 8 || var == 3 || var == 9 || var == 2 || var == 14 || var == var )
if ( proxyDialog . id < 0 )	if ( var < 0 )
TLRPC . Chat var = getChat ( - ( int ) proxyDialog . id )	int var = ( int ) proxyDialog . id
if ( var == null || var . left || var . kicked || var . restricted )	if ( ChatObject . isNotInChat ( var ) || var . restricted )
if ( proxyDialog . id < 0 )	if ( var < 0 )
TLRPC . Chat var = getChat ( - ( int ) proxyDialog . id )	int var = ( int ) proxyDialog . id
if ( var == null || var . left || var . kicked || var . restricted )	if ( ChatObject . isNotInChat ( var ) || var . restricted )
if ( proxyDialog . id < 0 )	if ( var < 0 )
TLRPC . Chat var = getChat ( - ( int ) proxyDialog . id )	int var = ( int ) proxyDialog . id
if ( var == null || var . left || var . kicked || var . restricted )	if ( ChatObject . isNotInChat ( var ) || var . restricted )
return proxyDialog != null && proxyDialog . id == var && isLeftProxyChannel	return proxyDialog != null && proxyDialog . id == var && ( ! var || isLeftProxyChannel )
if ( var == 1 && ( var == var || var == 777000 ) )	if ( var == 1 && ( var == var || var == 777000 || isProxyDialog ( var , false ) ) )
AndroidUtilities . runOnUIThread ( )	AlertsCreator . processError ( currentAccount , var , var , var , var && ! var )
if ( var . folder_id == 1 && ! isDialogMuted ( var . id ) )	if ( var && var . folder_id == 1 && ! isDialogMuted ( var . id ) )
if ( MessageObject . isSecretPhotoOrVideo ( var ) )	if ( MessageObject . isSecretMedia ( var ) )
var . secret = var . ttl_seconds != 0	var . secret = var . ttl_seconds > 0 && var . ttl_seconds <= 60
if ( var instanceof TLRPC . TL_keyboardButtonGame = 1 instanceof TLRPC . TL_keyboardButtonBuy = 2 = 0 )	if ( var instanceof TLRPC . TL_keyboardButtonUrlAuth = 3 instanceof TLRPC . TL_keyboardButtonGame = 1 instanceof TLRPC . TL_keyboardButtonBuy = 2 = 0 )
final AlertDialog progressDialog var = new AlertDialog var	final AlertDialog var = new AlertDialog
String browserPackageNames = null	String var = null
if ( var . startsWith ( "" ) || var . equals ( "" ) || var . startsWith ( "" ) || var . equals ( "" ) )	if ( var . startsWith ( "" ) || var . equals ( "" ) || var . startsWith ( "" ) || var . equals ( "" ) || var . startsWith ( "" ) )
if ( var . equals ( "" ) )	if ( var . equals ( "" ) || var . startsWith ( "" ) )
public ResolveHostByNameTask ( long var , String var )	public ResolveHostByNameTask ( String var )
native_onHostNameResolved ( var , var , var )	native_onHostNameResolved ( var , var . get ( var ) , var )
if ( ( var || var != null && var . user_id != 0 && var . user_id == var && var == var ) && ( var < 0 || var || var == 3 ) )	if ( ( var || var != null && var . user_id != 0 && var . user_id == var && var == var ) && ( var < 0 || var || var == 3 ) || var )
if ( ( var < 0 || var == 3 ) && var . startsWith ( "" ) )	if ( ( var < 0 || var == 3 || var ) && var . startsWith ( "" ) )
var = args [ args ] . length - 1	var = args [ args ] . length - 1 . trim var
if ( ( var < 0 || var == 3 ) && var != null && var . size ( ) > 0 )	if ( ( var < 0 || var == 3 || var ) && var != null && var . size ( ) > 0 )
if ( ! var && ! var && ! var && var . get ( var . size ( ) - 1 ) . swipeBackEnabled )	if ( ! var && ! var && ! var && var . swipeBackEnabled )
if ( var >= 3500 && var > Math . abs ( var ) )	if ( var >= 3500 && var > Math . abs ( var ) && var . canBeginSlide ( ) )
if ( ! var && ! var && var . size ( ) <= 1 )	if ( ! var && ! var || var . size ( ) <= 1 )
var . setCursorColor ( 0xffffffff )	var . setCursorColor ( Theme . getColor ( Theme . key_actionBarDefaultSearch ) . key_actionBarDefaultSearch )
return "" . equals ( var ) || "" . equals ( var )	return "" . equals ( var ) || "" . equals ( var ) || "" . equals ( var )
var . put ( var , 0xff5ec245 )	var . put ( var , 0xffb0b9c2 )
var . add ( var = var )	var . put ( "" , var = var )
return createSelectorDrawable ( getColor ( var ) , 2 )	return getSelectorDrawable ( getColor ( var ) , var )
if ( var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) )	if ( var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) )
var . setColor ( getColor ( var ) )	var . put ( var , var )
var . setColor ( getColor ( var ) )	var . put ( var , var )
var = new DialogCell ( var , true )	var = new DialogCell ( var , true , false )
if ( var == 0 || ( var == null || var . length ( ) == 0 ) && ( var == null || var . length ( ) == 0 ) )	if ( var == 0 || TextUtils . isEmpty ( var ) && TextUtils . isEmpty ( var ) )
if ( var == null || var . length ( ) == 0 )	if ( TextUtils . isEmpty ( var ) )
var . offset_date = var . messageOwner . date	var . offset_rate = var
var . offset_date = 0	var . offset_rate = 0
if ( var != null )	if ( delegate != null )
var . searchStateChanged ( true )	var = true
return needMessagesSearch != 2 && ( lastSearchText == null || lastSearchText . length ( ) == 0 ) && ( ! recentSearchObjects . isEmpty ( ) || ! DataQuery . getInstance ( currentAccount ) . hints . isEmpty ( ) )	return needMessagesSearch != 2 && ! searchWas && ( ! recentSearchObjects . isEmpty ( ) || ! DataQuery . getInstance ( currentAccount ) . hints . isEmpty ( ) )
var = new DialogCell ( mContext , false )	var = new DialogCell ( mContext , false , true )
var . setText ( LocaleController . getString ( "" , R . string . Recent ) , R . string . Recent )	var . setText ( LocaleController . getString ( "" , R . string . Recent ) , R . string . Recent , LocaleController . getString ( "" , R . string . ClearButton ) , R . string . ClearButton , var )
var . setText ( LocaleController . getString ( "" , R . string . Hashtags ) , R . string . Hashtags )	var . setText ( LocaleController . getString ( "" , R . string . Hashtags ) , R . string . Hashtags , LocaleController . getString ( "" , R . string . ClearButton ) , R . string . ClearButton , var )
( ( DrawerProfileCell ) var . itemView ) . setUser ( MessagesController . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getUser ( UserConfig . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getClientUserId ) . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getClientUserId , var )	var . setUser ( MessagesController . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getUser ( UserConfig . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getClientUserId ) . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getClientUserId , var )
var . updateButtonState ( false )	var . updateButtonState ( true )
var . updateButtonState ( false )	var . updateButtonState ( true )
var = new RadialProgress ( this )	var = new RadialProgress2 ( this )
var . setAlphaForPrevious ( true )	didPressedButton ( true )
if ( var >= 0 && var < 4 )	if ( var == 1 )
var . setBackground ( null , false , false )	var . setIcon ( MediaActionDrawable . ICON_NONE , false , false )
if ( ! var && var = 0 )	if ( ! var && var && var = 0 )
var . setBackground ( getDrawableForCurrentState , var , var )	var . setIcon ( getIconForCurrentState , var , var )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , false , var )
TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 90 )	TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . thumbs , 40 )
var . setBackground ( getDrawableForCurrentState , true , var )	var . setIcon ( getIconForCurrentState , true , var )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , false , var )
var = new RadialProgress ( this )	var = new RadialProgress2 ( this )
var . setAlphaForPrevious ( true )	updateButtonState ( true )
var . setDiff ( AndroidUtilities . dp ( 0 ) )	var . setCircleRadius ( AndroidUtilities . dp ( 24 ) )
var . setStrokeWidth ( AndroidUtilities . dp ( 2 ) )	var . setBackgroundStroke ( AndroidUtilities . dp ( 3 ) )
didPressedButton ( false )	didPressedButton ( true )
var = AndroidUtilities . dp ( 7 )	int var = AndroidUtilities . dp ( 44 )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , false , var )
var . setBackground ( getDrawableForCurrentState , true , var )	var . setIcon ( getIconForCurrentState , true , var )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , var )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , var )
var . setBackground ( getDrawableForCurrentState , true , false )	var . setIcon ( getIconForCurrentState , true , var )
var . setBackground ( getDrawableForCurrentState , false , false )	var . setIcon ( getIconForCurrentState , false , var )
updateButtonState ( false )	updateButtonState ( true )
var = new RadialProgress ( this )	var = new RadialProgress2 ( this )
var . setAlphaForPrevious ( true )	didPressedButton ( true )
var = false	var = 0
return var || checkLayoutForLinks ( var , this , var , var , var ) || checkLayoutForLinks ( var , this , var , var , var + var ) || super . onTouchEvent ( var )	return var || var != 0 || checkLayoutForLinks ( var , this , var , var , var ) || checkLayoutForLinks ( var , this , var , var , var + var ) || super . onTouchEvent ( var )
var . setImage ( ImageLocation . getForPhoto ( var , var ) , var , var , ImageLocation . getForPhoto ( var , var ) , var , "" , var . var , null , currentPage , 1 )	var . setImage ( ImageLocation . getForPhoto ( var , var ) , var , var , ImageLocation . getForPhoto ( var , var ) , var , var , var . var , null , currentPage , 1 )
if ( var >= 0 && var < 6 )	if ( var == 0 == 1 )
var . setBackground ( null , false , false )	var . setIcon ( MediaActionDrawable . ICON_NONE , false , false )
var . setBackground ( getDrawableForCurrentState , false , var )	var . setIcon ( getIconForCurrentState , false , var )
if ( FileLoader . getInstance ( currentAccount ) . isLoadingFile ( var ) )	if ( var || FileLoader . getInstance ( currentAccount ) . isLoadingFile ( var ) = 0 )
var . setBackground ( getDrawableForCurrentState , true , var )	var . setIcon ( getIconForCurrentState , true , var )
String lines = var . split ( "" )	String var = var . split ( "" )
int var = ( var . getWidth ( ) - var ) / 2	int var = ( getWidth - var ) / 2
if ( var == var . type != 13 || var . getInputStickerSet ( ) != null )	if ( var == var var . isAnyKindOfSticker ( ) || var . getInputStickerSet ( ) != null )
if ( var . type != 13 || var . getInputStickerSet ( ) != null )	if ( ! var . isAnyKindOfSticker ( ) || var . getInputStickerSet ( ) != null )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
var . didPressChannelAvatar ( this , var , 0 , var , var )	var . didPressChannelAvatar ( this , var , var . messageOwner . fwd_from . channel_post , var , var )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
return var . type == 1 || var . type == 5 || var . type == 3 || var . type == 8 || var . type == 13	return var . type == 1 || var . type == MessageObject . TYPE_ROUND_VIDEO || var . type == 3 || var . type == 8 || var . isAnyKindOfSticker ( )
if ( var != null && var . replyMessageObject . type != 13 = var )	if ( var != null && ! var . replyMessageObject . isAnyKindOfSticker ( ) = var )
var = var . messageOwner . fwd_from != null && var . type != 13	var = var . messageOwner . fwd_from != null && ! var . isAnyKindOfSticker ( )
if ( var . gifState != 2 && ! SharedConfig . autoplayGifs && ( var . type == 8 || var . type == 5 ) )	if ( var . gifState != 2 && ! SharedConfig . autoplayGifs && ( var . type == 8 || var . type == MessageObject . TYPE_ROUND_VIDEO ) )
if ( var . type == 13 )	boolean var = var . type == MessageObject . TYPE_STICKER
boolean var = false	boolean var = var . type == MessageObject . TYPE_STICKER
if ( var instanceof TLRPC . TL_documentAttributeImageSize instanceof TLRPC . TL_documentAttributeAnimated = true )	if ( var instanceof TLRPC . TL_documentAttributeImageSize )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . photoThumbs != null && var . photoThumbs . size ( ) > 1 || var . type == 3 || var . type == 8 || var . type == 5 )	if ( var . photoThumbs != null && var . photoThumbs . size ( ) > 1 || var . type == 3 || var . type == 8 || var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 3 || var . type == 8 || var . type == 5 = true )	if ( var . type == 3 || var . type == 8 || var . type == MessageObject . TYPE_ROUND_VIDEO = true )
if ( var . type == 8 || var . type == 5 )	if ( var . type == 8 || var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( MessageObject . isGifDocument ( var . messageOwner . media . document ) || var . type == 5 )	if ( MessageObject . isGifDocument ( var . messageOwner . media . document ) || var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var == null && var . type != 13 && var == 0 )	if ( var == null && ! var . isAnyKindOfSticker ( ) && var == 0 )
if ( var . type == 13 && var < AndroidUtilities . dp ( 70 ) )	if ( var . isAnyKindOfSticker ( ) && var < AndroidUtilities . dp ( 70 ) )
if ( var . type == 5 && Theme . chat_roundVideoShadow != null )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO && Theme . chat_roundVideoShadow != null )
if ( var && var . type == 5 )	if ( var && var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . var instanceof TLRPC . TL_keyboardButtonCallback || var . var instanceof TLRPC . TL_keyboardButtonRequestGeoLocation || var . var instanceof TLRPC . TL_keyboardButtonGame || var . var instanceof TLRPC . TL_keyboardButtonBuy )	if ( var . var instanceof TLRPC . TL_keyboardButtonCallback || var . var instanceof TLRPC . TL_keyboardButtonRequestGeoLocation || var . var instanceof TLRPC . TL_keyboardButtonGame || var . var instanceof TLRPC . TL_keyboardButtonBuy || var . var instanceof TLRPC . TL_keyboardButtonUrlAuth )
boolean var = ( var . var instanceof TLRPC . TL_keyboardButtonCallback || var . var instanceof TLRPC . TL_keyboardButtonGame || var . var instanceof TLRPC . TL_keyboardButtonBuy ) && SendMessagesHelper . getInstance ( var ) . isSendingCallback ( var , var . var ) || var . var instanceof TLRPC . TL_keyboardButtonRequestGeoLocation && SendMessagesHelper . getInstance ( var ) . isSendingCurrentLocation ( var , var . var )	boolean var = ( var . var instanceof TLRPC . TL_keyboardButtonCallback || var . var instanceof TLRPC . TL_keyboardButtonGame || var . var instanceof TLRPC . TL_keyboardButtonBuy || var . var instanceof TLRPC . TL_keyboardButtonUrlAuth ) && SendMessagesHelper . getInstance ( var ) . isSendingCallback ( var , var . var ) || var . var instanceof TLRPC . TL_keyboardButtonRequestGeoLocation && SendMessagesHelper . getInstance ( var ) . isSendingCurrentLocation ( var , var . var )
if ( var == var || var == var || var . type == 5 )	if ( var == var || var == var || var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 0 || var . type == 1 || var . type == 8 || var . type == 5 )	if ( var . type == 0 || var . type == 1 || var . type == 8 || var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var != null && ! var . isOutOwner ( ) && var . type != 13 && var . type != 5 && var . isChatAdminCell ( var . id ) )	if ( var != null && ! var . isOutOwner ( ) && ! var . isAnyKindOfSticker ( ) && var . type != 5 && var . isChatAdminCell ( var . id ) )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
SpannableStringBuilder var = new SpannableStringBuilder ( String . format ( "" , var , var ) , var , var )	SpannableStringBuilder var = new SpannableStringBuilder ( String . format ( "" , var , LocaleController . getString ( "" , R . string . ViaBot ) , R . string . ViaBot , var ) , var , LocaleController . getString ( "" , R . string . ViaBot ) , R . string . ViaBot , var )
SpannableStringBuilder var = new SpannableStringBuilder ( String . format ( "" , var ) , var )	SpannableStringBuilder var = new SpannableStringBuilder ( String . format ( "" , LocaleController . getString ( "" , R . string . ViaBot ) , R . string . ViaBot , var ) , LocaleController . getString ( "" , R . string . ViaBot ) , R . string . ViaBot , var )
if ( var . type != 13 )	if ( ! var . isAnyKindOfSticker ( ) )
var = new SpannableStringBuilder ( String . format ( "" , var , var ) , var , var )	var = new SpannableStringBuilder ( String . format ( "" , var , LocaleController . getString ( "" , R . string . ViaBot ) , R . string . ViaBot , var ) , var , LocaleController . getString ( "" , R . string . ViaBot ) , R . string . ViaBot , var )
if ( var . type != 13 && var . type != 5 )	if ( ! var . isAnyKindOfSticker ( ) && var . type != 5 )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var == null || var . replyMessageObject . type == 13 || var . type == 13 && ! AndroidUtilities . isTablet ( ) || var . replyMessageObject . isSecretMedia ( ) )	if ( var == null || var . replyMessageObject . isAnyKindOfSticker ( ) || var . isAnyKindOfSticker ( ) && ! AndroidUtilities . isTablet ( ) || var . replyMessageObject . isSecretMedia ( ) )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 5 )	if ( var . type == MessageObject . TYPE_ROUND_VIDEO )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
if ( var . type == 13 || var . type == 5 )	if ( var . shouldDrawWithoutBackground ( ) )
public DialogCell ( Context var , boolean var )	public DialogCell ( Context var , boolean var , boolean var )
TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( ( int ) var . id )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var . id >> 32 ) . id >> 32 )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( ! SharedConfig . useThreeLinesLayout || var != 0 )	if ( ! var && ! SharedConfig . useThreeLinesLayout || var != 0 )
if ( ! SharedConfig . useThreeLinesLayout || var != 0 )	if ( ! var && ! SharedConfig . useThreeLinesLayout || var != 0 )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( SharedConfig . useThreeLinesLayout = "" )	if ( var || SharedConfig . useThreeLinesLayout = "" )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( ! SharedConfig . useThreeLinesLayout && var != 0 )	if ( ! var && ! SharedConfig . useThreeLinesLayout && var != 0 )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( ! SharedConfig . useThreeLinesLayout || var != 0 && var . length ( ) > 0 )	if ( ! var && ! SharedConfig . useThreeLinesLayout || var != 0 && var . length ( ) > 0 )
if ( var == 0 && MessagesController . getInstance ( var ) . isProxyDialog ( var ) )	if ( var == 0 && MessagesController . getInstance ( var ) . isProxyDialog ( var , true ) )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( ! SharedConfig . useThreeLinesLayout || var != null )	if ( ! var && ! SharedConfig . useThreeLinesLayout || var != null )
if ( SharedConfig . useThreeLinesLayout && var != null && ( var == 0 || var == 1 ) )	if ( ( var || SharedConfig . useThreeLinesLayout ) && var != null && ( var == 0 || var == 1 ) )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( ! SharedConfig . useThreeLinesLayout || var != null )	if ( ! var && ! SharedConfig . useThreeLinesLayout || var != null )
if ( SharedConfig . useThreeLinesLayout )	if ( var || SharedConfig . useThreeLinesLayout )
if ( var != null )	if ( var != null || var != null && var . type == 2 )
if ( var != null )	if ( var != null && var == 0 )
var . setVisibility ( INVISIBLE )	var . setVisibility ( var )
var = new GroupCreateCheckBox ( var )	var = new CheckBox2 ( var )
var . setVisibility ( VISIBLE )	var . setColor ( null , Theme . key_windowBackgroundWhite , Theme . key_checkboxCheck )
if ( var != null && var == null || var == null && var != null && var != null && var != null && ( var . volume_id != var . volume_id || var . local_id != var . local_id ) = true )	if ( var != null && var == null || var == null && var != null || var != null && var != null && ( var . volume_id != var . volume_id || var . local_id != var . local_id ) = true )
if ( var != null )	if ( var == null )
var = new GroupCreateCheckBox ( var )	var = new CheckBox2 ( var )
var . setVisibility ( VISIBLE )	var . setColor ( null , Theme . key_windowBackgroundWhite , Theme . key_checkboxCheck )
public LoadingCell ( Context var )	public LoadingCell ( Context var , int var , int var )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 54 ) , MeasureSpec . EXACTLY ) . dp ( 54 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( var , MeasureSpec . EXACTLY ) , MeasureSpec . EXACTLY )
var . setPadding ( 0 , AndroidUtilities . dp ( 7 ) , 0 , 0 )	var . setPadding ( 0 , AndroidUtilities . dp ( 5 ) , 0 , 0 )
if ( var != null && var == null || var == null && var != null && var != null && var != null && ( var . volume_id != var . volume_id || var . local_id != var . local_id ) = true )	if ( var != null && var == null || var == null && var != null || var != null && var != null && ( var . volume_id != var . volume_id || var . local_id != var . local_id ) = true )
public NotificationsCheckCell ( Context var , int var )	public NotificationsCheckCell ( Context var , int var , int var )
super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( 70 ) , MeasureSpec . EXACTLY ) . dp ( 70 ) , MeasureSpec . EXACTLY )	super . onMeasure ( MeasureSpec . makeMeasureSpec ( MeasureSpec . getSize ( var ) , MeasureSpec . EXACTLY ) . getSize ( var ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( AndroidUtilities . dp ( var ) , MeasureSpec . EXACTLY ) . dp ( var ) , MeasureSpec . EXACTLY )
var . setRoundRadius ( AndroidUtilities . dp ( 26 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 23 ) )
var = AndroidUtilities . dp ( 16.5f )	var = AndroidUtilities . dp ( 24 )
var = AndroidUtilities . dp ( 28.5f )	var = AndroidUtilities . dp ( 20.5f )
var = AndroidUtilities . dp ( 28.5f )	var = AndroidUtilities . dp ( 22.5f )
var = AndroidUtilities . dp ( 30 )	var = AndroidUtilities . dp ( 22.5f )
if ( var . bot && ! MessagesController . isSupportUser ( var ) )	if ( SharedConfig . drawDialogIcons && var . bot && ! MessagesController . isSupportUser ( var ) )
var = AndroidUtilities . dp ( 16.5f )	var = AndroidUtilities . dp ( 21 )
var = AndroidUtilities . dp ( 17 )	var = AndroidUtilities . dp ( 20.5f )
var = Theme . dialogs_nameEncryptedPaint	var = Theme . dialogs_searchNameEncryptedPaint
var = Theme . dialogs_namePaint	var = Theme . dialogs_searchNamePaint
var = AndroidUtilities . dp ( 25 )	var . setImageCoords ( var , AndroidUtilities . dp ( 7 ) , AndroidUtilities . dp ( 46 ) , AndroidUtilities . dp ( 46 ) )
var = AndroidUtilities . dp ( 13 )	var . setImageCoords ( var , AndroidUtilities . dp ( 7 ) , AndroidUtilities . dp ( 46 ) , AndroidUtilities . dp ( 46 ) )
var -= AndroidUtilities . dp ( 12 )	CharSequence var = TextUtils . ellipsize ( var , var , var - AndroidUtilities . dp ( 12 ) , TextUtils . TruncateAt . END )
var = var . getLineLeft ( 0 )	var = Math . ceil ( var . getLineWidth ( 0 ) )
var = Math . ceil ( var . getLineWidth ( 0 ) )	var = var . getLineRight ( 0 )
var = var . getLineRight ( 0 )	var = Math . ceil ( var . getLineWidth ( 0 ) )
var = Math . ceil ( var . getLineWidth ( 0 ) )	var = var . getLineLeft ( 0 )
setDrawableBounds ( Theme . dialogs_verifiedDrawable , var , var )	setDrawableBounds ( Theme . dialogs_verifiedDrawable , var , var + AndroidUtilities . dp ( 3 ) )
setDrawableBounds ( Theme . dialogs_verifiedCheckDrawable , var , var )	setDrawableBounds ( Theme . dialogs_verifiedCheckDrawable , var , var + AndroidUtilities . dp ( 3 ) )
var . setText ( var . getText ( ) + "" + var )	var . append ( var . getText ( ) )
var . setTitle ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName )	var . setTitle ( LocaleController . getString ( "" , R . string . OpenUrlTitle ) , R . string . OpenUrlTitle )
var . setMessage ( LocaleController . formatString ( "" , R . string . OpenUrlAlert , var ) , R . string . OpenUrlAlert , var )	var . setMessage ( LocaleController . formatString ( "" , R . string . OpenUrlAlert2 , var ) , R . string . OpenUrlAlert2 , var )
int var = columnByteBufferValue ( var . getStatementHandle ( ) , var )	long var = columnByteBufferValue ( var . getStatementHandle ( ) , var )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . var ( "" , var )	FileLog . var ( var )
Intent var = new Intent ( ApplicationLoader . applicationContext , OpenChatReceiver . class )	String var = var . substring ( var + 1 , var . length ( ) )
var . putExtra ( "" , var )	if ( var [ 0 ] . equals ( "" ) [ 0 ] . equals ( "" ) )
if ( var == null )	if ( var != null && var . equalsIgnoreCase ( "" ) )
if ( var > 0 )	if ( var != null && var . length != 0 )
if ( var < 0 )	if ( var . length ( ) > 0 )
var . putExtra ( "" , - var )	var . append ( "" )
var . setAction ( "" + var )	String var = var . substring ( 0 , var )
var . addFlags ( 0x4000000 )	String var = var . substring ( var + 1 , var . length ( ) )
if ( var == null )	if ( var != null && var . length != 0 )
if ( var > 0 )	if ( ! var )
var = MessagesController . getInstance ( ) . getUser ( var )	var = var [ var ] . length > 0
if ( var < 0 )	if ( var == 0 == 5 )
var = MessagesController . getInstance ( ) . getChat ( - var )	return PhoneFormat . getInstance ( ) . var ( var . toString ( ) )
if ( var == null && var == null )	if ( var == 5 )
var = var . var . photo_small	var = var . substring ( 2 )
var = var . title	var = args [ 0 ]
if ( var . var != null )	if ( args . length > 1 )
var = var . var . photo_small	var = args [ args ] . length - 1
Bitmap var = null	String var = null
var . eraseColor ( Color . TRANSPARENT )	return LocaleController . getString ( "" , R . string . ContactJobTitle )
var . setSavedMessages ( 1 )	var = var . substring ( 2 )
var . draw ( var )	String args = var . split ( "" )
var = new Paint ( Paint . ANTI_ALIAS_FLAG )	var = LocaleController . getString ( "" , R . string . PhoneMain )
var . restore ( )	var = var . createInputStream ( )
Drawable var = ApplicationLoader . applicationContext . getResources ( ) . getDrawable ( R . var . book_logo )	ContentResolver var = ApplicationLoader . applicationContext . getContentResolver ( )
var . draw ( var )	var . add ( var = new VcardData )
var . setBitmap ( null )	if ( var . startsWith ( "" ) )
var = var	var = new VcardItem
if ( var . bot )	var . type = 3
if ( var != null )	if ( var == null )
ShortcutManager var = ApplicationLoader . applicationContext . getSystemService ( ShortcutManager . class )	var . vcard . append ( '\n' )
var . putExtra ( Intent . EXTRA_SHORTCUT_ICON , var )	var = var . substring ( 0 , var . length ( ) - 1 )
var . setAction ( "" )	String var = var . phones . get ( 0 )
ApplicationLoader . applicationContext . sendBroadcast ( var )	for ( int var = 0 ; var < var . phones . size ( ) ; var ++ )
if ( Build . VERSION . SDK_INT >= 26 )	String var = var . phones . get ( var )
ShortcutManager var = ApplicationLoader . applicationContext . getSystemService ( ShortcutManager . class )	String var = var . substring ( Math . max ( 0 , var . length ( ) - 7 ) , var . length ( ) - 7 )
ArrayList < String > var = new ArrayList	ArrayList < VcardData > var = new ArrayList
var . removeDynamicShortcuts ( var )	if ( ContactsController . getInstance ( var ) . contactsByShortPhone . get ( var ) != null )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	LocaleController . LocaleInfo var = LocaleController . getInstance ( ) . getCurrentLocaleInfo
if ( var == null && var == null )	if ( var == null )
var = ContactsController . formatName ( var . first_name , var . last_name )	return String . format ( Locale . US , "" , var , var , var , var * var , var * var , var , var , var , var )
var . putExtra ( Intent . EXTRA_SHORTCUT_INTENT , createIntrnalShortcutIntent ( var ) )	return String . format ( Locale . US , "" , var , var , var , var , var , var , var , var , var )
var . putExtra ( Intent . EXTRA_SHORTCUT_NAME , var )	return String . format ( Locale . US , "" , var , var , var , var , var , var , var )
var . setAction ( "" )	return String . format ( Locale . US , "" , var , var , var , var , var , var )
ApplicationLoader . applicationContext . sendBroadcast ( var )	var . setEnabled ( var )
return UserConfig . passcodeHash . length ( ) > 0 && var && ( UserConfig . appLocked || UserConfig . autoLockIn != 0 && UserConfig . lastPauseTime != 0 && ! UserConfig . appLocked && ( UserConfig . lastPauseTime + UserConfig . autoLockIn ) <= ConnectionsManager . getInstance ( ) . getCurrentTime || ConnectionsManager . getInstance ( ) . getCurrentTime + 5 < UserConfig . lastPauseTime )	return SharedConfig . passcodeHash . length ( ) > 0 && var && ( SharedConfig . appLocked || SharedConfig . autoLockIn != 0 && SharedConfig . lastPauseTime != 0 && ! SharedConfig . appLocked && ( SharedConfig . lastPauseTime + SharedConfig . autoLockIn ) <= ConnectionsManager . getInstance ( UserConfig . selectedAccount ) . getCurrentTime || ConnectionsManager . getInstance ( UserConfig . selectedAccount ) . getCurrentTime + 5 < SharedConfig . lastPauseTime )
return FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE )	return FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE )
if ( var . startsWith ( "" ) )	if ( var . startsWith ( "" ) || var . startsWith ( "" ) )
if ( var . startsWith ( "" ) || var . startsWith ( "" ) )	if ( var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) )
var = var . replace ( "" , "" ) . replace ( "" , "" )	var = var . replace ( "" , "" ) . replace ( "" , "" ) . replace ( "" , "" ) . replace ( "" , "" )
showProxyAlert ( var , var , var , var , var )	showProxyAlert ( var , var , var , var , var , var )
var . setTitle ( LocaleController . getString ( "" , R . string . Proxy ) , R . string . Proxy )	var . setText ( LocaleController . getString ( "" , R . string . UseProxyTelegramInfo2 ) , R . string . UseProxyTelegramInfo2 )
var . append ( "" )	var . setTextAndValue ( var , var , true )
var . append ( LocaleController . getString ( "" , R . string . UseProxyAddress ) , R . string . UseProxyAddress ) . append ( "" ) . append ( var ) . append ( "" )	var = LocaleController . getString ( "" , R . string . UseProxyAddress )
var . append ( LocaleController . getString ( "" , R . string . UseProxyPort ) , R . string . UseProxyPort ) . append ( "" ) . append ( var ) . append ( "" )	var = LocaleController . getString ( "" , R . string . UseProxyPort )
var . append ( LocaleController . getString ( "" , R . string . UseProxyUsername ) , R . string . UseProxyUsername ) . append ( "" ) . append ( var ) . append ( "" )	var = LocaleController . getString ( "" , R . string . UseProxyUsername )
var . append ( LocaleController . getString ( "" , R . string . UseProxyPassword ) , R . string . UseProxyPassword ) . append ( "" ) . append ( var ) . append ( "" )	var = LocaleController . getString ( "" , R . string . UseProxyPassword )
var . append ( "" ) . append ( LocaleController . getString ( "" , R . string . EnableProxyAlert2 ) , R . string . EnableProxyAlert2 )	var . cancelButton . setText ( LocaleController . getString ( "" , R . string . Cancel ) , R . string . Cancel . toUpperCase )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit	SharedPreferences . Editor var = MessagesController . getGlobalMainSettings ( ) . edit
ConnectionsManager . native_setProxySettings ( var , var , var , var )	var = new SharedConfig . ProxyInfo ( var , var , var , var , "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . proxySettingsChanged )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . proxySettingsChanged )
var . show ( ) . setCanceledOnTouchOutside ( true )	var . show ( )
FileLog . var ( "" + var )	FileLog . d ( "" + var )
UserConfig . loadConfig ( )	SharedConfig . loadConfig ( )
MessagesController . getInstance ( )	MessagesController . getInstance ( var ) . getBlockedUsers ( true )
ConnectionsManager . getInstance ( )	ConnectionsManager . getInstance ( var )
if ( UserConfig . getCurrentUser ( ) != null )	if ( var != null )
MessagesController . getInstance ( ) . putUser ( UserConfig . getCurrentUser ( ) , true )	MessagesController . getInstance ( var ) . putUser ( var , true )
MessagesController . getInstance ( ) . getBlockedUsers ( true )	MessagesController . getInstance ( var )
SendMessagesHelper . getInstance ( ) . checkUnsentMessages	SendMessagesHelper . getInstance ( var ) . checkUnsentMessages
FileLog . var ( "" )	FileLog . var ( var )
ContactsController . getInstance ( ) . checkAppAccount	ContactsController . getInstance ( var ) . checkAppAccount
SharedPreferences var = var . getSharedPreferences ( "" , MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalNotificationsSettings ( )
if ( UserConfig . pushString != null && UserConfig . pushString . length ( ) != 0 )	if ( ! TextUtils . isEmpty ( var ) )
FileLog . d ( "" + UserConfig . pushString )	FileLog . d ( "" + var )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )	MessagesController . getInstance ( var ) . markDialogAsRead ( var , var , var , 0 , false , 0 , true )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )	MessagesController . getInstance ( var ) . markDialogAsRead ( var , var , var , 0 , false , 0 , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceiveCall , PhoneFormat . stripExceptNumbers ( var ) )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didReceiveCall , PhoneFormat . stripExceptNumbers ( var ) )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )
return MessagesController . getInstance ( ) . getChat ( - var )	return MessagesController . getInstance ( var ) . getChat ( - var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
long var = System . currentTimeMillis ( )	long var = System . currentTimeMillis ( ) / 1000 - 60 * 60 * 24 * var
final HashMap < Integer , File > var = ImageLoader . getInstance ( ) . createMediaPaths	final SparseArray < File > var = ImageLoader . getInstance ( ) . createMediaPaths
if ( var . getKey ( ) == FileLoader . MEDIA_DIR_CACHE )	if ( var . keyAt ( var ) == FileLoader . MEDIA_DIR_CACHE )
for ( int var = 0 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var . getName ( ) . equals ( "" ) )	if ( var . keyAt ( var ) == FileLoader . MEDIA_DIR_CACHE )
if ( Build . VERSION . SDK_INT >= 21 . lastModified ( ) + var < var )	Utilities . clearDir ( var . valueAt ( var ) . getAbsolutePath , 0 , var )
StructStat var = Os . var ( var . getPath ( ) )	Utilities . clearDir ( var . valueAt ( var ) . getAbsolutePath , 0 , var )
if ( var . st_atime != 0 . st_mtime + var < var )	Utilities . clearDir ( var . valueAt ( var ) . getAbsolutePath , 0 , var )
if ( var . lastModified ( ) + var < var )	Utilities . clearDir ( var . valueAt ( var ) . getAbsolutePath , 0 , var )
ContactsController var = var	ContactsController var = Instance [ var ]
var = var	var = Instance [ var ]
var = var = new ContactsController	Instance [ var ] = var = new ContactsController ( var )
public ContactsController	public ContactsController ( int var )
var = var . getAccountsByType ( "" )	var = new Account ( "" + UserConfig . getInstance ( var ) . getClientUserId var , "" )
if ( UserConfig . isClientActivated ( ) )	var . clear ( var )
var = true	var . var = var
var = var	var = new ArrayList var ( var )
FileLog . var ( var )	var = ContactsController . formatName ( var . first_name , var . last_name )
if ( UserConfig . isClientActivated ( ) )	var = ContactsController . formatName ( var . user . first_name , var . user . last_name )
var = new Account ( "" + UserConfig . getClientUserId ( ) , "" )	var = ContactsController . formatName ( var . first_name , var . last_name )
FileLog . var ( var )	return var . compareTo ( var )
FileLog . e ( "" )	FileLog . d ( "" )
ContactsController . getInstance ( ) . performSyncPhoneBook ( ContactsController . getInstance ( ) . getContactsCopy ( ContactsController . getInstance ( ) . var ) . getInstance ( ) . var , true , false , true , false , true , false )	performSyncPhoneBook ( getContactsCopy ( var ) , true , false , true , false , true , false )
ContactsController . getInstance ( ) . performSyncPhoneBook ( new HashMap < String , Contact > , Contact ( ) , true , true , true , true , false , false )	performSyncPhoneBook ( new HashMap < String , Contact > , Contact ( var ) , true , true , true , true , false , false )
ContactsController . getInstance ( ) . performSyncPhoneBook ( var , true , var , var , false , false , var )	performSyncPhoneBook ( var , true , var , var , false , false , var )
while ( var . moveToNext ( ) )	while ( var . moveToNext ( var ) )
if ( var . getCount ( ) > 0 )	if ( var > 0 )
while ( var . moveToNext ( ) )	while ( var . moveToNext ( var ) )
var . first_name = ""	var . first_name = var
while ( var . moveToNext ( ) )	while ( var . moveToNext ( var ) )
if ( var != null && TextUtils . isEmpty ( var . first_name ) && TextUtils . isEmpty ( var . last_name ) )	if ( var . isGoodProvider var )
if ( var . first_name == null )	if ( var != null var )
if ( var . first_name . length ( ) != 0 )	if ( ! TextUtils . isEmpty ( var . first_name ) var )
if ( var . last_name == null )	if ( var != null var )
Contact var = var . getValue ( )	Contact var = var . getValue ( var )
MessagesStorage . getInstance ( ) . putCachedPhoneBook ( var , true )	MessagesStorage . getInstance ( var ) . putCachedPhoneBook ( var , true , false )
FileLog . e ( "" )	FileLog . d ( "" )
final HashMap < String , Contact > var = readContactsFromPhoneBook	final HashMap < String , Contact > var = readContactsFromPhoneBook var
int var = var . size ( )	int var = var . size ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
TLRPC . TL_inputPhoneContact var = new TLRPC . TL_inputPhoneContact ( )	TLRPC . TL_inputPhoneContact var = new TLRPC . TL_inputPhoneContact ( var )
if ( ! var && var . isEmpty ( ) && var . isEmpty ( ) && var == var . size ( ) )	if ( ! var && var . isEmpty ( var ) && var . isEmpty ( var ) && var == var . size ( var ) )
FileLog . e ( "" )	FileLog . d ( "" )
if ( var && ! var . isEmpty ( ) && ! var . isEmpty ( ) )	if ( var && ! var . isEmpty ( var ) && ! var . isEmpty ( var ) )
if ( var . isEmpty ( ) )	if ( var . isEmpty ( var ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
FileLog . e ( "" )	FileLog . d ( "" )
if ( ! var . isEmpty ( ) )	if ( ! var . isEmpty ( var ) var )
if ( var >= 30 = 1 && var . isEmpty ( ) && var . size ( ) - var > var . size ( ) / 3 * 2 = 2 = 0 )	if ( var >= 30 = 1 && var == 0 && var . size ( var ) - var > var . size ( var ) / 3 * 2 = 2 = 0 )
if ( var && var . isEmpty ( ) && var . size ( ) - var > var . size ( ) / 3 * 2 = 2 )	if ( var && var == 0 && var . size ( var ) - var > var . size ( var ) / 3 * 2 = 2 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . hasNewContactsToImport , var , var , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . hasNewContactsToImport , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsImported )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsImported )
if ( var == null )	if ( var == null var )
FileLog . e ( "" )	FileLog . d ( "" )
if ( ! var . retry_contacts . isEmpty ( ) )	if ( ! var . retry_contacts . isEmpty ( var ) )
for ( int var = 0 ; var < var . popular_invites . size ( ) ; var ++ )	for ( int var = 0 ; var < var . popular_invites . size ( var ) ; var ++ )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , null , true , true )
TLRPC . TL_contact var = new TLRPC . TL_contact ( )	TLRPC . TL_contact var = new TLRPC . TL_contact ( var )
FileLog . e ( "" + var . text )	FileLog . d ( "" + var . text )
MessagesStorage . getInstance ( ) . putCachedPhoneBook ( var , false )	MessagesStorage . getInstance ( var ) . putCachedPhoneBook ( var , false , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsImported )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsImported )
if ( ! var . isEmpty ( ) && var )	if ( ! var . isEmpty ( var ) && var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsImported )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsImported )
if ( ! var . isEmpty ( ) )	if ( ! var . isEmpty ( var ) )
var = ( ( var * 20261 ) + 0x80000000L + UserConfig . contactsSavedCount ) % 0x80000000L	var = ( ( var * 20261 ) + 0x80000000L + UserConfig . getInstance ( var ) . contactsSavedCount ) % 0x80000000L
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
if ( var != 0 && var instanceof TLRPC . TL_contacts_contactsNotModified )	if ( var != 0 && var instanceof TLRPC . TL_contacts_contactsNotModified var )
UserConfig . lastContactsSyncTime = int ( System . currentTimeMillis ( ) / 1000 )	UserConfig . getInstance ( var ) . lastContactsSyncTime = int ( System . currentTimeMillis ( var ) / 1000 )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
UserConfig . contactsSavedCount = var . saved_count	UserConfig . getInstance ( var ) . contactsSavedCount = var . saved_count
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessagesController . getInstance ( ) . putUsers ( var , var == 1 )	MessagesController . getInstance ( var ) . putUsers ( var , var == 1 )
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray var ( var )
final boolean var = var . var ( )	final boolean var = var . var ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . get ( var ) . user_id )
FileLog . e ( "" )	FileLog . d ( "" )
if ( var == 1 && ( var . var ( ) || Math . abs ( System . currentTimeMillis ( ) / 1000 - UserConfig . lastContactsSyncTime ) >= 24 * 60 * 60 ) )	if ( var == 1 && ( var . var ( var ) || Math . abs ( System . currentTimeMillis ( var ) / 1000 - UserConfig . getInstance ( var ) . lastContactsSyncTime ) >= 24 * 60 * 60 ) )
UserConfig . lastContactsSyncTime = int ( System . currentTimeMillis ( ) / 1000 )	UserConfig . getInstance ( var ) . lastContactsSyncTime = int ( System . currentTimeMillis ( var ) / 1000 )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
if ( var . get ( var . user_id ) == null && var . user_id != UserConfig . getClientUserId ( ) )	if ( var . get ( var . user_id ) == null && var . user_id != UserConfig . getInstance ( var ) . getClientUserId var )
FileLog . e ( "" )	FileLog . d ( "" )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var , null , true , true )
MessagesStorage . getInstance ( ) . putContacts ( var , var != 2 )	MessagesStorage . getInstance ( var ) . putContacts ( var , var != 2 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
final HashMap < String , ArrayList < TLRPC . TL_contact > . TL_contact > var = new HashMap	final HashMap < String , ArrayList < TLRPC . TL_contact > . TL_contact > var = new HashMap var ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
if ( var . length ( ) == 0 = "" )	if ( var . length ( var ) == 0 = "" )
if ( var == null || var . getCount ( ) == 0 )	if ( var == null || var . getCount ( var ) == 0 )
Uri var = ContactsContract . RawContacts . CONTENT_URI . buildUpon ( ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_NAME , var . name ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_TYPE , var . type ) . build	Uri var = ContactsContract . RawContacts . CONTENT_URI . buildUpon ( var ) . appendQueryParameter ( ContactsContract . CALLER_IS_SYNCADAPTER , "" ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_NAME , var . name ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_TYPE , var . type ) . build var
HashMap < Integer , Long > var = new HashMap	SparseLongArray var = new SparseLongArray var
while ( var . moveToNext ( ) )	while ( var . moveToNext ( var ) )
var . close ( )	var . close ( var )
if ( ! var . containsKey ( var . user_id ) )	if ( var . indexOfKey ( var . user_id ) < 0 )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
FileLog . e ( "" + var . size ( ) + "" + var . size ( ) )	FileLog . d ( "" + var . size ( var ) + "" + var . size ( var ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )	var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
MessagesController . getInstance ( ) . putUser ( var , true )	MessagesController . getInstance ( var ) . putUser ( var , true )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( var ) . getUser ( var )
MessagesController . getInstance ( ) . putUser ( var , true )	MessagesController . getInstance ( var ) . putUser ( var , true )
MessagesStorage . getInstance ( ) . applyPhoneBookUpdates ( var . toString ( ) , var . toString ( ) )	MessagesStorage . getInstance ( var ) . applyPhoneBookUpdates ( var . toString ( var ) , var . toString ( var ) )
if ( ! var . isEmpty ( ) )	if ( ! var . isEmpty ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
if ( ! var . isEmpty ( ) )	if ( ! var . isEmpty ( var ) )
MessagesStorage . getInstance ( ) . putContacts ( var , false )	MessagesStorage . getInstance ( var ) . putContacts ( var , false )
if ( ! var || ! var )	if ( ! var || ! var var )
FileLog . e ( "" + var . size ( ) + "" + var . size ( ) )	FileLog . d ( "" + var . size ( var ) + "" + var . size ( var ) )
ContentResolver var = ApplicationLoader . applicationContext . getContentResolver ( )	ContentResolver var = ApplicationLoader . applicationContext . getContentResolver ( var )
Uri var = ContactsContract . RawContacts . CONTENT_URI . buildUpon ( ) . appendQueryParameter ( ContactsContract . CALLER_IS_SYNCADAPTER , "" ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_NAME , var . name ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_TYPE , var . type ) . build	Uri var = ContactsContract . RawContacts . CONTENT_URI . buildUpon ( var ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_NAME , var . name ) . appendQueryParameter ( ContactsContract . RawContacts . ACCOUNT_TYPE , var . type ) . build var
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , null , true , true )
MessagesStorage . getInstance ( ) . putContacts ( var , false )	MessagesStorage . getInstance ( var ) . putContacts ( var , false )
MessagesStorage . getInstance ( ) . applyPhoneBookUpdates ( var . phone , "" )	MessagesStorage . getInstance ( var ) . applyPhoneBookUpdates ( var . phone , "" )
MessagesController . getInstance ( ) . putUser ( var , false )	MessagesController . getInstance ( var ) . putUser ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
MessagesStorage . getInstance ( ) . applyPhoneBookUpdates ( var . phone , "" )	MessagesStorage . getInstance ( var ) . applyPhoneBookUpdates ( var . phone , "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . contactsDidLoaded )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getMainSettings ( var )
var . remove ( "" ) . commit	var . remove ( "" ) . commit var
if ( ! var . objects . isEmpty ( ) )	if ( ! var . objects . isEmpty ( var ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
MessagesStorage . getInstance ( ) . updateUsers ( var , true , true , true )	MessagesStorage . getInstance ( var ) . updateUsers ( var , true , true , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_STATUS )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_STATUS )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . emojiDidLoaded )
int var = var . length ( var )	int var = var . var ( var )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
if ( MessagesController . getInstance ( var ) . useSystemEmoji || var == null || var . length ( var ) == 0 )	if ( SharedConfig . useSystemEmoji || var == null || var . length ( var ) == 0 )
var = String . valueOf ( var ) + var	var . insert ( 0 , String . valueOf ( var ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalEmojiSettings ( var )
var = var . dc_id	var = var = var . dc_id
var = var . dc_id	var = var = var . dc_id
public FileLoadOperation ( TLRPC . TL_webDocument var )	public FileLoadOperation ( int var , WebFile var )
var . url = var . url	var = var
var . access_hash = var . access_hash	var = var . var
var = var . dc_id	var = var = var . dc_id
var = var . dc_id	var = var = var . dc_id
if ( ! var . exists ( ) )	if ( ! var )
var = var = var / var * var	var = var = ( ( int ) var . length ( ) ) / var * var
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( ! var )	if ( var != 0 && ! var )
if ( var > 0 && var % 32 == 0 = 0 )	if ( var > 0 && var % 32 == 0 )
var = 0	var = var = 0
ConnectionsManager . getInstance ( ) . cancelRequest ( var . requestToken , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var . requestToken , true )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )
var = new HashMap	var = new SparseArray
TLRPC . TL_cdnFileHash var = ( TLRPC . TL_cdnFileHash ) var . objects . get ( var )	TLRPC . TL_fileHash var = ( TLRPC . TL_fileHash ) var . objects . get ( var )
if ( var == var . var )	if ( var != null || var == var . offset )
if ( var != var . offset )	if ( var == null && var != var . offset )
int var = ( var + var ) / var	int var = var . offset / var
int var = var / var	int var = var * var
if ( var != var || var )	if ( var != 0 && ( var == var || var > 0 && var == var - var || var <= 0 && var ) )
TLRPC . TL_cdnFileHash var = var . get ( var )	TLRPC . TL_fileHash var = var . get ( var )
var = new byte [ 1024 ] * 128	var = new byte [ var ]
int var	int var = var * var
FileLog . e ( "" + var + "" + var . url + "" + var . access_hash )	FileLog . e ( "" + var + "" + getFileName )
if ( var > 0 && var == var )	if ( var != 0 && var > 0 )
if ( var == var . offset )	if ( var != null || var == var . var )
var = 0	var = var = 0
FileLog . var ( "" + var + "" + var . url + "" + var . access_hash )	FileLog . var ( "" + var + "" + getFileName )
ConnectionsManager . getInstance ( ) . cancelRequest ( var . requestToken , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var . requestToken , true )
var = var	var = var = var
if ( var != var || var > 0 && var >= var || var . size ( ) + var . size ( ) >= var )	if ( var || var != var || var . size ( ) + var . size ( ) >= var )
var . var = var = var	var . offset = var
var . var = var = var	var . offset = var
var . var = var = var	var . offset = var
if ( ! var . cdn_file_hashes . isEmpty ( ) )	if ( ! var . file_hashes . isEmpty ( ) )
var = new HashMap	var = new SparseArray
for ( int var = 0 ; var < var . cdn_file_hashes . size ( ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
TLRPC . TL_cdnFileHash var = var . cdn_file_hashes . get ( var )	TLRPC . TL_fileHash var = var . file_hashes . get ( var )
var = new HashMap	var = new SparseArray
TLRPC . TL_cdnFileHash var = ( TLRPC . TL_cdnFileHash ) var . objects . get ( var )	TLRPC . TL_fileHash var = ( TLRPC . TL_fileHash ) var . objects . get ( var )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_AUDIOS , var . getObjectSize ( ) + 4 )	StatsController . getInstance ( var ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_AUDIOS , var . getObjectSize ( ) + 4 )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_VIDEOS , var . getObjectSize ( ) + 4 )	StatsController . getInstance ( var ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_VIDEOS , var . getObjectSize ( ) + 4 )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_PHOTOS , var . getObjectSize ( ) + 4 )	StatsController . getInstance ( var ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_PHOTOS , var . getObjectSize ( ) + 4 )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_FILES , var . getObjectSize ( ) + 4 )	StatsController . getInstance ( var ) . incrementReceivedBytesCount ( var . networkType , StatsController . TYPE_FILES , var . getObjectSize ( ) + 4 )
FileLoader var = var	FileLoader var = Instance [ var ]
var = var	var = Instance [ var ]
var = var = new FileLoader	Instance [ var ] = var = new FileLoader ( var )
if ( var == null && var != var )	if ( var == null && var != FileLoader . var )
var = var . get ( var )	var = var . get ( FileLoader . var )
var . checkNewDataAvailable ( var )	var . checkNewDataAvailable ( var , var )
FileUploadOperation var = new FileUploadOperation ( var , var , var , var )	FileUploadOperation var = new FileUploadOperation ( var , var , var , var , var )
if ( var == null && var == null )	if ( var == null && var == null && var == null && var == null )
if ( ! var . remove ( var ) -- )	if ( ! var . remove ( var ) )
if ( ! var . remove ( var ) -- )	if ( ! var . remove ( var ) )
final Boolean var = new Boolean [ 1 ]	final FileLoadOperation var var = new FileLoadOperation [ 1 ]
var [ 0 ] = var . containsKey ( var )	var . remove ( var )
var . release ( )	var . countDown ( var )
var . acquire ( )	var . await ( var )
if ( var == 0 && ( var != null && var . size == 0 || var . var . var != null ) = 1 )	if ( var == 0 && var != null && ( var . size == 0 || var . var . var != null ) = 1 )
loadFile ( null , null , var . var , var , var . size , false , var )	loadFile ( null , null , null , var . var , var , var . size , false , var )
if ( var == 0 && ( var != null && var . var != null ) = 1 )	if ( var == 0 && var != null && var . var != null = 1 )
loadFile ( null , null , var , var , var , true , var )	loadFile ( null , null , null , var , var , var , true , var )
if ( MessageObject . isVoiceDocument ( var ) || MessageObject . isVoiceWebDocument ( var ) = var != null || MessageObject . isImageWebDocument ( var ) = var = var )	if ( MessageObject . isVoiceDocument ( var ) || MessageObject . isVoiceWebDocument ( var ) = var != null || var != null || MessageObject . isImageWebDocument ( var ) = var = var )
if ( var > 0 )	if ( var > 0 var )
var . setPaths ( var , var )	var . setPaths ( var , var , var )
if ( var < var )	if ( var != 0 || var < var var )
if ( var != null )	if ( var != null || MessageObject . isImageWebDocument ( var ) )
if ( var < var )	if ( var != 0 || var < var var )
if ( var < var )	if ( var != 0 || var < var var )
if ( var . wasStarted ( ) -- )	if ( var . wasStarted ( var ) var )
while ( ! var . isEmpty ( ) )	while ( ! var . isEmpty ( var ) )
if ( var . wasStarted ( ) -- )	if ( var . wasStarted ( var ) var )
if ( var != null && var . start ( ) ++ )	if ( var != null && var . start ( var ) )
if ( var . wasStarted ( ) -- )	if ( var . wasStarted ( var ) var )
while ( ! var . isEmpty ( ) )	while ( ! var . isEmpty ( var ) )
TLRPC . TL_webDocument var = ( ( TLRPC . TL_messageMediaInvoice ) var . media ) . photo	TLRPC . WebDocument var = ( ( TLRPC . TL_messageMediaInvoice ) var . media ) . photo
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
if ( var . var == null || var . var . var != null || var . var . volume_id == Integer . MIN_VALUE && var . var . local_id < 0 || var . size < 0 )	if ( var . var == null || var . var . var != null || var . var . volume_id == Integer . MIN_VALUE && var . var . local_id < 0 || var . size < 0 var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
if ( var instanceof TLRPC . TL_webDocument )	if ( var instanceof WebFile )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var	WebFile var = ( WebFile ) var
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
var = getInstance . getDirectory ( var )	var = getDirectory ( var )
if ( ( var = var . indexOf ( '/' ) ) != - 1 )	if ( ( var = var . lastIndexOf ( '/' ) ) != - 1 )
if ( var instanceof TLRPC . TL_webDocument )	if ( var instanceof WebFile )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var	WebFile var = ( WebFile ) var
if ( ! BuildVars . DEBUG_VERSION )	if ( ! BuildVars . LOGS_ENABLED )
if ( ! BuildVars . DEBUG_VERSION )	if ( ! BuildVars . LOGS_ENABLED )
Log . e ( "" , var , var )	Log . e ( var , var , var )
if ( ! BuildVars . DEBUG_VERSION )	if ( ! BuildVars . LOGS_ENABLED )
Log . e ( "" , var )	Log . e ( var , var )
if ( ! BuildVars . DEBUG_VERSION )	if ( ! BuildVars . LOGS_ENABLED )
if ( ! BuildVars . DEBUG_VERSION )	if ( ! BuildVars . LOGS_ENABLED )
if ( ! BuildVars . DEBUG_VERSION )	if ( ! BuildVars . LOGS_ENABLED )
public FileUploadOperation ( String var , boolean var , int var , int var )	public FileUploadOperation ( int var , String var , boolean var , int var , int var )
if ( var )	if ( ! var && var )
TLObject var	final TLObject var
FileLog . var ( var )	var . seek ( var )
var = var / var	var = var
if ( var == 0 && var == var = true )	if ( ! var && ! var && var == 0 && var == var = true )
var . skip ( var )	var . seek ( var )
if ( var == 0 )	if ( ! var && ! var && var == 0 )
if ( var != var || var == 0 && var == var + 1 = true )	if ( var || var != var || var == 0 && var == var + 1 )
var . update ( var . buffer )	var . seek ( var )
var . file_part = var	var . file_part = var = var
var . file_part = var	var . file_part = var = var
final long var = var	final long var = var + var
final int var = var ++	final int var = var
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_AUDIOS , var )	StatsController . getInstance ( var ) . incrementSentBytesCount ( var , StatsController . TYPE_AUDIOS , var )
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_VIDEOS , var )	StatsController . getInstance ( var ) . incrementSentBytesCount ( var , StatsController . TYPE_VIDEOS , var )
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_PHOTOS , var )	StatsController . getInstance ( var ) . incrementSentBytesCount ( var , StatsController . TYPE_PHOTOS , var )
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_FILES , var )	StatsController . getInstance ( var ) . incrementSentBytesCount ( var , StatsController . TYPE_FILES , var )
var . remove ( var )	var . delete ( var )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_AUDIOS , 1 )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_VIDEOS , 1 )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_PHOTOS , 1 )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_FILES , 1 )
if ( var == 0 )	if ( var == 0 && ! var && ! var )
String var = var . getString ( "" )	JSONObject var = var . getJSONObject ( "" )
ConnectionsManager . getInstance ( ) . applyDatacenterAddress ( var , var , var )	ConnectionsManager . getInstance ( var ) . applyDatacenterAddress ( var , var , var )
var = Utilities . parseLong ( ( String ) var )	ConnectionsManager . getInstance ( var ) . resumeNetworkMaybe
var = System . currentTimeMillis ( )	ConnectionsManager . getInstance ( var ) . resumeNetworkMaybe
var = System . currentTimeMillis ( )	ConnectionsManager . getInstance ( var ) . resumeNetworkMaybe
var . message = var . getString ( "" )	var . var = var . getString ( "" )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
long var	long var = 0
var = Utilities . parseLong ( ( String ) var )	var = Utilities . parseLong ( var . getString ( "" ) )
FileLog . d ( "" + var + "" + var + "" + var . getRestrictBackgroundStatus ( ) )	FileLog . d ( String . format ( "" , Utilities . bytesToHex ( SharedConfig . pushAuthKey ) . pushAuthKey ) , Utilities . bytesToHex ( SharedConfig . pushAuthKey ) . pushAuthKey )
NotificationsController . getInstance ( ) . showSingleBackgroundNotification	NotificationsController . getInstance ( var ) . processNewMessages ( var , true , true )
ConnectionsManager . onInternalPushReceived ( )	ConnectionsManager . onInternalPushReceived ( var )
public HttpFileTask ( String var , File var , String var )	public HttpFileTask ( String var , File var , String var , int var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var . url , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var . url , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidLoaded , var . url )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileDidLoaded , var . url )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var . url , 2 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var . url , 2 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var . url , 1 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var . url , 1 )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var + "" )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var + "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageThumbGenerated , var , var )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . messageThumbGenerated , var , var )
boolean var = var . encryptionKeyPath != null && var != null && var . getAbsolutePath ( ) . endsWith ( "" )	boolean var = var . secureDocument != null || var . encryptionKeyPath != null && var != null && var . getAbsolutePath ( ) . endsWith ( "" )
if ( var . inPurgeable )	if ( var . inPurgeable || var != null )
var = BitmapFactory . decodeByteArray ( var , 0 , var , var )	EncryptedFileInputStream . decryptBytesWithKeyFile ( var , 0 , var , var )
float var = var . outWidth	int var = var . outWidth
float var = var . outHeight	int var = var . outHeight
float var = Math . max ( var / 512 , var / 384 )	float var = Math . max ( var / 200 , var / 200 )
if ( var . inPurgeable )	if ( var != null var )
var = BitmapFactory . decodeByteArray ( var , 0 , var , var )	var = BitmapFactory . decodeByteArray ( var , var , var , var )
FileLoader . getInstance ( ) . cancelLoadFile ( ( TLRPC . FileLocation ) var , var )	FileLoader . getInstance ( var ) . cancelLoadFile ( ( TLRPC . FileLocation ) var , var )
FileLoader . getInstance ( ) . cancelLoadFile ( ( TLRPC . Document ) var )	FileLoader . getInstance ( var ) . cancelLoadFile ( ( TLRPC . Document ) var )
if ( var instanceof TLRPC . TL_webDocument )	if ( var instanceof SecureDocument )
FileLoader . getInstance ( ) . cancelLoadFile ( ( TLRPC . TL_webDocument ) var )	FileLoader . getInstance ( var ) . cancelLoadFile ( ( SecureDocument ) var )
var . setPriority ( Thread . MIN_PRIORITY )	for ( int var = 0 ; var < UserConfig . MAX_ACCOUNT_COUNT ; var ++ )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidUpload , var , var , var , var , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileDidUpload , var , var , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailUpload , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileDidFailUpload , var , var )
if ( MediaController . getInstance ( ) . canSaveToGallery && var != null && var != null && ( var . endsWith ( "" ) || var . endsWith ( "" ) ) )	if ( SharedConfig . saveToGallery && var != null && var != null && ( var . endsWith ( "" ) || var . endsWith ( "" ) ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidLoaded , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileDidLoaded , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileDidFailedLoad , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileLoadProgressChanged , var , var )
FileLog . e ( "" )	FileLog . d ( "" )
FileLoader . getInstance ( ) . setMediaDirs ( var )	FileLoader . setMediaDirs ( var )
FileLoader . getInstance ( ) . setMediaDirs ( var )	FileLoader . setMediaDirs ( var )
HashMap < Integer , File > var = new HashMap	SparseArray < File > var = new SparseArray
FileLog . var ( "" + var )	FileLog . d ( "" + var )
FileLog . var ( "" + var )	FileLog . d ( "" + var )
FileLog . var ( "" + var )	FileLog . d ( "" + var )
FileLog . var ( "" + var )	FileLog . d ( "" + var )
FileLog . var ( "" + var )	FileLog . d ( "" + var )
FileLog . var ( "" )	FileLog . d ( "" )
MediaController . getInstance ( ) . checkSaveToGalleryFiles	SharedConfig . checkSaveToGalleryFiles ( )
Integer var = var . getTag ( var == 0 )	int var = var . getTag ( var == 0 )
if ( var != null )	if ( var != 0 )
if ( var instanceof TLRPC . TL_webDocument )	if ( var instanceof WebFile )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var	WebFile var = ( WebFile ) var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReplacedPhotoInMemCache , var , var , var )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didReplacedPhotoInMemCache , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReplacedPhotoInMemCache , var , var , var )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didReplacedPhotoInMemCache , var , var , var )
Integer var = var . getTag ( var != 0 )	int var = var . getTag ( var != 0 )
if ( var == null )	if ( var == 0 )
final Integer var = var	final int var = var
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , "" + var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var + "" )
var . fileLocation = ( TLRPC . TL_fileLocation ) var	var . fileLocation = ( TLRPC . FileLocation ) var
generateThumb ( var . getFileType ( ) , var , ( TLRPC . TL_fileLocation ) var , var )	generateThumb ( var . getFileType ( ) , var , ( TLRPC . FileLocation ) var , var )
if ( var != null && ! var . startsWith ( "" ) && ! var . startsWith ( "" ) instanceof TLRPC . TL_webDocument && ( ( TLRPC . TL_webDocument ) var ) . mime_type . equals ( "" ) || var instanceof TLRPC . Document && ( MessageObject . isGifDocument ( ( TLRPC . Document ) var ) || MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) ) )	if ( var != null && ! var . startsWith ( "" ) && ! var . startsWith ( "" ) instanceof WebFile && MessageObject . isGifDocument ( ( WebFile ) var ) || var instanceof TLRPC . Document && ( MessageObject . isGifDocument ( ( TLRPC . Document ) var ) || MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) ) )
if ( var instanceof TLRPC . TL_webDocument && ( ( TLRPC . TL_webDocument ) var ) . mime_type . equals ( "" ) || var instanceof TLRPC . Document && ( MessageObject . isGifDocument ( ( TLRPC . Document ) var ) || MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) ) )	if ( var instanceof WebFile && MessageObject . isGifDocument ( ( WebFile ) var ) || var instanceof TLRPC . Document && ( MessageObject . isGifDocument ( ( TLRPC . Document ) var ) || MessageObject . isRoundVideoDocument ( ( TLRPC . Document ) var ) ) )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var + "" )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , var )
FileLoader . getInstance ( ) . loadFile ( var , var , var , var )	FileLoader . getInstance ( var ) . loadFile ( var , var , var , var )
FileLoader . getInstance ( ) . loadFile ( ( TLRPC . Document ) var , true , var )	FileLoader . getInstance ( var ) . loadFile ( ( TLRPC . Document ) var , true , var )
if ( var instanceof TLRPC . TL_webDocument )	if ( var instanceof SecureDocument )
if ( var instanceof TLRPC . TL_webDocument )	if ( var instanceof WebFile )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var	WebFile var = ( WebFile ) var
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var ) + "" + var )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var ) + "" + var )
HttpFileTask var = new HttpFileTask ( var , var , var )	HttpFileTask var = new HttpFileTask ( var , var , var , var )
final HttpFileTask var = new HttpFileTask ( var . url , var . tempFile , var . ext )	final HttpFileTask var = new HttpFileTask ( var . url , var . tempFile , var . ext , var . currentAccount )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . httpFileDidFailedLoad , var . url , 0 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . httpFileDidFailedLoad , var . url , 0 )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . url ) . url + "" + var . ext )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . url ) . url + "" + var . ext )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . httpFileDidLoaded , var . url , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . httpFileDidLoaded , var . url , var )
var . local_id = UserConfig . lastLocalId	var . local_id = SharedConfig . getLastLocalId ( )
var . location . local_id = UserConfig . lastLocalId	var . location . local_id = SharedConfig . getLastLocalId ( )
for ( int var = 0 ; var < var . media . photo . sizes . size ( ) ; var ++ )	for ( int var = 0 , var = var . media . photo . sizes . size ( ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . media . webpage . photo . sizes . size ( ) ; var ++ )	for ( int var = 0 , var = var . media . webpage . photo . sizes . size ( ) ; var < var ; var ++ )
if ( ( var == null && var == null && var == null ) || ( var != null && ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) && ! ( var instanceof TLRPC . TL_document ) && ! ( var instanceof TLRPC . TL_webDocument ) && ! ( var instanceof TLRPC . TL_documentEncrypted ) ) )	if ( ( var == null && var == null && var == null ) || ( var != null && ! ( var instanceof TLRPC . TL_fileLocation ) && ! ( var instanceof TLRPC . TL_fileEncryptedLocation ) && ! ( var instanceof TLRPC . TL_document ) && ! ( var instanceof WebFile ) && ! ( var instanceof TLRPC . TL_documentEncrypted ) && ! ( var instanceof SecureDocument ) ) )
if ( var instanceof TLRPC . TL_webDocument )	if ( var instanceof WebFile )
TLRPC . TL_webDocument var = ( TLRPC . TL_webDocument ) var	WebFile var = ( WebFile ) var
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageThumbGenerated )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . messageThumbGenerated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReplacedPhotoInMemCache )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReplacedPhotoInMemCache )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReplacedPhotoInMemCache )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didReplacedPhotoInMemCache )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageThumbGenerated )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . messageThumbGenerated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageThumbGenerated )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . messageThumbGenerated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageThumbGenerated )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . messageThumbGenerated )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
applyLanguage ( var , var , true )	applyLanguage ( var , var , true , UserConfig . selectedAccount )
applyRemoteLanguage ( var , null , true )	applyRemoteLanguage ( var , true , var )
applyLanguage ( var , true , false , true , false )	applyLanguage ( var , true , false , true , false , var )
applyLanguage ( var , true , false )	applyLanguage ( var , true , false , var )
applyLanguage ( var , var , var , false , false )	applyLanguage ( var , var , var , false , false , var )
ConnectionsManager . getInstance ( ) . setLangCode ( var . replace ( "" , "" ) , "" )	ConnectionsManager . setLangCode ( var . replace ( "" , "" ) , "" )
applyRemoteLanguage ( var , null , true )	applyRemoteLanguage ( var , true , var )
applyRemoteLanguage ( var , null , true )	applyRemoteLanguage ( var , true , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
applyLanguage ( var , false , false )	applyLanguage ( var , false , false , UserConfig . selectedAccount )
return String . format ( "" , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )	return LocaleController . formatString ( "" , R . string . YesterdayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )	return LocaleController . formatString ( "" , R . string . TodayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )	return LocaleController . formatString ( "" , R . string . YesterdayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
int var = int ( ConnectionsManager . getInstance ( ) . getCurrentTime - var / 1000 ) / 60	int var = int ( ConnectionsManager . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getCurrentTime - var / 1000 ) / 60
return String . format ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )	return LocaleController . formatString ( "" , R . string . LocationUpdatedFormatted , LocaleController . formatString ( "" , R . string . TodayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) ) , R . string . TodayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )	return LocaleController . formatString ( "" , R . string . LocationUpdatedFormatted , LocaleController . formatString ( "" , R . string . YesterdayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) ) , R . string . YesterdayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . var ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , var )	return LocaleController . formatString ( "" , R . string . LocationUpdatedFormatted , var )
return String . var ( "" , LocaleController . getString ( "" , R . string . LocationUpdated ) , R . string . LocationUpdated , var )	return LocaleController . formatString ( "" , R . string . LocationUpdatedFormatted , var )
return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )	return LocaleController . formatString ( "" , R . string . LastSeenFormatted , LocaleController . formatString ( "" , R . string . TodayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) ) , R . string . TodayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var ) ) Date ( var ) )	return LocaleController . formatString ( "" , R . string . LastSeenFormatted , LocaleController . formatString ( "" , R . string . YesterdayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) ) , R . string . YesterdayAtFormatted , getInstance . var . format ( new Date ( var ) ) Date ( var ) )
return String . var ( "" , LocaleController . getString ( "" , R . string . LastSeenDate ) , R . string . LastSeenDate , var )	return LocaleController . formatString ( "" , R . string . LastSeenDateFormatted , var )
return String . var ( "" , LocaleController . getString ( "" , R . string . LastSeenDate ) , R . string . LastSeenDate , var )	return LocaleController . formatString ( "" , R . string . LastSeenDateFormatted , var )
var = var . startsWith ( "" ) || BuildVars . DEBUG_VERSION && ( var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) )	var = var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" ) || var . startsWith ( "" )
if ( MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )	if ( MessagesController . getInstance ( var ) . onlinePrivacy . containsKey ( var . id ) )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime
if ( var == null || var . strings . isEmpty ( ) )	if ( var == null || var . strings . isEmpty ( ) || var == null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . reloadInterface )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . reloadInterface )
applyLanguage ( var , true , false )	applyLanguage ( var , true , false , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . reloadInterface )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . reloadInterface )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . suggestedLangpack )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . suggestedLangpack )
applyLanguage ( var , true , false )	applyLanguage ( var , true , false , var )
if ( var == null && var == null || var != null && ! var . isRemote ( ) )	if ( var == null || var != null && ! var . isRemote ( ) )
saveRemoteLocaleStrings ( ( TLRPC . TL_langPackDifference ) var )	saveRemoteLocaleStrings ( ( TLRPC . TL_langPackDifference ) var , var )
var . lang_code = var . lang_code . replace ( "" , "" )	var . lang_code = var . shortName . replace ( "" , "" )
saveRemoteLocaleStrings ( ( TLRPC . TL_langPackDifference ) var )	saveRemoteLocaleStrings ( ( TLRPC . TL_langPackDifference ) var , var )
LocationController var = var	LocationController var = Instance [ var ]
var = var	var = Instance [ var ]
var = var = new LocationController	Instance [ var ] = var = new LocationController ( var )
public LocationController	public LocationController ( final int var )
LocationController var = getInstance	LocationController var = getInstance ( var )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . replaceMessagesObjects )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var , var )
ConnectionsManager . getInstance ( ) . cancelRequest ( var . keyAt ( var ) , false )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var . keyAt ( var ) , false )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var . peer = MessagesController . getInputPeer ( ( int ) var . did )	var . peer = MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var . did )
var . geo_point . lat = var . getLatitude ( )	var . geo_point . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( var ) )
var . geo_point . _long = var . getLongitude ( )	var . geo_point . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
if ( ! var . isEmpty ( ) )	if ( var . isEmpty ( var ) )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
if ( var . isEmpty ( )  )	if ( var . isEmpty ( var ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
var . messageObject = new MessageObject ( var , null , null , false )	var . messageObject = new MessageObject ( var , var , false )
var . stopTime = ConnectionsManager . getInstance ( ) . getCurrentTime + var	var . stopTime = ConnectionsManager . getInstance ( var ) . getCurrentTime var + var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
return var . containsKey ( var )	final SharingLocationInfo var = var . get ( var )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )	SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase var . queryFinalized ( "" )
var . messageObject = new MessageObject ( TLRPC . Message . TLdeserialize ( var , var . readInt32 ( false ) , false ) , var . readInt32 ( false ) , false , null , false )	var . messageObject = new MessageObject ( var , TLRPC . Message . TLdeserialize ( var , var . readInt32 ( false ) , false ) , var . readInt32 ( false ) , false , false )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )	MessagesStorage . getInstance ( var ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )	MessagesStorage . getInstance ( var ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesController . getInstance ( ) . putUsers ( var , true )	MessagesController . getInstance ( var ) . putUsers ( var , true )
MessagesController . getInstance ( ) . putChats ( var , true )	MessagesController . getInstance ( var ) . putChats ( var , true )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" ) . stepThis . dispose	MessagesStorage . getInstance ( var ) . getDatabase var . executeFast ( "" ) . stepThis var . dispose var
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" + var . did ) . stepThis . dispose	MessagesStorage . getInstance ( var ) . getDatabase var . executeFast ( "" + var . did ) . stepThis var . dispose var
SQLitePreparedStatement var = MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" )	SQLitePreparedStatement var = MessagesStorage . getInstance ( var ) . getDatabase var . executeFast ( "" )
NativeByteBuffer var = new NativeByteBuffer ( var . messageObject . messageOwner . getObjectSize ( ) )	NativeByteBuffer var = new NativeByteBuffer ( var . messageObject . messageOwner . getObjectSize ( var ) )
var . dispose ( )	var . dispose ( var )
var . peer = MessagesController . getInputPeer ( ( int ) var . var )	var . peer = MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var . var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )	MessagesController . getInstance ( var ) . processUpdates ( ( TLRPC . Updates ) var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
var . peer = MessagesController . getInputPeer ( ( int ) var . did )	var . peer = MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var . did )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )	MessagesController . getInstance ( var ) . processUpdates ( ( TLRPC . Updates ) var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsChanged )
var = System . currentTimeMillis ( ) - var + var	var = System . currentTimeMillis ( var ) - var + var
var . peer = MessagesController . getInputPeer ( ( int ) var )	var . peer = MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , true , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )
LocationController . getInstance ( ) . update	LocationController . getInstance ( var ) . update
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )
if ( LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )  )	if ( var . isEmpty ( )  )
ArrayList < LocationController . SharingLocationInfo > var = LocationController . getInstance ( ) . sharingLocationsUI	ArrayList < LocationController . SharingLocationInfo > var = getInfos
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
var = LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )	var = LocaleController . formatPluralString ( "" , var . size ( ) )
if ( LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )  )	if ( getInfos . isEmpty  )
var . setSmallIcon ( R . drawable . notification )	var . setSmallIcon ( R . drawable . live_loc )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recordProgressChanged , System . currentTimeMillis ( var ) - var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recordProgressChanged , System . currentTimeMillis ( ) - var , var )
public MediaController var	public MediaController
var . order ( ByteOrder . nativeOrder ( var ) )	var . order ( ByteOrder . nativeOrder ( ) )
for ( int var = 0 ; var < 3 ; var ++ )	for ( int var = 0 ; var < UserConfig . MAX_ACCOUNT_COUNT ; var ++ )
FileLog . var ( "" )	FileLog . d ( "" )
if ( var == 0 || var . contains ( var ) var )	var = var . get ( var )
roamingDownloadMask [ var ] = roamingDownloadMask [ 0 ]	VideoPlayer var = ( VideoPlayer ) var [ 0 ]
for ( int var = 0 ; var < 7 ; var ++ )	for ( int var = 0 ; var < UserConfig . MAX_ACCOUNT_COUNT ; var ++ )
var = var . getBoolean ( "" , true )	return FileLoader . getPathToAttach ( var , true ) . getAbsolutePath
var = var . getBoolean ( "" , false )	if ( var . writeSampleData ( var , var , var , false ) )
var = var . getBoolean ( "" , false )	var = var . addTrack ( var , false )
var = var . getBoolean ( "" , true )	var = var . addTrack ( var , true )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getGlobalInstance ( ) . addObserver ( MediaController . this , NotificationCenter . playerDidStartPlaying )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileLoadProgressChanged )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . httpFileDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileUploadProgressChanged )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . httpFileDidFailedLoad )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . audioRouteChanged , var )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Images . Media . EXTERNAL_CONTENT_URI , true , new GalleryObserverExternal var )	var . registerContentObserver ( MediaStore . Images . Media . EXTERNAL_CONTENT_URI , true , new GalleryObserverExternal )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Images . Media . INTERNAL_CONTENT_URI , true , new GalleryObserverInternal var )	var . registerContentObserver ( MediaStore . Images . Media . INTERNAL_CONTENT_URI , true , new GalleryObserverInternal )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Video . Media . EXTERNAL_CONTENT_URI , true , new GalleryObserverExternal var )	var . registerContentObserver ( MediaStore . Video . Media . EXTERNAL_CONTENT_URI , true , new GalleryObserverExternal )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Video . Media . INTERNAL_CONTENT_URI , true , new GalleryObserverInternal var )	var . registerContentObserver ( MediaStore . Video . Media . INTERNAL_CONTENT_URI , true , new GalleryObserverInternal )
pauseMessage ( getPlayingMessageObject var )	pauseMessage ( var )
pauseMessage ( getPlayingMessageObject var )	pauseMessage ( var )
if ( isPlayingMessage ( getPlayingMessageObject var ) && ! isMessagePaused var )	if ( isPlayingMessage ( getPlayingMessageObject ) && ! isMessagePaused )
var . setVolume ( var , var )	var . setVolume ( var )
if ( var != null && ( var != null || var != null || var != null ) && ! var )	if ( var != null && ( var != null || var != null ) && ! var )
var = ( float ) var / ( float ) var . getDuration ( var )	var = var . getBufferedPosition ( ) / ( float ) var
if ( var != null )	if ( var != null != null )
var = ( float ) var / ( float ) var . getDuration ( var )	var = var . getDuration ( )
var = ( float ) var / ( float ) var	var = var . getBufferedPosition ( ) / ( float ) var
if ( var == var )	if ( var == C . TIME_UNSET || var < 0 || var != 0 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( ) , var )
var . clear ( var )	DownloadController . getInstance ( var ) . cleanup
var . clear ( var )	DownloadController . getInstance ( var ) . cleanup
var . clear ( var )	DownloadController . getInstance ( var ) . cleanup
int var = 0	int var
int var = getCurrentDownloadMask var	int var = - 1
DownloadObject var = var . get ( var )	DownloadController . getInstance ( var ) . cleanup
DownloadObject var = var . get ( var )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . musicDidLoaded )
FileLoader . getInstance ( var ) . cancelLoadFile ( ( TLRPC . Document ) var . object )	return var && ( isRecordingAudio || var != null && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
DownloadObject var = var . get ( var )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . removeAllMessagesFromDialog )
if ( ( var & var ) != 0 var )	return var && ( isRecordingAudio || var != null && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
DownloadObject var = var . get ( var )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . messagesDeleted )
DownloadObject var = var . get ( var )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . didReceivedNewMessages )
FileLoader . getInstance ( var ) . cancelLoadFile ( ( TLRPC . Document ) var . object )	return var && ( isRecordingAudio || var != null && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
DownloadObject var = var . get ( var )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . httpFileDidLoaded )
DownloadObject var = var . get ( var )	NotificationCenter . getInstance ( var ) . addObserver ( MediaController . this , NotificationCenter . FileDidLoaded )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( 0 )	return var && ( isRecordingAudio || var != null && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
MessagesStorage . getInstance ( var ) . clearDownloadQueue ( var )	return var && ( isRecordingAudio || var != null && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
if ( ( var & var ) == 0 )	return var && ( isRecordingAudio || var != null && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
if ( ( var & var ) == 0 )	return var && ( isRecordingAudio || var != null && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
int var	int var = - 1
if ( ContactsController . getInstance ( var ) . contactsDict . containsKey ( var . user_id ) = 0 = 1 )	if ( var == null && var == null || var == null || var == null || ! isSamePlayingMessage ( var ) )
return ( var == MediaController . var || MessageObject . getMessageSize ( var ) <= var ) && ( var & var ) != 0	if ( var == null && var == null || var == null || var == null || ! isSamePlayingMessage ( var ) )
DownloadObject var = var . get ( var )	long var = var . getDuration ( )
var = FileLoader . getAttachFileName ( var )	return FileLoader . getAttachFileName ( var )
var = FileLoader . getAttachFileName ( var . object )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileDidLoaded , FileLoader . getAttachFileName ( var . getDocument ( ) ) . getDocument ( ) )
var = false	var = var
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )	if ( var && SharedConfig . repeatMode == 2 && ! var )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	if ( var && SharedConfig . repeatMode == 2 && ! var )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	MessageObject var = var . get ( var )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	var . audioProgress = 0
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )	var . audioProgress = 0
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	var . audioProgressSec = 0
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )	if ( var && var && SharedConfig . repeatMode == 0 && ! var )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )	if ( var != null || var != null )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	var . releasePlayer ( )
if ( ( var & var ) != 0 && ( var & var ) != 0 && var . isEmpty ( var ) )	if ( var != null )
MessagesStorage . getInstance ( var ) . getDownloadQueue ( var )	var . resetPlayingProgress ( )
if ( var != null )	if ( var == null || ! var . isMusic ( ) )
if ( var == 0 || var == 2 )	if ( var == null || ! var . isMusic ( ) )
MessagesStorage . getInstance ( var ) . removeFromDownloadQueue ( var . id , var . type , false )	checkIsNextMusicFileDownloaded ( var . currentAccount )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( MediaStore . Images . Media . INTERNAL_CONTENT_URI , false , var = new InternalObserver var )	ApplicationLoader . applicationContext . getContentResolver ( ) . registerContentObserver ( MediaStore . Images . Media . INTERNAL_CONTENT_URI , false , var = new InternalObserver )
ApplicationLoader . applicationContext . getContentResolver ( var ) . registerContentObserver ( Uri . parse ( "" ) , false , var = new SmsObserver var )	ApplicationLoader . applicationContext . getContentResolver ( ) . registerContentObserver ( Uri . parse ( "" ) , false , var = new SmsObserver )
ApplicationLoader . applicationContext . getContentResolver ( var ) . unregisterContentObserver ( var )	ApplicationLoader . applicationContext . getContentResolver ( ) . unregisterContentObserver ( var )
var = new StopMediaObserverRunnable var	var = new StopMediaObserverRunnable
Cursor var = ApplicationLoader . applicationContext . getContentResolver ( var ) . query ( var , var , null , null , "" )	var = ApplicationLoader . applicationContext . getContentResolver ( ) . query ( var , var , null , null , "" )
if ( var != null && var . toLowerCase ( var ) . contains ( "" ) || var != null && var . toLowerCase ( var ) . contains ( "" ) || var != null && var . toLowerCase ( var ) . contains ( "" ) || var != null && var . toLowerCase ( var ) . contains ( "" ) )	if ( var != null && var . toLowerCase ( ) . contains ( "" ) || var != null && var . toLowerCase ( ) . contains ( "" ) || var != null && var . toLowerCase ( ) . contains ( "" ) || var != null && var . toLowerCase ( ) . contains ( "" ) )
addLoadingFileObserver ( var , null , var )	startRecording ( var . getCurrentAccount ( ) , var . getDialogId ( ) , null )
ArrayList < WeakReference < FileDownloadProgressListener > > var = var . get ( var )	var . getParentActivity ( ) . getWindow . setFlags ( WindowManager . LayoutParams . FLAG_SECURE , WindowManager . LayoutParams . FLAG_SECURE )
var . put ( var . getObserverTag ( var ) , var )	var . getParentActivity ( ) . getWindow . setFlags ( WindowManager . LayoutParams . FLAG_SECURE , WindowManager . LayoutParams . FLAG_SECURE )
if ( var . get ( var ) == null || var . get ( var ) == var )	if ( var == var )
if ( var . isEmpty ( var ) )	var . getParentActivity ( ) . getWindow . clearFlags ( WindowManager . LayoutParams . FLAG_SECURE )
addLoadingFileObserver ( var . getKey ( var ) , var . getValue ( var ) )	var . getParentActivity ( ) . getWindow . clearFlags ( WindowManager . LayoutParams . FLAG_SECURE )
if ( var && var != null )	if ( var && var != null && var . currentAccount == var )
String var = FileLoader . getAttachFileName ( var . getDocument ( var ) )	String var = FileLoader . getAttachFileName ( var . getDocument ( ) )
var . mediaExists = true	if ( ! var . mediaExists && var != var )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
WeakReference < FileDownloadProgressListener > var = var . get ( var )	MessageObject var = var . get ( var )
if ( var == NotificationCenter . FileUploadProgressChanged )	if ( var == NotificationCenter . playerDidStartPlaying )
Float var = ( Float ) var [ 1 ]	VideoPlayer var = ( VideoPlayer ) var [ 0 ]
ArrayList < SendMessagesHelper . DelayedMessage > var = SendMessagesHelper . getInstance ( var ) . getDelayedMessages ( var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var . getAbsolutePath ( ) , var , var , null , null , null , null , 0 )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < UserConfig . MAX_ACCOUNT_COUNT ; var ++ )
SendMessagesHelper . DelayedMessage var = var . get ( var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . albumsDidLoaded , var , var , var , var )
long var = var . peer	long var = var . getDuration ( )
MessagesController . getInstance ( var ) . sendTyping ( var , 4 , 0 )	if ( ! MediaController . getInstance ( ) . isCurrentPlayer ( var ) )
TLRPC . Document var = var . obj . getDocument ( var )	TLRPC . Document var = var . getDocument ( )
MessagesController . getInstance ( var ) . sendTyping ( var , 8 , 0 )	MediaController . getInstance ( ) . pauseMessage ( MediaController . getInstance ( ) . getPlayingMessageObject )
MessagesController . getInstance ( var ) . sendTyping ( var , 5 , 0 )	MediaController . getInstance ( ) . pauseMessage ( MediaController . getInstance ( ) . getPlayingMessageObject )
MessagesController . getInstance ( var ) . sendTyping ( var , 4 , 0 )	MessagesController . getInstance ( var . currentAccount ) . markMessageContentAsRead ( var )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
var = var . get ( 0 )	var = var
if ( ! var . isEmpty ( var ) = true )	if ( var == var = null )
var = true	var = null
AudioBuffer var = null	ByteBuffer var = null
var . setNotificationMarkerPosition ( 1 )	var . setPlaybackSpeed ( var )
cleanupPlayer ( true , true , true )	var = var . addTrack ( var , true )
var . add ( var )	var . setPlaybackSpeed ( var )
if ( VoIPService . getSharedInstance ( var ) != null )	if ( ! var || VoIPService . getSharedInstance ( ) != null )
if ( var > var && var == 0 var )	if ( var && var == 0 && ( var == 0 || var == var ) )
if ( var < var ++ )	if ( ! var ++ )
if ( var < 0 && var < 0 )	if ( var != 0 && var != var )
if ( var == var && var < - var var )	if ( var == var && var )
if ( var > - var ++ )	if ( ! var ++ )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
if ( ! var . playFirstUnreadVoiceMessage ( var ) )	if ( ! var . playFirstUnreadVoiceMessage ( ) )
startRecording ( var . getDialogId ( var ) , null )	startRecording ( var . getCurrentAccount ( ) , var . getDialogId ( ) , null )
FileLog . e ( "" )	FileLog . d ( "" )
if ( var != null && ( var . isVoice ( var ) || var . isRoundVideo ( var ) ) )	if ( var != null && ! ApplicationLoader . mainInterfacePaused && ( var . isVoice ( ) || var . isRoundVideo ( ) ) )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
if ( var && var != null && var . isHeld ( var ) )	if ( var && var != null && var . isHeld ( ) )
FileLog . e ( "" )	FileLog . d ( "" )
if ( var != 0 && var == var && Math . abs ( System . currentTimeMillis ( var ) - var ) > 1000 )	if ( var != 0 && var == var && Math . abs ( System . currentTimeMillis ( ) - var ) > 1000 )
AudioManager var = NotificationsController . getInstance ( var ) . var	AudioManager var = NotificationsController . var
startRecording ( var . getDialogId ( var ) , null )	startRecording ( var . getCurrentAccount ( ) , var . getDialogId ( ) , null )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . audioRouteChanged , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . audioRouteChanged , var )
if ( ! var && ( var == null || ! var . isVoice ( var ) && ! var . isRoundVideo ( var ) ) )	if ( ! SharedConfig . raiseToSpeak && ( var == null || ! var . isVoice ( ) && ! var . isRoundVideo ( ) ) )
if ( var && var != null && var . isHeld ( var ) )	if ( var && var != null && var . isHeld ( ) )
var . stop ( var )	if ( var != null )
if ( var != null )	var = null
var . pause ( var )	var . releasePlayer ( )
var . releasePlayer ( var )	var . releasePlayer ( )
var . getWindow ( var ) . clearFlags ( WindowManager . LayoutParams . FLAG_KEEP_SCREEN_ON )	var . getWindow ( ) . clearFlags ( WindowManager . LayoutParams . FLAG_KEEP_SCREEN_ON )
FileLoader . getInstance ( var ) . cancelLoadFile ( var . getDocument ( var ) )	FileLoader . getInstance ( var . currentAccount ) . cancelLoadFile ( var . getDocument ( ) )
var . audioProgress = 0.0f	var . resetPlayingProgress ( )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( ) , 0 )
NotificationsController . getInstance ( var ) . audioManager . abandonAudioFocus ( this )	NotificationsController . audioManager . abandonAudioFocus ( this )
if ( var && var . get ( 0 ) == var var )	if ( var && ( var = var . indexOf ( var ) ) >= 0 )
var . remove ( 0 )	var . remove ( var )
if ( var != null var )	if ( var != null && var < var . size ( ) )
if ( ! var . isRoundVideo ( var ) && var != null )	if ( ! var . isRoundVideo ( ) && var != null )
if ( ( var . isVoice ( var ) || var . isRoundVideo ( var ) ) && var . getId ( var ) != 0 var )	if ( ( var . isVoice ( ) || var . isRoundVideo ( ) ) && var . getId ( ) != 0 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingDidReset , var . getId ( var ) , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingDidReset , var . getId ( ) , var )
if ( ! var && ! var )	if ( ! var && ! SharedConfig . raiseToSpeak )
int var = int ( var . getDuration ( var ) * var )	long var = var . getDuration ( )
ArrayList < MessageObject > var = new ArrayList var ( var )	ArrayList < MessageObject > var = new ArrayList ( var )
var = ! var . isEmpty ( var )	var = ! var . isEmpty ( )
if ( var . isMusic ( var ) )	if ( var . isMusic ( ) )
SharedMediaQuery . var ( var . getDialogId ( var ) , var . get ( 0 ) . getIdWithChannel var )	DataQuery . getInstance ( var . currentAccount ) . var ( var . getDialogId ( ) , var . get ( 0 ) . getIdWithChannel )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( ) , 0 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( ) )
if ( var . isEmpty ( var ) )	if ( var . isEmpty ( ) || var < 0 || var >= var . size ( ) )
MediaController . getInstance ( var ) . seekToProgress ( var , 0 )	seekToProgress ( var , 0 )
if ( var == null || var . size ( var ) < 2 )	if ( var == null || var . size ( ) < 2 )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , false , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , false , 0 )
if ( ( getCurrentDownloadMask var & var ) == 0 )	if ( ( DownloadController . getInstance ( var ) . getCurrentDownloadMask & DownloadController . AUTODOWNLOAD_MASK_MUSIC ) == 0 )
if ( ! canDownloadMedia ( var ) )	if ( ! DownloadController . getInstance ( var ) . canDownloadMedia ( var ) )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , false , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , false , 0 )
var = new HashMap var ( var )	var = new SparseArray
var = NotificationsController . getInstance ( var ) . audioManager . requestAudioFocus ( this , AudioManager . STREAM_VOICE_CALL , AudioManager . AUDIOFOCUS_GAIN )	var = NotificationsController . audioManager . requestAudioFocus ( this , AudioManager . STREAM_VOICE_CALL , AudioManager . AUDIOFOCUS_GAIN )
if ( ! var )	if ( ! SharedConfig . raiseToSpeak )
if ( ! var . isOut ( var ) && var . isContentUnread ( var ) )	if ( ! var . isOut ( ) && var . isContentUnread ( ) )
MessagesController . getInstance ( var ) . markMessageContentAsRead ( var )	MessagesController . getInstance ( var . currentAccount ) . markMessageContentAsRead ( var )
if ( var != null = false )	if ( var != null )
if ( var . messageOwner . attachPath != null && var . messageOwner . attachPath . var ( var ) > 0 )	if ( var . messageOwner . attachPath != null && var . messageOwner . attachPath . var ( ) > 0 )
if ( ! var . exists ( var ) = null )	if ( ! var . exists ( ) || AndroidUtilities . isInternalUri ( Uri . fromFile ( var ) ) = null )
FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( var ) , false , 0 )	FileLoader . getInstance ( var . currentAccount ) . loadFile ( var . getDocument ( ) , false , 0 )
if ( var . getDocument ( var ) != null var )	if ( var . isMusic ( ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( ) )
var [ 0 ] = openOpusFile ( var . getAbsolutePath ( var ) ) != 0	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FileDidLoaded , FileLoader . getAttachFileName ( var . getDocument ( ) ) . getDocument ( ) )
var . acquire ( var )	var . preparePlayer ( Uri . fromFile ( var ) , "" )
var = getTotalPcmDuration var	TLRPC . Document var = var . getDocument ( )
var . setStereoVolume ( 1.0f , 1.0f )	var = MessagesController . getGlobalMainSettings ( ) . getFloat ( "" , 1.0f )
var . release ( var )	var . releasePlayer ( )
var . setDataSource ( var . getAbsolutePath ( var ) )	Uri var = Uri . parse ( "" + var . getFileName ( ) + var )
var . prepare ( var )	var . play ( )
if ( var . isVoice ( var ) var )	if ( var . isVoice ( ) )
if ( var != null )	if ( var != null != null )
if ( ! var )	if ( ! SharedConfig . raiseToSpeak )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingDidStarted , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingDidStarted , var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( ) , 0 )
int var = int ( var . getDuration ( var ) * var . audioProgress )	long var = var . getDuration ( )
var . audioProgress = 0	checkIsNextMusicFileDownloaded ( var . currentAccount )
var . audioProgressSec = 0	checkIsNextVoiceFileDownloaded ( var . currentAccount )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( var ) , 0 )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingProgressDidChanged , var . getId ( ) , 0 )
if ( var . audioProgress == 1 )	if ( var == C . TIME_UNSET )
var . audioProgress = 0	var = ( long ) var . getDuration ( ) * 1000
if ( var != null && var . audioProgress != 0 )	if ( var == C . TIME_UNSET )
var = long ( var * var . audioProgress )	var = ( long ) var . getDuration ( ) * 1000
var . addAll ( var )	var . var ( var )
var . clear ( var )	var . resetPlayingProgress ( )
if ( var . isMusic ( var ) var )	if ( var . isMusic ( ) )
if ( var == null && var == null && var == null || var == null )	if ( var == null && var == null || var == null )
var . pause ( var )	var . pause ( )
FileLog . var ( var )	var . releasePlayer ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	boolean var = SharedConfig . shuffleMusic
if ( var != var )	if ( var != SharedConfig . shuffleMusic )
var . clear ( var )	var . clear ( )
if ( var == null && var == null && var == null || var == null || var == null || var != null && var . getId ( var ) != var . getId ( var ) )	if ( var == null && var == null || var == null || var == null || ! isSamePlayingMessage ( var ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( ) )
if ( var == null && var == null && var == null || var == null || var == null || var != null && var . getId ( var ) != var . getId ( var ) )	if ( var == null && var == null || var == null || var == null || ! isSamePlayingMessage ( var ) )
var . play ( var )	var . play ( )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( var ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . messagePlayingPlayStateChanged , var . getId ( ) )
if ( var == null && var == null && var == null || var == null || var == null )	if ( var == null && var == null || var == null || var == null )
Vibrator var = ( Vibrator ) ApplicationLoader . applicationContext . getSystemService ( Context . VIBRATOR_SERVICE )	var . performHapticFeedback ( HapticFeedbackConstants . KEYBOARD_TAP , HapticFeedbackConstants . FLAG_IGNORE_GLOBAL_SETTING )
var . id = UserConfig . lastLocalId	var . id = SharedConfig . getLastLocalId ( )
var . user_id = UserConfig . getClientUserId ( var )	var . user_id = UserConfig . getInstance ( var ) . getClientUserId
UserConfig . lastLocalId --	var . user_id = UserConfig . getInstance ( var ) . getClientUserId
UserConfig . saveConfig ( false )	SharedConfig . saveConfig ( )
var . delete ( var )	var . delete ( )
final String var = FileLoader . getPathToMessage ( var . messageOwner ) . getAbsolutePath var	final String var = FileLoader . getPathToMessage ( var . messageOwner ) . getAbsolutePath
final byte var var = MediaController . getInstance ( var ) . getWaveform ( var )	final byte var = getWaveform ( var )
MessagesStorage . getInstance ( var ) . putMessages ( var , var . getDialogId ( var ) , - 1 , 0 , false )	MessagesStorage . getInstance ( var . currentAccount ) . putMessages ( var , var . getDialogId ( ) , - 1 , 0 , false )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var . getDialogId ( var ) , var )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var . getDialogId ( ) , var )
var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime var	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var . getAbsolutePath ( var ) , var , var , null , null , 0 )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var . getAbsolutePath ( ) , var , var , null , null , null , null , 0 )
Vibrator var = ( Vibrator ) ApplicationLoader . applicationContext . getSystemService ( Context . VIBRATOR_SERVICE )	var . performHapticFeedback ( HapticFeedbackConstants . KEYBOARD_TAP , HapticFeedbackConstants . FLAG_IGNORE_GLOBAL_SETTING )
if ( var != null && var . var ( var ) != 0 )	if ( var != null && var . var ( ) != 0 )
if ( ! var . exists ( var ) = null )	if ( ! var = null )
long var = var . var ( var )	long var = var . var ( )
String var = getFileName ( var )	String var = FileLoader . fixFileName ( getFileName ( var ) )
int var = UserConfig . lastLocalId	int var = SharedConfig . getLastLocalId ( )
UserConfig . saveConfig ( false )	SharedConfig . saveConfig ( )
var = ! var	var = var
File var = new File ( Environment . getExternalStorageDirectory ( var ) , "" )	File var = new File ( var )
if ( var . isDirectory ( var ) )	if ( var . getId ( ) == var . getId ( ) && var . currentAccount == var . currentAccount )
if ( var . isDirectory ( var ) )	if ( var . getId ( ) == var . getId ( ) && var . currentAccount == var . currentAccount )
if ( var . isDirectory ( var ) )	if ( var . getId ( ) == var . getId ( ) && var . currentAccount == var . currentAccount )
HashMap < Integer , AlbumEntry > var = new HashMap var ( var )	SparseArray < AlbumEntry > var = new SparseArray
HashMap < Integer , AlbumEntry > var = new HashMap var ( var )	SparseArray < AlbumEntry > var = new SparseArray
var = MediaStore . Images . Media . query ( ApplicationLoader . applicationContext . getContentResolver ( var ) , MediaStore . Video . Media . EXTERNAL_CONTENT_URI , var , null , null , MediaStore . Video . Media . DATE_TAKEN + "" )	var = MediaStore . Images . Media . query ( ApplicationLoader . applicationContext . getContentResolver ( ) , MediaStore . Video . Media . EXTERNAL_CONTENT_URI , var , null , null , MediaStore . Video . Media . DATE_TAKEN + "" )
if ( var == null var )	if ( var == null )
if ( ! var . isEmpty ( var ) )	if ( ! var . isEmpty ( ) )
if ( ! var . isEmpty ( var ) )	if ( ! var . isEmpty ( ) )
if ( var . getId ( var ) != 0 )	if ( var . getId ( ) != 0 )
if ( ! var . getName ( var ) . equals ( "" ) . getName ( var ) . equals ( "" ) )	if ( ! var . equals ( "" ) . equals ( "" ) )
if ( var . getName ( var ) . equals ( "" ) )	if ( var . equals ( "" ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FilePreparingFailed , var , var . toString ( var ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FilePreparingFailed , var , var . toString ( ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FilePreparingStarted , var , var . toString ( var ) )	NotificationCenter . getInstance ( var . currentAccount ) . postNotificationName ( NotificationCenter . FilePreparingStarted , var , var . toString ( ) )
int var = selectTrack ( var , var )	int var = findTrack ( var , false )
if ( var >= 0 )	if ( var >= 0 || var >= 0 )
if ( var > 0 && var == - 1 )	if ( var == var && var > 0 && var == - 1 )
if ( var != 0 && var != 0 var )	if ( var != 0 && var != 0 )
var = new MP4Builder var . createMovie ( var )	var = new MP4Builder . createMovie ( var , var )
if ( var != var || var != var || var != 0 || var . videoEditedInfo . roundVideo var )	if ( var != var || var != var || var != 0 || var . videoEditedInfo . roundVideo )
var = selectTrack ( var , false )	int var = findTrack ( var , false )
if ( Build . VERSION . SDK_INT < 18 var )	if ( Build . VERSION . SDK_INT < 18 )
FileLog . e ( "" + var . getName ( var ) + "" + var + "" + Build . MODEL )	FileLog . d ( "" + var . getName ( ) + "" + var + "" + Build . MODEL )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
var . configure ( var , var . getSurface ( var ) , null , 0 )	var . configure ( var , var . getSurface ( ) , null , 0 )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
if ( var . presentationTimeUs < var var )	if ( var . presentationTimeUs < var )
FileLog . e ( "" + var + "" + var . presentationTimeUs )	FileLog . d ( "" + var + "" + var . presentationTimeUs )
if ( var >= 0 var )	if ( var >= 0 )
FileLog . var ( "" )	FileLog . d ( "" )
FileLog . var ( "" )	FileLog . d ( "" )
FileLog . var ( "" + ( System . currentTimeMillis ( var ) - var ) )	FileLog . d ( "" + ( System . currentTimeMillis ( ) - var ) )
public MessageObject ( TLRPC . Message var , AbstractMap < Integer , TLRPC . User > , TLRPC . User var , AbstractMap < Integer , TLRPC . Chat > , TLRPC . Chat var , boolean var , long var )	public MessageObject ( int var , TLRPC . Message var , AbstractMap < Integer , TLRPC . User > , TLRPC . User var , AbstractMap < Integer , TLRPC . Chat > , TLRPC . Chat var , SparseArray < TLRPC . User > . User var , SparseArray < TLRPC . Chat > . Chat var , boolean var , long var )
var = new MessageObject ( var . replyMessage , var , var , false )	var = new MessageObject ( var , var . replyMessage , var , var , var , var , false , var )
if ( var != null )	if ( var != null != null )
var = MessagesController . getInstance ( ) . getUser ( var . from_id )	var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
if ( var != null )	if ( var != null != null )
var = MessagesController . getInstance ( ) . getUser ( var . action . user_id )	var = MessagesController . getInstance ( var ) . getUser ( var . action . user_id )
if ( var . action . user_id == UserConfig . getClientUserId ( ) )	if ( var . action . user_id == UserConfig . getInstance ( var ) . getClientUserId )
if ( var != null )	if ( var != null != null )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( var ) . getUser ( var )
if ( var == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getInstance ( var ) . getClientUserId )
if ( var == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getInstance ( var ) . getClientUserId )
var = replaceWithLink ( LocaleController . getString ( "" , R . string . ActionYouAddUser ) , R . string . ActionYouAddUser , "" , var . action . var , var )	var = replaceWithLink ( LocaleController . getString ( "" , R . string . ActionYouAddUser ) , R . string . ActionYouAddUser , "" , var . action . var , var , var )
var = replaceWithLink ( LocaleController . getString ( "" , R . string . ActionAddUser ) , R . string . ActionAddUser , "" , var . action . var , var )	var = replaceWithLink ( LocaleController . getString ( "" , R . string . ActionAddUser ) , R . string . ActionAddUser , "" , var . action . var , var , var )
TLRPC . User var = UserConfig . getCurrentUser ( )	TLRPC . User var = UserConfig . getInstance ( var ) . getCurrentUser
if ( var != null )	if ( var != null != null )
var = MessagesController . getInstance ( ) . getUser ( var . to_id . user_id )	var = MessagesController . getInstance ( var ) . getUser ( var . to_id . user_id )
if ( var . from_id == UserConfig . getClientUserId ( ) )	if ( var . from_id == UserConfig . getInstance ( var ) . getClientUserId )
if ( var != null )	if ( var != null != null )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( var ) . getUser ( var )
var = new VideoEditedInfo	var = var
var . roundVideo = isRoundVideo	createMessageSendInfo
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( var , var , false )
public MessageObject ( TLRPC . TL_channelAdminLogEvent var , ArrayList < MessageObject > var , HashMap < String , ArrayList < MessageObject > > , ArrayList < MessageObject > var , TLRPC . Chat var , int var )	public MessageObject ( int var , TLRPC . TL_channelAdminLogEvent var , ArrayList < MessageObject > var , HashMap < String , ArrayList < MessageObject > > , ArrayList < MessageObject > var , TLRPC . Chat var , int var )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )	var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . action . participant . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . action . participant . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . action . prev_participant . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . action . prev_participant . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . action . prev_participant . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . action . prev_participant . user_id )
var . var = "" + MessagesController . getInstance ( ) . linkPrefix + "" + var	var . var = "" + MessagesController . getInstance ( var ) . linkPrefix + "" + var
var . media . webpage . description = "" + MessagesController . getInstance ( ) . linkPrefix + "" + ( ( TLRPC . TL_channelAdminLogEventActionChangeUsername ) var . action ) . prev_value	var . media . webpage . description = "" + MessagesController . getInstance ( var ) . linkPrefix + "" + ( ( TLRPC . TL_channelAdminLogEventActionChangeUsername ) var . action ) . prev_value
if ( var . media != null && ! ( var . media instanceof TLRPC . TL_messageMediaEmpty ) && ! ( var . media instanceof TLRPC . TL_messageMediaWebPage ) && TextUtils . isEmpty ( var . var ) )	if ( var . media != null && ! ( var . media instanceof TLRPC . TL_messageMediaEmpty ) && ! ( var . media instanceof TLRPC . TL_messageMediaWebPage ) )
if ( TextUtils . isEmpty ( var . media . var ) )	if ( TextUtils . isEmpty ( var . var ) )
var . media . webpage . description = var . media . var	var . media . webpage . description = var . var
MessageObject var = new MessageObject ( var , null , null , true , var )	MessageObject var = new MessageObject ( var , var , null , null , true , var )
createDateArray ( var , var , var )	createDateArray ( var , var , var , var )
createDateArray ( var , var , var )	createDateArray ( var , var , var , var )
if ( ! var . parseString ( var . var ) = null )	if ( ! var . parseString ( var ) = null )
var = MessagesController . getInstance ( ) . getUser ( var . from_id )	var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
if ( var != null && var . id == UserConfig . getClientUserId ( ) )	if ( var != null && var . id == UserConfig . getInstance ( var ) . getClientUserId )
if ( var != null && var . id == UserConfig . getClientUserId ( ) )	if ( var != null && var . id == UserConfig . getInstance ( var ) . getClientUserId )
var = MessagesController . getInstance ( ) . getUser ( ( int ) getDialogId )	var = MessagesController . getInstance ( var ) . getUser ( ( int ) getDialogId )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )	var = MessagesController . getInstance ( var ) . getChat ( var . to_id . channel_id )
TLRPC . TL_webDocument var = ( ( TLRPC . TL_messageMediaInvoice ) var . media ) . var	TLRPC . WebDocument var = ( ( TLRPC . TL_messageMediaInvoice ) var . media ) . var
if ( var != null )	if ( var != null != null )
var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )	var = MessagesController . getInstance ( var ) . getUser ( var . get ( var ) )
if ( ( var == '@' || var == '#' || var == '/' ) && var == 0 || var != 0 && ( var . charAt ( var - 1 ) == ' ' || var . charAt ( var - 1 ) == '\n' ) )	if ( ( var == '@' || var == '#' || var == '/' || var == '$' ) && var == 0 || var != 0 && ( var . charAt ( var - 1 ) == ' ' || var . charAt ( var - 1 ) == '\n' ) )
var = Emoji . replaceEmoji ( var . media . var , Theme . chat_msgTextPaint . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )	var = Emoji . replaceEmoji ( var . message , Theme . chat_msgTextPaint . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )
if ( var . charAt ( var ) != '@' && var . charAt ( var ) != '#' && var . charAt ( var ) != '/' ++ )	if ( var != '@' && var != '#' && var != '/' && var != '$' ++ )
if ( var . length ( ) < 200 )	if ( var . length ( ) < 1000 )
if ( var instanceof Spannable && var . length ( ) < 200 )	if ( var instanceof Spannable && var . length ( ) < 1000 )
int var = var . entities . size ( )	int var = var . size ( )
if ( var . offset + var . length > var . message . length ( ) )	if ( var . offset + var . length > var . length ( ) )
if ( var instanceof TLRPC . TL_messageEntityBold || var instanceof TLRPC . TL_messageEntityItalic || var instanceof TLRPC . TL_messageEntityCode || var instanceof TLRPC . TL_messageEntityPre || var instanceof TLRPC . TL_messageEntityMentionName || var instanceof TLRPC . TL_inputMessageEntityMentionName )	if ( ! var || var instanceof TLRPC . TL_messageEntityBold || var instanceof TLRPC . TL_messageEntityItalic || var instanceof TLRPC . TL_messageEntityCode || var instanceof TLRPC . TL_messageEntityPre || var instanceof TLRPC . TL_messageEntityMentionName || var instanceof TLRPC . TL_inputMessageEntityMentionName )
var . setSpan ( new URLSpanMono ( var , var . offset , var . offset + var . length , isOutOwner ) , var . offset , var . offset + var . length , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanMono ( var , var . offset , var . offset + var . length , var ) , var . offset , var . offset + var . length , var , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_messageEntityMentionName ) var ) . user_id , isOutOwner ) + ( ( TLRPC . TL_messageEntityMentionName ) var ) . user_id , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_messageEntityMentionName ) var ) . user_id , var ) + ( ( TLRPC . TL_messageEntityMentionName ) var ) . user_id , var , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , isOutOwner ) + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , var ) + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , var , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setSpan ( new URLSpanBotCommand ( var , isOutOwner ) , isOutOwner , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanBotCommand ( var , var ) , var , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( var instanceof TLRPC . TL_messageEntityHashtag || var instanceof TLRPC . TL_messageEntityMention )	if ( var instanceof TLRPC . TL_messageEntityHashtag || ( var && var instanceof TLRPC . TL_messageEntityMention ) || var instanceof TLRPC . TL_messageEntityCashtag )
var . setSpan ( new URLSpan ( "" + var ) + var , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanBrowser ( "" + var ) + var , var . offset , var . offset + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( var && Build . VERSION . SDK_INT >= Build . VERSION_CODES . N )	if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . N )
if ( var == 0 = var )	if ( var == 0 && var >= 0 = var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . fwd_from . saved_from_peer . channel_id )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . fwd_from . saved_from_peer . channel_id )
var = Math . max ( 0 , var . destroyTime - ConnectionsManager . getInstance ( ) . getCurrentTime )	var = Math . max ( 0 , var . destroyTime - ConnectionsManager . getInstance ( var ) . getCurrentTime )
return var != null && var . mime_type . startsWith ( "" )	return var != null && ! isGifDocument ( var ) && var . mime_type . startsWith ( "" )
if ( isOutOwner || var . fwd_from != null && var . fwd_from . from_id == UserConfig . getClientUserId ( ) )	if ( isOutOwner || var . fwd_from != null && var . fwd_from . from_id == UserConfig . getInstance ( var ) . getClientUserId )
var = MessagesController . getInstance ( ) . getChat ( var . fwd_from . channel_id )	var = MessagesController . getInstance ( var ) . getChat ( var . fwd_from . channel_id )
var = MessagesController . getInstance ( ) . getUser ( var . fwd_from . from_id )	var = MessagesController . getInstance ( var ) . getUser ( var . fwd_from . from_id )
var = MessagesController . getInstance ( ) . getChat ( - var . from_id )	var = MessagesController . getInstance ( var ) . getChat ( - var . from_id )
var = MessagesController . getInstance ( ) . getUser ( var . from_id )	var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
return ( var . flags & TLRPC . MESSAGE_FLAG_FWD ) != 0 && var . fwd_from != null && var . fwd_from . saved_from_peer == null && UserConfig . getClientUserId ( ) != getDialogId	return ( var . flags & TLRPC . MESSAGE_FLAG_FWD ) != 0 && var . fwd_from != null && var . fwd_from . saved_from_peer == null && UserConfig . getInstance ( var ) . getClientUserId != getDialogId
return canEditMessageAnytime ( var , var )	return canEditMessageAnytime ( var , var , var )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )	var = MessagesController . getInstance ( var ) . getChat ( var . to_id . channel_id )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )	var = MessagesController . getInstance ( var ) . getChat ( var . to_id . channel_id )
if ( Math . abs ( var . date - ConnectionsManager . getInstance ( ) . getCurrentTime ) > MessagesController . getInstance ( ) . maxEditTime )	if ( Math . abs ( var . date - ConnectionsManager . getInstance ( var ) . getCurrentTime ) > MessagesController . getInstance ( var ) . maxEditTime )
return ( var . out || var . from_id == UserConfig . getClientUserId ( ) ) && ( var . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaDocument && ! isStickerMessage ( var ) || var . media instanceof TLRPC . TL_messageMediaEmpty || var . media instanceof TLRPC . TL_messageMediaWebPage || var . media == null )	return ( var . out || var . from_id == UserConfig . getInstance ( var ) . getClientUserId ) && ( var . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaDocument && ! isStickerMessage ( var ) || var . media instanceof TLRPC . TL_messageMediaEmpty || var . media instanceof TLRPC . TL_messageMediaWebPage || var . media == null )
var = MessagesController . getInstance ( ) . getChat ( var . to_id . channel_id )	var = MessagesController . getInstance ( UserConfig . selectedAccount ) . getChat ( var . to_id . channel_id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . fwd_from . channel_id )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . fwd_from . channel_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . fwd_from . from_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . fwd_from . from_id )
if ( var == 3 && isSecretPhoto )	if ( needDrawBluredPreview )
TLRPC . DraftMessage var = DraftQuery . getDraft ( var . id )	TLRPC . DraftMessage var = DataQuery . getInstance ( currentAccount ) . getDraft ( var . id )
var = DraftQuery . getDraft ( var . id )	var = DataQuery . getInstance ( currentAccount ) . getDraft ( var . id )
return AndroidUtilities . compare ( var . qts , var . qts )	return AndroidUtilities . compare ( getUpdateQts ( var ) , getUpdateQts ( var ) )
var = var	var = var [ var ]
var = var = new MessagesController	var [ var ] = var = new MessagesController ( var )
public MessagesController	public MessagesController ( int var )
MessagesStorage . getInstance ( )	MessagesStorage . getInstance ( var )
LocationController . getInstance ( )	LocationController . getInstance ( var )
MessagesController var = getInstance	MessagesController var = getInstance ( var )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidUpload )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidUpload )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidFailUpload )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidFailUpload )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . messageReceivedByServer )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . updateMessageMedia )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . updateMessageMedia )
if ( var != null && var . length ( ) != 0 )	var = ApplicationLoader . applicationContext . getSharedPreferences ( "" + var , Activity . MODE_PRIVATE )
byte var = Base64 . decode ( var , Base64 . DEFAULT )	var = ApplicationLoader . applicationContext . getSharedPreferences ( "" + var , Activity . MODE_PRIVATE )
LocaleController . getInstance ( ) . loadRemoteLanguages	LocaleController . getInstance ( ) . loadRemoteLanguages ( var )
var = var . chat_big_size	var = var . caption_length_max
var = var . disabled_features	var = var . preload_featured_stickers
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	String var = var . static_maps_provider . split ( "" )
var . writeInt32 ( var . size ( ) )	var . putInt ( "" , var )
var . serializeToStream ( var )	var . putBoolean ( "" , var )
if ( var . length ( ) != 0 )	var . putString ( "" , var )
var . putString ( "" , var )	var . putInt ( "" , var )
if ( var . var . equals ( var ) )	TLRPC . Chat var = var . var . get ( var )
AlertDialog . Builder var = new AlertDialog . Builder ( var . getParentActivity ( ) )	TLRPC . Chat var = var . get ( var . var . chat_id )
var . setTitle ( "" )	var . peers . add ( var )
var . setMessage ( var . description )	var . remove ( var . id )
var . showDialog ( var . create ( ) )	var . remove ( var . id )
if ( var . id == UserConfig . getClientUserId ( ) )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId )
TLRPC . User var = getInstance . getUser ( var )	TLRPC . User var = getInstance ( UserConfig . selectedAccount ) . getUser ( var )
return getInputChannel ( getInstance . getChat ( var ) )	return getInputChannel ( getChat ( var ) )
TLRPC . Chat var = getInstance . getChat ( - var )	TLRPC . Chat var = getChat ( - var )
TLRPC . User var = getInstance . getUser ( var )	TLRPC . User var = getUser ( var )
TLRPC . Chat var = getInstance . getChat ( - var )	TLRPC . Chat var = getChat ( - var )
TLRPC . User var = getInstance . getUser ( var )	TLRPC . User var = getUser ( var )
TLRPC . User var = getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = getUser ( UserConfig . getInstance ( var ) . getClientUserId )
var = UserConfig . getCurrentUser ( )	var = UserConfig . getInstance ( var ) . getCurrentUser
UserConfig . setCurrentUser ( var )	UserConfig . getInstance ( var ) . setCurrentUser ( var )
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . var )	MessagesStorage . getInstance ( var ) . clearUserPhotos ( var . var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
UserConfig . saveConfig ( true )	UserConfig . getInstance ( var ) . saveConfig ( true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
var = var . remove ( var )	var . remove ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
ContactsController . getInstance ( ) . cleanup	ContactsController . getInstance ( var ) . cleanup
NotificationsController . getInstance ( ) . cleanup	NotificationsController . getInstance ( var ) . cleanup
SendMessagesHelper . getInstance ( ) . cleanup	SendMessagesHelper . getInstance ( var ) . cleanup
SecretChatHelper . getInstance ( ) . cleanup	SecretChatHelper . getInstance ( var ) . cleanup
LocationController . getInstance ( ) . cleanup	LocationController . getInstance ( var ) . cleanup
StickersQuery . cleanup ( )	DataQuery . getInstance ( var ) . cleanup
SearchQuery . cleanup ( )	var . clear ( ) . commit
DraftQuery . cleanup ( )	var . clear ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . getEncryptedChat ( var , var , var )	MessagesStorage . getInstance ( var ) . getEncryptedChat ( var , var , var )
var . acquire ( )	var . await ( )
if ( var . id == UserConfig . getClientUserId ( ) )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId )
UserConfig . setCurrentUser ( var )	UserConfig . getInstance ( var ) . setCurrentUser ( var )
UserConfig . saveConfig ( true )	UserConfig . getInstance ( var ) . saveConfig ( true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . channelRightsUpdated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . channelRightsUpdated , var )
MessagesStorage . getInstance ( ) . putChannelAdmins ( var , var )	MessagesStorage . getInstance ( var ) . putChannelAdmins ( var , var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , var . var , true , true )
MessagesStorage . getInstance ( ) . updateChatInfo ( var . full_chat , false )	MessagesStorage . getInstance ( var ) . updateChatInfo ( var . full_chat , false )
BotQuery . putBotInfo ( var )	DataQuery . getInstance ( var ) . putBotInfo ( var )
StickersQuery . getGroupStickerSetById ( var . full_chat . stickerset )	DataQuery . getInstance ( var ) . getGroupStickerSetById ( var . full_chat . stickerset )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var . full_chat , var , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var . full_chat , var , false , null )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )
BotQuery . putBotInfo ( var . bot_info )	DataQuery . getInstance ( var ) . putBotInfo ( var . bot_info )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . botInfoDidLoaded , var . bot_info , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . botInfoDidLoaded , var . bot_info , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )
final TLRPC . Chat var = ChatObject . getChatByDialog ( var )	final TLRPC . Chat var = ChatObject . getChatByDialog ( var , var )
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
final HashMap < Integer , TLRPC . Chat > var = new HashMap	final SparseArray < TLRPC . Chat > var = new SparseArray
var . add ( new MessageObject ( var , var , var , true ) , var , var , true )	var . add ( new MessageObject ( var , var , var , var , true ) , var , var , var , true )
MessagesStorage . getInstance ( ) . putMessages ( var , var , - 1 , 0 , false )	MessagesStorage . getInstance ( var ) . putMessages ( var , var , - 1 , 0 , false )
var = var . remove ( var . getId ( ) )	var . remove ( var . getId ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
var . peer = MessagesController . getInputPeer ( var . id )	var . peer = getInputPeer ( var . id )
var . peer = MessagesController . getInputPeer ( - var . id )	var . peer = getInputPeer ( - var . id )
if ( var != null != null )	if ( var != null )
var . peer = MessagesController . getInputPeer ( - var . id )	var . peer = getInputPeer ( - var . id )
if ( var != null )	if ( var != null != null )
var . peer = MessagesController . getInputPeer ( var . id )	var . peer = getInputPeer ( var . id )
if ( var . containsKey ( var ) )	if ( var . indexOfKey ( var ) >= 0 )
if ( var != null != null )	if ( var != null )
var . peer = MessagesController . getInputPeer ( var . id )	var . peer = getInputPeer ( var . id )
if ( var != null )	if ( var != null != null )
var . peer = MessagesController . getInputPeer ( - var . id )	var . peer = getInputPeer ( - var . id )
var . peer = MessagesController . getInputPeer ( var . id )	var . peer = getInputPeer ( var . id )
var . peer = MessagesController . getInputPeer ( - var . id )	var . peer = getInputPeer ( - var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , var )
FileLog . e ( "" + var + "" + var + "" + var )	FileLog . d ( "" + var + "" + var + "" + var )
Integer var = var . get ( var )	int var = var . get ( var )
if ( var == null )	if ( var == 0 )
var = MessagesStorage . getInstance ( ) . getChannelPtsSync ( var )	var = MessagesStorage . getInstance ( var ) . getChannelPtsSync ( var )
FileLog . e ( "" )	FileLog . d ( "" )
MessagesStorage . getInstance ( ) . saveChannelPts ( var , var )	MessagesStorage . getInstance ( var ) . saveChannelPts ( var , var )
Long var = var . get ( var )	long var = var . get ( var )
Boolean var = var . get ( var )	boolean var = var . get ( var )
if ( var || var == null || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )	if ( var || var == 0 || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )
FileLog . e ( "" + var + "" + var )	FileLog . d ( "" + var + "" + var )
if ( var == null )	if ( var == 0 )
FileLog . e ( "" + var + "" + var + "" + var + "" + var )	FileLog . d ( "" + var + "" + var + "" + var + "" + var )
if ( MessagesStorage . lastPtsValue + var == var . lastPtsValue != var )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue + var == var . getInstance ( var ) . getLastPtsValue != var )
FileLog . e ( "" )	FileLog . d ( "" )
MessagesStorage . lastPtsValue = var	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var )
MessagesStorage . getInstance ( ) . saveDiffParams ( MessagesStorage . lastSeqValue , MessagesStorage . lastPtsValue , MessagesStorage . lastDateValue , MessagesStorage . lastQtsValue )	MessagesStorage . getInstance ( var ) . saveDiffParams ( MessagesStorage . getInstance ( var ) . getLastSeqValue , MessagesStorage . getInstance ( var ) . getLastPtsValue , MessagesStorage . getInstance ( var ) . getLastDateValue , MessagesStorage . getInstance ( var ) . getLastQtsValue )
if ( MessagesStorage . lastPtsValue != var )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue != var )
FileLog . e ( "" + var + "" + var )	FileLog . d ( "" + var + "" + var )
if ( MessagesStorage . lastSeqValue + 1 == var . lastSeqValue != var )	if ( MessagesStorage . getInstance ( var ) . getLastSeqValue + 1 == var . getInstance ( var ) . getLastSeqValue != var )
FileLog . e ( "" )	FileLog . d ( "" )
MessagesStorage . lastSeqValue = var	MessagesStorage . getInstance ( var ) . setLastSeqValue ( var )
MessagesStorage . lastDateValue = var	MessagesStorage . getInstance ( var ) . setLastDateValue ( var )
if ( MessagesStorage . lastSeqValue != var )	if ( MessagesStorage . getInstance ( var ) . getLastSeqValue != var )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didCreatedNewDeleteTask , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didCreatedNewDeleteTask , var )
MessagesStorage . getInstance ( ) . getNewTask ( var , var )	MessagesStorage . getInstance ( var ) . getNewTask ( var , var )
MessagesStorage . getInstance ( ) . getDialogPhotos ( var , var , var , var )	MessagesStorage . getInstance ( var ) . getDialogPhotos ( var , var , var , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )
var . peer = MessagesController . getInputPeer ( var )	var . peer = getInputPeer ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
MessagesStorage . getInstance ( ) . putBlockedUsers ( var , false )	MessagesStorage . getInstance ( var ) . putBlockedUsers ( var , false )
var . channel = MessagesController . getInputChannel ( var )	var . channel = getInputChannel ( var )
var . user_id = MessagesController . getInputUser ( var )	var . user_id = getInputUser ( var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )	processUpdates ( ( TLRPC . Updates ) var , false )
MessagesController . getInstance ( ) . loadFullChat ( var , 0 , true )	loadFullChat ( var , 0 , true )
AlertsCreator . processError ( var , var , var , ! var )	AlertsCreator . processError ( var , var , var , var , ! var )
var . channel = MessagesController . getInputChannel ( var )	var . channel = getInputChannel ( var )
var . user_id = MessagesController . getInputUser ( var )	var . user_id = getInputUser ( var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )	processUpdates ( ( TLRPC . Updates ) var , false )
MessagesController . getInstance ( ) . loadFullChat ( var , 0 , true )	loadFullChat ( var , 0 , true )
AlertsCreator . processError ( var , var , var , ! var )	AlertsCreator . processError ( var , var , var , var , ! var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
MessagesStorage . getInstance ( ) . deleteBlockedUser ( var . id )	MessagesStorage . getInstance ( var ) . deleteBlockedUser ( var . id )
if ( ! UserConfig . isClientActivated ( ) || var )	if ( ! UserConfig . getInstance ( var ) . isClientActivated || var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , null , true , true )
MessagesStorage . getInstance ( ) . putBlockedUsers ( var , true )	MessagesStorage . getInstance ( var ) . putBlockedUsers ( var , true )
if ( var . isEmpty ( ) && var && ! UserConfig . blockedUsersLoaded var )	if ( var . isEmpty ( ) && var && ! UserConfig . getInstance ( var ) . blockedUsersLoaded var )
UserConfig . blockedUsersLoaded = true	UserConfig . getInstance ( var ) . blockedUsersLoaded = true
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
UserConfig . getCurrentUser ( ) . var = new TLRPC . TL_userProfilePhotoEmpty ( )	UserConfig . getInstance ( var ) . getCurrentUser . var = new TLRPC . TL_userProfilePhotoEmpty ( )
TLRPC . User var = getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = getUser ( UserConfig . getInstance ( var ) . getClientUserId )
var = UserConfig . getCurrentUser ( )	var = UserConfig . getInstance ( var ) . getCurrentUser
var . var = UserConfig . getCurrentUser ( ) . var	var . var = UserConfig . getInstance ( var ) . getCurrentUser . var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
TLRPC . User var = getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = getUser ( UserConfig . getInstance ( var ) . getClientUserId )
var = UserConfig . getCurrentUser ( )	var = UserConfig . getInstance ( var ) . getCurrentUser
UserConfig . setCurrentUser ( var )	UserConfig . getInstance ( var ) . setCurrentUser ( var )
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . id )	MessagesStorage . getInstance ( var ) . clearUserPhotos ( var . id )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
UserConfig . saveConfig ( true )	UserConfig . getInstance ( var ) . saveConfig ( true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , null , true , true )
MessagesStorage . getInstance ( ) . putDialogPhotos ( var , var )	MessagesStorage . getInstance ( var ) . putDialogPhotos ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogPhotosLoaded , var , var , var , var , var . photos )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogPhotosLoaded , var , var , var , var , var . photos )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . location . volume_id + "" + var . location . local_id + ""	var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . location . volume_id + "" + var . location . local_id + ""
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )	FileLoader . getInstance ( var ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
MessagesStorage . getInstance ( ) . markMessagesAsDeleted ( var , true , var )	MessagesStorage . getInstance ( var ) . markMessagesAsDeleted ( var , true , var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( var , null , true , var )	MessagesStorage . getInstance ( var ) . updateDialogsWithDeletedMessages ( var , null , true , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )
var = MessagesStorage . getInstance ( ) . createPendingTask ( var )	var = MessagesStorage . getInstance ( var ) . createPendingTask ( var )
SecretChatHelper . getInstance ( ) . sendMessagesDeleteMessage ( var , var , null )	SecretChatHelper . getInstance ( var ) . sendMessagesDeleteMessage ( var , var , null )
MessagesStorage . getInstance ( ) . deleteUserChannelHistory ( var . id , var . id )	MessagesStorage . getInstance ( var ) . deleteUserChannelHistory ( var . id , var . id )
MessagesStorage . getInstance ( ) . deleteDialog ( var , var )	MessagesStorage . getInstance ( var ) . deleteDialog ( var , var )
AndroidUtilities . uninstallShortcut ( var )	DataQuery . getInstance ( var ) . uninstallShortcut ( var )
MessagesStorage . getInstance ( ) . deleteDialog ( var , var )	MessagesStorage . getInstance ( var ) . deleteDialog ( var , var )
var . remove ( - ( int ) var )	var . delete ( - ( int ) var )
MessageObject var = var . remove ( var . id )	MessageObject var = var . get ( var . id )
var = var . remove ( var . top_message )	var = var . get ( var . top_message )
var . out = UserConfig . getClientUserId ( ) == var	var . out = UserConfig . getInstance ( var ) . getClientUserId == var
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( var ) . getClientUserId
final MessageObject var = new MessageObject ( var , null , var . contains ( var . dialog_id ) . dialog_id )	final MessageObject var = new MessageObject ( var , var , var . contains ( var . dialog_id ) . dialog_id )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , false )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , false )
NotificationsController . getInstance ( ) . removeNotificationsForDialog ( var )	NotificationsController . getInstance ( var ) . removeNotificationsForDialog ( var )
SecretChatHelper . getInstance ( ) . sendClearHistoryMessage ( getEncryptedChat ( var ) , null )	SecretChatHelper . getInstance ( var ) . sendClearHistoryMessage ( getEncryptedChat ( var ) , null )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , null , true , true )
MessagesStorage . getInstance ( ) . updateChannelUsers ( var , var . participants )	MessagesStorage . getInstance ( var ) . updateChannelUsers ( var , var . participants )
MessagesStorage . getInstance ( ) . loadChatInfo ( var , var , var , false )	MessagesStorage . getInstance ( var ) . loadChatInfo ( var , var , var , false )
StickersQuery . getGroupStickerSetById ( var . stickerset )	DataQuery . getInstance ( var ) . getGroupStickerSetById ( var . stickerset )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , var , var )
if ( UserConfig . isClientActivated ( ) )	if ( UserConfig . getInstance ( var ) . isClientActivated )
if ( ConnectionsManager . getInstance ( ) . getPauseTime == 0 && ApplicationLoader . isScreenOn && ! ApplicationLoader . mainInterfacePausedStageQueue != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( ) . getPauseTime ) >= 2000 )	if ( ConnectionsManager . getInstance ( var ) . getPauseTime == 0 && ApplicationLoader . isScreenOn && ! ApplicationLoader . mainInterfacePausedStageQueue != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( var ) . getPauseTime ) >= 2000 )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( var != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( ) . getPauseTime ) >= 2000 )	if ( var != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( var ) . getPauseTime ) >= 2000 )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( ! var . isEmpty ( ) )	if ( var . size ( ) != 0 )
ArrayList < Integer > var = new ArrayList ( var . keySet ( ) )	var = new ArrayList
int var = var . get ( var )	int var = var . keyAt ( var )
Long var = var . get ( var )	long var = var . valueAt ( var )
if ( var != null && var + 1500 < var )	if ( var + 1500 < var )
FileLog . e ( "" + var + "" )	FileLog . d ( "" + var + "" )
FileLog . e ( var + "" )	FileLog . d ( var + "" )
var . id = var . get ( var )	var . id = var . valueAt ( var )
MessagesStorage . getInstance ( ) . putChannelViews ( var , var . peer instanceof TLRPC . TL_inputPeerChannel )	MessagesStorage . getInstance ( var ) . putChannelViews ( var , var . peer instanceof TLRPC . TL_inputPeerChannel )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedMessagesViews , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didUpdatedMessagesViews , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
int var = var . get ( var )	int var = var . valueAt ( var )
Long var = var . get ( var )	long var = var . get ( var )
if ( var . isEmpty ( ) )	if ( var == null || var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
LocationController . getInstance ( ) . update	LocationController . getInstance ( var ) . update
final HashMap < Long , CharSequence > var = new HashMap	final LongSparseArray < CharSequence > var = new LongSparseArray
final HashMap < Long , Integer > var = new HashMap	final LongSparseArray < Integer > var = new LongSparseArray
HashMap < Long , Boolean > var = var . get ( var )	LongSparseArray < Boolean > var = var . get ( var )
HashMap < Long , Boolean > var = var . get ( var )	LongSparseArray < Boolean > var = var . get ( var )
var = new HashMap	var = new LongSparseArray
HashMap < Long , Boolean > var = var . get ( var )	LongSparseArray < Boolean > var = var . get ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )
HashMap < Long , Boolean > var = var . get ( var )	LongSparseArray < Boolean > var = var . get ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )
FileLog . e ( "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )	FileLog . d ( "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )
MessagesStorage . getInstance ( ) . getMessages ( var , var , var , var , var , var , var , var , var )	MessagesStorage . getInstance ( var ) . getMessages ( var , var , var , var , var , var , var , var , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , var )	ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , var )
MessagesStorage . getInstance ( ) . putMessages ( var , var , - 2 , 0 , false )	MessagesStorage . getInstance ( var ) . putMessages ( var , var , - 2 , 0 , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
FileLog . e ( "" + var . messages . size ( ) + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )	FileLog . d ( "" + var . messages . size ( ) + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )
if ( var == null )	if ( var == 0 )
var = MessagesStorage . getInstance ( ) . getChannelPtsSync ( var )	var = MessagesStorage . getInstance ( var ) . getChannelPtsSync ( var )
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
final HashMap < Integer , TLRPC . Chat > var = new HashMap	final SparseArray < TLRPC . Chat > var = new SparseArray
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( false , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( false , var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( true , var )
MessagesStorage . getInstance ( ) . putMessages ( var , var , var , var , var )	MessagesStorage . getInstance ( var ) . putMessages ( var , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var , var , var , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
FileLog . e ( "" + var + "" + var + "" + var )	FileLog . d ( "" + var + "" + var + "" + var )
if ( UserConfig . dialogsLoadOffsetId != - 1 )	if ( UserConfig . getInstance ( var ) . dialogsLoadOffsetId != - 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
var . offset_id = UserConfig . dialogsLoadOffsetId	var . offset_id = UserConfig . getInstance ( var ) . dialogsLoadOffsetId
var . offset_date = UserConfig . dialogsLoadOffsetDate	var . offset_date = UserConfig . getInstance ( var ) . dialogsLoadOffsetDate
var . offset_peer . channel_id = UserConfig . dialogsLoadOffsetChannelId	var . offset_peer . channel_id = UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId
if ( UserConfig . dialogsLoadOffsetUserId != 0 )	if ( UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId != 0 )
var . offset_peer . user_id = UserConfig . dialogsLoadOffsetUserId	var . offset_peer . user_id = UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId
var . offset_peer . chat_id = UserConfig . dialogsLoadOffsetChatId	var . offset_peer . chat_id = UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId
var . offset_peer . access_hash = UserConfig . dialogsLoadOffsetAccess	var . offset_peer . access_hash = UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess
final HashMap < Long , TLRPC . TL_dialog > var = new HashMap	final LongSparseArray < TLRPC . TL_dialog > var = new LongSparseArray
final HashMap < Long , MessageObject > var = new HashMap	final LongSparseArray < MessageObject > var = new LongSparseArray
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
final HashMap < Integer , TLRPC . Chat > var = new HashMap	final SparseArray < TLRPC . Chat > var = new SparseArray
MessageObject var = new MessageObject ( var , var , var , false )	MessageObject var = new MessageObject ( var , var , var , var , false )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesStorage . getInstance ( ) . resetDialogs ( var , var , var , var , var , var , var , var , var , var )	MessagesStorage . getInstance ( var ) . resetDialogs ( var , var , var , var , var , var , var , var , var , var )
MessagesStorage . lastPtsValue = var	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var )
MessagesStorage . lastDateValue = var	MessagesStorage . getInstance ( var ) . setLastDateValue ( var )
MessagesStorage . lastQtsValue = var	MessagesStorage . getInstance ( var ) . setLastQtsValue ( var )
if ( ! UserConfig . draftsLoaded )	if ( ! UserConfig . getInstance ( var ) . draftsLoaded )
DraftQuery . loadDrafts ( )	DataQuery . getInstance ( var ) . loadDrafts
Long var = var . getKey ( )	long var = var . keyAt ( var )
TLRPC . TL_dialog var = var . getValue ( )	TLRPC . TL_dialog var = var . valueAt ( var )
DraftQuery . saveDraft ( var . id , var . draft , null , false )	DataQuery . getInstance ( var ) . saveDraft ( var . id , var . draft , null , false )
var . addAll ( var . values ( ) )	var . add ( var . valueAt ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
FileLog . e ( "" + var + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )	FileLog . d ( "" + var + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )
FileLog . e ( "" + var . id + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var . date * 1000 ) long ) var . date * 1000 )	FileLog . d ( "" + var . id + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var . date * 1000 ) long ) var . date * 1000 )
FileLog . e ( "" + var . id + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var . date * 1000 ) long ) var . date * 1000 )	FileLog . d ( "" + var . id + "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var . date * 1000 ) long ) var . date * 1000 )
FileLog . e ( "" )	FileLog . d ( "" )
UserConfig . dialogsLoadOffsetDate = UserConfig . migrateOffsetDate	UserConfig . getInstance ( var ) . dialogsLoadOffsetDate = UserConfig . getInstance ( var ) . migrateOffsetDate
UserConfig . dialogsLoadOffsetUserId = UserConfig . migrateOffsetUserId	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = UserConfig . getInstance ( var ) . migrateOffsetUserId
UserConfig . dialogsLoadOffsetChatId = UserConfig . migrateOffsetChatId	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = UserConfig . getInstance ( var ) . migrateOffsetChatId
UserConfig . dialogsLoadOffsetChannelId = UserConfig . migrateOffsetChannelId	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = UserConfig . getInstance ( var ) . migrateOffsetChannelId
UserConfig . dialogsLoadOffsetAccess = UserConfig . migrateOffsetAccess	UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess = UserConfig . getInstance ( var ) . migrateOffsetAccess
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var . toString ( ) ) . US , "" , var . toString ( ) )	SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var . toString ( ) ) . US , "" , var . toString ( ) )
FileLog . e ( "" + var . var . size ( ) )	FileLog . d ( "" + var . var . size ( ) )
var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )	var = MessagesStorage . getInstance ( var ) . getDatabase . queryFinalized ( "" )
UserConfig . dialogsLoadOffsetId = UserConfig . migrateOffsetId	UserConfig . getInstance ( var ) . dialogsLoadOffsetId = UserConfig . getInstance ( var ) . migrateOffsetId
UserConfig . dialogsLoadOffsetDate = UserConfig . migrateOffsetDate	UserConfig . getInstance ( var ) . dialogsLoadOffsetDate = UserConfig . getInstance ( var ) . migrateOffsetDate
UserConfig . dialogsLoadOffsetUserId = UserConfig . migrateOffsetUserId	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = UserConfig . getInstance ( var ) . migrateOffsetUserId
UserConfig . dialogsLoadOffsetChatId = UserConfig . migrateOffsetChatId	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = UserConfig . getInstance ( var ) . migrateOffsetChatId
UserConfig . dialogsLoadOffsetChannelId = UserConfig . migrateOffsetChannelId	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = UserConfig . getInstance ( var ) . migrateOffsetChannelId
UserConfig . dialogsLoadOffsetAccess = UserConfig . migrateOffsetAccess	UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess = UserConfig . getInstance ( var ) . migrateOffsetAccess
FileLog . e ( "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )	FileLog . d ( "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )
TLRPC . TL_dialog var = var . remove ( MessageObject . getDialogId ( var ) )	long var = MessageObject . getDialogId ( var )
UserConfig . dialogsLoadOffsetId = UserConfig . migrateOffsetId	UserConfig . getInstance ( var ) . dialogsLoadOffsetId = UserConfig . getInstance ( var ) . migrateOffsetId
UserConfig . dialogsLoadOffsetDate = UserConfig . migrateOffsetDate	UserConfig . getInstance ( var ) . dialogsLoadOffsetDate = UserConfig . getInstance ( var ) . migrateOffsetDate
UserConfig . dialogsLoadOffsetUserId = UserConfig . migrateOffsetUserId	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = UserConfig . getInstance ( var ) . migrateOffsetUserId
UserConfig . dialogsLoadOffsetChatId = UserConfig . migrateOffsetChatId	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = UserConfig . getInstance ( var ) . migrateOffsetChatId
UserConfig . dialogsLoadOffsetChannelId = UserConfig . migrateOffsetChannelId	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = UserConfig . getInstance ( var ) . migrateOffsetChannelId
UserConfig . dialogsLoadOffsetAccess = UserConfig . migrateOffsetAccess	UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess = UserConfig . getInstance ( var ) . migrateOffsetAccess
FileLog . e ( "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )	FileLog . d ( "" + LocaleController . getInstance ( ) . formatterStats . format ( ( long ) var * 1000 ) long ) var * 1000 )
UserConfig . migrateOffsetChatId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = 0
UserConfig . migrateOffsetUserId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = 0
UserConfig . migrateOffsetChannelId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = 0
UserConfig . migrateOffsetUserId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = 0
if ( var . id == UserConfig . migrateOffsetChatId )	if ( var . id == UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId )
UserConfig . migrateOffsetUserId = var . to_id . user_id	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = var . to_id . user_id
UserConfig . migrateOffsetChatId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = 0
UserConfig . migrateOffsetChannelId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = 0
FileLog . e ( "" + var + "" + var . var . size ( ) )	FileLog . d ( "" + var + "" + var . var . size ( ) )
if ( UserConfig . dialogsLoadOffsetId == Integer . MAX_VALUE )	if ( UserConfig . getInstance ( var ) . dialogsLoadOffsetId == Integer . MAX_VALUE )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
final HashMap < Long , TLRPC . TL_dialog > var = new HashMap	final LongSparseArray < TLRPC . TL_dialog > var = new LongSparseArray
final HashMap < Long , MessageObject > var = new HashMap	final LongSparseArray < MessageObject > var = new LongSparseArray
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
final HashMap < Integer , TLRPC . Chat > var = new HashMap	final SparseArray < TLRPC . Chat > var = new SparseArray
if ( var != null && var . left )	if ( var != null && var . left && ( var == 0 || var != - var . id ) )
MessageObject var = new MessageObject ( var , var , var , false )	MessageObject var = new MessageObject ( var , var , var , var , true )
if ( ! var && ! var && UserConfig . dialogsLoadOffsetId != - 1 && var == 0 )	if ( ! var && ! var && UserConfig . getInstance ( var ) . dialogsLoadOffsetId != - 1 && var == 0 )
if ( var != null && var . id != UserConfig . dialogsLoadOffsetId )	if ( var != null && var . id != UserConfig . getInstance ( var ) . dialogsLoadOffsetId )
UserConfig . dialogsLoadOffsetId = var . id	UserConfig . getInstance ( var ) . dialogsLoadOffsetId = var . id
UserConfig . dialogsLoadOffsetChatId = 0	UserConfig . getInstance ( var ) . migrateOffsetChannelId = 0
UserConfig . dialogsLoadOffsetUserId = 0	UserConfig . getInstance ( var ) . migrateOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChannelId )	if ( var . id == UserConfig . getInstance ( var ) . migrateOffsetChatId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash	UserConfig . getInstance ( var ) . migrateOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetChannelId = 0	UserConfig . getInstance ( var ) . migrateOffsetChatId = 0
UserConfig . dialogsLoadOffsetUserId = 0	UserConfig . getInstance ( var ) . migrateOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChatId )	if ( var . id == UserConfig . getInstance ( var ) . migrateOffsetChannelId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash	UserConfig . getInstance ( var ) . migrateOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetUserId = var . to_id . user_id	UserConfig . getInstance ( var ) . migrateOffsetUserId = var . to_id . user_id
UserConfig . dialogsLoadOffsetChatId = 0	UserConfig . getInstance ( var ) . migrateOffsetChatId = 0
UserConfig . dialogsLoadOffsetChannelId = 0	UserConfig . getInstance ( var ) . migrateOffsetChannelId = 0
if ( var . id == UserConfig . dialogsLoadOffsetUserId )	if ( var . id == UserConfig . getInstance ( var ) . migrateOffsetUserId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash	UserConfig . getInstance ( var ) . migrateOffsetAccess = var . access_hash
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
if ( ! UserConfig . draftsLoaded )	if ( ! UserConfig . getInstance ( var ) . draftsLoaded )
DraftQuery . loadDrafts ( )	DataQuery . getInstance ( var ) . loadDrafts
SecretChatHelper . getInstance ( ) . sendNotifyLayerMessage ( var , null )	SecretChatHelper . getInstance ( var ) . sendNotifyLayerMessage ( var , null )
Long var = var . getKey ( )	long var = var . keyAt ( var )
TLRPC . TL_dialog var = var . getValue ( )	TLRPC . TL_dialog var = var . valueAt ( var )
DraftQuery . saveDraft ( var . id , var . draft , null , false )	DataQuery . getInstance ( var ) . saveDraft ( var . id , var . draft , null , false )
var . addAll ( var . values ( ) )	var . add ( var . valueAt ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
UserConfig . migrateOffsetId = var	UserConfig . getInstance ( var ) . migrateOffsetId = var
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )
migrateDialogs ( UserConfig . migrateOffsetId , UserConfig . migrateOffsetDate , UserConfig . migrateOffsetUserId , UserConfig . migrateOffsetChatId , UserConfig . migrateOffsetChannelId , UserConfig . migrateOffsetAccess )	migrateDialogs ( UserConfig . getInstance ( var ) . migrateOffsetId , UserConfig . getInstance ( var ) . migrateOffsetDate , UserConfig . getInstance ( var ) . migrateOffsetUserId , UserConfig . getInstance ( var ) . migrateOffsetChatId , UserConfig . getInstance ( var ) . migrateOffsetChannelId , UserConfig . getInstance ( var ) . migrateOffsetAccess )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	int var = var . getInt ( "" + var , - 1 )
if ( var . mute_until > ConnectionsManager . getInstance ( ) . getCurrentTime )	if ( ( var . flags & 4 ) != 0 )
if ( var . mute_until > ConnectionsManager . getInstance ( ) . getCurrentTime + 60 * 60 * 24 * 365 )	if ( var . mute_until > ConnectionsManager . getInstance ( var ) . getCurrentTime + 60 * 60 * 24 * 365 )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , ( ( long ) var << 32 ) | 1 )	MessagesStorage . getInstance ( var ) . setDialogFlags ( var , ( ( long ) var << 32 ) | 1 )
if ( var != 0 && var != 1 )	if ( var != - 1 )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , 0 )	MessagesStorage . getInstance ( var ) . setDialogFlags ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
var = var . edit ( )	var . remove ( "" + var )
if ( var . notify_settings . mute_until != 0 )	if ( ( var . notify_settings . flags & 4 ) != 0 )
if ( var . notify_settings . mute_until > ConnectionsManager . getInstance ( ) . getCurrentTime + 60 * 60 * 24 * 365 )	if ( var . notify_settings . mute_until > ConnectionsManager . getInstance ( var ) . getCurrentTime + 60 * 60 * 24 * 365 )
var . peer = MessagesController . getInputPeer ( ( int ) var )	var . peer = getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( ) . resetMentionsCount ( var , var )	MessagesStorage . getInstance ( var ) . resetMentionsCount ( var , var )
var . unread_count = var . getValue ( )	int var = var . unread_count
Long var = var . getKey ( )	long var = var . keyAt ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMentionsCount , var . id , var . unread_mentions_count )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateMentionsCount , var . id , var . unread_mentions_count )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
var . writeInt32 ( 8 )	var . writeInt32 ( 10 )
MessagesStorage . getInstance ( ) . putMessages ( var . messages , true , true , false , MediaController . getInstance ( ) . getAutodownloadMask , true )	MessagesStorage . getInstance ( var ) . putMessages ( var . messages , true , true , false , DownloadController . getInstance ( var ) . getAutodownloadMask , true )
var . remove ( var )	if ( var == 0 || var . indexOfKey ( var ) >= 0 )
final HashMap < Long , MessageObject > var = new HashMap	final LongSparseArray < MessageObject > var = new LongSparseArray
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
final HashMap < Integer , TLRPC . Chat > var = new HashMap	final SparseArray < TLRPC . Chat > var = new SparseArray
final HashMap < Long , Integer > var = new HashMap	final LongSparseArray < Integer > var = new LongSparseArray
MessageObject var = new MessageObject ( var , var , var , false )	MessageObject var = new MessageObject ( var , var , var , var , false )
Long var = var . getKey ( )	long var = var . keyAt ( var )
TLRPC . TL_dialog var = var . getValue ( )	TLRPC . TL_dialog var = var . valueAt ( var )
if ( var . unread_mentions_count != var . unread_mentions_count )	if ( var != null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMentionsCount , var . id , var . unread_mentions_count )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateMentionsCount , var . id , var . unread_mentions_count )
var . addAll ( var . values ( ) )	var . add ( var . valueAt ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processDialogsUpdateRead ( var )	NotificationsController . getInstance ( var ) . processDialogsUpdateRead ( var )
MessagesStorage . getInstance ( ) . markMentionMessageAsRead ( var . getId ( ) , var . messageOwner . to_id . channel_id , var . getDialogId ( ) )	MessagesStorage . getInstance ( var ) . markMentionMessageAsRead ( var . getId ( ) , var . messageOwner . to_id . channel_id , var . getDialogId ( ) )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , 0 )	MessagesStorage . getInstance ( var ) . markMessagesContentAsRead ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
MessagesStorage . getInstance ( ) . markMentionMessageAsRead ( var , var , var )	MessagesStorage . getInstance ( var ) . markMentionMessageAsRead ( var , var , var )
MessagesStorage . getInstance ( ) . createTaskForMid ( var , var , var , var , var , false )	MessagesStorage . getInstance ( var ) . createTaskForMid ( var , var , var , var , var , false )
SecretChatHelper . getInstance ( ) . sendMessagesReadMessage ( var , var , null )	SecretChatHelper . getInstance ( var ) . sendMessagesReadMessage ( var , var , null )
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . id , var , var , 0 , var )	MessagesStorage . getInstance ( var ) . createTaskForSecretChat ( var . id , var , var , 0 , var )
var . var = var	var . max_id = var . maxId
var . var = var	var . max_id = var . maxId
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray ( 1 )
NotificationsController . getInstance ( ) . processDialogsUpdateRead ( var )	NotificationsController . getInstance ( var ) . processDialogsUpdateRead ( var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray ( 1 )
NotificationsController . getInstance ( ) . processDialogsUpdateRead ( var )	NotificationsController . getInstance ( var ) . processDialogsUpdateRead ( var )
var . var = var	var . max_date = var . maxDate
NotificationsController . getInstance ( ) . processReadMessages ( null , var , var , 0 , var )	NotificationsController . getInstance ( var ) . processReadMessages ( null , var , var , 0 , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
var . put ( var , 0 )	MessagesStorage . getInstance ( var ) . resetMentionsCount ( var , 0 )
if ( var . ttl > 0 && var )	if ( var != null && var . ttl > 0 )
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . id , var , var , 0 , null )	MessagesStorage . getInstance ( var ) . createTaskForSecretChat ( var . id , var , var , 0 , null )
UserConfig . lastBroadcastId --	UserConfig . getInstance ( var ) . lastBroadcastId --
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( null , var , true , true )
var . notify_settings = new TLRPC . TL_peerNotifySettingsEmpty ( )	var . notify_settings = new TLRPC . TL_peerNotifySettingsEmpty_layer77 ( )
var . participants . admin_id = UserConfig . getClientUserId ( )	var . participants . admin_id = UserConfig . getInstance ( var ) . getClientUserId
var . inviter_id = UserConfig . getClientUserId ( )	var . inviter_id = UserConfig . getInstance ( var ) . getClientUserId
MessagesStorage . getInstance ( ) . updateChatInfo ( var , false )	MessagesStorage . getInstance ( var ) . updateChatInfo ( var , false )
var . local_id = var . id = UserConfig . getNewMessageId ( )	var . local_id = var . id = UserConfig . getInstance ( var ) . getNewMessageId
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( var ) . getClientUserId
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessageObject var = new MessageObject ( var , var , true )	MessageObject var = new MessageObject ( var , var , var , true )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidCreated , var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatDidCreated , var . id )
AlertsCreator . processError ( var , var , var )	AlertsCreator . processError ( var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidCreated , var . var . get ( 0 ) . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatDidCreated , var . var . get ( 0 ) . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
AlertsCreator . processError ( var , var , var )	AlertsCreator . processError ( var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidCreated , var . var . get ( 0 ) . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatDidCreated , var . var . get ( 0 ) . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
AlertsCreator . processError ( var , var , var , true )	AlertsCreator . processError ( var , var , var , var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
MessagesStorage . getInstance ( ) . updateChatInfo ( var , false )	MessagesStorage . getInstance ( var ) . updateChatInfo ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( null , var , true , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
AlertsCreator . processError ( var , var , var , var && ! var )	AlertsCreator . processError ( var , var , var , var , var && ! var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , true , var )	MessagesStorage . getInstance ( var ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , true , var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( null , var , true , true )
var . inviter_id = UserConfig . getClientUserId ( )	var . inviter_id = UserConfig . getInstance ( var ) . getClientUserId
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
MessagesStorage . getInstance ( ) . updateChatInfo ( var , true )	MessagesStorage . getInstance ( var ) . updateChatInfo ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( var . id == UserConfig . getClientUserId ( ) )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( null , var , true , true )
MessagesStorage . getInstance ( ) . updateChatInfo ( var , true )	MessagesStorage . getInstance ( var ) . updateChatInfo ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var , var ) )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( null , var , true , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var , var ) )
if ( UserConfig . registeredForPush && UserConfig . pushString . length ( ) == 0 )	if ( UserConfig . getInstance ( var ) . registeredForPush && SharedConfig . pushString . length ( ) == 0 )
var . token = UserConfig . pushString	var . token = SharedConfig . pushString
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit	var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit	var . other_uids . add ( var . getClientUserId ( ) )
var . remove ( "" ) . commit	var . remove ( "" ) . remove ( "" ) . remove ( "" ) . commit
UserConfig . clearConfig ( )	UserConfig . getInstance ( var ) . clearConfig
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . appDidLogout )
ContactsController . getInstance ( ) . deleteAllAppAccounts	ContactsController . getInstance ( var ) . deleteUnknownAppAccounts
if ( BuildVars . DEBUG_VERSION || UserConfig . lastUpdateVersion == null || UserConfig . lastUpdateVersion . equals ( BuildVars . BUILD_VERSION_STRING ) )	if ( BuildVars . DEBUG_VERSION || SharedConfig . lastUpdateVersion == null || SharedConfig . lastUpdateVersion . equals ( BuildVars . BUILD_VERSION_STRING ) )
var . prev_app_version = UserConfig . lastUpdateVersion	var . prev_app_version = SharedConfig . lastUpdateVersion
UserConfig . lastUpdateVersion = BuildVars . BUILD_VERSION_STRING	SharedConfig . lastUpdateVersion = BuildVars . BUILD_VERSION_STRING
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
if ( var == null || var . length ( ) == 0 || var || UserConfig . getClientUserId ( ) == 0 )	if ( TextUtils . isEmpty ( var ) || var || UserConfig . getInstance ( var ) . getClientUserId == 0 )
if ( UserConfig . registeredForPush && var . equals ( UserConfig . pushString ) )	if ( UserConfig . getInstance ( var ) . registeredForPush && var . equals ( SharedConfig . pushString ) )
FileLog . e ( "" )	FileLog . d ( "" + var + "" )
UserConfig . registeredForPush = true	UserConfig . getInstance ( var ) . registeredForPush = true
UserConfig . pushString = var	SharedConfig . pushString = var
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessagesStorage . lastDateValue = var . date	MessagesStorage . getInstance ( var ) . setLastDateValue ( var . var )
MessagesStorage . lastPtsValue = var . pts	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var . pts )
MessagesStorage . lastSeqValue = var . seq	MessagesStorage . getInstance ( var ) . setLastSeqValue ( var . seq )
MessagesStorage . lastQtsValue = var . qts	MessagesStorage . getInstance ( var ) . setLastQtsValue ( var . qts )
if ( MessagesStorage . lastSeqValue + 1 == var || MessagesStorage . lastSeqValue == var . lastSeqValue < var )	if ( MessagesStorage . getInstance ( var ) . getLastSeqValue + 1 == var || MessagesStorage . getInstance ( var ) . getLastSeqValue == var . getInstance ( var ) . getLastSeqValue < var )
if ( MessagesStorage . lastSeqValue < var )	if ( MessagesStorage . getInstance ( var ) . getLastSeqValue < var )
if ( var . pts <= MessagesStorage . lastQtsValue . lastQtsValue + var . var . size ( ) == var . pts )	if ( var . pts <= MessagesStorage . getInstance ( var ) . getLastQtsValue . getInstance ( var ) . getLastQtsValue + var . var . size ( ) == var . pts )
if ( MessagesStorage . lastQtsValue + var . var . size ( ) == var . pts )	if ( MessagesStorage . getInstance ( var ) . getLastQtsValue + var . var . size ( ) == var . pts )
Integer var = var . get ( var )	int var = var . get ( var )
if ( var . isEmpty ( ) || var == null )	if ( var . isEmpty ( ) || var == 0 )
Long var = var . get ( var )	long var = var . get ( var )
if ( var != null && ( var || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 ) )	if ( var != 0 && ( var || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 ) )
FileLog . e ( "" + var + "" )	FileLog . d ( "" + var + "" )
FileLog . e ( "" + var + "" )	FileLog . d ( "" + var + "" )
var . remove ( var )	if ( var . indexOfKey ( var ) >= 0 )
var . remove ( var )	var . delete ( var )
FileLog . e ( "" + var + "" )	FileLog . d ( "" + var + "" )
MessagesStorage . lastSeqValue = getUpdateSeq ( var )	MessagesStorage . getInstance ( var ) . setLastSeqValue ( getUpdateSeq ( var ) )
MessagesStorage . lastPtsValue = var . pts	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var . pts )
MessagesStorage . lastQtsValue = var . pts	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var . pts )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
var . remove ( var . id )	if ( ! ( var instanceof TLRPC . TL_channel ) || var . indexOfKey ( var . id ) >= 0 )
Boolean var = var . get ( var )	boolean var = var . get ( var )
if ( var != null )	if ( var != 0 )
if ( var == null )	if ( var == 0 )
var = MessagesStorage . getInstance ( ) . getChatSync ( var )	var = MessagesStorage . getInstance ( var ) . getChatSync ( var )
var = MessagesStorage . getInstance ( ) . createPendingTask ( var )	var = MessagesStorage . getInstance ( var ) . createPendingTask ( var )
FileLog . var ( "" + var + "" + var )	FileLog . d ( "" + var + "" + var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , var . var , true , true )
final HashMap < Integer , long > var = new HashMap	final SparseArray < long > var = new SparseArray
long var = MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , null , var . id , 0 , false , var )	long var = MessagesStorage . getInstance ( var ) . updateMessageStateAndId ( var . random_id , null , var . id , 0 , false , var )
if ( ! var . isEmpty ( ) )	if ( var . size ( ) != 0 )
Integer var = var . getKey ( )	int var = var . keyAt ( var )
long var = var . getValue ( )	long var = var . valueAt ( var )
Integer var = ( int ) var [ 1 ]	int var = ( int ) var [ 1 ]
SendMessagesHelper . getInstance ( ) . processSentMessage ( var )	SendMessagesHelper . getInstance ( var ) . processSentMessage ( var )
final HashMap < Long , ArrayList < MessageObject > > var = new HashMap	final LongSparseArray < ArrayList < MessageObject > > var = new LongSparseArray
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( false , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( false , var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( true , var )
MessageObject var = new MessageObject ( var , var , var . contains ( var ) )	MessageObject var = new MessageObject ( var , var , var , var . contains ( var ) )
Long var = var . getKey ( )	long var = var . keyAt ( var )
ArrayList < MessageObject > var = var . getValue ( )	ArrayList < MessageObject > var = var . valueAt ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processNewMessages ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
MessagesStorage . getInstance ( ) . saveChannelPts ( var , var . pts )	MessagesStorage . getInstance ( var ) . saveChannelPts ( var , var . pts )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( false , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( false , var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( true , var )
MessagesStorage . getInstance ( ) . overwriteChannel ( var , ( TLRPC . TL_updates_channelDifferenceTooLong ) var , var )	MessagesStorage . getInstance ( var ) . overwriteChannel ( var , ( TLRPC . TL_updates_channelDifferenceTooLong ) var , var )
var . remove ( var )	var . delete ( var )
FileLog . var ( "" + var . pts + "" + var )	FileLog . d ( "" + var . pts + "" + var )
FileLog . var ( "" + var . new_messages . size ( ) + "" + var . messages . size ( ) + "" + var . var . size ( ) + "" + var . var . size ( ) + "" + var . other_updates . size ( ) )	FileLog . d ( "" + var . new_messages . size ( ) + "" + var . messages . size ( ) + "" + var . var . size ( ) + "" + var . var . size ( ) + "" + var . other_updates . size ( ) )
var . remove ( var )	var . delete ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 0 )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 1 )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 2 )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoCantLoad , var , 2 )
registerForPush ( UserConfig . pushString )	registerForPush ( SharedConfig . pushString )
if ( MessagesStorage . lastPtsValue == 0 )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue == 0 )
var . var = ConnectionsManager . getInstance ( ) . getCurrentTime	var . var = ConnectionsManager . getInstance ( var ) . getCurrentTime
FileLog . e ( "" + var + "" + var + "" + var )	FileLog . d ( "" + var + "" + var + "" + var )
resetDialogs ( true , MessagesStorage . lastSeqValue , var . var , var , var )	resetDialogs ( true , MessagesStorage . getInstance ( var ) . getLastSeqValue , var . var , var , var )
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
Integer var = var . get ( var )	int var = var . get ( var )
if ( var == null )	if ( var == 0 )
if ( var != 0 && var . var <= var )	if ( var != 0 && getUpdatePts ( var ) <= var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , false )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , var . var , true , false )
final HashMap < Integer , long > var = new HashMap	final SparseArray < long > var = new SparseArray
long var = MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , null , var . id , 0 , false , 0 )	long var = MessagesStorage . getInstance ( var ) . updateMessageStateAndId ( var . random_id , null , var . id , 0 , false , 0 )
if ( ! var . isEmpty ( ) )	if ( var . size ( ) != 0 )
Integer var = var . getKey ( )	int var = var . keyAt ( var )
long var = var . getValue ( )	long var = var . valueAt ( var )
Integer var = ( int ) var [ 1 ]	int var = ( int ) var [ 1 ]
SendMessagesHelper . getInstance ( ) . processSentMessage ( var )	SendMessagesHelper . getInstance ( var ) . processSentMessage ( var )
final HashMap < Long , ArrayList < MessageObject > > var = new HashMap	final LongSparseArray < ArrayList < MessageObject > > var = new LongSparseArray
ArrayList < TLRPC . Message > var = SecretChatHelper . getInstance ( ) . decryptMessage ( var )	ArrayList < TLRPC . Message > var = SecretChatHelper . getInstance ( var ) . decryptMessage ( var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
if ( var . to_id . user_id == UserConfig . getClientUserId ( ) )	if ( var . to_id . user_id == UserConfig . getInstance ( var ) . getClientUserId )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )	MessageObject var = new MessageObject ( var , var , var , var , var . contains ( var . dialog_id ) . dialog_id )
Long var = var . getKey ( )	long var = var . keyAt ( var )
ArrayList < MessageObject > var = var . getValue ( )	ArrayList < MessageObject > var = var . valueAt ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processNewMessages ( var , ! ( var instanceof TLRPC . TL_updates_differenceSlice ) )	NotificationsController . getInstance ( var ) . processNewMessages ( var , ! ( var instanceof TLRPC . TL_updates_differenceSlice ) , false )
MessagesStorage . lastSeqValue = var . state . seq	MessagesStorage . getInstance ( var ) . setLastSeqValue ( var . state . seq )
MessagesStorage . lastDateValue = var . state . var	MessagesStorage . getInstance ( var ) . setLastDateValue ( var . state . var )
MessagesStorage . lastPtsValue = var . state . var	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var . state . var )
MessagesStorage . lastQtsValue = var . state . var	MessagesStorage . getInstance ( var ) . setLastQtsValue ( var . state . var )
MessagesStorage . lastDateValue = var . intermediate_state . var	MessagesStorage . getInstance ( var ) . setLastDateValue ( var . intermediate_state . var )
MessagesStorage . lastPtsValue = var . intermediate_state . var	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var . intermediate_state . var )
MessagesStorage . lastQtsValue = var . intermediate_state . var	MessagesStorage . getInstance ( var ) . setLastQtsValue ( var . intermediate_state . var )
MessagesStorage . lastSeqValue = var . seq	MessagesStorage . getInstance ( var ) . setLastSeqValue ( var . seq )
MessagesStorage . lastDateValue = var . var	MessagesStorage . getInstance ( var ) . setLastDateValue ( var . date )
FileLog . e ( "" + MessagesStorage . lastDateValue + "" + MessagesStorage . lastPtsValue + "" + MessagesStorage . lastSeqValue + "" + var . new_messages . size ( ) + "" + var . var . size ( ) + "" + var . var . size ( ) + "" + var . other_updates . size ( ) )	FileLog . d ( "" + MessagesStorage . getInstance ( var ) . getLastDateValue + "" + MessagesStorage . getInstance ( var ) . getLastPtsValue + "" + MessagesStorage . getInstance ( var ) . getLastSeqValue + "" + var . new_messages . size ( ) + "" + var . var . size ( ) + "" + var . var . size ( ) + "" + var . other_updates . size ( ) )
if ( ! var && var . get ( var . size ( ) - 1 ) == var )	if ( ! var && var . get ( var . size ( ) - 1 ) == var && ! var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . setDialogPinned ( var , var . pinnedNum )	MessagesStorage . getInstance ( var ) . setDialogPinned ( var , var . pinnedNum )
final HashMap < Long , MessageObject > var = new HashMap	final LongSparseArray < MessageObject > var = new LongSparseArray
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
final HashMap < Integer , TLRPC . Chat > var = new HashMap	final SparseArray < TLRPC . Chat > var = new SparseArray
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray
MessagesStorage . getInstance ( ) . setDialogPinned ( var . id , var . pinnedNum )	MessagesStorage . getInstance ( var ) . setDialogPinned ( var . id , var . pinnedNum )
var . addAll ( var . values ( ) )	var . add ( var . valueAt ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
UserConfig . pinnedDialogsLoaded = true	UserConfig . getInstance ( var ) . pinnedDialogsLoaded = true
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
if ( var == null || ! ChatObject . isChannel ( var ) || ( var . left || var . kicked ) && ! var )	if ( var == null || ! ChatObject . isChannel ( var , var ) || ( var . left || var . kicked ) && ! var )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( var ) . getClientUserId
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessagesStorage . getInstance ( ) . putMessages ( var , true , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , true , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
if ( var != null && var . participant instanceof TLRPC . TL_channelParticipantSelf && var . participant . inviter_id != UserConfig . getClientUserId ( ) )	if ( var != null && var . participant instanceof TLRPC . TL_channelParticipantSelf && var . participant . inviter_id != UserConfig . getInstance ( var ) . getClientUserId )
if ( var . megagroup && MessagesStorage . getInstance ( ) . isMigratedChat ( var . id ) )	if ( var . megagroup && MessagesStorage . getInstance ( var ) . isMigratedChat ( var . id ) )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , null , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , null , true , true )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessagesStorage . getInstance ( ) . putMessages ( var , true , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , true , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
return var . channel_id	return ( ( TLRPC . TL_updateChannelWebPage ) var ) . pts
var = MessagesStorage . getInstance ( ) . getUserSync ( var )	var = MessagesStorage . getInstance ( var ) . getUserSync ( var )
var = MessagesStorage . getInstance ( ) . getUserSync ( var . fwd_from . from_id )	var = MessagesStorage . getInstance ( var ) . getUserSync ( var . fwd_from . from_id )
var = MessagesStorage . getInstance ( ) . getChatSync ( var . fwd_from . channel_id )	var = MessagesStorage . getInstance ( var ) . getChatSync ( var . fwd_from . channel_id )
var = MessagesStorage . getInstance ( ) . getUserSync ( var . via_bot_id )	var = MessagesStorage . getInstance ( var ) . getUserSync ( var . via_bot_id )
var = MessagesStorage . getInstance ( ) . getChatSync ( var . chat_id )	var = MessagesStorage . getInstance ( var ) . getChatSync ( var . chat_id )
var = MessagesStorage . getInstance ( ) . getUserSync ( var )	var = MessagesStorage . getInstance ( var ) . getUserSync ( var )
if ( MessagesStorage . lastPtsValue + var . pts_count == var . pts . lastPtsValue != var . pts )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue + var . pts_count == var . pts . getInstance ( var ) . getLastPtsValue != var . pts )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesStorage . lastPtsValue = var . pts	MessagesStorage . getInstance ( var ) . setLastQtsValue ( var . pts )
final MessageObject var = new MessageObject ( var , null , var . contains ( var . dialog_id ) . dialog_id )	final MessageObject var = new MessageObject ( var , var , var . contains ( var . dialog_id ) . dialog_id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationsController . getInstance ( ) . processNewMessages ( var , true )	NotificationsController . getInstance ( var ) . processNewMessages ( var , true , false )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
if ( MessagesStorage . lastPtsValue != var . pts )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue != var . pts )
FileLog . e ( "" + MessagesStorage . lastPtsValue + "" + var . pts + "" + var . pts_count )	FileLog . d ( "" + MessagesStorage . getInstance ( var ) . getLastPtsValue + "" + var . pts + "" + var . pts_count )
FileLog . e ( "" )	FileLog . d ( "" )
HashMap < Integer , TLRPC . Chat > var = null	final SparseArray < TLRPC . Chat > var = new SparseArray
TLRPC . Chat var = MessagesStorage . getInstance ( ) . getChatSync ( var . chat_id )	TLRPC . Chat var = MessagesStorage . getInstance ( var ) . getChatSync ( var . chat_id )
var = new HashMap	var = new SparseArray
if ( var . containsKey ( var ) )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , var . var , true , true )
var . pts = var . pts	MessagesStorage . getInstance ( var ) . setLastQtsValue ( var . pts )
var . pts_count = var . pts_count	var . pts_count += var
var . pts = var . pts	var . pts = var
var . pts_count += var . pts_count	var . pts = var
if ( MessagesStorage . lastPtsValue + var . pts_count == var . pts . lastPtsValue != var . pts )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue + var . pts_count == var . pts . getInstance ( var ) . getLastPtsValue != var . pts )
FileLog . e ( "" + MessagesStorage . lastSeqValue + "" + var . seq )	FileLog . d ( "" + MessagesStorage . getInstance ( var ) . getLastPtsValue + "" + var . seq )
if ( MessagesStorage . lastPtsValue != var . pts )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue != var . pts )
FileLog . e ( var + "" + MessagesStorage . lastPtsValue + "" + var . pts + "" + var . pts_count )	FileLog . d ( var + "" + MessagesStorage . getInstance ( var ) . getLastPtsValue + "" + var . pts + "" + var . pts_count )
FileLog . e ( "" )	FileLog . d ( "" )
var . pts = var . qts	var . pts = getUpdateQts ( var )
var . pts = var . qts	MessagesStorage . getInstance ( var ) . setLastPtsValue ( var . pts )
if ( MessagesStorage . lastQtsValue == 0 || MessagesStorage . lastQtsValue + var . var . size ( ) == var . pts . lastPtsValue != var . pts )	if ( MessagesStorage . getInstance ( var ) . getLastQtsValue == 0 || MessagesStorage . getInstance ( var ) . getLastQtsValue + var . var . size ( ) == var . pts . getInstance ( var ) . getLastPtsValue != var . pts )
if ( MessagesStorage . lastPtsValue != var . pts )	if ( MessagesStorage . getInstance ( var ) . getLastPtsValue != var . pts )
FileLog . e ( var + "" + MessagesStorage . lastQtsValue + "" + var . pts )	FileLog . d ( var + "" + MessagesStorage . getInstance ( var ) . getLastQtsValue + "" + var . pts )
FileLog . e ( "" )	FileLog . d ( "" )
Integer var = var . get ( var )	int var = var . get ( var )
if ( var == null )	if ( var == 0 )
var . pts = var . pts	var . pts = var
var . pts_count = var . pts_count	var . pts_count += var
var . pts = var . pts	var . pts = getUpdatePts ( var )
var . pts_count += var . pts_count	var . pts_count = getUpdatePtsCount ( var )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
MessagesStorage . getInstance ( ) . saveChannelPts ( var , var . pts )	MessagesStorage . getInstance ( var ) . saveChannelPts ( var , var . pts )
FileLog . e ( var + "" + var + "" + var . pts + "" + var . pts_count + "" + var )	FileLog . d ( var + "" + var + "" + var . pts + "" + var . pts_count + "" + var )
Long var = var . get ( var )	long var = var . get ( var )
Boolean var = var . get ( var )	boolean var = var . get ( var )
if ( var || var == null || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )	if ( var || var == 0 || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )
if ( var == null )	if ( var == 0 )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
var = MessagesStorage . lastSeqValue + 1 == var . seq_start || MessagesStorage . lastSeqValue == var . seq_start	var = MessagesStorage . getInstance ( var ) . getLastSeqValue + 1 == var . seq_start || MessagesStorage . getInstance ( var ) . getLastSeqValue == var . seq_start
var = MessagesStorage . lastSeqValue + 1 == var . seq || var . seq == 0 || var . seq == MessagesStorage . lastSeqValue	var = MessagesStorage . getInstance ( var ) . getLastSeqValue + 1 == var . seq || var . seq == 0 || var . seq == MessagesStorage . getInstance ( var ) . getLastSeqValue
MessagesStorage . lastDateValue = var . date	MessagesStorage . getInstance ( var ) . setLastDateValue ( var . date )
MessagesStorage . lastSeqValue = var . seq	MessagesStorage . getInstance ( var ) . setLastSeqValue ( var . seq )
FileLog . e ( "" + MessagesStorage . lastSeqValue + "" + var . seq_start )	FileLog . d ( "" + MessagesStorage . getInstance ( var ) . getLastSeqValue + "" + var . seq_start )
FileLog . e ( "" + MessagesStorage . lastSeqValue + "" + var . seq )	FileLog . d ( "" + MessagesStorage . getInstance ( var ) . getLastSeqValue + "" + var . seq )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
MessagesStorage . lastSeqValue = var . seq	MessagesStorage . getInstance ( var ) . setLastSeqValue ( var . seq )
MessagesStorage . getInstance ( ) . saveChannelPts ( var . chat_id , var . pts )	MessagesStorage . getInstance ( var ) . saveChannelPts ( var . chat_id , var . pts )
SecretChatHelper . getInstance ( ) . processPendingEncMessages	SecretChatHelper . getInstance ( var ) . processPendingEncMessages
Integer var = var . get ( var )	int var = var . keyAt ( var )
var . max_qts = MessagesStorage . lastQtsValue	var . max_qts = MessagesStorage . getInstance ( var ) . getLastQtsValue
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
final HashMap < Long , TLRPC . WebPage > var = new HashMap	final LongSparseArray < TLRPC . WebPage > var = var
final SparseArray < SparseIntArray > var = new SparseArray	SparseIntArray var = null
final ArrayList < Long > var = new ArrayList	final ArrayList < Long > var = var
final SparseArray < ArrayList < Integer > > var = new SparseArray	final SparseArray < ArrayList < Integer > > var = var
final ArrayList < TLRPC . ChatParticipants > var = new ArrayList	final ArrayList < TLRPC . ChatParticipants > var = var
final ArrayList < TLRPC . Update > var = new ArrayList	final ArrayList < TLRPC . Update > var = var
final ArrayList < TLRPC . TL_updateEncryptedMessagesRead > var = new ArrayList	ArrayList < TLRPC . TL_updateEncryptedMessagesRead > var = null
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . size ( ) ; var < var ; var ++ )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( ! var . out && var . from_id == UserConfig . getClientUserId ( ) )	if ( ! var . out && var . from_id == UserConfig . getInstance ( var ) . getClientUserId )
var = MessagesStorage . getInstance ( ) . getChatSync ( var )	var = MessagesStorage . getInstance ( var ) . getChatSync ( var )
var = MessagesStorage . getInstance ( ) . getUserSync ( var )	var = MessagesStorage . getInstance ( var ) . getUserSync ( var )
if ( var != null && var . bot . from_id == UserConfig . getClientUserId ( ) && var . action . var == UserConfig . getClientUserId ( ) )	if ( var != null && var . bot . from_id == UserConfig . getInstance ( var ) . getClientUserId && var . action . var == UserConfig . getInstance ( var ) . getClientUserId )
if ( var . from_id == UserConfig . getClientUserId ( ) && var . action . var == UserConfig . getClientUserId ( ) )	if ( var . from_id == UserConfig . getInstance ( var ) . getClientUserId && var . action . var == UserConfig . getInstance ( var ) . getClientUserId )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )	MessageObject var = new MessageObject ( var , var , var , var , var . contains ( var . dialog_id ) . dialog_id )
for ( int var = 0 ; var < var . var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var . var ( ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var . var ( ) ; var < var ; var ++ )
TLRPC . Peer var = ( ( TLRPC . TL_updateReadHistoryInbox ) var ) . var	TLRPC . TL_updateReadMessagesContents var = ( TLRPC . TL_updateReadMessagesContents ) var
if ( var . chat_id != 0 )	if ( var . peer . chat_id != 0 )
var . put ( - var . chat_id , ( long ) var . max_id )	var . put ( var . peer . user_id , ( long ) var . max_id )
var = - var . chat_id	var = var . peer . user_id
var . put ( var . user_id , ( long ) var . max_id )	var . put ( - var . peer . chat_id , ( long ) var . max_id )
var = var . user_id	var = - var . peer . chat_id
var = var	var = new ArrayList
if ( var . chat_id != 0 )	if ( var . peer . chat_id != 0 )
var . put ( - var . chat_id , ( long ) var . max_id )	var . put ( var . peer . user_id , ( long ) var . max_id )
var . put ( var . user_id , ( long ) var . max_id )	var . put ( - var . peer . chat_id , ( long ) var . max_id )
if ( var . user_id != UserConfig . getClientUserId ( ) )	if ( var != UserConfig . getInstance ( var ) . getClientUserId )
var = var . user_id	var = var
if ( var . action instanceof TLRPC . TL_sendMessageCancelAction )	if ( var instanceof TLRPC . TL_sendMessageCancelAction )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
if ( var . userId == var . user_id )	if ( var . userId == var )
if ( var . userId == var . user_id )	if ( var . userId == var )
if ( var . action . getClass ( ) != var . action . getClass ( ) = true )	if ( var . var . getClass ( ) != var . getClass ( ) = true )
var . action = var . action	var . var = var
var . userId = var . user_id	var . userId = var
var . action = var . action	var . var = var
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . user_id )	MessagesStorage . getInstance ( var ) . clearUserPhotos ( var . user_id )
if ( var && var . containsKey ( var . user_id ) && ! MessagesStorage . getInstance ( ) . isDialogHasMessages ( var . user_id ) )	if ( var && var . containsKey ( var . user_id ) && ! MessagesStorage . getInstance ( var ) . isDialogHasMessages ( var . user_id ) )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )	MessageObject var = new MessageObject ( var , var , var , var , var . contains ( var . dialog_id ) . dialog_id )
ArrayList < TLRPC . Message > var = SecretChatHelper . getInstance ( ) . decryptMessage ( ( ( TLRPC . TL_updateNewEncryptedMessage ) var ) . message )	ArrayList < TLRPC . Message > var = SecretChatHelper . getInstance ( var ) . decryptMessage ( ( ( TLRPC . TL_updateNewEncryptedMessage ) var ) . message )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var ) )	MessageObject var = new MessageObject ( var , var , var , var , var . contains ( var ) )
var . userId = var . user_id	var = var . var
MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , 0 , var . inviter_id , var . version )	MessagesStorage . getInstance ( var ) . updateChatInfo ( var . chat_id , var . user_id , 0 , var . inviter_id , var . version )
MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , 1 , 0 , var . version )	MessagesStorage . getInstance ( var ) . updateChatInfo ( var . chat_id , var . user_id , 1 , 0 , var . version )
SecretChatHelper . getInstance ( ) . processUpdateEncryption ( ( TLRPC . TL_updateEncryption ) var , var )	SecretChatHelper . getInstance ( var ) . processUpdateEncryption ( ( TLRPC . TL_updateEncryption ) var , var )
MessagesStorage . getInstance ( ) . putBlockedUsers ( var , false )	MessagesStorage . getInstance ( var ) . putBlockedUsers ( var , false )
MessagesStorage . getInstance ( ) . deleteBlockedUser ( var . user_id )	MessagesStorage . getInstance ( var ) . deleteBlockedUser ( var . user_id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needShowAlert , 2 , var . message )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needShowAlert , 2 , var . message , var . type )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )	MessageObject var = new MessageObject ( var , var , var , var , var . contains ( var . dialog_id ) . dialog_id )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
Integer var = var . get ( var . channel_id )	int var = var . get ( var . channel_id )
if ( var == null )	if ( var == 0 )
var = MessagesStorage . getInstance ( ) . getChannelPtsSync ( var . channel_id )	var = MessagesStorage . getInstance ( var ) . getChannelPtsSync ( var . channel_id )
var = MessagesStorage . getInstance ( ) . getChatSync ( var . channel_id )	var = MessagesStorage . getInstance ( var ) . getChatSync ( var . channel_id )
var = var	var = new SparseLongArray
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
var . add ( var )	var . pts_count = getUpdatePtsCount ( var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
var = MessagesStorage . getInstance ( ) . getChatSync ( var . to_id . channel_id )	var = MessagesStorage . getInstance ( var ) . getChatSync ( var . to_id . channel_id )
if ( ! var . out && var . from_id == UserConfig . getClientUserId ( ) )	if ( ! var . out && var . from_id == UserConfig . getInstance ( var ) . getClientUserId )
var = MessagesStorage . getInstance ( ) . getUserSync ( var )	var = MessagesStorage . getInstance ( var ) . getUserSync ( var )
if ( var . to_id . user_id == UserConfig . getClientUserId ( ) )	if ( var . to_id . user_id == UserConfig . getInstance ( var ) . getClientUserId )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
if ( var . out && ( var . var == null || var . var . length ( ) == 0 ) )	if ( var . out && var . var == null )
MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )	MessageObject var = new MessageObject ( var , var , var , var , var . contains ( var . dialog_id ) . dialog_id )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
MessagesStorage . getInstance ( ) . var ( var . channel_id , var . id )	MessagesStorage . getInstance ( var ) . updateChannelPinnedMessage ( var . channel_id , var . id )
var . add ( var )	var . pts = getUpdatePts ( var )
LocaleController . getInstance ( ) . saveRemoteLocaleStrings ( var . difference )	LocaleController . getInstance ( ) . saveRemoteLocaleStrings ( var . difference , var )
LocaleController . getInstance ( ) . reloadCurrentRemoteLocale	LocaleController . getInstance ( ) . reloadCurrentRemoteLocale ( var )
var . add ( var )	var . pts_count = getUpdatePtsCount ( var )
var . add ( var )	var . pts = getUpdatePts ( var )
Integer var = var . get ( var . channel_id )	int var = var . get ( var . channel_id )
if ( var == null || var < var . available_min_id )	if ( var == 0 || var < var . available_min_id )
Long var = var . getKey ( )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
ArrayList < MessageObject > var = var . getValue ( )	ArrayList < MessageObject > var = var . valueAt ( var )
if ( ! var . isEmpty ( ) )	if ( var != null )
ContactsController . getInstance ( ) . processContactsUpdates ( var , var )	ContactsController . getInstance ( var ) . processContactsUpdates ( var , var )
NotificationsController . getInstance ( ) . processNewMessages ( var , true )	NotificationsController . getInstance ( var ) . processNewMessages ( var , true , false )
if ( ! var . isEmpty ( ) )	if ( var != null )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var . size ( ) )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var . size ( ) )
if ( ! var . isEmpty ( ) )	if ( var != null )
ArrayList < MessageObject > var = var . getValue ( )	ArrayList < MessageObject > var = var . valueAt ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
MessagesStorage . getInstance ( ) . putMessages ( var , var . getKey ( ) , - 2 , 0 , false )	MessagesStorage . getInstance ( var ) . putMessages ( var , var . keyAt ( var ) , - 2 , 0 , false )
if ( var . size ( ) != 0 )	if ( var != null )
MessagesStorage . getInstance ( ) . putChannelViews ( var , true )	MessagesStorage . getInstance ( var ) . putChannelViews ( var , true )
if ( ! var . isEmpty ( ) )	if ( var != null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
ContactsController . getInstance ( ) . setPrivacyRules ( var . rules , 0 )	ContactsController . getInstance ( var ) . setPrivacyRules ( var . rules , 0 )
ContactsController . getInstance ( ) . setPrivacyRules ( var . rules , 1 )	ContactsController . getInstance ( var ) . setPrivacyRules ( var . rules , 1 )
ContactsController . getInstance ( ) . setPrivacyRules ( var . rules , 2 )	ContactsController . getInstance ( var ) . setPrivacyRules ( var . rules , 2 )
if ( var . user_id == UserConfig . getClientUserId ( ) )	if ( var . user_id == UserConfig . getInstance ( var ) . getClientUserId )
NotificationsController . getInstance ( ) . setLastOnlineFromOtherDevice ( var . status . expires )	NotificationsController . getInstance ( var ) . setLastOnlineFromOtherDevice ( var . status . expires )
if ( var . username != null && var . username . length ( ) > 0 )	if ( ! TextUtils . isEmpty ( var . username ) )
if ( var . username != null && var . username . length ( ) > 0 )	if ( TextUtils . isEmpty ( var . username ) )
var = - var . peer . chat_id	TLRPC . Peer var = ( ( TLRPC . TL_dialogPeer ) var . var ) . var
var = - var . peer . channel_id	var = - var . channel_id
UserConfig . pinnedDialogsLoaded = false	UserConfig . getInstance ( var ) . pinnedDialogsLoaded = false
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
UserConfig . pinnedDialogsLoaded = false	UserConfig . getInstance ( var ) . pinnedDialogsLoaded = false
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
ArrayList < TLRPC . Peer > var = ( ( TLRPC . TL_updatePinnedDialogs ) var ) . var	ArrayList < TLRPC . DialogPeer > var = ( ( TLRPC . TL_updatePinnedDialogs ) var ) . var
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
TLRPC . Peer var = var . get ( var )	TLRPC . DialogPeer var = var . get ( var )
ContactsController . getInstance ( ) . addContactToPhoneBook ( var , true )	ContactsController . getInstance ( var ) . addContactToPhoneBook ( var , true )
if ( var . notify_settings instanceof TLRPC . TL_peerNotifySettings && var . peer instanceof TLRPC . TL_notifyPeer )	if ( var . notify_settings instanceof TLRPC . TL_peerNotifySettings )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , ( ( long ) var << 32 ) | 1 )	MessagesStorage . getInstance ( var ) . setDialogFlags ( var , ( ( long ) var << 32 ) | 1 )
var . notify_settings . mute_until = 0	var . var . mute_until = 0
MessagesStorage . getInstance ( ) . setDialogFlags ( var , 0 )	MessagesStorage . getInstance ( var ) . setDialogFlags ( var , 0 )
if ( var == null && var instanceof TLRPC . TL_channel && ! var . left . left && var != null )	if ( var == null && var instanceof TLRPC . TL_channel && ! var . left . left && var != null && ( var == null || var . id != var . id ) )
if ( var . left && var != null )	if ( var . left && var != null && ( var == null || var . id != var . id ) )
StickersQuery . addNewStickerSet ( var . stickerset )	DataQuery . getInstance ( var ) . addNewStickerSet ( var . stickerset )
DraftQuery . saveDraft ( var , var . draft , null , true )	DataQuery . getInstance ( var ) . saveDraft ( var , var . draft , null , true )
StickersQuery . markFaturedStickersAsRead ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( var . date + var / 1000 < ConnectionsManager . getInstance ( ) . getCurrentTime )	if ( var . date + var / 1000 < ConnectionsManager . getInstance ( var ) . getCurrentTime )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
MessagesStorage . getInstance ( ) . updateUsers ( var , true , true , true )	MessagesStorage . getInstance ( var ) . updateUsers ( var , true , true , true )
MessagesStorage . getInstance ( ) . updateUsers ( var , false , true , true )	MessagesStorage . getInstance ( var ) . updateUsers ( var , false , true , true )
if ( ! var . isEmpty ( ) )	if ( var != null )
TLRPC . WebPage var = var . getValue ( )	TLRPC . WebPage var = var . valueAt ( var )
ArrayList < TLRPC . Message > var = new ArrayList	ArrayList < TLRPC . Message > var = null
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
if ( ! var . isEmpty ( ) )	ArrayList < TLRPC . Message > var = new ArrayList
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
Long var = var . getKey ( )	long var = var . keyAt ( var )
ArrayList < MessageObject > var = var . getValue ( )	ArrayList < MessageObject > var = var . valueAt ( var )
if ( ! var . isEmpty ( ) )	if ( var != null )
Long var = var . getKey ( )	long var = var . keyAt ( var )
ArrayList < MessageObject > var = var . getValue ( )	ArrayList < MessageObject > var = var . valueAt ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
MessagesQuery . loadReplyMessagesForMessages ( var , var )	DataQuery . getInstance ( var ) . loadReplyMessagesForMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . replaceMessagesObjects , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
if ( ! var . isEmpty ( ) )	if ( var != null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedMessagesViews , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateInterfaces , var )
if ( var . size ( ) != 0 || var . size ( ) != 0 )	if ( var != null || var != null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesRead , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesRead , var , var )
NotificationsController . getInstance ( ) . processReadMessages ( var , 0 , 0 , 0 , false )	NotificationsController . getInstance ( var ) . processReadMessages ( var , 0 , 0 , 0 , false )
if ( var . size ( ) != 0 )	if ( var != null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
int var = int ( ( long ) var . get ( var ) )	int var = ( int ) var . valueAt ( var )
if ( var != UserConfig . getClientUserId ( ) )	if ( var != UserConfig . getInstance ( var ) . getClientUserId )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
int var = int ( ( long ) var . get ( var ) )	int var = ( int ) var . valueAt ( var )
if ( ! var . isEmpty ( ) )	if ( var != null )
long var = long ( var . getKey ( ) ) << 32	long var = long ( var ) << 32
if ( var != null && var . messageOwner . date <= var . getValue ( ) )	if ( var != null && var . messageOwner . date <= var )
if ( ! var . isEmpty ( ) )	if ( var != null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
if ( var . size ( ) != 0 )	if ( var != null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
int var = var . keyAt ( var )	long var = var . keyAt ( var )
ArrayList < Integer > var = var . get ( var )	ArrayList < Integer > var = var . valueAt ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
if ( var . size ( ) != 0 )	if ( var != null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
int var = var . keyAt ( var )	PrintingUser var = var . get ( var )
Integer var = var . get ( var )	long var = long ( var ) << 32
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . historyCleared , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . historyCleared , var , var )
if ( var . size ( ) != 0 || var . size ( ) != 0 || ! var . isEmpty ( ) || ! var . isEmpty ( ) )	if ( var != null || var != null || var != null || var != null )
if ( var . size ( ) != 0 || ! var . isEmpty ( ) )	if ( var != null || var != null )
MessagesStorage . getInstance ( ) . updateDialogsWithReadMessages ( var , var , var , true )	MessagesStorage . getInstance ( var ) . updateDialogsWithReadMessages ( var , var , var , true )
MessagesStorage . getInstance ( ) . markMessagesAsRead ( var , var , var , true )	MessagesStorage . getInstance ( var ) . markMessagesAsRead ( var , var , var , true )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , ConnectionsManager . getInstance ( ) . getCurrentTime )	var . put ( var , ConnectionsManager . getInstance ( var ) . getCurrentTime )
if ( var . size ( ) != 0 )	if ( var != null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
ArrayList < Long > var = MessagesStorage . getInstance ( ) . markMessagesAsDeleted ( var , false , var )	ArrayList < Long > var = MessagesStorage . getInstance ( var ) . markMessagesAsDeleted ( var , false , var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( var , var , false , var )	MessagesStorage . getInstance ( var ) . updateDialogsWithDeletedMessages ( var , var , false , var )
if ( var . size ( ) != 0 )	if ( var != null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
final Integer var = var . get ( var )	final int var = var . valueAt ( var )
ArrayList < Long > var = MessagesStorage . getInstance ( ) . markMessagesAsDeleted ( var , var , false )	ArrayList < Long > var = MessagesStorage . getInstance ( var ) . markMessagesAsDeleted ( var , var , false )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , var , false , var )	MessagesStorage . getInstance ( var ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , var , false , var )
if ( ! var . isEmpty ( ) )	if ( var != null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . chat_id , var . max_date , var . date , 1 , null )	MessagesStorage . getInstance ( var ) . createTaskForSecretChat ( var . chat_id , var . max_date , var . date , 1 , null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	int var = var . getInt ( "" + var , - 1 )
StickersQuery . addRecentGif ( var . messageOwner . media . document , var . messageOwner . date )	DataQuery . getInstance ( var ) . addRecentGif ( var . messageOwner . media . document , var . messageOwner . date )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var . messageOwner . media . document , var . messageOwner . date , false )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var . messageOwner . media . document , var . messageOwner . date , false )
MessagesQuery . loadReplyMessagesForMessages ( var , var )	DataQuery . getInstance ( var ) . loadReplyMessagesForMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceivedNewMessages , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didReceivedNewMessages , var , var )
NotificationsController . getInstance ( ) . removeNotificationsForDialog ( var . id )	NotificationsController . getInstance ( var ) . removeNotificationsForDialog ( var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )
if ( ( var . top_message > 0 && var . getId ( ) > 0 && var . getId ( ) > var . top_message ) || ( var . top_message < 0 && var . getId ( ) < 0 && var . getId ( ) < var . top_message ) || ! var . containsKey ( var ) || var . top_message < 0 || var . last_message_date <= var . messageOwner . date )	if ( ( var . top_message > 0 && var . getId ( ) > 0 && var . getId ( ) > var . top_message ) || ( var . top_message < 0 && var . getId ( ) < 0 && var . getId ( ) < var . top_message ) || var . indexOfKey ( var ) < 0 || var . top_message < 0 || var . last_message_date <= var . messageOwner . date )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
if ( var != null && ( var . megagroup && ( var . admin_rights != null && var . admin_rights . post_messages ) || var . creator ) )	if ( var != null && ( var . megagroup && ( var . admin_rights != null && ( var . admin_rights . post_messages || var . admin_rights . add_admins ) ) || var . creator ) )
TLRPC . User var = UserConfig . getCurrentUser ( )	TLRPC . User var = UserConfig . getInstance ( var ) . getCurrentUser
var = MessagesController . getInstance ( ) . getUser ( var )	var = getUser ( var )
var = MessagesController . getInstance ( ) . getChat ( var )	var = getChat ( var )
var = getInstance . getChat ( - var )	var = getChat ( - var )
var = getInstance . getChat ( - var )	var = getChat ( - var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . var , var . var , true , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
TLObject var = getInstance . getUserOrChat ( var )	TLObject var = getUserOrChat ( var )
getInstance var . putUsers ( var . var , false )	putUsers ( var . var , false )
getInstance var . putChats ( var . var , false )	putChats ( var . var , false )
MessagesStorage var = var	MessagesStorage var = Instance [ var ]
var = var	var = Instance [ var ]
var = var = new MessagesStorage	Instance [ var ] = var = new MessagesStorage ( var )
public MessagesStorage	public MessagesStorage ( int var )
FileLog . e ( "" )	FileLog . d ( "" )
var . executeFast ( "" ) . stepThis . dispose	var . executeFast ( "" ) . stepThis var . dispose var
var . executeFast ( "" ) . stepThis . dispose	var . executeFast ( "" ) . stepThis var . dispose var
FileLog . e ( "" + var )	FileLog . d ( "" + var )
if ( var < 46 )	if ( var < 48 )
if ( var && var . getMessage ( ) . contains ( "" ) )	if ( var && var . getMessage ( var ) . contains ( "" ) )
UserConfig . dialogsLoadOffsetId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetId = 0
UserConfig . totalDialogsLoadCount = 0	UserConfig . getInstance ( var ) . totalDialogsLoadCount = 0
UserConfig . dialogsLoadOffsetDate = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetDate = 0
UserConfig . dialogsLoadOffsetUserId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = 0
UserConfig . dialogsLoadOffsetChatId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetChannelId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = 0
UserConfig . dialogsLoadOffsetAccess = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess = 0
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
var . executeFast ( "" ) . stepThis . dispose	var . executeFast ( "" ) . stepThis var . dispose var
var . executeFast ( "" ) . stepThis . dispose	var . executeFast ( "" ) . stepThis var . dispose var
var . beginTransaction ( )	var . beginTransaction ( var )
if ( var . next ( ) )	if ( var . next ( var ) )
var . notify_settings = new TLRPC . TL_peerNotifySettingsEmpty ( )	var . notify_settings = new TLRPC . TL_peerNotifySettingsEmpty_layer77 ( var )
HashMap < Long , Long > var = new HashMap	LongSparseArray < Long > var = new LongSparseArray var ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( var )
var . bindLong ( 1 , var . getKey ( ) )	var . bindLong ( 1 , var . keyAt ( var ) )
var . bindLong ( 2 , var . getValue ( ) )	var . bindLong ( 2 , var . valueAt ( var ) )
MessagesController . getInstance ( ) . loadUnknownChannel ( var , var )	MessagesController . getInstance ( var ) . loadUnknownChannel ( var , var )
MessagesController . getInstance ( ) . getChannelDifference ( var , var , var , null )	MessagesController . getInstance ( var ) . getChannelDifference ( var , var , var , null )
MessagesController . getInstance ( ) . checkLastDialogMessage ( var , var , var )	MessagesController . getInstance ( var ) . checkLastDialogMessage ( var , var , var )
SendMessagesHelper . getInstance ( ) . sendGame ( var , var , var , var )	SendMessagesHelper . getInstance ( var ) . sendGame ( var , var , var , var )
MessagesController . getInstance ( ) . pinDialog ( var , var , var , var )	MessagesController . getInstance ( var ) . pinDialog ( var , var , var , var )
MessagesController . getInstance ( ) . getChannelDifference ( var , var , var , var )	MessagesController . getInstance ( var ) . getChannelDifference ( var , var , var , var )
MessagesController . getInstance ( ) . deleteMessages ( null , null , null , var , true , var , var )	MessagesController . getInstance ( var ) . deleteMessages ( null , null , null , var , true , var , var )
ArrayList < Integer > var = new ArrayList	ArrayList < Integer > var = new ArrayList var ( var )
final HashMap < Long , Integer > var = new HashMap	final LongSparseArray < Integer > var = new LongSparseArray var ( var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var
HashMap < Integer , ArrayList < TLRPC . Message > . Message > var = new HashMap	SparseArray < ArrayList < TLRPC . Message > . Message > var = new SparseArray var ( var )
NotificationsController . getInstance ( ) . processLoadedUnreadMessages ( var , var , var , var , var )	NotificationsController . getInstance ( var ) . processLoadedUnreadMessages ( var , var , var , var , var )
while ( var . next ( ) )	while ( var . next ( var ) )
var . document = TLRPC . Document . TLdeserialize ( var , var . readInt32 ( false ) , false )	var . document = TLRPC . Document . TLdeserialize ( var , var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . recentImagesDidLoaded , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . recentImagesDidLoaded , var , var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . wallpapersDidLoaded , var )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . wallpapersDidLoaded , var )
MessagesController . getInstance ( ) . processLoadedBlockedUsers ( var , var , true )	MessagesController . getInstance ( var ) . processLoadedBlockedUsers ( var , var , true )
MessagesController . getInstance ( ) . markChannelDialogMessageAsDeleted ( var , var )	MessagesController . getInstance ( var ) . markChannelDialogMessageAsDeleted ( var , var )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )	FileLoader . getInstance ( var ) . deleteFiles ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesDeleted , var , var )
FileLoader . getInstance ( ) . deleteFiles ( var , var )	FileLoader . getInstance ( var ) . deleteFiles ( var , var )
var . executeFast ( "" + var ) . stepThis . dispose	var . executeFast ( "" + var ) . stepThis var . dispose var
var . executeFast ( "" + var ) . stepThis . dispose	var . executeFast ( "" + var ) . stepThis var . dispose var
BotQuery . clearBotKeyboard ( var , null )	DataQuery . getInstance ( var ) . clearBotKeyboard ( var , null )
var . dispose ( )	var . dispose ( var )
BotQuery . clearBotKeyboard ( var , null )	DataQuery . getInstance ( var ) . clearBotKeyboard ( var , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needReloadRecentDialogsSearch )
MessagesController . getInstance ( ) . processLoadedUserPhotos ( var , var , var , var , true , var )	MessagesController . getInstance ( var ) . processLoadedUserPhotos ( var , var , var , var , true , var )
final HashMap < Long , Integer > var = new HashMap	final LongSparseArray < Integer > var = new LongSparseArray var ( var )
var . executeFast ( "" + var ) . stepThis . dispose	var . executeFast ( "" + var ) . stepThis var . dispose var
var . executeFast ( "" + var ) . stepThis . dispose	var . executeFast ( "" + var ) . stepThis var . dispose var
var . commitTransaction ( )	var . commitTransaction ( var )
putDialogsInternal ( var , false )	putDialogsInternal ( var , 0 )
if ( var != null && var . id != UserConfig . dialogsLoadOffsetId )	if ( var != null && var . id != UserConfig . getInstance ( var ) . dialogsLoadOffsetId var )
UserConfig . totalDialogsLoadCount = var . dialogs . size ( )	UserConfig . getInstance ( var ) . totalDialogsLoadCount = var . dialogs . size ( var )
UserConfig . dialogsLoadOffsetId = var . id	UserConfig . getInstance ( var ) . dialogsLoadOffsetId = var . id
UserConfig . dialogsLoadOffsetDate = var . var	UserConfig . getInstance ( var ) . dialogsLoadOffsetDate = var . var
UserConfig . dialogsLoadOffsetChatId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = 0
UserConfig . dialogsLoadOffsetUserId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChannelId )	if ( var . id == UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash	UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetChannelId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetUserId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = 0
if ( var . id == UserConfig . dialogsLoadOffsetChatId )	if ( var . id == UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash	UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetUserId = var . to_id . user_id	UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId = var . to_id . user_id
UserConfig . dialogsLoadOffsetChatId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChatId = 0
UserConfig . dialogsLoadOffsetChannelId = 0	UserConfig . getInstance ( var ) . dialogsLoadOffsetChannelId = 0
if ( var . id == UserConfig . dialogsLoadOffsetUserId )	if ( var . id == UserConfig . getInstance ( var ) . dialogsLoadOffsetUserId )
UserConfig . dialogsLoadOffsetAccess = var . access_hash	UserConfig . getInstance ( var ) . dialogsLoadOffsetAccess = var . access_hash
UserConfig . dialogsLoadOffsetId = Integer . MAX_VALUE	UserConfig . getInstance ( var ) . dialogsLoadOffsetId = Integer . MAX_VALUE
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessagesController . getInstance ( ) . completeDialogsReset ( var , var , var , var , var , var , var , var , var )	MessagesController . getInstance ( var ) . completeDialogsReset ( var , var , var , var , var , var , var , var , var )
FileLog . var ( "" , var )	FileLog . var ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
if ( ( var . flags & TLRPC . MESSAGE_FLAG_HAS_VIEWS ) != 0 )	if ( ( var . flags & TLRPC . MESSAGE_FLAG_HAS_VIEWS ) != 0 var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . get ( var ) )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . get ( var ) )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )	FileLoader . getInstance ( var ) . deleteFiles ( var , 0 )
var . executeFast ( String . format ( Locale . US , "" , var ) . US , "" , var ) . stepThis . dispose	var . executeFast ( String . format ( Locale . US , "" , var ) . US , "" , var ) . stepThis var . dispose var
MessagesController . getInstance ( ) . processLoadedDeleteTask ( var , var , var )	MessagesController . getInstance ( var ) . processLoadedDeleteTask ( var , var , var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( 1 )
MessagesController . getInstance ( ) . processDialogsUpdateRead ( null , var )	MessagesController . getInstance ( var ) . processDialogsUpdateRead ( null , var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( 1 )
MessagesController . getInstance ( ) . processDialogsUpdateRead ( null , var )	MessagesController . getInstance ( var ) . processDialogsUpdateRead ( null , var )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , 0 )	markMessagesContentAsRead ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
MessagesController . getInstance ( ) . didAddedNewTask ( var , var )	MessagesController . getInstance ( var ) . didAddedNewTask ( var , var )
MessagesStorage . getInstance ( ) . markMessagesContentAsRead ( var , 0 )	markMessagesContentAsRead ( var , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesReadContent , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesReadContent , var )
MessagesController . getInstance ( ) . didAddedNewTask ( var , var )	MessagesController . getInstance ( var ) . didAddedNewTask ( var , var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( var )
ArrayList < Integer > var = new ArrayList	ArrayList < Integer > var = new ArrayList var ( var )
if ( var != null && ! var . isEmpty ( ) )	if ( ! isEmpty ( var ) var )
if ( var != null && var . size ( ) != 0 )	if ( ! isEmpty ( var ) )
if ( var . next ( ) )	if ( var . next ( var ) )
if ( var != null && var . size ( ) != 0 )	if ( ! isEmpty ( var ) )
while ( var . next ( ) )	while ( var . next ( var ) )
if ( var != null && var . size ( ) != 0 )	if ( ! isEmpty ( var ) )
if ( ! var . isEmpty ( ) || ! var . isEmpty ( ) )	if ( var . size ( var ) > 0 || var . size ( var ) > 0 )
if ( ! var . isEmpty ( ) )	if ( var . size ( var ) > 0 )
var . bindInteger ( 1 , var . getValue ( ) )	var . bindInteger ( 1 , var . valueAt ( var ) )
var . bindLong ( 2 , var . getKey ( ) )	var . bindLong ( 2 , var . keyAt ( var ) )
if ( ! var . isEmpty ( ) )	if ( var . size ( var ) > 0 )
var . bindInteger ( 1 , var . getValue ( ) )	var . bindInteger ( 1 , var . valueAt ( var ) )
var . bindLong ( 2 , var . getKey ( ) )	var . bindLong ( 2 , var . keyAt ( var ) )
MessagesController . getInstance ( ) . processDialogsUpdateRead ( var , var )	MessagesController . getInstance ( var ) . processDialogsUpdateRead ( var , var )
if ( ! var . isEmpty ( ) )	if ( ! var . isEmpty ( var ) )
if ( var . size ( ) == 0 && var . isEmpty ( ) )	if ( isEmpty ( var ) && isEmpty ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
MessagesController . getInstance ( ) . processLoadedChannelAdmins ( var , var , true )	MessagesController . getInstance ( var ) . processLoadedChannelAdmins ( var , var , true )
final int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var
if ( var <= var . read_inbox_max_id )	if ( var < var . read_inbox_max_id )
int var = var . read_inbox_max_id - var	int var = var . intValue ( 7 )
if ( var < var . unread_count )	var = var . executeFast ( "" )
var . unread_count = var	var . bindInteger ( 12 , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false , null )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( var )	var . countDown ( var )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
var . release ( )	var . countDown ( var )
var = MessagesQuery . loadPinnedMessage ( var , var . pinned_msg_id , false )	var = DataQuery . getInstance ( var ) . loadPinnedMessage ( var , var . pinned_msg_id , false )
MessagesController . getInstance ( ) . processChatInfo ( var , var , var , true , var , var , var )	MessagesController . getInstance ( var ) . processChatInfo ( var , var , var , true , var , var , var )
var . release ( )	var . countDown ( var )
if ( var != 0 )	if ( var != 0 var )
var . bindInteger ( 2 , var )	var . bindLong ( 2 , var )
int var = 0	long var = 0
if ( var . next ( ) )	if ( var . next ( var ) )
var . bindInteger ( 1 , var )	var . bindLong ( 2 , var )
var . bindLong ( 2 , var )	var . bindLong ( 3 , var )
if ( var . isEmpty ( ) )	if ( var . isEmpty ( var ) && ! var )
HashMap < Integer , ContactsController . Contact > var = new HashMap	SparseArray < ContactsController . Contact > var = new SparseArray var ( var )
while ( var . next ( ) )	while ( var . next ( var ) )
var . dispose ( )	var . dispose ( var )
HashMap < String , ContactsController . Contact > var = new HashMap	HashMap < String , ContactsController . Contact > var = new HashMap var ( var )
while ( var . next ( ) )	while ( var . next ( var ) )
ContactsController . getInstance ( ) . performSyncPhoneBook ( var , true , true , false , false , ! var , false )	ContactsController . getInstance ( var ) . performSyncPhoneBook ( var , true , true , false , false , ! var , false )
ContactsController . getInstance ( ) . processLoadedContacts ( var , var , 1 )	ContactsController . getInstance ( var ) . processLoadedContacts ( var , var , 1 )
HashMap < Integer , TLRPC . Message > var = new HashMap	SparseArray < TLRPC . Message > var = new SparseArray var ( var )
if ( ! var . containsKey ( var . id ) )	if ( var . indexOfKey ( var . id ) < 0 )
if ( var . to_id . channel_id == 0 && ! MessageObject . isUnread ( var ) && var != 0 || var . id > 0 )	if ( var . send_state != 3 && ( var . to_id . channel_id == 0 && ! MessageObject . isUnread ( var ) && var != 0 || var . id > 0 ) )
SendMessagesHelper . getInstance ( ) . processUnsentMessages ( var , var , var , var )	SendMessagesHelper . getInstance ( var ) . processUnsentMessages ( var , var , var , var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( )	var . countDown ( var )
var . acquire ( )	FileLog . var ( var )
FileLog . var ( "" , var )	FileLog . var ( var )
HashMap < Integer , ArrayList < TLRPC . Message > . Message > var = new HashMap	LongSparseArray < ArrayList < TLRPC . Message > . Message > var = new LongSparseArray var ( var )
HashMap < Long , ArrayList < TLRPC . Message > . Message > var = new HashMap	SparseArray < ArrayList < TLRPC . Message > . Message > var = new SparseArray var ( var )
if ( var . id > 0 && var . send_state != 0 )	if ( var . id > 0 && var . send_state != 0 && var . send_state != 3 )
int var = var . messages . get ( var . messages . size ( ) - 1 ) . id	int var = Integer . MIN_VALUE
int var = var . messages . get ( 0 ) . id	int var = Integer . MAX_VALUE
if ( ! var . isEmpty ( ) )	if ( var . size ( var ) > 0 var )
if ( ! var . isEmpty ( ) )	if ( var . size ( var ) > 0 var )
ArrayList < TLRPC . Message > var = var . remove ( var . longValue ( 3 ) )	long var = var . longValue ( 3 )
if ( ! var . isEmpty ( ) )	if ( var . size ( var ) > 0 )
MessagesController . getInstance ( ) . processLoadedMessages ( var , var , var , var , var , true , var , var , var , var , var , var , var , var , var , var , var )	MessagesController . getInstance ( var ) . processLoadedMessages ( var , var , var , var , var , true , var , var , var , var , var , var , var , var , var , var , var )
if ( var == null || var . endsWith ( "" ) )	if ( var == null || var . toLowerCase ( var ) . endsWith ( "" ) )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( )	var . countDown ( var )
var . acquire ( )	var . await ( var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
final boolean result = new boolean [ 1 ]	final boolean result var = new boolean [ 1 ]
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . executeFast ( "" ) . stepThis var . dispose var
ArrayList < TLRPC . EncryptedChat > var = new ArrayList	ArrayList < TLRPC . EncryptedChat > var = new ArrayList var ( var )
var . release ( )	var . countDown ( var )
MediaController . getInstance ( ) . processDownloadObjects ( var , var )	DownloadController . getInstance ( var ) . processDownloadObjects ( var , var )
if ( var instanceof TLRPC . TL_message_secret && ( var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl > 0 && var . ttl <= 60 || MessageObject . isVoiceMessage ( var ) || MessageObject . isVideoMessage ( var ) || MessageObject . isRoundVideoMessage ( var ) ) )	if ( ( var . media instanceof TLRPC . TL_messageMediaPhoto || MessageObject . isGifMessage ( var ) ) && var . ttl > 0 && var . ttl <= 60 || MessageObject . isVoiceMessage ( var ) || MessageObject . isVideoMessage ( var ) || MessageObject . isRoundVideoMessage ( var ) . media instanceof TLRPC . TL_messageMediaPhoto || MessageObject . isVideoMessage ( var ) )
SQLiteCursor var = var . queryFinalized ( "" + var . getKey ( ) )	SQLiteCursor var = var . queryFinalized ( "" + var . keyAt ( var ) )
var . media . webpage = var . getValue ( )	var . media . webpage = var . valueAt ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceivedWebpages , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didReceivedWebpages , var )
BotQuery . clearBotKeyboard ( var , null )	DataQuery . getInstance ( var ) . clearBotKeyboard ( var , null )
putDialogsInternal ( var , false )	putDialogsInternal ( var , 0 )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , false , var )	updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( var ) , null , false , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , true )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , true )
if ( var == 1 )	if ( var == 1 var )
MessagesController . getInstance ( ) . generateJoinMessage ( var , false )	MessagesController . getInstance ( var ) . generateJoinMessage ( var , false )
HashMap < Long , TLRPC . Message > var = new HashMap	LongSparseArray < TLRPC . Message > var = new LongSparseArray var ( var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( var )
HashMap < Long , TLRPC . Message > var = new HashMap	LongSparseArray < TLRPC . Message > var = new LongSparseArray var ( var )
HashMap < Long , Long > var = null	LongSparseArray < Long > var = null
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( var )
HashMap < Long , Long > var = new HashMap	LongSparseArray < Long > var = new LongSparseArray var ( var )
HashMap < Long , Long > var = new HashMap	LongSparseArray < Long > var = new LongSparseArray var ( var )
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )	if ( DataQuery . canAddMessageToMedia ( var ) )
var = new HashMap	var = new LongSparseArray var ( var )
var = new HashMap	var = new LongSparseArray var ( var )
BotQuery . putBotKeyboard ( var . getKey ( ) , var . getValue ( ) )	DataQuery . getInstance ( var ) . putBotKeyboard ( var . keyAt ( var ) , var . valueAt ( var ) )
var = new HashMap	var = new SparseArray var ( var )
Integer var = var . get ( var . getKey ( ) )	long var = var . valueAt ( var )
HashMap < Long , Integer > var = var . get ( var )	LongSparseArray < Integer > var = var . get ( var )
var = new HashMap	var = new LongSparseArray var ( var )
var = var . get ( var . getValue ( ) )	var = var . get ( var )
var . put ( var . getValue ( ) , var )	var . put ( var , var )
NativeByteBuffer var = new NativeByteBuffer ( var . getObjectSize ( ) )	NativeByteBuffer var = new NativeByteBuffer ( var . getObjectSize ( var ) )
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )	if ( DataQuery . canAddMessageToMedia ( var ) )
if ( var != 0 && ( var . to_id . channel_id == 0 || var . post ) && var . date >= ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 && MediaController . getInstance ( ) . canDownloadMedia ( var ) )	if ( var != 0 && ( var . to_id . channel_id == 0 || var . post ) && var . date >= ConnectionsManager . getInstance ( var ) . getCurrentTime var - 60 * 60 && DownloadController . getInstance ( var ) . canDownloadMedia ( var ) )
var = MediaController . AUTODOWNLOAD_MASK_AUDIO	var = DownloadController . AUTODOWNLOAD_MASK_DOCUMENT
var = MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE	var = DownloadController . AUTODOWNLOAD_MASK_VIDEO
var = MediaController . AUTODOWNLOAD_MASK_PHOTO	var = DownloadController . AUTODOWNLOAD_MASK_PHOTO
var = MediaController . AUTODOWNLOAD_MASK_VIDEO	var = DownloadController . AUTODOWNLOAD_MASK_VIDEOMESSAGE
var = MediaController . AUTODOWNLOAD_MASK_DOCUMENT	var = DownloadController . AUTODOWNLOAD_MASK_AUDIO
var . step ( )	var . step ( var )
var . dispose ( )	var . dispose ( var )
HashMap < Long , TLRPC . Message > var = new HashMap	LongSparseArray < TLRPC . Message > var = new LongSparseArray var ( var )
Long var = var . getKey ( )	long var = var . keyAt ( var )
Integer var = var . getKey ( )	LongSparseArray < Integer > var = var . valueAt ( var )
long var = var . getKey ( )	long var = var . keyAt ( var )
var += var . getValue ( )	var += var . valueAt ( var )
MessagesController . getInstance ( ) . processDialogsUpdateRead ( var , var )	MessagesController . getInstance ( var ) . processDialogsUpdateRead ( var , var )
MediaController . getInstance ( ) . newDownloadObjectsAvailable ( var )	DownloadController . getInstance ( var ) . newDownloadObjectsAvailable ( var )
var . requery ( )	var . requery ( var )
HashMap < Integer , TLRPC . User > var = new HashMap	SparseArray < TLRPC . User > var = new SparseArray var ( var )
if ( var . isEmpty ( ) )	if ( var == null || var . isEmpty ( var ) )
if ( var != null )	if ( ! isEmpty ( var ) )
if ( var != null )	if ( ! isEmpty ( var ) )
if ( var != null && ! var . isEmpty ( ) )	if ( var != null && ! isEmpty ( var ) )
long var = ( ( long ) var . getKey ( ) ) << 32	long var = ( ( long ) var . keyAt ( var ) ) << 32
int var = var . getValue ( )	int var = var . valueAt ( var )
if ( var == null || var . isEmpty ( ) )	if ( isEmpty ( var ) )
var . executeFast ( String . format ( Locale . US , "" , var ) . US , "" , var ) . stepThis . dispose	var . executeFast ( String . format ( Locale . US , "" , var ) . US , "" , var ) . stepThis var . dispose var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDeleted , var , 0 )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messagesDeleted , var , 0 )
MessagesStorage . getInstance ( ) . updateDialogsWithReadMessagesInternal ( var , null , null , null )	updateDialogsWithReadMessagesInternal ( var , null , null , null )
MessagesStorage . getInstance ( ) . markMessagesAsDeletedInternal ( var , 0 )	markMessagesAsDeletedInternal ( var , 0 )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessagesInternal ( var , null , 0 )	updateDialogsWithDeletedMessagesInternal ( var , null , 0 )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer var > var = new LongSparseArray var ( var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId var
while ( var . next ( ) )	while ( var . next ( var ) )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )	FileLoader . getInstance ( var ) . deleteFiles ( var , 0 )
Long var = var . getKey ( )	long var = var . keyAt ( var )
Integer var = var . getValue ( )	Integer var var = var . valueAt ( var )
BotQuery . clearBotKeyboard ( 0 , var )	DataQuery . getInstance ( var ) . clearBotKeyboard ( 0 , var )
while ( var . next ( ) )	while ( var . next ( var ) )
MessagesController . getInstance ( ) . processDialogsUpdate ( var , var )	MessagesController . getInstance ( var ) . processDialogsUpdate ( var , var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer var > var = new LongSparseArray var ( var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId var
while ( var . next ( ) )	while ( var . next ( var ) )
Integer var = var . get ( var )	Integer var var = var . get ( var )
FileLoader . getInstance ( ) . deleteFiles ( var , 0 )	FileLoader . getInstance ( var ) . deleteFiles ( var , 0 )
Long var = var . getKey ( )	long var = var . keyAt ( var )
Integer var = var . getValue ( )	Integer var var = var . valueAt ( var )
var . executeFast ( String . format ( Locale . US , "" , - var , var ) . US , "" , - var , var ) . stepThis . dispose	var . executeFast ( String . format ( Locale . US , "" , - var , var ) . US , "" , - var , var ) . stepThis var . dispose var
for ( int var = 0 ; var < SharedMediaQuery . MEDIA_TYPES_COUNT ; var ++ )	for ( int var = 0 ; var < DataQuery . MEDIA_TYPES_COUNT ; var ++ )
if ( var = var . next ( ) )	if ( var = var . next ( var ) )
if ( var != null )	if ( var != null && var != 3 )
if ( var . next ( ) )	if ( var . next ( var ) )
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )	if ( DataQuery . canAddMessageToMedia ( var ) )
var . bindInteger ( 4 , SharedMediaQuery . getMediaType ( var ) )	var . put ( MessageObject . getDialogId ( var ) , var )
BotQuery . putBotKeyboard ( var , var )	DataQuery . getInstance ( var ) . putBotKeyboard ( var , var )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( 1 )
MessagesController . getInstance ( ) . processDialogsUpdateRead ( null , var )	MessagesController . getInstance ( var ) . processDialogsUpdateRead ( null , var )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , false , var )	updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( var ) , null , false , var )
var . add ( UserConfig . getClientUserId ( ) )	var . add ( UserConfig . getInstance ( var ) . getClientUserId var )
while ( var . next ( ) )	while ( var . next ( var ) )
MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , var , var , 1 , false , false , true )	MessagesController . getInstance ( var ) . processLoadedDialogs ( var , var , var , var , 1 , false , false , true )
MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , 0 , 100 , 1 , true , false , true )	MessagesController . getInstance ( var ) . processLoadedDialogs ( var , var , 0 , 100 , 1 , true , false , true )
var . step ( )	var . step ( var )
for ( int var = 0 ; var < SharedMediaQuery . MEDIA_TYPES_COUNT ; var ++ )	for ( int var = 0 ; var < DataQuery . MEDIA_TYPES_COUNT ; var ++ )
var . put ( var . dialog_id , var )	var . put ( MessageObject . getDialogId ( var ) , var )
for ( int var = 0 ; var < var . var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . var . size ( var ) ; var ++ )
BotQuery . putBotKeyboard ( var . id , var )	DataQuery . getInstance ( var ) . putBotKeyboard ( var . id , var )
if ( SharedMediaQuery . canAddMessageToMedia ( var ) )	if ( DataQuery . canAddMessageToMedia ( var ) )
var . requery ( )	var . requery ( var )
final Semaphore var = new Semaphore ( 0 )	long var = var . longValue ( 0 )
var . release ( )	var . countDown ( var )
var . acquire ( )	var . await ( var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( )	var . countDown ( var )
var . acquire ( )	var . await ( var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( )	var . countDown ( var )
var . acquire ( )	FileLog . var ( var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( )	var . countDown ( var )
var . acquire ( )	FileLog . var ( var )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getInt ( "" , 0 )	var = MessagesController . getNotificationsSettings ( var ) . getInt ( "" , 0 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , SharedMediaQuery . MEDIA_MUSIC ) . US , "" , SharedMediaQuery . MEDIA_MUSIC )	SQLiteCursor var = var . getDatabase ( ) . queryFinalized ( String . format ( Locale . US , "" , DataQuery . MEDIA_MUSIC ) . US , "" , DataQuery . MEDIA_MUSIC )
var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var , SharedMediaQuery . MEDIA_MUSIC ) . US , "" , var , SharedMediaQuery . MEDIA_MUSIC )	var = var . getDatabase ( ) . queryFinalized ( String . format ( Locale . US , "" , var , DataQuery . MEDIA_MUSIC ) . US , "" , var , DataQuery . MEDIA_MUSIC )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( var , var , false )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )	var . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )	var . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var . putInt ( "" , var ) . commit var	MessagesController . getNotificationsSettings ( var ) . edit var . putInt ( "" , var ) . commit var
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
var = new NotificationCompat . Builder ( getApplicationContext ) . setSmallIcon ( R . drawable . player ) . setContentIntent ( var ) . setContentTitle ( var ) . build	var = new NotificationCompat . Builder ( getApplicationContext ) . setSmallIcon ( R . drawable . player ) . setContentIntent ( var ) . setChannelId ( NotificationsController . OTHER_NOTIFICATIONS_CHANNEL ) . setContentTitle ( var ) . build
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
if ( Build . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" )	if ( Build . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" . CPU_ABI . equalsIgnoreCase ( "" ) = "" )
if ( var . exists ( ) )	if ( BuildVars . LOGS_ENABLED )
init ( Constants . FILES_PATH , BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
init ( Constants . FILES_PATH , BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
final Bundle var = new Bundle	Bundle var = new Bundle
int var = var	for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( var == null || checkObjExists ( var ) )	if ( var == var )
var = var . readLine ( )	var = var
NotificationCenter var = var	NotificationCenter var = Instance [ var ]
var = var	var = Instance [ var ]
var = var = new NotificationCenter	Instance [ var ] = var = new NotificationCenter ( var )
var . clear ( )	var . clear ( var )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
( ( NotificationCenterDelegate ) var ) . didReceivedNotification ( var , var )	( ( NotificationCenterDelegate ) var ) . didReceivedNotification ( var , var , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )	int var = var . getIntExtra ( "" , UserConfig . selectedAccount )
var . edit ( ) . putInt ( "" , var . getIntExtra ( "" , 0 ) , 0 ) . commit	MessagesController . getNotificationsSettings ( var ) . edit . putInt ( "" , var . getIntExtra ( "" , 0 ) , 0 ) . commit
NotificationsController . getInstance ( ) . repeatNotificationMaybe	NotificationsController . getInstance ( var ) . repeatNotificationMaybe
NotificationsController var = var	NotificationsController var = Instance [ var ]
var = var	var = Instance [ var ]
var = var = new NotificationsController	Instance [ var ] = var = new NotificationsController ( var )
public NotificationsController	public NotificationsController ( int var )
FileLog . var ( "" )	FileLog . d ( "" )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
NotificationsController . getInstance ( ) . processReadMessages ( null , var , 0 , Integer . MAX_VALUE , false )	NotificationsController . getInstance ( var ) . processReadMessages ( null , var , 0 , Integer . MAX_VALUE , false )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( var )
var = true	var = var
var = 0	var [ 0 ] = null
var = null	var [ 0 ] = null
if ( var == null )	if ( ( int ) var == 0 var )
var = var . getString ( "" , var )	return LocaleController . getString ( "" , R . string . YouHaveNewMessage )
var = var . getInt ( "" , 1 )	if ( var == 0 && var != 0 && var . getBoolean ( "" , true ) || var != 0 && var . getBoolean ( "" , true ) var )
var = 0	if ( var != 0 var )
int var = var . getRingerMode ( )	MessageObject var = var . replyMessageObject
var . setCategory ( NotificationCompat . CATEGORY_MESSAGE )	return LocaleController . formatString ( "" , R . string . NotificationActionPinnedVideoChannel , var . title )
var . setPriority ( NotificationCompat . PRIORITY_DEFAULT )	return LocaleController . formatString ( "" , R . string . NotificationActionPinnedStickerEmojiChannel , var . title , var )
var . setPriority ( NotificationCompat . PRIORITY_HIGH )	return LocaleController . formatString ( "" , R . string . NotificationActionPinnedTextChannel , var . title , var )
var . setPriority ( NotificationCompat . PRIORITY_MAX )	return LocaleController . formatString ( "" , R . string . NotificationActionPinnedGeoChannel , var . title )
if ( var . length ( ) > 100 )	if ( var . length ( var ) > 20 )
var . setTicker ( var )	return LocaleController . getString ( "" , R . string . AttachGame )
if ( var . equals ( var ) )	return var + "" + LocaleController . getString ( "" , R . string . AttachSticker )
var . setLights ( var , 1000 , 1000 )	var . put ( "" , true )
var . setVibrate ( new long )	var . setVibrate ( vibrationPattern = new long var )
var . notify ( 1 , var . build ( ) )	WearDataLayerListenerService . sendMessageToWatch ( "" , var . toString ( var ) . getBytes ( "" ) , "" )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var . remove ( var )	var . add ( var )
if ( var != null )	if ( var != var )
scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( ) . getCurrentTime )	scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( var ) . getCurrentTime var )
if ( var . getBoolean ( "" , true ) )	if ( var )
setBadge ( var )	setBadge ( getTotalAllUnreadCount var )
Integer var = var . get ( var )	int var = var . get ( var )
var . remove ( var )	var . add ( var )
scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( ) . getCurrentTime )	scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( var ) . getCurrentTime var )
if ( var . getBoolean ( "" , true ) )	if ( var )
setBadge ( var )	setBadge ( getTotalAllUnreadCount var )
if ( var . getDialogId ( ) == var && var . getId ( ) <= ( int ) var )	if ( var . getDialogId ( var ) == var && var . getId ( var ) <= ( int ) var )
var . remove ( var )	var . add ( var )
long var = var . messageOwner . id	long var = var . getId ( var )
if ( var . getId ( ) <= var || var < 0 = true )	if ( var . getId ( var ) <= var || var < 0 = true )
long var = var . messageOwner . id	long var = var . getId ( var )
if ( var != null && var != var . size ( ) )	if ( ! var . isEmpty ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )
int var = var . size ( )	SharedPreferences var = MessagesController . getNotificationsSettings ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
Boolean var = var . get ( var )	int var = var . indexOfKey ( var )
if ( ! var . isEmpty ( ) && var != var . size ( ) && ! AndroidUtilities . needShowPasscode ( false ) )	if ( ! var . isEmpty ( var ) && ! AndroidUtilities . needShowPasscode ( false ) )
if ( ApplicationLoader . mainInterfacePaused || ! ApplicationLoader . isScreenOn && ! UserConfig . isWaitingForPasscodeEnter )	if ( ApplicationLoader . mainInterfacePaused || ! ApplicationLoader . isScreenOn && ! SharedConfig . isWaitingForPasscodeEnter )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( var )
long var = var . getKey ( )	long var = var . keyAt ( var )
Integer var = var . getValue ( )	Integer var = var . get ( var )
long var = var . messageOwner . id	long var = var . getId ( var )
var . remove ( var )	var . add ( var )
if ( var != null && var . isEmpty ( ) && ! var . isEmpty ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated var || var . isEmpty ( var ) )
scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( ) . getCurrentTime )	scheduleNotificationDelay ( var > ConnectionsManager . getInstance ( var ) . getCurrentTime var )
MessagesController . getInstance ( ) . putUsers ( var , true )	MessagesController . getInstance ( var ) . putUsers ( var , true )
MessagesController . getInstance ( ) . putChats ( var , true )	MessagesController . getInstance ( var ) . putChats ( var , true )
MessagesController . getInstance ( ) . putEncryptedChats ( var , true )	MessagesController . getInstance ( var ) . putEncryptedChats ( var , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( var )
HashMap < Long , Boolean > var = new HashMap	LongSparseArray < Boolean > var = new LongSparseArray var ( var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
if ( var . containsKey ( var ) )	if ( var . indexOfKey ( var ) >= 0 )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( var , var , false )
Boolean var = var . get ( var )	int var = var . indexOfKey ( var )
long var = var . getKey ( )	long var = var . keyAt ( var )
Boolean var = var . get ( var )	int var = var . indexOfKey ( var )
int var = var . getValue ( )	int var = var . valueAt ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )
showOrUpdateNotification ( SystemClock . uptimeMillis ( ) / 1000 < 60 )	showOrUpdateNotification ( SystemClock . elapsedRealtime ( var ) / 1000 < 60 )
if ( var . getBoolean ( "" , true ) )	if ( var )
setBadge ( var )	setBadge ( getTotalAllUnreadCount var )
if ( var == UserConfig . getClientUserId ( var ) )	if ( var == UserConfig . getInstance ( var ) . getClientUserId var )
if ( var . messageOwner . message != null && var . messageOwner . message . length ( var ) != 0 var )	if ( ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( var == UserConfig . getClientUserId ( var ) var )	if ( var == UserConfig . getInstance ( var ) . getClientUserId var var )
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeo )	if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeo || var . messageOwner . media instanceof TLRPC . TL_messageMediaVenue )
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeo )	if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeo || var . messageOwner . media instanceof TLRPC . TL_messageMediaVenue )
String var = "" + var . messageOwner . media . caption	String var = "" + var . messageOwner . var
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . media . caption ) var )	if ( ! var && Build . VERSION . SDK_INT >= 19 && ! TextUtils . isEmpty ( var . messageOwner . message ) var )
PendingIntent var = PendingIntent . getService ( ApplicationLoader . applicationContext , 0 , new Intent ( ApplicationLoader . applicationContext , NotificationRepeat . class ) . applicationContext , NotificationRepeat . class , 0 )	Intent var = new Intent ( ApplicationLoader . applicationContext , NotificationRepeat . class )
int var = var . getInt ( "" + var , 0 )	int var = var . getInt ( "" + var , - 1 )
if ( var >= ConnectionsManager . getInstance ( ) . getCurrentTime = 2 )	if ( var >= ConnectionsManager . getInstance ( var ) . getCurrentTime var = 2 )
var . cancel ( 1 )	var . cancel ( var )
var . cancel ( var . getValue ( ) )	var . setSound ( null , var . build ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )	NotificationCenter . getGlobalInstance ( var ) . postNotificationName ( NotificationCenter . pushMessagesUpdated )
if ( ! var || MediaController . getInstance ( ) . isRecordingAudio )	if ( ! var || MediaController . getInstance ( var ) . isRecordingAudio var )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
AndroidUtilities . cancelRunOnUIThread ( var )	var . cancelRunnable ( var )
var . cancel ( 1 )	var . cancel ( var )
if ( ! UserConfig . isClientActivated ( ) || var . isEmpty ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated var || var . isEmpty ( var ) )
if ( var == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getInstance ( var ) . getClientUserId var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
boolean var	boolean var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , true )	boolean var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , true )	boolean var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , true )	boolean var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , false )	boolean var = var . getBoolean ( "" , false )
if ( AndroidUtilities . needShowPasscode ( false ) || UserConfig . isWaitingForPasscodeEnter = null )	if ( AndroidUtilities . needShowPasscode ( false ) || SharedConfig . isWaitingForPasscodeEnter = null )
if ( var . size ( ) == 1 )	if ( var . size ( var ) == 1 && var != var )
var = LocaleController . formatPluralString ( "" , var )	var += LocaleController . formatPluralString ( "" , var )
var = LocaleController . formatString ( "" , R . string . NotificationMessagesPeopleDisplayOrder , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var . size ( ) ) , var . size ( ) )	var += LocaleController . formatString ( "" , R . string . NotificationMessagesPeopleDisplayOrder , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var . size ( var ) ) , var . size ( var ) )
NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setAutoCancel ( true ) . setNumber ( var ) . setContentIntent ( var ) . setGroup ( "" ) . setGroupSummary ( true ) . setColor ( 0xff2ca5e0 )	NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setAutoCancel ( true ) . setNumber ( var ) . setContentIntent ( var ) . setGroup ( var ) . setGroupSummary ( true ) . setShowWhen ( true ) . setWhen ( ( ( long ) var . messageOwner . date ) * 1000 ) . setColor ( 0xff2ca5e0 )
if ( ! var || var == 1 )	if ( ! var || var == 1 var )
if ( var == 1 )	if ( var == 1 || var == 2 )
if ( var == 2 )	if ( var == 4 )
var . setPriority ( NotificationCompat . PRIORITY_MAX )	var . setPriority ( NotificationCompat . PRIORITY_MIN )
if ( var != 1 && ! var )	if ( var != 1 && ! var var )
if ( ! MediaController . getInstance ( ) . isRecordingAudio )	if ( ! MediaController . getInstance ( var ) . isRecordingAudio var )
if ( var != null && ! var . equals ( "" ) )	if ( Build . VERSION . SDK_INT >= 26 var )
var . setVibrate ( new long )	configVibrationPattern = new long var
if ( Build . VERSION . SDK_INT < 24 && UserConfig . passcodeHash . length ( ) == 0 && hasMessagesToReply )	if ( ! var && Build . VERSION . SDK_INT < 24 && SharedConfig . passcodeHash . length ( var ) == 0 && hasMessagesToReply var )
showExtraNotifications ( var , var )	showExtraNotifications ( var , var , var )
var . notify ( 1 , var . build ( ) )	var . putExtra ( "" , var . getId ( var ) )
HashMap < Long , ArrayList < MessageObject > > var = new HashMap	LongSparseArray < ArrayList < MessageObject > > var = new LongSparseArray var ( var )
if ( ( int ) var == 0 )	if ( ( int ) var == 0 var )
HashMap < Long , Integer > var = new HashMap	ArrayList < NotificationHolder > var = new ArrayList var ( var )
var . putAll ( var )	var . get ( var ) . call var
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )
int var = var . get ( 0 ) . messageOwner . date	MessageObject var = var . get ( 0 )
if ( var > 0 )	if ( var != 0 = var = var )
var = MessagesController . getInstance ( ) . getUser ( ( int ) var )	var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )	var = LocaleController . getString ( "" , R . string . SecretChatName )
if ( var != null )	if ( var > 0 var )
if ( ( ! ChatObject . isChannel ( var ) || var != null && var . megagroup ) && ! AndroidUtilities . needShowPasscode ( false ) && ! UserConfig . isWaitingForPasscodeEnter )	if ( ( ! var || var ) && var && ! SharedConfig . isWaitingForPasscodeEnter )
if ( var != null )	if ( var < 0 var )
NotificationCompat . MessagingStyle var = new NotificationCompat . MessagingStyle ( null ) . setConversationTitle ( String . format ( "" , var , LocaleController . formatPluralString ( "" , Math . max ( var , var . size ( ) ) , var . size ( ) ) , Math . max ( var , var . size ( ) ) , var . size ( ) ) , var , LocaleController . formatPluralString ( "" , Math . max ( var , var . size ( ) ) , var . size ( ) ) , Math . max ( var , var . size ( ) ) , var . size ( ) )	NotificationCompat . MessagingStyle var = new NotificationCompat . MessagingStyle ( "" ) . setConversationTitle ( String . format ( "" , var , LocaleController . formatPluralString ( "" , Math . max ( var , var . var ( var ) ) , var . var ( var ) ) , Math . max ( var , var . var ( var ) ) , var . var ( var ) ) , var , LocaleController . formatPluralString ( "" , Math . max ( var , var . var ( var ) ) , var . var ( var ) ) , Math . max ( var , var . var ( var ) ) , var . var ( var ) )
StringBuilder var = new StringBuilder	StringBuilder var = new StringBuilder var
boolean isText = new boolean [ 1 ]	String senderName var = new String [ 1 ]
for ( int var = var . size ( var ) - 1 ; var >= 0 ; var -- )	for ( int var = var . var ( var ) - 1 ; var >= 0 ; var -- )
if ( var != null var )	if ( senderName [ 0 ] != null var )
if ( isText [ 0 ] var )	if ( var [ 0 ] != 0 )
var = var . replace ( var + "" , "" )	var = FileProvider . getUriForFile ( ApplicationLoader . applicationContext , BuildConfig . APPLICATION_ID + "" , var )
var . putExtra ( "" , var . id )	var . putExtra ( "" , - var )
var . putExtra ( "" , var . id )	var . putExtra ( "" , var )
String var = null	Uri var = null
var = "" + var . id + "" + var	var = "" + ( - var ) + "" + var
var = "" + var . id + "" + var	var . put ( "" , var . dc_id + "" + var . volume_id + "" + var . secret )
NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setGroup ( "" ) . setContentText ( var . toString ( var ) ) . setAutoCancel ( true ) . setNumber ( var . size ( var ) ) . setColor ( 0xff2ca5e0 ) . setGroupSummary ( false ) . setWhen ( ( ( long ) var . get ( 0 ) . messageOwner . date ) * 1000 ) . setStyle ( var ) . setContentIntent ( var ) . extend ( var ) . extend ( new NotificationCompat . CarExtender ( var ) . setUnreadConversation ( var . build ( var ) ) . build ( var ) ) . setCategory ( NotificationCompat . CATEGORY_MESSAGE )	NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setGroup ( var ) . setContentText ( var . toString ( var ) ) . setAutoCancel ( true ) . setNumber ( var . var ( var ) ) . setColor ( 0xff2ca5e0 ) . setGroupSummary ( false ) . setWhen ( var ) . setShowWhen ( true ) . setShortcutId ( "" + var ) . setGroupAlertBehavior ( NotificationCompat . GROUP_ALERT_SUMMARY ) . setStyle ( var ) . setContentIntent ( var ) . extend ( var ) . setSortKey ( "" + ( Long . MAX_VALUE - var ) ) . extend ( new NotificationCompat . CarExtender ( var ) . setUnreadConversation ( var . build ( var ) ) . build ( var ) ) . setCategory ( NotificationCompat . CATEGORY_MESSAGE )
var . notify ( var , var . build ( var ) )	var . setSound ( var , var . build ( var ) )
var . cancel ( var . getValue ( ) )	var . put ( "" , UserConfig . getInstance ( var ) . getClientUserId var )
if ( Math . abs ( System . currentTimeMillis ( ) - var ) <= 100 )	if ( Math . abs ( System . currentTimeMillis ( var ) - var ) <= 100 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . notificationsSettingsUpdated )
var . settings . sound = ""	var . settings . flags |= 4
int var = var . getInt ( "" + var , 0 )	int var = var . getInt ( "" + var , - 1 )
( ( TLRPC . TL_inputNotifyPeer ) var . peer ) . peer = MessagesController . getInputPeer ( ( int ) var )	( ( TLRPC . TL_inputNotifyPeer ) var . peer ) . peer = MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalNotificationsSettings ( )
NotificationsController . getInstance ( ) . forceShowPopupForReply	NotificationsController . getInstance ( var . getIntExtra ( "" , UserConfig . selectedAccount ) , UserConfig . selectedAccount ) . forceShowPopupForReply
MessagesController . getInstance ( ) . setReferer ( var . getExtras ( ) . getString ( "" ) )	MessagesController . getInstance ( UserConfig . selectedAccount ) . setReferer ( var . getExtras ( ) . getString ( "" ) )
FileLog . e ( "" )	FileLog . d ( "" )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , true )	ConnectionsManager . getInstance ( UserConfig . selectedAccount ) . setAppPaused ( true , true )
FileLog . e ( "" )	FileLog . d ( "" )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , true )	ConnectionsManager . getInstance ( UserConfig . selectedAccount ) . setAppPaused ( false , true )
SecretChatHelper var = var	SecretChatHelper var = Instance [ var ]
var = var	var = Instance [ var ]
var = var = new SecretChatHelper	Instance [ var ] = var = new SecretChatHelper ( var )
MessageObject var = MessagesController . getInstance ( ) . dialogMessagesByRandomIds . get ( var . get ( var ) )	MessageObject var = MessagesController . getInstance ( var ) . dialogMessagesByRandomIds . get ( var . get ( var ) )
MessagesStorage . getInstance ( ) . markMessagesAsDeletedByRandoms ( var )	MessagesStorage . getInstance ( var ) . markMessagesAsDeletedByRandoms ( var )
var . local_id = var . id = UserConfig . getNewMessageId ( )	var . local_id = var . id = UserConfig . getInstance ( var ) . getNewMessageId var
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( var ) . getClientUserId var
if ( var . participant_id == UserConfig . getClientUserId ( ) )	if ( var . participant_id == UserConfig . getInstance ( var ) . getClientUserId var var )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
var . random_id = SendMessagesHelper . getInstance ( ) . getNextRandomId	var . random_id = SendMessagesHelper . getInstance ( var ) . getNextRandomId var
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , true , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , true , 0 )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChatDB ( var . id , false )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChatDB ( var . id , false )
if ( var == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getInstance ( var ) . getClientUserId var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
final TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )	final TLRPC . TL_dialog var = new TLRPC . TL_dialog ( var )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , false )
MessagesController . getInstance ( ) . dialogs_dict . put ( var . id , var )	MessagesController . getInstance ( var ) . dialogs_dict . put ( var . id , var )
MessagesController . getInstance ( ) . dialogs . add ( var )	MessagesController . getInstance ( var ) . dialogs . add ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . putEncryptedChat ( var , var , var )	MessagesStorage . getInstance ( var ) . putEncryptedChat ( var , var , var )
SecretChatHelper . getInstance ( ) . acceptSecretChat ( var )	acceptSecretChat ( var )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , false )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )	MessagesStorage . getInstance ( var ) . updateEncryptedChat ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( var , var , false )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . dialog_id , var )	MessagesController . getInstance ( var ) . updateInterfaceWithMessages ( var . dialog_id , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( var , var , false )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . dialog_id , var )	MessagesController . getInstance ( var ) . updateInterfaceWithMessages ( var . dialog_id , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var + "" )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var + "" )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
if ( var . attachPath != null && var . attachPath . startsWith ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE . getAbsolutePath ) )	if ( var . attachPath != null && var . attachPath . startsWith ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE . getAbsolutePath var ) )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
SendMessagesHelper . getInstance ( ) . putToSendingMessages ( var )	SendMessagesHelper . getInstance ( var ) . putToSendingMessages ( var )
if ( var . admin_id == UserConfig . getClientUserId ( ) )	if ( var . admin_id == UserConfig . getInstance ( var ) . getClientUserId var var )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . key_create_date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
if ( ( var . key_use_count_out >= 100 || var . key_create_date < ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 * 24 * 7 ) && var . exchange_id == 0 && var . future_key_fingerprint == 0 )	if ( ( var . key_use_count_out >= 100 || var . key_create_date < ConnectionsManager . getInstance ( var ) . getCurrentTime var - 60 * 60 * 24 * 7 ) && var . exchange_id == 0 && var . future_key_fingerprint == 0 )
MessagesStorage . getInstance ( ) . updateEncryptedChatSeq ( var , false )	MessagesStorage . getInstance ( var ) . updateEncryptedChatSeq ( var , false )
MessagesStorage . getInstance ( ) . setMessageSeq ( var . id , var . seq_in , var . seq_out )	MessagesStorage . getInstance ( var ) . setMessageSeq ( var . id , var . seq_in , var . seq_out )
FileLog . e ( var + "" + var . in_seq_no + "" + var . out_seq_no )	FileLog . d ( var + "" + var . in_seq_no + "" + var . out_seq_no )
int var = var . getObjectSize ( )	int var = var . getObjectSize ( var )
boolean var = var == 2 && var . admin_id != UserConfig . getClientUserId ( )	boolean var = var == 2 && var . admin_id != UserConfig . getInstance ( var ) . getClientUserId var
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var . id )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( var . id )
if ( var == null )	if ( var == null var )
MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , var . id , var . id , var . date , false , 0 )	MessagesStorage . getInstance ( var ) . updateMessageStateAndId ( var . random_id , var . id , var . id , var . date , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var . id , var . id , var , var . dialog_id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var . id , var . id , var , var . dialog_id , 0L )
SendMessagesHelper . getInstance ( ) . processSentMessage ( var . id )	SendMessagesHelper . getInstance ( var ) . processSentMessage ( var . id )
SendMessagesHelper . getInstance ( ) . removeFromSendingMessages ( var . id )	SendMessagesHelper . getInstance ( var ) . removeFromSendingMessages ( var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
SendMessagesHelper . getInstance ( ) . processSentMessage ( var . id )	SendMessagesHelper . getInstance ( var ) . processSentMessage ( var . id )
SendMessagesHelper . getInstance ( ) . stopVideoService ( var . attachPath )	SendMessagesHelper . getInstance ( var ) . stopVideoService ( var . attachPath )
SendMessagesHelper . getInstance ( ) . removeFromSendingMessages ( var . id )	SendMessagesHelper . getInstance ( var ) . removeFromSendingMessages ( var . id )
byte var = new byte [ 36 ]	byte var var = new byte [ 36 ]
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
if ( var != null )	if ( var != null var )
if ( var == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getInstance ( var ) . getClientUserId var )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . key_create_date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )	MessagesStorage . getInstance ( var ) . updateEncryptedChat ( var )
var . local_id = var . id = UserConfig . getNewMessageId ( )	var . local_id = var . id = UserConfig . getInstance ( var ) . getNewMessageId var
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
var . to_id . user_id = UserConfig . getClientUserId ( )	var . to_id . user_id = UserConfig . getInstance ( var ) . getClientUserId var
var . flags |= 4	var . media . flags |= 4
var . ttl = Math . max ( var . media . duration + 2 , var . ttl )	var . ttl = Math . max ( var . media . duration + 1 , var . ttl )
var . media . caption = ""	var . message = ""
var . local_id = var . id = UserConfig . getNewMessageId ( )	var . local_id = var . id = UserConfig . getInstance ( var ) . getNewMessageId var
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
var . to_id . user_id = UserConfig . getClientUserId ( )	var . to_id . user_id = UserConfig . getInstance ( var ) . getClientUserId var
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
MessagesController . getInstance ( ) . dialogMessage . remove ( var . id )	MessagesController . getInstance ( var ) . dialogMessage . remove ( var . id )
NotificationsController . getInstance ( ) . processReadMessages ( null , var , 0 , Integer . MAX_VALUE , false )	NotificationsController . getInstance ( var ) . processReadMessages ( null , var , 0 , Integer . MAX_VALUE , false )
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray var ( 1 )
MessagesStorage . getInstance ( ) . deleteDialog ( var , 1 )	MessagesStorage . getInstance ( var ) . deleteDialog ( var , 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , false )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . removeAllMessagesFromDialog , var , false )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var
MessagesStorage . getInstance ( ) . createTaskForSecretChat ( var . id , var , var , 1 , var . action . random_ids )	MessagesStorage . getInstance ( var ) . createTaskForSecretChat ( var . id , var , var , 1 , var . action . random_ids )
if ( var . exchange_id > var . action . exchange_id )	if ( var . exchange_id > var . action . exchange_id var )
FileLog . e ( "" )	FileLog . d ( "" )
byte var = var . toByteArray ( )	byte var var = var . toByteArray ( var )
if ( var . exchange_id == var . action . exchange_id )	if ( var . exchange_id == var . action . exchange_id var )
byte var = Utilities . computeSHA1 ( var )	byte var var = Utilities . computeSHA1 ( var )
if ( var . action . key_fingerprint == var )	if ( ! Utilities . isGoodGaAndGb ( var , var ) )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )	MessagesStorage . getInstance ( var ) . updateEncryptedChat ( var )
if ( var . exchange_id == var . action . exchange_id && var . future_key_fingerprint == var . action . key_fingerprint )	if ( var . exchange_id == var . action . exchange_id && var . future_key_fingerprint == var . action . key_fingerprint var )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . key_create_date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )	MessagesStorage . getInstance ( var ) . updateEncryptedChat ( var )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )	MessagesStorage . getInstance ( var ) . updateEncryptedChat ( var )
MessagesStorage . getInstance ( ) . updateEncryptedChat ( var )	MessagesStorage . getInstance ( var ) . updateEncryptedChat ( var )
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( var ) . getClientUserId var
if ( var . participant_id == UserConfig . getClientUserId ( ) )	if ( var . participant_id == UserConfig . getInstance ( var ) . getClientUserId var var )
if ( var . admin_id == UserConfig . getClientUserId ( ) && var % 2 == 0 ++ )	if ( var . admin_id == UserConfig . getInstance ( var ) . getClientUserId var && var % 2 == 0 ++ )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var . id , var , var , var , var ) . US , "" , var . id , var , var , var , var )	SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var . id , var , var , var , var ) . US , "" , var . id , var , var , var , var )
var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , var , var , var ) . US , "" , var , var , var )	var = MessagesStorage . getInstance ( var ) . getDatabase var . queryFinalized ( String . format ( Locale . US , "" , var , var , var ) . US , "" , var , var , var )
if ( var != null )	if ( var != null var )
if ( ! var . isEmpty ( ) )	if ( var . size ( var ) != 0 )
var . add ( createDeleteMessage ( UserConfig . getNewMessageId ( ) , var . getKey ( ) , 0 , Utilities . random . nextLong ( ) , var ) . getNewMessageId ( ) , var . getKey ( ) , 0 , Utilities . random . nextLong ( ) , var )	var . add ( createDeleteMessage ( UserConfig . getInstance ( var ) . getNewMessageId var , var . keyAt ( var ) , 0 , Utilities . random . nextLong ( var ) , var ) . getInstance ( var ) . getNewMessageId var , var . keyAt ( var ) , 0 , Utilities . random . nextLong ( var ) , var )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( var , var , false )
SendMessagesHelper . getInstance ( ) . retrySendMessage ( var , true )	SendMessagesHelper . getInstance ( var ) . retrySendMessage ( var , true )
SendMessagesHelper . getInstance ( ) . processUnsentMessages ( var , new ArrayList < TLRPC . User > . User ( ) , new ArrayList < TLRPC . Chat > . Chat ( ) , var )	SendMessagesHelper . getInstance ( var ) . processUnsentMessages ( var , new ArrayList < TLRPC . User > . User ( var ) , new ArrayList < TLRPC . Chat > . Chat ( var ) , var )
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( String . format ( Locale . US , "" , var . id , var , var ) . US , "" , var . id , var , var ) . stepThis . dispose	MessagesStorage . getInstance ( var ) . getDatabase var . executeFast ( String . format ( Locale . US , "" , var . id , var , var ) . US , "" , var . id , var , var ) . stepThis var . dispose var
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
MessagesStorage . getInstance ( ) . updateEncryptedChatSeq ( var , true )	MessagesStorage . getInstance ( var ) . updateEncryptedChatSeq ( var , true )
Utilities . aesIgeEncryption ( var . buffer , var . aesKey , var . aesIv , false , false , 24 , var . limit ( ) - 24 )	Utilities . aesIgeEncryption ( var . buffer , var . aesKey , var . aesIv , false , false , 24 , var . limit ( var ) - 24 )
final TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChatDB ( var . chat_id , true )	final TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChatDB ( var . chat_id , true )
if ( var != null )	if ( var != null var )
boolean var = var . admin_id == UserConfig . getClientUserId ( )	boolean var = var . admin_id == UserConfig . getInstance ( var ) . getClientUserId var
if ( var . admin_id == UserConfig . getClientUserId ( ) )	if ( var . admin_id == UserConfig . getInstance ( var ) . getClientUserId var var )
FileLog . e ( "" + var . seq_in + "" + var . seq_out )	FileLog . d ( "" + var . seq_in + "" + var . seq_out )
FileLog . e ( "" + var . in_seq_no + "" + var . out_seq_no )	FileLog . d ( "" + var . in_seq_no + "" + var . out_seq_no )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
MessagesStorage . getInstance ( ) . updateEncryptedChatSeq ( var , true )	MessagesStorage . getInstance ( var ) . updateEncryptedChatSeq ( var , true )
BigInteger var = BigInteger . valueOf ( MessagesStorage . secretG )	BigInteger var = BigInteger . valueOf ( MessagesStorage . getInstance ( var ) . getSecretG var )
var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . secretPBytes ) , MessagesStorage . secretPBytes )	var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . getInstance ( var ) . getSecretPBytes var ) , MessagesStorage . getInstance ( var ) . getSecretPBytes var )
byte var = new byte [ 256 ]	byte var var = new byte [ 256 ]
var . exchange_id = SendMessagesHelper . getInstance ( ) . getNextRandomId	var . exchange_id = SendMessagesHelper . getInstance ( var ) . getNextRandomId var
if ( var . key_fingerprint == var )	if ( var . key_fingerprint == var var )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . key_create_date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
if ( var == null )	if ( var == null var )
MessagesStorage . secretPBytes = var . p	MessagesStorage . getInstance ( var ) . setSecretPBytes ( var . p )
MessagesStorage . secretG = var . g	MessagesStorage . getInstance ( var ) . setSecretG ( var . g )
MessagesStorage . lastSecretVersion = var . version	MessagesStorage . getInstance ( var ) . setLastSecretVersion ( var . version )
var . key_create_date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . key_create_date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . encryptedChatUpdated , var )
if ( var == null )	if ( var == null var )
MessagesStorage . secretPBytes = var . p	MessagesStorage . getInstance ( var ) . setSecretPBytes ( var . p )
MessagesStorage . secretG = var . g	MessagesStorage . getInstance ( var ) . setSecretG ( var . g )
MessagesStorage . lastSecretVersion = var . version	MessagesStorage . getInstance ( var ) . setLastSecretVersion ( var . version )
final byte var = new byte [ 256 ]	final byte var var = new byte [ 256 ]
var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . secretPBytes ) , MessagesStorage . secretPBytes )	var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . getInstance ( var ) . getSecretPBytes var ) , MessagesStorage . getInstance ( var ) . getSecretPBytes var )
var . user_id = MessagesController . getInputUser ( var )	var . user_id = MessagesController . getInstance ( var ) . getInputUser ( var )
MessagesController . getInstance ( ) . putEncryptedChat ( var , false )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , false )
var . last_message_date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . last_message_date = ConnectionsManager . getInstance ( var ) . getCurrentTime var
MessagesController . getInstance ( ) . dialogs_dict . put ( var . id , var )	MessagesController . getInstance ( var ) . dialogs_dict . put ( var . id , var )
MessagesController . getInstance ( ) . dialogs . add ( var )	MessagesController . getInstance ( var ) . dialogs . add ( var )
MessagesStorage . getInstance ( ) . putEncryptedChat ( var , var , var )	MessagesStorage . getInstance ( var ) . putEncryptedChat ( var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . encryptedChatCreated , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . encryptedChatCreated , var )
MessagesController . getInstance ( ) . processUpdateArray ( var , null , null , false )	MessagesController . getInstance ( var ) . processUpdateArray ( var , null , null , false )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . wasUnableToFindCurrentLocation , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . wasUnableToFindCurrentLocation , var )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( ( TLRPC . TL_messages_sendEncryptedMultiMedia ) var . var , this )	SecretChatHelper . getInstance ( currentAccount ) . performSendEncryptedRequest ( ( TLRPC . TL_messages_sendEncryptedMultiMedia ) var . var , this )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )	MessagesStorage . getInstance ( currentAccount ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )	MessagesStorage . getInstance ( currentAccount ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
SendMessagesHelper var = var	SendMessagesHelper var = var [ var ]
var = var	var = var [ var ]
var = var = new SendMessagesHelper	var [ var ] = var = new SendMessagesHelper ( var )
public SendMessagesHelper	public SendMessagesHelper ( int var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidUpload )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileDidUpload )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailUpload )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileDidFailUpload )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FilePreparingStarted )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FilePreparingStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileNewChunkAvailable )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileNewChunkAvailable )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FilePreparingFailed )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FilePreparingFailed )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . httpFileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . httpFileDidFailedLoad )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . httpFileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . httpFileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( SendMessagesHelper . this , NotificationCenter . FileDidFailedLoad )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . obj . messageOwner , var . encryptedChat , var , var . originalPath , var . obj )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . obj . messageOwner , var . encryptedChat , var , var . originalPath , var . obj )
FileLoader . getInstance ( ) . checkUploadNewDataAvailable ( var , var , var )	FileLoader . getInstance ( var ) . checkUploadNewDataAvailable ( var , var , var , var )
var . messageOwner . var = ""	var . messageOwner . params . remove ( "" )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
var . obj . messageOwner . var = ""	var . obj . messageOwner . params . remove ( "" )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
final File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	final File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
final TLRPC . TL_photo var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . toString ( ) , null )	final TLRPC . TL_photo var = generatePhotoSizes ( var . toString ( ) , null )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . messageOwner )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . messageOwner )
final File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	final File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . obj . messageOwner )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . updateMessageMedia , var . obj . messageOwner )
MessagesStorage . getInstance ( ) . putMessages ( var , var . peer , - 2 , 0 , false )	MessagesStorage . getInstance ( var ) . putMessages ( var , var . peer , - 2 , 0 , false )
FileLoader . getInstance ( ) . cancelUploadFile ( var , var )	FileLoader . getInstance ( var ) . cancelUploadFile ( var , var )
MessagesController . getInstance ( ) . deleteMessages ( var , null , null , var . messageOwner . to_id . channel_id , false )	MessagesController . getInstance ( var ) . deleteMessages ( var , null , null , var , false )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( var )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )	MessagesStorage . getInstance ( var ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
SecretChatHelper . getInstance ( ) . sendTTLMessage ( var , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendTTLMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendMessagesDeleteMessage ( var , null , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendMessagesDeleteMessage ( var , null , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendClearHistoryMessage ( var , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendClearHistoryMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendNotifyLayerMessage ( var , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendNotifyLayerMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendMessagesReadMessage ( var , null , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendMessagesReadMessage ( var , null , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendScreenshotMessage ( var , null , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendScreenshotMessage ( var , null , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendCommitKeyMessage ( var , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendCommitKeyMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendAbortKeyMessage ( var , var . messageOwner , 0 )	SecretChatHelper . getInstance ( var ) . sendAbortKeyMessage ( var , var . messageOwner , 0 )
SecretChatHelper . getInstance ( ) . sendRequestKeyMessage ( var , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendRequestKeyMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendAcceptKeyMessage ( var , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendAcceptKeyMessage ( var , var . messageOwner )
SecretChatHelper . getInstance ( ) . sendNoopMessage ( var , var . messageOwner )	SecretChatHelper . getInstance ( var ) . sendNoopMessage ( var , var . messageOwner )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( ( int ) var . getDialogId ( ) )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( ( int ) var . getDialogId ( ) )
sendMessage ( ( TLRPC . TL_photo ) var . messageOwner . media . photo , null , var , var . replyMessageObject , null , null , var . messageOwner . media . ttl_seconds )	sendMessage ( ( TLRPC . TL_photo ) var . messageOwner . media . photo , null , var , var . replyMessageObject , var . messageOwner . message , var . messageOwner . entities , null , null , var . messageOwner . media . ttl_seconds )
sendMessage ( ( TLRPC . TL_document ) var . messageOwner . media . document , null , var . messageOwner . attachPath , var , var . replyMessageObject , null , null , var . messageOwner . media . ttl_seconds )	sendMessage ( ( TLRPC . TL_document ) var . messageOwner . media . document , null , var . messageOwner . attachPath , var , var . replyMessageObject , var . messageOwner . message , var . messageOwner . entities , null , null , var . messageOwner . media . ttl_seconds )
if ( var == null || var == 0 || var . id == UserConfig . getClientUserId ( ) )	if ( var == null || var == 0 || var . id == UserConfig . getInstance ( var ) . getClientUserId )
var . local_id = var . id = UserConfig . getNewMessageId ( )	var . local_id = var . id = UserConfig . getInstance ( var ) . getNewMessageId
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( var ) . getClientUserId
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . dialog_id , var )	MessagesController . getInstance ( var ) . updateInterfaceWithMessages ( var . dialog_id , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( var )
SendMessagesHelper . getInstance ( ) . sendMessage ( ( TLRPC . TL_document ) var , null , null , var , var , null , null , 0 )	sendMessage ( ( TLRPC . TL_document ) var , null , null , var , var , null , null , null , null , 0 )
final TLRPC . Peer var = MessagesController . getPeer ( ( int ) var )	final TLRPC . Peer var = MessagesController . getInstance ( var ) . getPeer ( ( int ) var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
HashMap < Long , Long > var = new HashMap	LongSparseArray < Long > var = new LongSparseArray
HashMap < Long , TLRPC . Message > var = new HashMap	final LongSparseArray < TLRPC . Message > var = var
TLRPC . InputPeer var = MessagesController . getInputPeer ( var )	TLRPC . InputPeer var = MessagesController . getInstance ( var ) . getInputPeer ( var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
if ( var . getId ( ) <= 0 || var . isSecretPhoto ( ) )	if ( var . getId ( ) <= 0 || var . needDrawBluredPreview ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )
var . local_id = var . id = UserConfig . getNewMessageId ( )	var . local_id = var . id = UserConfig . getInstance ( var ) . getNewMessageId
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( var ) . getClientUserId
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
if ( var instanceof TLRPC . TL_inputPeerChannel )	if ( var instanceof TLRPC . TL_inputPeerChannel && ! var )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" + var . user_id + "" + var . chat_id + "" + var . channel_id + "" + var . access_hash )	FileLog . d ( "" + var . user_id + "" + var . chat_id + "" + var . channel_id + "" + var . access_hash )
MessagesStorage . getInstance ( ) . putMessages ( new ArrayList ( var ) , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( new ArrayList ( var ) , false , true , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var , var )	MessagesController . getInstance ( var ) . updateInterfaceWithMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )	var . silent = MessagesController . getNotificationsSettings ( var ) . getBoolean ( "" + var , false )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . messageOwner . var . channel_id )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . messageOwner . var . channel_id )
final HashMap < Long , TLRPC . Message > var = var	LongSparseArray < TLRPC . Message > var = new LongSparseArray
HashMap < Integer , Long > var = new HashMap	SparseLongArray var = new SparseLongArray
Integer var = MessagesController . getInstance ( ) . dialogs_read_outbox_max . get ( var )	Integer var = MessagesController . getInstance ( var ) . dialogs_read_outbox_max . get ( var )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( true , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( true , var )
MessagesController . getInstance ( ) . dialogs_read_outbox_max . put ( var , var )	MessagesController . getInstance ( var ) . dialogs_read_outbox_max . put ( var , var )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )	MessagesController . getInstance ( var ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )
MessagesController . getInstance ( ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . var . channel_id )	MessagesController . getInstance ( var ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . var . channel_id )
Long var = var . get ( var . id )	long var = var . get ( var . id )
if ( var != null )	if ( var != 0 )
MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . var , var , var . id , 0 , false , var . channel_id )	MessagesStorage . getInstance ( var ) . updateMessageStateAndId ( var . var , var , var . id , 0 , false , var . channel_id )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , true , false , false , 0 )
SearchQuery . increasePeerRaiting ( var )	DataQuery . getInstance ( var ) . increasePeerRaiting ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var , var . id , var , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var , var . id , var , var , 0L )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , var )
AlertsCreator . processError ( var , null , var )	AlertsCreator . processError ( var , var , null , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
var . peer = MessagesController . getInputPeer ( ( int ) var . getDialogId ( ) )	var . peer = MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var . getDialogId ( ) )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )	MessagesController . getInstance ( var ) . processUpdates ( ( TLRPC . Updates ) var , false )
AlertsCreator . processError ( var , var , var )	AlertsCreator . processError ( var , var , var , var )
var . geo . lat = var . getLatitude ( )	var . geo . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( ) )
var . geo . _long = var . getLongitude ( )	var . geo . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . getDialogId ( ) , var , null , null )	sendMessage ( var , var . getDialogId ( ) , var , null , null )
var . put ( var , var )	var . put ( var , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesStorage . getInstance ( ) . saveBotCache ( var , var )	MessagesStorage . getInstance ( var ) . saveBotCache ( var , var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
var . showOpenGameAlert ( var , var , var . url , ! var && ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) , Activity . MODE_PRIVATE . getBoolean ( "" + var , true ) + var , true , var )	var . showOpenGameAlert ( var , var , var . url , ! var && MessagesController . getNotificationsSettings ( var ) . getBoolean ( "" + var , true ) + var , true , var )
MessagesStorage . getInstance ( ) . getBotCache ( var , var )	MessagesStorage . getInstance ( var ) . getBotCache ( var , var )
ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )	ConnectionsManager . getInstance ( var ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )	ConnectionsManager . getInstance ( var ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
var . peer = MessagesController . getInputPeer ( ( int ) var . getDialogId ( ) )	var . peer = MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var . getDialogId ( ) )
ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )	ConnectionsManager . getInstance ( var ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var . channel_id , false )	var . silent = MessagesController . getNotificationsSettings ( var ) . getBoolean ( "" + var . channel_id , false )
var = MessagesStorage . getInstance ( ) . createPendingTask ( var )	var = MessagesStorage . getInstance ( var ) . createPendingTask ( var )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )	MessagesController . getInstance ( var ) . processUpdates ( ( TLRPC . Updates ) var , false )
sendMessage ( null , null , null , null , var , null , null , var , null , var , null , true , null , null , var , var , 0 )	sendMessage ( null , null , null , null , null , null , null , var , var , null , null , null , true , null , null , var , var , 0 )
sendMessage ( null , null , null , var , null , var , null , var , var , var , null , true , null , null , var , var , var )	sendMessage ( null , var , null , null , var , null , var , null , var , var , var , null , true , null , var , var , var , var )
sendMessage ( null , var , null , null , null , null , null , var , null , var , null , true , null , null , var , var , 0 )	sendMessage ( null , null , var , null , null , null , null , null , var , null , var , null , true , null , null , var , var , 0 )
sendMessage ( null , null , null , null , null , null , var , var , null , null , null , true , null , null , var , var , 0 )	sendMessage ( null , null , null , null , null , var , null , null , var , null , var , null , true , null , null , var , var , 0 )
sendMessage ( null , null , var , null , null , null , null , var , var , var , null , true , null , null , var , var , var )	sendMessage ( null , var , null , var , null , null , null , null , var , var , var , null , true , null , var , var , var , var )
var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	var = MessagesController . getInstance ( var ) . getEncryptedChat ( var )
MessagesStorage . getInstance ( ) . markMessageAsSendError ( var . messageOwner )	MessagesStorage . getInstance ( var ) . markMessageAsSendError ( var . messageOwner )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . getId ( ) )
var . var = ""	var . message = var . editingMessage . toString ( )
var . var = ""	var . media . vcard = ""
var . var = ""	if ( var . var == null )
var = StickersQuery . getStickerSetName ( var . stickerset . id )	var = DataQuery . getInstance ( var ) . getStickerSetName ( var . stickerset . id )
var . local_id = var . id = UserConfig . getNewMessageId ( )	var . local_id = var . id = UserConfig . getInstance ( var ) . getNewMessageId
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
TLRPC . InputUser var = MessagesController . getInputUser ( var )	TLRPC . InputUser var = MessagesController . getInstance ( var ) . getInputUser ( var )
if ( var . participant_id == UserConfig . getClientUserId ( ) )	if ( var . participant_id == UserConfig . getInstance ( var ) . getClientUserId )
MessagesStorage . getInstance ( ) . putMessages ( var , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , false , true , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var , var )	MessagesController . getInstance ( var ) . updateInterfaceWithMessages ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" + var . user_id + "" + var . chat_id + "" + var . channel_id + "" + var . access_hash )	FileLog . d ( "" + var . user_id + "" + var . chat_id + "" + var . channel_id + "" + var . access_hash )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )	var . silent = MessagesController . getNotificationsSettings ( var ) . getBoolean ( "" + var , false )
if ( var != null )	if ( var . reply_to_msg_id != 0 )
var . reply_to_msg_id = var . getId ( )	var . reply_to_msg_id = var . reply_to_msg_id
DraftQuery . cleanDraft ( var , false )	DataQuery . getInstance ( var ) . cleanDraft ( var , false )
if ( var != null && var . messageOwner . random_id != 0 )	if ( var . reply_to_random_id != 0 )
var . reply_to_random_id = var . messageOwner . random_id	var . reply_to_random_id = var . reply_to_random_id
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
DraftQuery . cleanDraft ( var , false )	DataQuery . getInstance ( var ) . cleanDraft ( var , false )
DraftQuery . cleanDraft ( var , false )	DataQuery . getInstance ( var ) . cleanDraft ( var , false )
if ( var != null )	if ( var . reply_to_msg_id != 0 )
var . reply_to_msg_id = var . getId ( )	var . reply_to_msg_id = var . reply_to_msg_id
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )	var . silent = MessagesController . getNotificationsSettings ( var ) . getBoolean ( "" + var , false )
if ( var != null )	if ( var . reply_to_msg_id != 0 )
var . reply_to_msg_id = var . getId ( )	var . reply_to_msg_id = var . reply_to_msg_id
if ( var != null && var . messageOwner . random_id != 0 )	if ( var . reply_to_random_id != 0 )
var . reply_to_random_id = var . messageOwner . random_id	var . reply_to_random_id = var . reply_to_random_id
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . messageOwner , var , null , null , var )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . messageOwner , var , var , null , var )
DraftQuery . cleanDraft ( var , false )	DataQuery . getInstance ( var ) . cleanDraft ( var , false )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var . messageOwner . var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var . messageOwner . var )
var . silent = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )	var . silent = MessagesController . getNotificationsSettings ( var ) . getBoolean ( "" + var , false )
if ( var != null )	if ( var . reply_to_msg_id != 0 )
var . reply_to_msg_id = var . getId ( )	var . reply_to_msg_id = var . reply_to_msg_id
DraftQuery . cleanDraft ( var , false )	DataQuery . getInstance ( var ) . cleanDraft ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" )	ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" , var )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )	FileLoader . getInstance ( var ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
FileLoader . getInstance ( ) . loadFile ( var . var , "" , 0 , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . var , "" , 0 , 0 )
FileLoader . getInstance ( ) . uploadFile ( var , true , true , ConnectionsManager . FileTypePhoto )	FileLoader . getInstance ( var ) . uploadFile ( var , true , true , ConnectionsManager . FileTypePhoto )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""	var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( var , var . obj . messageOwner , var . encryptedChat , var . videoEditedInfo . encryptedFile , var . originalPath , var . obj )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( var , var . obj . messageOwner , var . encryptedChat , var . videoEditedInfo . encryptedFile , var . originalPath , var . obj )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""	var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
FileLoader . getInstance ( ) . uploadFile ( var , false , false , var . size , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , false , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , false , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , false , false , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )	FileLoader . getInstance ( var ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""	var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
FileLoader . getInstance ( ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var , true , 0 )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , var . size , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , true , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeVideo )
ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" )	ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" , var )
FileLoader . getInstance ( ) . uploadFile ( var , var . sendRequest == null , false , ConnectionsManager . FileTypeFile )	FileLoader . getInstance ( var ) . uploadFile ( var , var . sendRequest == null , false , ConnectionsManager . FileTypeFile )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )	FileLoader . getInstance ( var ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
FileLoader . getInstance ( ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var , true , 0 )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeFile )	FileLoader . getInstance ( var ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeFile )
FileLoader . getInstance ( ) . uploadFile ( var , var . sendRequest == null , true , ConnectionsManager . FileTypeAudio )	FileLoader . getInstance ( var ) . uploadFile ( var , var . sendRequest == null , true , ConnectionsManager . FileTypeAudio )
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""	var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""	var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) + "" + var . id + ""
FileLoader . getInstance ( ) . uploadFile ( var , false , false , var . size , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , false , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , false , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , false , false , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )	FileLoader . getInstance ( var ) . uploadFile ( var , false , true , ConnectionsManager . FileTypePhoto )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , var . size , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , true , false , var . size , ConnectionsManager . FileTypeVideo )
FileLoader . getInstance ( ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var , true , false , ConnectionsManager . FileTypeVideo )
ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" )	ImageLoader . getInstance ( ) . loadHttpFile ( var . httpLocation , "" , var )
FileLoader . getInstance ( ) . uploadFile ( var , var . sendEncryptedRequest != null , true , ConnectionsManager . FileTypePhoto )	FileLoader . getInstance ( var ) . uploadFile ( var , var . sendEncryptedRequest != null , true , ConnectionsManager . FileTypePhoto )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , 1.0f , false )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , 1.0f , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , 1.0f , false )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . FileUploadProgressChanged , var , 1.0f , false )
MessagesStorage . getInstance ( ) . putMessages ( var . messages , false , true , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var . messages , false , true , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . peer , var . messageObjects )	MessagesController . getInstance ( var ) . updateInterfaceWithMessages ( var . peer , var . messageObjects )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
SecretChatHelper . getInstance ( ) . performSendEncryptedRequest ( ( TLRPC . TL_messages_sendEncryptedMultiMedia ) var . sendEncryptedRequest , var )	SecretChatHelper . getInstance ( var ) . performSendEncryptedRequest ( ( TLRPC . TL_messages_sendEncryptedMultiMedia ) var . sendEncryptedRequest , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . stopEncodingService , var )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . stopEncodingService , var , var )
return var . containsKey ( var )	TLRPC . Message var = var . get ( var )
HashMap < Integer , TLRPC . Message > var = new HashMap	SparseArray < TLRPC . Message > var = new SparseArray
HashMap < Long , Integer > var = new HashMap	LongSparseArray < Integer > var = new LongSparseArray
var . put ( var . random_id , ( ( TLRPC . TL_updateMessageID ) var ) . id )	var . put ( var . random_id , var . id )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )	MessagesController . getInstance ( var ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )
MessagesController . getInstance ( ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . message . to_id . channel_id )	MessagesController . getInstance ( var ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . var . to_id . channel_id )
Integer var = MessagesController . getInstance ( ) . dialogs_read_outbox_max . get ( var . dialog_id )	Integer var = MessagesController . getInstance ( var ) . dialogs_read_outbox_max . get ( var . dialog_id )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesController . getInstance ( ) . dialogs_read_outbox_max . put ( var . dialog_id , var )	MessagesController . getInstance ( var ) . dialogs_read_outbox_max . put ( var . dialog_id , var )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )
MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , var , var . var , 0 , false , var . to_id . channel_id )	MessagesStorage . getInstance ( var ) . updateMessageStateAndId ( var . random_id , var , var . var , 0 , false , var . to_id . channel_id )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , true , false , false , 0 )
SearchQuery . increasePeerRaiting ( var . dialog_id )	DataQuery . getInstance ( var ) . increasePeerRaiting ( var . dialog_id )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
AlertsCreator . processError ( var , null , var )	AlertsCreator . processError ( var , var , null , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , var . date , var . pts_count )	MessagesController . getInstance ( var ) . processNewDifferenceParams ( - 1 , var . pts , var . date , var . pts_count )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )	MessagesController . getInstance ( var ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )
MessagesController . getInstance ( ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . var . to_id . channel_id )	MessagesController . getInstance ( var ) . processNewChannelDifferenceParams ( var . pts , var . pts_count , var . message . to_id . channel_id )
Integer var = MessagesController . getInstance ( ) . dialogs_read_outbox_max . get ( var . dialog_id )	Integer var = MessagesController . getInstance ( var ) . dialogs_read_outbox_max . get ( var . dialog_id )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var . dialog_id )
MessagesController . getInstance ( ) . dialogs_read_outbox_max . put ( var . dialog_id , var )	MessagesController . getInstance ( var ) . dialogs_read_outbox_max . put ( var . dialog_id , var )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
LocationController . getInstance ( ) . addSharingLocation ( var . dialog_id , var . id , var . media . period , var )	LocationController . getInstance ( var ) . addSharingLocation ( var . dialog_id , var . id , var . media . period , var )
StatsController . getInstance ( ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( ConnectionsManager . getCurrentNetworkType ( ) , StatsController . TYPE_MESSAGES , 1 )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , var , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , true , false , var , 0 )
MessagesStorage . getInstance ( ) . putMessages ( var , true , false , false , 0 )	MessagesStorage . getInstance ( var ) . putMessages ( var , true , false , false , 0 )
MessagesController . getInstance ( ) . updateInterfaceWithMessages ( var . getDialogId ( ) , var , true )	MessagesController . getInstance ( var ) . updateInterfaceWithMessages ( var . getDialogId ( ) , var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . dialogsNeedReload )
SearchQuery . increasePeerRaiting ( var . dialog_id )	DataQuery . getInstance ( var ) . increasePeerRaiting ( var . dialog_id )
AlertsCreator . processError ( var , null , var )	AlertsCreator . processError ( var , var , null , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageSendError , var . id )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageSendError , var . id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByAck , var )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . messageReceivedByAck , var )
MessagesStorage . getInstance ( ) . putSentFile ( var , var . media . photo , 0 )	MessagesStorage . getInstance ( var ) . putSentFile ( var , var . media . photo , 0 )
MessagesStorage . getInstance ( ) . putSentFile ( var , var . media . document , 2 )	MessagesStorage . getInstance ( var ) . putSentFile ( var , var . media . document , 2 )
MessagesStorage . getInstance ( ) . putSentFile ( var , var . media . document , 1 )	MessagesStorage . getInstance ( var ) . putSentFile ( var , var . media . document , 1 )
StickersQuery . addRecentGif ( var . media . document , var . date )	DataQuery . getInstance ( var ) . addRecentGif ( var . media . document , var . date )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var . media . document , var . date , false )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var . media . document , var . date , false )
if ( var . attachPath != null && var . attachPath . startsWith ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE . getAbsolutePath ) )	if ( var . attachPath != null && var . attachPath . startsWith ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE . getAbsolutePath ) )
MessagesStorage . getInstance ( ) . addRecentLocalFile ( var , var . toString ( ) , var . media . document )	MessagesStorage . getInstance ( var ) . addRecentLocalFile ( var , var . toString ( ) , var . media . document )
MessagesController . getInstance ( ) . putUsers ( var , true )	MessagesController . getInstance ( var ) . putUsers ( var , true )
MessagesController . getInstance ( ) . putChats ( var , true )	MessagesController . getInstance ( var ) . putChats ( var , true )
MessagesController . getInstance ( ) . putEncryptedChats ( var , true )	MessagesController . getInstance ( var ) . putEncryptedChats ( var , true )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
if ( var . toLowerCase ( ) . equals ( "" ) || var . toLowerCase ( ) . equals ( "" ) )	if ( var . equals ( "" ) || var . equals ( "" ) . equals ( "" ) || var . equals ( "" ) || var . equals ( "" ) )
if ( var != null && var . getDuration ( ) != 0 )	if ( var != 0 )
var . duration = int ( var . getDuration ( ) / 1000 )	var . var = var
var . title = var . getTitle ( )	var = var . getTitle ( )
var . performer = var . getArtist ( )	var = var . getArtist ( )
String var = var . getMimeTypeFromExtension ( var . toLowerCase ( ) )	String var = var . toLowerCase ( )
if ( var . mime_type . equals ( "" ) )	if ( var . mime_type . equals ( "" ) && ( var == null || var . getGroupIdForUse ( ) == 0 ) )
if ( var . mime_type . equals ( "" ) && var )	if ( var . mime_type . equals ( "" ) && var && var == null )
prepareSendingDocuments ( var , var , var , var , var , var , var )	prepareSendingDocuments ( var , var , var , var , var , var , var , var )
if ( ! prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , null ) = true )	if ( ! prepareSendingDocumentInternal ( var , var . get ( var ) , var . get ( var ) , null , var , var , var , null , null , var ) = true )
if ( ! prepareSendingDocumentInternal ( null , null , var . get ( var ) , var , var , var , null ) = true )	if ( ! prepareSendingDocumentInternal ( var , null , null , var . get ( var ) , var , var , var , null , null , var ) = true )
prepareSendingMedia ( var , var , var , var , false , false )	prepareSendingMedia ( var , var , var , var , false , false , var )
if ( var . content_url != null )	if ( var . content != null )
var = var . content_url	var = var . content . url
var . mime_type = var . content_type	var . mime_type = ""
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
int var = var . content_type . indexOf ( '/' )	int var = var . content . mime_type . lastIndexOf ( '/' )
var . file_name = "" + var . content_type . substring ( var + 1 )	var . file_name = "" + var . content . mime_type . substring ( var + 1 )
String var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . thumb_url ) . thumb_url + "" + ImageLoader . getHttpUrlExtension ( var . thumb_url , "" ) . thumb_url , "" ) . getAbsolutePath	String var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . thumb . url ) . thumb . url + "" + ImageLoader . getHttpUrlExtension ( var . thumb . url , "" ) . thumb . url , "" ) . getAbsolutePath var
var . w = var . w	var . w = wh [ 0 ]
var . h = var . h	var . h = wh [ 1 ]
String var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . thumb_url ) . thumb_url + "" + ImageLoader . getHttpUrlExtension ( var . thumb_url , "" ) . thumb_url , "" ) . getAbsolutePath	String var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . MD5 ( var . thumb . url ) . thumb . url + "" + ImageLoader . getHttpUrlExtension ( var . thumb . url , "" ) . thumb . url , "" ) . getAbsolutePath var
var . thumb . w = var . w	var . thumb . w = wh [ 0 ]
var . thumb . h = var . h	var . thumb . h = wh [ 1 ]
var . thumb . var = new TLRPC . TL_fileLocationUnavailable ( )	var . thumb . var = new TLRPC . TL_fileLocationUnavailable ( var )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var , null )	var = SendMessagesHelper . getInstance ( var ) . generatePhotoSizes ( var , null )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
var . w = var . w	var . w = wh [ 0 ]
var . h = var . h	var . h = wh [ 1 ]
if ( var != null && var . content_url != null )	if ( var != null && var . content != null )
var . put ( "" , var . content_url )	var . put ( "" , var . content . url )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , var . send_message . reply_markup , var , 0 )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , var . send_message . message , var . send_message . entities , var . send_message . reply_markup , var , 0 )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . send_message . message , var , var , var , ! var . send_message . no_webpage , var . send_message . entities , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var . send_message . message , var , var , var , ! var . send_message . no_webpage , var . send_message . entities , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , null , null , true , null , null , null )
var . var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . path , var . uri )	var . var = SendMessagesHelper . getInstance ( var ) . generatePhotoSizes ( var . path , var . uri )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , null , var , 0 )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , var , var , null , var , 0 )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . toString ( ) , null )	var = SendMessagesHelper . getInstance ( var ) . generatePhotoSizes ( var . toString ( ) , null )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . toString ( ) , null )	var = SendMessagesHelper . getInstance ( var ) . generatePhotoSizes ( var . toString ( ) , null )
var . date = ConnectionsManager . getInstance ( ) . getCurrentTime	var . date = ConnectionsManager . getInstance ( var ) . getCurrentTime
if ( var . videoEditedInfo != null || var . path . endsWith ( "" ) )	if ( ! var && ( var != null || var . path . endsWith ( "" ) ) )
if ( var . videoEditedInfo != null )	if ( var != null )
var = var . videoEditedInfo . var	var = var . var
if ( var . videoEditedInfo . resultWidth == var . videoEditedInfo . originalWidth )	if ( var . resultWidth != var . originalWidth )
var += "" + var . videoEditedInfo . resultWidth	var += "" + var . resultWidth
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
if ( var . videoEditedInfo != null && var . videoEditedInfo . needConvert ( ) )	if ( var != null && var . needConvert ( ) )
if ( var . videoEditedInfo . var )	if ( var . var )
fillVideoAttribute ( var . var , var , var . videoEditedInfo )	fillVideoAttribute ( var . var , var , var )
var . videoEditedInfo . originalWidth = var . w	var . originalWidth = var . w
var . videoEditedInfo . originalHeight = var . h	var . originalHeight = var . h
var . w = var . videoEditedInfo . resultWidth	var . w = var . resultWidth
var . h = var . videoEditedInfo . resultHeight	var . h = var . resultHeight
var . duration = int ( var . videoEditedInfo . estimatedDuration / 1000 )	var . duration = int ( var . estimatedDuration / 1000 )
if ( var . videoEditedInfo . rotationValue == 90 || var . videoEditedInfo . rotationValue == 270 )	if ( var . rotationValue == 90 || var . rotationValue == 270 )
var . w = var . videoEditedInfo . resultHeight	var . w = var . resultHeight
var . h = var . videoEditedInfo . resultWidth	var . h = var . resultWidth
var . w = var . videoEditedInfo . resultWidth	var . w = var . resultWidth
var . h = var . videoEditedInfo . resultHeight	var . h = var . resultHeight
var . var = ( int ) var . videoEditedInfo . estimatedSize	var . var = ( int ) var . estimatedSize
String var = Integer . MIN_VALUE + "" + UserConfig . lastLocalId + ""	String var = Integer . MIN_VALUE + "" + SharedConfig . getLastLocalId ( ) + ""
UserConfig . saveConfig ( false )	SharedConfig . saveConfig ( )
FileLog . var ( "" , var )	FileLog . var ( var )
var = SendMessagesHelper . getInstance ( ) . generatePhotoSizes ( var . path , var . uri )	var = SendMessagesHelper . getInstance ( var ) . generatePhotoSizes ( var . path , var . uri )
SendMessagesHelper var = getInstance	SendMessagesHelper var = getInstance ( var )
MessagesStorage . getInstance ( ) . putMessages ( var , var . peer , - 2 , 0 , false )	MessagesStorage . getInstance ( var ) . putMessages ( var , var . peer , - 2 , 0 , false )
prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , var . get ( var ) )	prepareSendingDocumentInternal ( var , var . get ( var ) , var . get ( var ) , null , var , var , var , var . get ( var ) , var . get ( var ) , var )
var = Bitmaps . createScaledBitmap ( var , var , var , true )	Bitmap var = Bitmaps . createScaledBitmap ( var , var , var , true )
if ( var . resultWidth == var . originalWidth )	if ( var . resultWidth != var . originalWidth )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( var )
String var = Integer . MIN_VALUE + "" + UserConfig . lastLocalId + ""	String var = Integer . MIN_VALUE + "" + SharedConfig . getLastLocalId ( ) + ""
UserConfig . lastLocalId --	SharedConfig . saveConfig ( )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( var ) . saveConfig ( false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceiveSmsCode , var . group ( 0 ) )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didReceiveSmsCode , var . group ( 0 ) )
var = var	var [ 2 ] = byte ( var >>> 40 )
private StatsController var	private StatsController ( int var )
if ( Math . abs ( var - var . get ( var ) ) >= 1000 )	if ( Math . abs ( var - var . get ( var ) ) >= 2000 )
for ( int var = 0 ; var < var ; var ++ )	for ( int var = 0 ; var < 3 ; var ++ )
var . apply ( var )	var . getFD ( var ) . sync var
LocationController . getInstance ( ) . removeAllLocationSharings	LocationController . getInstance ( var ) . removeAllLocationSharings
if ( ! UserConfig . isClientActivated ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . add ( UserConfig . getClientUserId ( ) )	var . add ( UserConfig . getInstance ( var ) . getClientUserId )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , 0 , 30 ) . US , "" , 0 , 30 )	SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , 0 , 30 ) . US , "" , 0 , 30 )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )	MessagesStorage . getInstance ( var ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )	MessagesStorage . getInstance ( var ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
var . release ( )	var . countDown ( )
var . acquire ( )	var . await ( )
var . putString ( "" , var )	var = ApplicationLoader . applicationContext . getSharedPreferences ( "" + var , Context . MODE_PRIVATE )
var . putInt ( "" , var )	var . putBoolean ( "" , var )
var . putInt ( "" , var )	var . putBoolean ( "" , var )
var . putInt ( "" , var )	var . putString ( "" , var )
var . putBoolean ( "" , var )	var . putInt ( "" , var )
var . putBoolean ( "" , var )	var . putLong ( "" , var )
var . putBoolean ( "" , var )	var . putLong ( "" , var )
SerializedData var = new SerializedData ( var )	SerializedData var = new SerializedData ( var . getObjectSize ( ) )
int var = var . readInt32 ( false )	public UserConfig ( int var ) = var
int var = var . readInt32 ( false )	int var = 0
var = TLRPC . User . TLdeserialize ( var , var , false )	var = TLRPC . TL_help_termsOfService . TLdeserialize ( var , var . readInt32 ( false ) , false )
var = var . getInt ( "" , - 210000 )	var = var . getInt ( "" , 0 )
var = var . getInt ( "" , - 210000 )	var = var . getInt ( "" , var )
var = var . getString ( "" , "" )	String var = var . getString ( "" , null )
var = var . getInt ( "" , 0 )	if ( var == 0 )
var = var . getString ( "" , "" )	String var = var . getString ( "" , null )
var = var . getBoolean ( "" , false )	var = var . getBoolean ( "" , true )
var = int ( System . currentTimeMillis ( ) / 1000 - 60 * 10 )	var = var . getLong ( "" , System . currentTimeMillis ( ) )
String var = var . getString ( "" , "" )	String var = var . getString ( "" , null )
var = Base64 . decode ( var , Base64 . DEFAULT )	byte var = Base64 . decode ( var , Base64 . DEFAULT )
var = new byte [ 0 ]	byte var = Base64 . decode ( var , Base64 . DEFAULT )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )	var = ApplicationLoader . applicationContext . getSharedPreferences ( "" + var , Context . MODE_PRIVATE )
Map < String , ? > var = var . getAll ( )	byte var = Base64 . decode ( var , Base64 . DEFAULT )
String var = LocaleController . getString ( "" , R . var . SoundDefault )	byte var = Base64 . decode ( var , Base64 . DEFAULT )
int var = 0	long var = 0
String var = var . getKey ( )	String var = Base64 . encodeToString ( var . toByteArray ( ) , Base64 . DEFAULT )
String var = ( String ) var . getValue ( )	String var = Base64 . encodeToString ( var . toByteArray ( ) , Base64 . DEFAULT )
if ( ! var . equals ( var ) )	if ( var != null )
if ( ! var . contains ( var ) )	var = TLRPC . TL_help_termsOfService . TLdeserialize ( var , var . readInt32 ( false ) , false )
var . add ( var )	var . cleanup ( )
Integer var = ( Integer ) var . getValue ( )	var = var . getLong ( "" , System . currentTimeMillis ( ) )
if ( var . startsWith ( "" ) )	var = var . getInt ( "" , BuildVars . BUILD_VERSION )
Integer var = ( Integer ) var . getValue ( )	byte var = Base64 . decode ( var , Base64 . DEFAULT )
if ( var != var )	if ( var != null )
if ( ! var . contains ( var ) )	var = ( TLRPC . TL_help_appUpdate ) TLRPC . help_AppUpdate . TLdeserialize ( var , var . readInt32 ( false ) , false )
var . add ( var )	var . cleanup ( )
Integer var = ( Integer ) var . getValue ( )	PackageInfo var = ApplicationLoader . applicationContext . getPackageManager ( ) . getPackageInfo ( ApplicationLoader . applicationContext . getPackageName ( ) , 0 )
var . add ( var )	var = Math . max ( var . lastUpdateTime , var . firstInstallTime )
if ( var . startsWith ( "" ) )	var = Math . max ( var . lastUpdateTime , var . firstInstallTime )
Integer var = ( Integer ) var . getValue ( )	var = Math . max ( var . lastUpdateTime , var . firstInstallTime )
var . add ( var )	FileLog . var ( var )
Integer var = ( Integer ) var . getValue ( )	if ( var != BuildVars . BUILD_VERSION || var < var )
if ( var != var )	if ( var != BuildVars . BUILD_VERSION || var < var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
var . commit ( )	var = var . id
if ( var . length == 0 )	if ( var == null )
var = new byte [ 16 ]	var = var [ var ]
System . arraycopy ( var , 0 , var , 0 , 16 )	if ( var == null && var == null || Math . abs ( SystemClock . elapsedRealtime ( ) - var ) < 30 * 60 * 1000 )
String var = Utilities . bytesToHex ( Utilities . computeSHA256 ( var , 0 , var . length ) , 0 , var . length )	for ( int var = 0 ; var < var . length ; var ++ )
var = false	var = 0
var = 0	var = true
var = ""	var = true
var = new byte [ 0 ]	var = true
var = 60 * 60	var = null
var = 0	var = null
var = true	var = false
var = BuildVars . BUILD_VERSION_STRING	SharedConfig . clearConfig ( )
if ( var == null || var . length ( ) == 0 )	if ( TextUtils . isEmpty ( var ) var && var . length ( ) <= 2 )
byte var = var . digest ( var . getBytes ( ) )	byte var = var . digest ( AndroidUtilities . getStringBytes ( var ) )
return String . format ( Locale . US , "" , var , var , var , var , var , var , var , var , var )	return String . format ( Locale . US , "" , var , var , var , var , var , var , var , var , var , var )
for ( int var = 9 ; var < args . length ; var ++ )	for ( int var = var ; var < args . length ; var ++ )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileUploadProgressChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileUploadProgressChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stopEncodingService )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . stopEncodingService )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileUploadProgressChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileUploadProgressChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stopEncodingService )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . stopEncodingService )
FileLog . e ( "" )	FileLog . d ( "" )
if ( var != null && var . equals ( var ) )	if ( var == var && var != null && var . equals ( var ) )
if ( var == null || var . equals ( var )  )	if ( var == var && ( var == null || var . equals ( var ) ) )
FileLog . e ( "" )	FileLog . d ( "" )
if ( UserConfig . isClientActivated ( ) )	if ( UserConfig . getInstance ( var ) . isClientActivated )
final TLRPC . User var = UserConfig . getCurrentUser ( )	final TLRPC . User var = UserConfig . getInstance ( var ) . getCurrentUser
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . FileDidLoaded )
FileLoader . getInstance ( ) . loadFile ( var . var . photo_small , null , 0 , 1 )	FileLoader . getInstance ( var ) . loadFile ( var . var . photo_small , null , 0 , 1 )
NotificationCenter . getInstance ( ) . removeObserver ( var , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . FileDidLoaded )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( false , false )
NotificationCenter . getInstance ( ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( var ) . addObserver ( var , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . removeObserver ( var , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . didReceivedNewMessages )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( true , false )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )	MessagesController . getInstance ( var ) . markDialogAsRead ( var , var , var , 0 , false , 0 , true )
if ( MediaController . getInstance ( ) . canCustomTabs )	if ( SharedConfig . customTabs )
if ( var . equals ( "" ) || var . toString ( var ) . contains ( "" ) )	if ( var . equals ( "" ) || var . toString ( var ) . toLowerCase var . contains ( "" ) )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( UserConfig . selectedAccount ) . cancelRequest ( var , true )
if ( var && MediaController . getInstance ( var ) . canCustomTabs var && ! var && ! var . equals ( "" ) )	if ( var && SharedConfig . customTabs && ! var && ! var . equals ( "" ) )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
CameraInfo var = new CameraInfo ( var , var )	CameraInfo var = new CameraInfo ( var , var . facing )
FileLog . e ( "" + var . width + "" + var . height )	FileLog . d ( "" + var . width + "" + var . height )
FileLog . e ( "" + var . width + "" + var . height )	FileLog . d ( "" + var . width + "" + var . height )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . var )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . var )
if ( var == null || var . isEmpty ( ) )	Camera var = var . cameraInfo . var
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
if ( var . camera != null )	if ( var == null )
var . camera . stopPreview ( )	var = var . cameraInfo . var = Camera . open ( var . cameraInfo . cameraId )
var . camera . release ( )	var . stopPreview ( )
var . camera = null	var . cameraInfo . var = null
var = null	if ( var != null )
var . release ( )	var . countDown ( )
var . acquire ( )	var . await ( )
if ( var . frontCamera != 0 )	if ( var . frontCamera != 0 && var )
FileLog . e ( "" + var + "" + var )	FileLog . d ( "" + var + "" + var )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
var = new Size ( 4 , 3 )	int var = 4
public CameraInfo ( int var , Camera . CameraInfo var )	public CameraInfo ( int var , int var )
var = var . facing	var = var
FileLog . var ( "" + var . getWidth ( ) + "" + var . getHeight ( ) )	FileLog . d ( "" + var . getWidth ( ) + "" + var . getHeight ( ) )
FileLog . var ( "" + var . getWidth ( ) + "" + var . getHeight ( ) )	FileLog . d ( "" + var . getWidth ( ) + "" + var . getHeight ( ) )
var . setFlashMode ( var )	var . setFocusMode ( var )
initCamera ( var )	initCamera
initCamera ( var )	initCamera
var . skipData ( var - var )	return var . skipData ( var - var )
this ( var , var , var , var , var )	this ( var , var , var , var , var , var , var )
this ( var , var , var , var , var , null )	this ( var , var , var , var , var , var , var , null )
return var <= 0 || var >= var	return var <= 0 || var >= var || ( ! var && var . getTotalBytesAllocated ( ) >= var )
this ( var , null )	this ( var , var )
Constructor < ? > var = var . getConstructor ( boolean . class , long . class , Handler . class , VideoRendererEventListener . class , int . class )	Constructor < ? > var = var . getConstructor ( boolean . class , long . class , android . os . Handler . class , org . telegram . messenger . exoplayer2 . video . VideoRendererEventListener . class , int . class )
var . add ( new MediaCodecAudioRenderer ( MediaCodecSelector . DEFAULT , var , true , var , var , AudioCapabilities . getCapabilities ( var ) , var ) . DEFAULT , var , true , var , var , AudioCapabilities . getCapabilities ( var ) , var )	var . add ( new MediaCodecAudioRenderer ( var , MediaCodecSelector . DEFAULT , var , false , var , var , AudioCapabilities . getCapabilities ( var ) , var ) , MediaCodecSelector . DEFAULT , var , false , var , var , AudioCapabilities . getCapabilities ( var ) , var )
return newSimpleInstance ( var , var , var )	return newSimpleInstance ( var , var , var , var )
return new ExoPlayerImpl ( var , var , var )	return new ExoPlayerImpl ( var , var , var , Clock . DEFAULT )
this . var = Player . STATE_IDLE	PlaybackInfo var = getResetPlaybackInfo ( var , var , Player . STATE_IDLE )
var = Timeline . EMPTY	var = new PlaybackInfo ( Timeline . EMPTY , 0 , TrackGroupArray . EMPTY , var )
var = TrackGroupArray . EMPTY	var = new PlaybackInfo ( Timeline . EMPTY , 0 , TrackGroupArray . EMPTY , var )
var = new ExoPlayerImplInternal . PlaybackInfo ( 0 , 0 )	var = new Handler ( var . getPlaybackLooper ( ) )
var = new ExoPlayerImplInternal ( var , var , var , var , var , var , var , this )	var = new ExoPlayerImplInternal ( var , var , var , var , var , var , var , var , this , var )
var = null	this . var = var
var . onTimelineChanged ( var , var )	var . onShuffleModeEnabledChanged ( var )
var = var	var = SeekParameters . DEFAULT
var . onSelectionActivated ( null )	var . setSeekParameters ( var )
var . prepare ( var , var )	var . prepare ( var , var , var )
var . onPlayerStateChanged ( var , var )	var . onPlayerStateChanged ( var , var . playbackState )
int var = var . firstPeriodIndex	Timeline var = var . var
long var = var . getPeriod ( var , var ) . getDurationUs	var . obtainMessage ( ExoPlayerImplInternal . MSG_PLAYBACK_INFO_CHANGED , 1 , C . INDEX_UNSET , var ) . sendToTarget
var = var . getPeriod ( ++ var , var ) . getDurationUs	Pair < Integer , Long > var = var . getPeriodPosition ( var , var , var , var )
var = var	var = C . usToMs ( var )
var . seekTo ( var , var , C . TIME_UNSET )	var = C . usToMs ( var )
var = var	var = var . first
var . onPositionDiscontinuity ( )	var . onPositionDiscontinuity ( DISCONTINUITY_REASON_SEEK )
var . stop ( )	var . stop ( var )
if ( var . isEmpty ( ) || var > 0 )	if ( shouldMaskPosition )
return var . getPeriod ( var . periodId . periodIndex , var ) . windowIndex	var . timeline . getPeriod ( var . periodId . periodIndex , var )
if ( var . isEmpty ( ) || var > 0 )	if ( shouldMaskPosition )
if ( var . isEmpty ( ) || var > 0 )	if ( shouldMaskPosition )
return ! var . isEmpty ( ) && var == 0 && var . periodId . isAd ( )	return ! shouldMaskPosition && var . periodId . isAd ( )
var . getPeriod ( var . periodId . periodIndex , var )	return var . timeline . getPeriod ( var . periodId . periodIndex , var ) . windowIndex
var . onPlayerStateChanged ( var , var )	var . onPlayerStateChanged ( var , var . playbackState )
var . onLoadingChanged ( var )	var . onLoadingChanged ( var . isLoading )
var = true	var = false
var . onPositionDiscontinuity ( )	boolean var = var . timeline != var . timeline || var . manifest != var . manifest
if ( var == 0 )	if ( var )
var . onPositionDiscontinuity ( )	var . onPositionDiscontinuity ( var )
var -= var . seekAcks	boolean var = var . trackSelectorResult != var . trackSelectorResult
var . onTimelineChanged ( var , var )	var . onTimelineChanged ( var . timeline , var . manifest , var )
var . getPeriod ( var . periodId . periodIndex , var )	var . timeline . getPeriod ( var . periodId . periodIndex , var )
public static final SourceInfo	private static final MediaSourceRefreshInfo
public SourceInfo ( Timeline var , Object var , PlaybackInfo var , int var )	public MediaSourceRefreshInfo ( MediaSource var , Timeline var , Object var )
this . var = Player . STATE_IDLE	this . var = var
var = new StandaloneMediaClock	this . var = new MediaPeriodQueue
var = new MediaPeriodInfoSequence	var = var . var ( )
var = PlaybackParameters . DEFAULT	var = SeekParameters . DEFAULT
var = new Handler ( var . getLooper ( ) , this )	var = var . createHandler ( var . getLooper ( ) , this )
Log . w ( var , "" )	var . obtainMessage ( var , var ) . sendToTarget
Thread . currentThread ( ) . interrupt	var . obtainMessage ( var , new MediaSourceRefreshInfo ( var , var , var ) , var , var ) . sendToTarget
var . obtainMessage ( var , Pair . create ( var , var ) , var ) . sendToTarget	var = var . copyWithTimeline ( var , var )
prepareInternal ( ( MediaSource ) var . obj , var . arg1 != 0 )	prepareInternal ( ( MediaSource ) var . obj , var . arg1 != 0 , var . arg2 != 0 )
sendMessagesInternal ( ( ExoPlayerMessage ) var . obj )	sendMessageInternal ( ( PlayerMessage ) var . obj )
if ( this . var != var )	if ( var . playbackState != var )
this . var = var	var = var . copyWithPlaybackState ( var )
if ( this . var != var )	if ( var . var != var )
this . var = var	var = var . copyWithIsLoading ( var )
resetInternal ( true )	seekToCurrentPosition ( true )
var = new PlaybackInfo ( var . periodId , var . positionUs , var . contentPositionUs )	var = var . fromNewPosition ( var . periodId , var , var . contentPositionUs )
if ( var == Player . STATE_READY == Player . STATE_BUFFERING )	if ( var . playbackState == Player . STATE_READY . playbackState == Player . STATE_BUFFERING )
if ( var == Player . STATE_BUFFERING )	if ( var . playbackState == Player . STATE_BUFFERING )
var . setRepeatMode ( var )	if ( ! var . updateRepeatMode ( var ) )
if ( var == C . INDEX_UNSET || var . next == null || var . next . info . id . periodIndex != var )	if ( ! var . updateShuffleModeEnabled ( var ) )
if ( var . next != null )	if ( var )
releasePeriodHoldersFrom ( var . next )	var . setPositionDiscontinuity ( Player . DISCONTINUITY_REASON_INTERNAL )
boolean var = var <= var . index	MediaPeriodHolder var = var . getPlayingPeriod ( )
var = var	var = var . syncAndGetPositionUs ( )
var = new PlaybackInfo ( var , var , var . contentPositionUs )	var = var . fromNewPosition ( var , var , var . contentPositionUs )
var = var . getPositionUs ( )	var = C . TIME_UNSET
var . setPositionUs ( var )	var = C . TIME_UNSET
var = SystemClock . elapsedRealtime ( ) * 1000	var = var . second
long var = SystemClock . elapsedRealtime ( )	long var = SystemClock . elapsedRealtime ( ) * 1000
if ( var == null )	if ( ! var . hasPlayingPeriod ( ) )
boolean var = var . isReady ( ) || var . isEnded ( )	boolean var = var . isReady ( ) || var . isEnded ( ) || rendererWaitingForNextStream ( var )
PlaybackParameters var = var . getPlaybackParameters ( )	long var = var . uptimeMillis ( )
if ( ! var . equals ( this . var ) )	MediaPeriodHolder var = var . getPlayingPeriod ( )
var . synchronize ( var )	updateTrackSelectionPlaybackSpeed ( var . speed )
if ( var == Player . STATE_BUFFERING )	if ( var . playbackState == Player . STATE_BUFFERING )
if ( var == Player . STATE_BUFFERING )	if ( var . playbackState == Player . STATE_BUFFERING )
if ( var . length != 0 && var != Player . STATE_ENDED )	if ( var . length != 0 && var . playbackState != Player . STATE_ENDED )
long var = var - SystemClock . elapsedRealtime ( )	MediaPeriodHolder var = var . getPlayingPeriod ( )
if ( var <= 0 )	if ( var != null && var != 0 )
var . sendEmptyMessage ( var )	var = var . mediaPeriod . getAdjustedSeekPositionUs ( var , var )
if ( var == null )	if ( C . usToMs ( var ) == C . usToMs ( var . positionUs ) )
var = var	var = var . positionUs
Pair < Integer , Long > var = resolveSeekPosition ( var )	Pair < Integer , Long > var = resolveSeekPosition ( var , true )
var = new PlaybackInfo ( 0 , 0 )	var = seekToPeriodPosition ( var , var )
resetInternal ( false )	var . message . markAsProcessed ( false )
MediaPeriodId var = var . resolvePeriodPositionForAds ( var , var )	MediaPeriodHolder var = var . getPlayingPeriod ( )
var = new PlaybackInfo ( var , var , var )	var = var . fromNewPosition ( var , var , var )
var . release ( )	var = var . advancePlayingPeriod ( )
MediaPeriodHolder var = var	MediaPeriodHolder var = var . getPlayingPeriod ( )
while ( var != null )	if ( var != null )
var . release ( )	if ( var . hasEnabledTracks )
var = var . next	var = var . mediaPeriod . seekToUs ( var )
if ( var != var || var != var )	if ( var != var || var )
if ( var != null )	while ( var != null )
var . next = null	var . mediaPeriod . discardBuffer ( var - var , var )
var = null	var = 0
var . getPeriod ( var . info . id . periodIndex , var )	var . timeline . getPeriod ( var . info . id . periodIndex , var )
var . setPositionUs ( var )	var . resetPosition ( var )
resetInternal ( true )	var . clear ( true )
resetInternal ( true )	var . markAsProcessed ( true )
var = null	var = 0
var = var	var = null
var = null	var = 0
var . releaseSource ( )	var . releaseSource ( this )
var . setTimeline ( null )	updatePlayingPeriodRenderers ( null )
if ( var == Player . STATE_READY || var == Player . STATE_BUFFERING )	if ( var . playbackState == Player . STATE_READY || var . playbackState == Player . STATE_BUFFERING )
if ( var . selectTracks ( ) )	if ( var . selectTracks ( var ) )
boolean var = var != var	boolean var = var . removeAfter ( var )
releasePeriodHoldersFrom ( var . next )	updateLoadControlTrackSelection ( var . trackGroups , var . trackSelectorResult )
long var = var . updatePeriodTrackSelection ( var . positionUs , var , var )	long var = var . applyTrackSelection ( var . positionUs , var , var )
var . positionUs = var	var = var . copyWithTrackInfo ( var . trackGroups , var . trackSelectorResult )
var . obtainMessage ( var , var . trackSelectorResult ) . sendToTarget	updateLoadControlTrackSelection ( var . trackGroups , var . trackSelectorResult )
var = var . next	if ( var . prepared )
if ( var . prepared )	long var = Math . max ( var . info . startPositionUs , var . toPeriodTime ( var ) )
long var = Math . max ( var . info . startPositionUs , var . toPeriodTime ( var ) )	long var = var - var . toPeriodTime ( var )
var . updatePeriodTrackSelection ( var , false )	var . applyTrackSelection ( var , false )
Timeline var = var	Timeline var = var . var
Object var = var . second	Timeline var = var . timeline
if ( var == null )	if ( var > 0 )
int var = var	int var = var . periodId . periodIndex
handleSourceInfoRefreshEndedPlayback ( var , var )	handleSourceInfoRefreshEndedPlayback
MediaPeriodId var = var . resolvePeriodPositionForAds ( var , var )	MediaPeriodId var = var . resolveMediaPeriodIdForAds ( var , var )
if ( var . isEmpty ( ) )	if ( var . isEmpty ( )  )
handleSourceInfoRefreshEndedPlayback ( var )	handleSourceInfoRefreshEndedPlayback
MediaPeriodId var = var . resolvePeriodPositionForAds ( var , var )	MediaPeriodId var = var . resolveMediaPeriodIdForAds ( var , var )
if ( var == null && var >= var . getPeriodCount ( ) )	Object var = var . var
handleSourceInfoRefreshEndedPlayback ( var )	handleSourceInfoRefreshEndedPlayback
Pair < Integer , Long > var = getPeriodPosition ( var . getPeriod ( var , var ) , var . windowIndex , C . TIME_UNSET )	Pair < Integer , Long > var = getPeriodPosition ( var , var . getPeriod ( var , var ) , var . windowIndex , C . TIME_UNSET )
MediaPeriodId var = new MediaPeriodId ( var )	MediaPeriodId var = var . resolveMediaPeriodIdForAds ( var , var )
var = new PlaybackInfo ( var , var )	var = var . fromNewPosition ( var , var , var )
if ( var . periodId . isAd ( ) )	if ( var . isEmpty ( ) || var . periodId . isAd ( ) )
if ( ! var . isAd ( ) || var . adIndexInAdGroup != var . var . adIndexInAdGroup )	if ( ! var . isEmpty ( ) )
while ( var . next != null )	if ( var . isAd ( ) )
var = new PlaybackInfo ( 0 , 0 )	var . add ( new PendingMessageInfo ( var ) )
resetInternal ( false )	seekToCurrentPosition ( false )
var = var . getNextPeriodIndex ( var , var , var , var )	var = var . getNextPeriodIndex ( var , var , var , var , var )
return getPeriodPosition ( var . getPeriod ( var , var ) , var . windowIndex , C . TIME_UNSET )	return getPeriodPosition ( var , var . getPeriod ( var , var ) , var . windowIndex , C . TIME_UNSET )
if ( var != null && ! var )	if ( ! var . isLoading )
while ( var != var && var >= var . next . rendererPositionOffsetUs )	while ( var && var != var && var >= var . next . rendererPositionOffsetUs )
var . release ( )	var = var . advancePlayingPeriod ( )
var = new PlaybackInfo ( var . info . id , var . info . startPositionUs , var . info . contentPositionUs )	var = var . fromNewPosition ( var . info . id , var . info . startPositionUs , var . info . contentPositionUs )
var . obtainMessage ( var , var ) . sendToTarget	MediaPeriodInfo var = var . getNextMediaPeriodInfo ( var , var )
TrackSelection var = var . selections . get ( var )	boolean var = var . isRendererEnabled ( var )
if ( var != null && var . equals ( var ) )	if ( var && var . equals ( var ) && ! var )
var = var . getFirstMediaPeriodInfo ( var )	var . reset ( var )
if ( var == null )	if ( var > 0 )
Object var = var . getPeriod ( var . id . periodIndex , var , true ) . var	Object var = var . timeline . getPeriod ( var . id . periodIndex , var , true ) . var
var . next = var	var . resolvedPeriodIndex = var
var . mediaPeriod . prepare ( this , var . startPositionUs )	var . prepare ( this , var . startPositionUs )
if ( var == null || var . mediaPeriod != var )	if ( var . startPositionUs == var -- )
var . handlePrepared ( )	var . handlePrepared ( var . getPlaybackParameters ( ) . speed )
var = var	var --
resetRendererPosition ( var . info . startPositionUs )	int var = var . periodId . periodIndex
if ( var != null ++ )	if ( var . trackSelectorResult . isRendererEnabled ( var ) ++ )
if ( var [ var ] && ( var == null || ( var . isCurrentStreamFinal ( ) && var . getStream ( ) == var . sampleStreams [ var ] ) ) )	if ( var [ var ] && ( ! var . trackSelectorResult . isRendererEnabled ( var ) || ( var . isCurrentStreamFinal ( ) && var . getStream ( ) == var . sampleStreams [ var ] ) ) )
var . obtainMessage ( var , var . trackSelectorResult ) . sendToTarget	var = var . copyWithTrackInfo ( var . trackGroups , var . trackSelectorResult )
this . var = var	MediaPeriodHolder var = var . getFrontPeriod ( )
this . var = var	if ( var . trackSelectorResult != null )
this . var = Assertions . checkNotNull ( var )	var . onPlaybackSpeed ( var )
this . var = var	if ( var . length == 0 )
var = new boolean [ var ] . length	if ( ! var . isLoading )
ClippingMediaPeriod var = new ClippingMediaPeriod ( var , true )	resetInternal ( false , true , false )
var . setClipping ( 0 , var . endPositionUs )	long var = var . getBufferedPositionUs ( ! var . info . isFinal )
return var - getRendererOffset	if ( var . shouldLoadNextMediaPeriod ( ) )
if ( var == C . TIME_END_OF_SOURCE )	if ( ! var . hasPlayingPeriod ( ) )
var = var . durationUs	resetRendererPosition ( var . info . startPositionUs )
var = true	var = new Renderer [ var ]
long var = updatePeriodTrackSelection ( var . startPositionUs , false )	MediaPeriodHolder var = var . getPlayingPeriod ( )
return var . shouldContinueLoading ( var )	boolean var = var . shouldContinueLoading ( var , var . getPlaybackParameters ( ) . speed )
var . continueLoading ( var )	var . onRendererEnabled ( var )
TrackSelectorResult var = var . selectTracks ( var , var . getTrackGroups ( ) )	MediaPeriodHolder var = var . getReadingPeriod ( )
for ( int var = 0 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
if ( var . endPositionUs != C . TIME_END_OF_SOURCE )	if ( var && this . var != Player . DISCONTINUITY_REASON_INTERNAL )
var . releasePeriod ( ( ( ClippingMediaPeriod ) var ) . var )	Assertions . checkArgument ( var == Player . DISCONTINUITY_REASON_INTERNAL )
var . releasePeriod ( var )	if ( ! var . isLoading ( var ) )
return new Format ( var , null , var , var , var , var , var , var , var , var , var , null , var , null , var , var , var , var , var , 0 , var , var , var , var , var , null )	return new Format ( var , null , var , var , var , var , var , var , var , var , var , null , var , null , var , var , var , var , var , var , var , var , var , var , var , null )
boolean var = var . readInt ( ) != 0	boolean var = Util . readBoolean ( var )
return this . var == var . var && this . var == var . var	return this . var == var . var && this . var == var . var && this . var == var . var
Handler var = new Handler ( var )	var = new Handler ( var )
var = var . createRenderers ( var , var , var , var , var )	var = var . createRenderers ( var , var , var , var , var , var )
this . var = var	var . add ( var )
this . var = var	var . add ( var )
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_SCALING_MODE , var )	var . createMessage ( var ) . setType ( C . MSG_SET_SCALING_MODE ) . setPayload ( var ) . send
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_AUDIO_ATTRIBUTES , var )	var . createMessage ( var ) . setType ( C . MSG_SET_AUDIO_ATTRIBUTES ) . setPayload ( var ) . send
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_VOLUME , var )	var . createMessage ( var ) . setType ( C . MSG_SET_VOLUME ) . setPayload ( var ) . send
var . clear ( )	var . retainAll ( Collections . singleton ( var ) )
var . prepare ( var )	prepare ( var , true , true )
var . stop ( )	var . stop ( var )
ExoPlayerMessage var = new ExoPlayerMessage [ var ]	List < PlayerMessage > var = new ArrayList
var [ var ] ++ = new ExoPlayerMessage ( var , C . MSG_SET_SURFACE , var )	var . add ( var . createMessage ( var ) . setType ( C . MSG_SET_SURFACE ) . MSG_SET_SURFACE . setPayload ( var ) . send )
var . blockingSendMessages ( var )	var . blockUntilDelivered ( )
var . sendMessages ( var )	Thread . currentThread ( ) . interrupt
var . onAudioTrackUnderrun ( var , var , var )	var . onAudioSinkUnderrun ( var , var , var )
return set ( var , var , var , var , var , null , null , null , null , null , C . TIME_UNSET )	return set ( var , var , var , var , var , AdPlaybackState . NONE )
return C . INDEX_UNSET	return var . adGroups [ var ] . count
return C . INDEX_UNSET	AdPlaybackState . AdGroup var = var . adGroups [ var ]
int var = getNextWindowIndex ( var , var )	int var = getNextWindowIndex ( var , var , var )
return getNextPeriodIndex ( var , var , var , var ) == C . INDEX_UNSET	return getNextPeriodIndex ( var , var , var , var , var ) == C . INDEX_UNSET
public static final Ac3SyncFrameInfo	public static final SyncFrameInfo
return Format . createAudioSampleFormat ( var , MimeTypes . AUDIO_E_AC3 , null , Format . NO_VALUE , Format . NO_VALUE , var , var , null , var , 0 , var )	return Format . createAudioSampleFormat ( var , var , null , Format . NO_VALUE , Format . NO_VALUE , var , var , null , var , 0 , var )
var . skipBits ( 16 + 2 + 3 )	var . skipBits ( 1 + 1 + 3 )
return new Ac3SyncFrameInfo ( var , var , var , var , var )	return new SyncFrameInfo ( var , var , var , var , var , var )
var . onAudioTrackUnderrun ( var , var , var )	var . onAudioSinkUnderrun ( var , var , var )
ParsableBitArray var = new ParsableBitArray ( var )	ParsableBitArray var = getNormalizedFrameHeader ( var )
var . skipBits ( 4 * 8 + 1 + 5 + 1 + 7 + 14 )	var . skipBits ( 32 + 1 + 5 + 1 + 7 + 14 )
this ( var , var , var , var , var , null )	this ( var , var , var , var , var , var , ( AudioCapabilities ) null )
var = new AudioTrack ( var , var , new AudioTrackListener )	this ( var , var , var , var , var , var , new DefaultAudioSink ( var , var ) , var )
if ( allowPassthrough ( var ) && var . getPassthroughDecoderInfo ( ) != null )	if ( var && allowPassthrough ( var ) && var . getPassthroughDecoderInfo ( ) != null )
var = var . getFrameworkMediaFormatV16 ( )	var = var . passthrough
var . setString ( MediaFormat . KEY_MIME , MimeTypes . AUDIO_RAW )	var . setString ( MediaFormat . KEY_MIME , var )
var . configure ( var . getFrameworkMediaFormatV16 ( ) , null , var , 0 )	var . configure ( var , null , var , 0 )
var . configure ( var , var , var , var , 0 , var )	var . configure ( var , var , var , 0 , var , var , var )
if ( var != AudioTrack . CURRENT_POSITION_NOT_SET )	if ( var != AudioSink . CURRENT_POSITION_NOT_SET )
var . playToEndOfStream ( )	var . setInteger ( MediaFormat . KEY_PRIORITY , 0 )
public SimpleDecoderAudioRenderer ( Handler var , AudioRendererEventListener var , AudioCapabilities var , DrmSessionManager < ExoMediaCrypto > var , boolean var , AudioProcessor ... var )	public SimpleDecoderAudioRenderer ( Handler var , AudioRendererEventListener var , DrmSessionManager < ExoMediaCrypto > var , boolean var , AudioSink var )
var = new AudioTrack ( var , var , new AudioTrackListener )	this ( var , var , var , var , new DefaultAudioSink ( var , var ) , var )
int var = supportsFormatInternal ( var )	int var = supportsFormatInternal ( var , var )
var . configure ( var . sampleMimeType , var . channelCount , var . sampleRate , var . pcmEncoding , 0 )	var . configure ( var . pcmEncoding , var . channelCount , var . sampleRate , 0 , null , var , var )
if ( var != AudioTrack . CURRENT_POSITION_NOT_SET )	if ( var != AudioSink . CURRENT_POSITION_NOT_SET )
public Sonic ( int var , int var )	public Sonic ( int var , int var , float var , float var , int var )
int var = var . remaining ( ) / var	int var = Math . min ( var . remaining ( var ) / var , var )
int var = Math . min ( var . remaining ( ) / var , var )	int var = var . remaining ( var ) / var
enlargeInputBufferIfNeeded ( var + 2 * var )	var = ensureSpaceForAdditionalFrames ( var , var , var + 2 * var )
if ( var + var > var )	if ( var + var <= var )
var += ( var / 2 ) + var	int var = 3 * var / 2 + var
int var	int var , var var
if ( var == 1 && var == 1 )	if ( var == 1 && var == 1 var )
int var = var - ( var * 4 )	int var = var - ( var << 2 )
int var = var + ( var * 4 )	int var = var + ( var << 2 )
if ( var == 1 )	if ( var == 1 var )
var = findPitchPeriodInRange ( var , var , var , var )	var = findPitchPeriodInRange ( samples , var , var , var )
downSampleInput ( var , var , 1 )	downSampleInput ( samples , var , 1 )
if ( var >= 1.0f )	if ( var >= 1.0f var )
for ( int var = 0 ; var < var - 1 ; var ++ )	for ( var = 0 ; var < var - 1 ; var ++ )
enlargeOutputBufferIfNeeded ( 1 )	var = ensureSpaceForAdditionalFrames ( var , var , 1 )
if ( var >= 2.0f )	if ( var >= 2.0f var )
if ( var < 0.5f )	if ( var < 0.5f var )
enlargeOutputBufferIfNeeded ( var + var )	var = ensureSpaceForAdditionalFrames ( var , var , var + var )
if ( var > 0 )	if ( var > 0 var )
var += copyInputToOutput ( var )	var = copyInputToOutput ( var )
if ( var > 1.0 )	if ( var > 1.0 var )
var += var + skipPitchPeriod ( var , var , var , var )	var = skipPitchPeriod ( var , var , var , var )
var += insertPitchPeriod ( var , var , var , var )	var = insertPitchPeriod ( var , var , var , var )
if ( var > 1.00001 || var < 0.99999 )	if ( var > 1.00001 || var < 0.99999 var )
if ( ! var && var != 1.0f )	if ( var != 1.0f )
this . var = Util . constrainValue ( var , var , var )	var = Util . constrainValue ( var , var , var )
return this . var	if ( this . var != var )
this . var = Util . constrainValue ( var , var , var )	var = Util . constrainValue ( var , var , var )
if ( this . var == var && this . var == var )	if ( this . var == var && this . var == var && this . var == var )
return Math . abs ( var - 1f ) >= var || Math . abs ( var - 1f ) >= var	return var != Format . NO_VALUE && ( Math . abs ( var - 1f ) >= var || Math . abs ( var - 1f ) >= var || var != var )
int var = var . getSamplesAvailable ( ) * var * 2	int var = var . getFramesAvailable ( ) * var * 2
return var && ( var == null || var . getSamplesAvailable ( ) == 0 )	return var && ( var == null || var . getFramesAvailable ( ) == 0 )
var = new Sonic ( var , var )	var = new Sonic ( var , var , var , var , var )
var . setPitch ( var )	var . flush ( )
MediaDrmHandler var	volatile MediaDrmHandler var
return new DefaultDrmSessionManager ( var , FrameworkMediaDrm . newInstance ( var ) , var , var , var , var )	return new DefaultDrmSessionManager ( var , FrameworkMediaDrm . newInstance ( var ) , var , var , false , var )
this . var = var	var . addListener ( var , var )
Assertions . checkState ( var == 0 )	Assertions . checkState ( var . isEmpty ( ) )
String var = var . type	String var = var . var
return Util . SDK_INT >= 24	return Util . SDK_INT >= 25
if ( this . var == null )	if ( var . isEmpty ( ) )
if ( var == null )	if ( var != null && var != null )
if ( var == null )	if ( var != null && var != null )
onError ( new IllegalStateException ( "" + var ) + var )	super ( "" + var )
var = var . data	if ( var && ( var . data != null || var ) )
var = var . mimeType	var . addListener ( var , var )
byte var = PsshAtomUtil . parseSchemeSpecificData ( var , C . WIDEVINE_UUID )	byte var = PsshAtomUtil . parseSchemeSpecificData ( var , var )
openInternal ( true )	SchemeData var = getSchemeData ( var , var , true )
if ( var != null )	if ( var != null && var != null )
openInternal ( false )	SchemeData var = getSchemeData ( var , var , false )
postKeyRequest ( var , MediaDrm . KEY_TYPE_OFFLINE )	Assertions . checkArgument ( ! C . COMMON_PSSH_UUID . equals ( var ) , "" )
onError ( new KeysExpiredException )	this . var = new EventDispatcher
var = STATE_OPENED_WITH_KEYS	this . var = var
var . onDrmKeysRestored ( )	var = new ArrayList
var . restoreKeys ( var , var )	var . removeListener ( var )
Log . var ( var , "" , var )	var . drmSessionManagerError ( var )
if ( ! C . WIDEVINE_UUID . equals ( var ) )	if ( C . WIDEVINE_UUID . equals ( var ) )
var . obtainMessage ( var , var ) . sendToTarget	var . add ( var )
if ( var != STATE_OPENED && var != STATE_OPENED_WITH_KEYS )	if ( var instanceof ErrorStateDrmSession )
onKeysError ( ( Exception ) var )	DefaultDrmSession < T > var = ( DefaultDrmSession < T > ) var
var . provideKeyResponse ( var , ( byte ) var )	var . remove ( var )
var . onDrmKeysRemoved ( )	var . get ( 1 ) . provision
var . onDrmKeysLoaded ( )	var . onProvisionCompleted ( )
var . onDrmSessionManagerError ( var )	List < SchemeData > var = new ArrayList ( var . schemeDataCount )
if ( var == 0 || ( var != STATE_OPENED && var != STATE_OPENED_WITH_KEYS ) )	boolean var = var . matches ( var ) || ( C . CLEARKEY_UUID . equals ( var ) && var . matches ( C . COMMON_PSSH_UUID ) )
if ( var == STATE_OPENED_WITH_KEYS )	if ( var && ( var . data != null || var ) )
if ( var == var )	if ( var == DefaultDrmSessionManager . var )
var . sendEmptyMessage ( var )	var . obtainMessage ( var , var ) . sendToTarget
var . obtainMessage ( var . what , var ) . sendToTarget	var . onMediaDrmEvent ( var . what )
this ( true , var )	this ( var , true , var )
for ( int var = 1 ; var < var . length ; var ++ )	int var = var . size ( )
if ( ! Util . areEqual ( var . type , var ) )	if ( Util . areEqual ( this . var , var ) )
for ( int var = 0 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
var = Arrays . var ( var )	var = 31 * var + Arrays . var ( var )
this ( var , var , var , var , false )	this ( var , var , var , false )
this . var = Assertions . checkNotNull ( var )	var . add ( var )
return var . equals ( var . var ) && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var )	return var . equals ( var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var )
this . var = new MediaDrm ( Assertions . checkNotNull ( var ) )	Assertions . checkNotNull ( var )
return var . getData ( )	return new DefaultKeyRequest ( var . getData ( ) , var . getDefaultUrl ( ) )
return var . getDefaultUrl ( )	return new DefaultKeyRequest ( var . getData ( ) , var . getDefaultUrl ( ) )
return var . getDefaultUrl ( )	return new DefaultProvisionRequest ( var . getData ( ) , var . getDefaultUrl ( ) )
return new OfflineLicenseHelper ( FrameworkMediaDrm . newInstance ( C . WIDEVINE_UUID ) . WIDEVINE_UUID , new HttpMediaDrmCallback ( var , var , var ) , var , var , var )	return new OfflineLicenseHelper ( C . WIDEVINE_UUID , FrameworkMediaDrm . newInstance ( C . WIDEVINE_UUID ) . WIDEVINE_UUID , new HttpMediaDrmCallback ( var , var , var ) , var , var , var )
public OfflineLicenseHelper ( ExoMediaDrm < T > var , MediaDrmCallback var , HashMap < String , String > , String var )	public OfflineLicenseHelper ( UUID var , ExoMediaDrm < T > var , MediaDrmCallback var , HashMap < String , String > , String var )
var = new DefaultDrmSessionManager ( C . WIDEVINE_UUID , var , var , var , new Handler ( var . getLooper ( ) ) . getLooper ( ) , var )	var . addListener ( new Handler ( var . getLooper ( ) ) . getLooper ( ) , var )
var [ 11 ] = var . newInstance ( )	var [ 12 ] = var . newInstance ( )
var . seekMap ( this )	var . seekMap ( new SeekMap . Unseekable ( var ) )
var . consume ( prepareTagData ( var ) , var )	var . consume ( prepareTagData ( var ) , var + var )
var . consume ( prepareTagData ( var ) , var )	var . consume ( prepareTagData ( var ) , var + var )
if ( var == var && var != null )	if ( var == var && ! var )
return var . getDurationUs ( )	long var = var . getDurationUs ( )
public ScriptTagPayloadReader ( TrackOutput var )	public ScriptTagPayloadReader
super ( var )	super ( null )
int var = var . readUnsignedInt24 ( )	int var = var . readInt24 ( )
return new String ( var )	return new String ( var , 0 , var )
return EbmlReader . TYPE_MASTER	return TYPE_MASTER
return EbmlReader . TYPE_UNSIGNED_INT	return TYPE_UNSIGNED_INT
return EbmlReader . TYPE_STRING	return TYPE_STRING
return EbmlReader . TYPE_BINARY	return TYPE_BINARY
return EbmlReader . TYPE_FLOAT	return TYPE_FLOAT
return EbmlReader . TYPE_UNKNOWN	return TYPE_UNKNOWN
var = parseFourCcVc1Private ( new ParsableByteArray ( var ) )	Pair < String , List < byte >  > var = parseFourCcPrivate ( new ParsableByteArray ( var ) )
var = MimeTypes . VIDEO_VC1	return new Pair ( MimeTypes . VIDEO_VC1 , Collections . singletonList ( var ) )
var = MimeTypes . VIDEO_UNKNOWN	var = var . second
var = Format . createImageSampleFormat ( Integer . toString ( var ) , var , null , Format . NO_VALUE , var , var , var )	var = Format . createImageSampleFormat ( Integer . toString ( var ) , var , null , Format . NO_VALUE , var , var , var , var )
return Collections . singletonList ( var )	return new Pair ( MimeTypes . VIDEO_VC1 , Collections . singletonList ( var ) )
public ConstantBitrateSeeker ( long var , int var , long var )	public ConstantBitrateSeeker ( long var , long var , MpegAudioHeader var )
this . var = var	this . var = var . var
return var != C . TIME_UNSET	return var != C . LENGTH_UNSET
var = Util . constrainValue ( var , 0 , var )	var = Util . constrainValue ( var , 0 , var - var )
peekId3Data ( var )	var = var . peekId3Data ( var , var )
var = new Id3Decoder ( var ) . decode ( var , var )	var = var . peekId3Data ( var , var )
var += var . frameSize	long var = var + var . frameSize
long var = new long [ var ] + 1	long var = new long [ var ]
long var = new long [ var ] + 1	long var = new long [ var ]
for ( int var = 1 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
var [ var ] = var * var / var	var [ var ] = ( var * var ) / var
return new XingSeeker ( var , var , var )	return new XingSeeker ( var , var . frameSize , var )
long var = new long [ 99 ]	long var = new long [ 100 ]
for ( int var = 0 ; var < 99 ; var ++ )	for ( int var = 0 ; var < 100 ; var ++ )
return new XingSeeker ( var , var , var , var , var , var . frameSize )	return new XingSeeker ( var , var . frameSize , var , var , var )
private XingSeeker ( long var , long var , long var )	private XingSeeker ( long var , int var , long var )
this ( var , var , var , null , 0 , 0 )	this ( var , var , var , C . LENGTH_UNSET , null )
private XingSeeker ( long var , long var , long var , long var , long var , int var )	private XingSeeker ( long var , int var , long var , long var , long var )
float var = var * 100f / var	double var = ( var * 100d ) / var
if ( var <= 0f = 0f >= 100f = 256f )	if ( var <= 0 = 0 >= 100 = 256 )
var = 0f	var = 0
if ( var >= 100f = 256f )	if ( var >= 100 = 256 )
var = 256f	var = 256
var = var + ( var - var ) * ( var - var )	var = var + ( var * ( var - var ) )
long var = Math . round ( ( 1.0 / 256 ) * var * var ) + var	long var = Math . round ( ( var / 256 ) * var )
if ( ! isSeekable || var < var )	if ( ! isSeekable || var <= var )
double var = 256.0 * ( var - var ) / var	double var = ( var * 256d ) / var
int var = Util . binarySearchFloor ( var , ( long ) var , true , false ) + 1	int var = Util . binarySearchFloor ( var , ( long ) var , true , true )
long var = getTimeUsForTocPosition ( var )	long var = getTimeUsForTableIndex ( var )
return var + var	return var + Math . round ( var * ( var - var ) )
return var * var / 100	return ( var * var ) / 100
var = var . readUnsignedIntToInt ( )	var = var . readInt ( )
int var = var . readNextSampleSize ( )	int var = Util . getPcmFrameSize ( var . format . pcmEncoding , var . format . channelCount )
return new TrackSampleTable ( var , var , var , var , var )	return new TrackSampleTable ( var , var , var , var , var , var )
if ( var [ 0 ] <= var && var < var [ 1 ] && var [ var ] . length - 1 < var && var <= var )	if ( canApplyEditWithGaplessInfo ( var , var , var , var ) )
return new TrackSampleTable ( var , var , var , var , var )	return new TrackSampleTable ( var , var , var , var , var , var )
return new TrackSampleTable ( var , var , var , var , var )	return new TrackSampleTable ( var , var , var , var , var , var )
return new TrackSampleTable ( var , var , var , var , var )	return new TrackSampleTable ( var , var , var , var , var , var )
return new TrackSampleTable ( var , var , var , var , var )	return new TrackSampleTable ( var , var , var , var , var , var )
var = MimeTypes . VIDEO_MPEG2	String var = getMimeTypeFromMp4ObjectType ( var )
return Pair . create ( var , null )	if ( MimeTypes . AUDIO_MPEG . equals ( var ) || MimeTypes . AUDIO_DTS . equals ( var ) || MimeTypes . AUDIO_DTS_HD . equals ( var ) )
return Pair . create ( var , null )	if ( MimeTypes . AUDIO_MPEG . equals ( var ) || MimeTypes . AUDIO_DTS . equals ( var ) || MimeTypes . AUDIO_DTS_HD . equals ( var ) )
var = C . INDEX_UNSET	var = - 1
private Results ( long var , int var , int var , long var , int var )	private Results ( long var , int var , int var , long var , int var , long var )
return new Results ( var , var , var , var , var )	return new Results ( var , var , var , var , var , var )
var = new LinkedList	var = new ArrayDeque
var . seekMap ( new SeekMap . Unseekable ( var ) )	var . seekMap ( new SeekMap . Unseekable ( var , var ) , var )
var = var . track ( var . size ( ) , C . TRACK_TYPE_METADATA )	var [ var ] ++ = var . track ( var . size ( ) , C . TRACK_TYPE_METADATA )
TrackOutput var = var . track ( var . size ( ) + 1 , C . TRACK_TYPE_TEXT )	TrackOutput var = var . track ( var . size ( ) + 1 + var , C . TRACK_TYPE_TEXT )
if ( var == null )	if ( var == null || var . length == 0 )
var . currentSampleIndex ++	if ( var . currentSampleIndex < var . firstSampleToOutputIndex )
if ( var . currentSampleInTrackRun == var . trunLength [ var ] . currentTrackRunIndex )	if ( ! var . next ( ) = null )
var . currentSampleInTrackRun = 0	var = null
TrackFragment var = var . fragment	if ( ! var . definesEncryptionData )
int var = var . header . var	int var = var
boolean var = var . sampleHasSubsampleEncryptionTable [ var ] . currentSampleIndex	boolean var = var . sampleHasSubsampleEncryptionTable [ var ]
var = var	var = var . size ( )
long var = var - var . getPosition ( ) + var	long var = var . getPosition ( )
if ( var < var )	if ( ( ! var && var ) || ( var == var && var < var ) )
int var = Atom . FULL_HEADER_SIZE + 16 + 4 + var . length	int var = Atom . FULL_HEADER_SIZE + 16 + 4 + var
Pair < UUID , byte > var = parsePsshAtom ( var )	PsshAtom var = parsePsshAtom ( var )
return var . first	return var . uuid
Pair < UUID , byte > var = parsePsshAtom ( var )	PsshAtom var = parsePsshAtom ( var )
if ( var != null && ! var . equals ( var . first ) )	if ( var != null && ! var . equals ( var . var ) )
Log . w ( var , "" + var + "" + var . first + "" )	Log . w ( var , "" + var + "" + var . var + "" )
return var . second	return var . schemeData
public TrackSampleTable ( long var , int var , int var , long var , int var )	public TrackSampleTable ( long var , int var , int var , long var , int var , long var )
return getEstimatedPosition ( var , var , var )	long var = getEstimatedPosition ( var , var , var )
return var + var [ var ]	long var = var + var [ var ]
Ac3Util . Ac3SyncFrameInfo var = Ac3Util . parseAc3SyncframeInfo ( var )	SyncFrameInfo var = Ac3Util . parseAc3SyncframeInfo ( var )
var . format ( Format . createImageSampleFormat ( var . getFormatId ( ) , MimeTypes . APPLICATION_DVBSUBS , null , Format . NO_VALUE , Collections . singletonList ( var . initializationData ) . initializationData , var . language , null ) . getFormatId ( ) , MimeTypes . APPLICATION_DVBSUBS , null , Format . NO_VALUE , Collections . singletonList ( var . initializationData ) . initializationData , var . language , null )	var . format ( Format . createImageSampleFormat ( var . getFormatId ( ) , MimeTypes . APPLICATION_DVBSUBS , null , Format . NO_VALUE , 0 , Collections . singletonList ( var . initializationData ) . initializationData , var . language , null ) . getFormatId ( ) , MimeTypes . APPLICATION_DVBSUBS , null , Format . NO_VALUE , 0 , Collections . singletonList ( var . initializationData ) . initializationData , var . language , null )
final int var = var . var ( )	int var = var . var ( )
if ( var != ( ( var + 1 ) & 0xF ) = true )	if ( var != ( ( var + 1 ) & 0xF ) )
var . seekMap ( this )	var . seekMap ( var )
return Math . min ( var , var - var ) + var	var = Util . constrainValue ( var , 0 , var - var )
return var * C . MICROS_PER_SECOND / var	return ( var * C . MICROS_PER_SECOND ) / var
Log . e ( var , "" + var )	Log . e ( var , "" + var + "" + var )
return new MediaCodecInfo ( var , var , var , false , false )	return new MediaCodecInfo ( var , var , var , false , false , false )
return new MediaCodecInfo ( var , var , var , var , var )	return new MediaCodecInfo ( var , var , var , false , var , var )
skipSource ( var )	var . skippedInputBufferCount += skipSource ( var )
if ( var == var && var != null && canReconfigureCodec ( var , var . adaptive , var , var ) )	if ( var == var && var != null )
return var != null && ! var && ( isSourceReady || var >= 0 || ( var != C . TIME_UNSET && SystemClock . elapsedRealtime ( ) < var ) )	return var != null && ! var && ( isSourceReady || hasOutputBuffer || ( var != C . TIME_UNSET && SystemClock . elapsedRealtime ( ) < var ) )
if ( var < 0 )	if ( ! hasOutputBuffer )
if ( var == null == null )	if ( ! var )
if ( Util . SDK_INT <= 24 && "" . equals ( var ) && ( Util . MODEL . startsWith ( "" ) || Util . MODEL . startsWith ( "" ) ) . SDK_INT < 24 && ( "" . equals ( var ) || "" . equals ( var ) ) && ( "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) ) )	if ( Util . SDK_INT <= 25 && "" . equals ( var ) && ( Util . MODEL . startsWith ( "" ) || Util . MODEL . startsWith ( "" ) || Util . MODEL . startsWith ( "" ) || Util . MODEL . startsWith ( "" ) ) . SDK_INT < 24 && ( "" . equals ( var ) || "" . equals ( var ) ) && ( "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) ) )
var = getDecoderInfosInternal ( var , var )	ArrayList < MediaCodecInfo > var = getDecoderInfosInternal ( var , var , var )
var = getDecoderInfosInternal ( var , var )	var = getDecoderInfosInternal ( var , var , var )
var = Collections . unmodifiableList ( var )	List < MediaCodecInfo > var = Collections . unmodifiableList ( var )
List < MediaCodecInfo > var = new ArrayList	ArrayList < MediaCodecInfo > var = new ArrayList
if ( isCodecUsableDecoder ( var , var , var ) )	if ( isCodecUsableDecoder ( var , var , var , var ) )
if ( Util . SDK_INT < 24 && ( "" . equals ( var ) || "" . equals ( var ) ) && Util . MANUFACTURER . equals ( "" ) && ( Util . DEVICE . startsWith ( "" ) || Util . DEVICE . startsWith ( "" ) || Util . DEVICE . startsWith ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) || Util . DEVICE . equals ( "" ) ) )	if ( Util . SDK_INT < 24 && ( "" . equals ( var ) || "" . equals ( var ) ) && "" . equals ( Util . MANUFACTURER ) && ( Util . DEVICE . startsWith ( "" ) || Util . DEVICE . startsWith ( "" ) || Util . DEVICE . startsWith ( "" ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) || "" . equals ( Util . DEVICE ) ) )
return Util . SDK_INT <= 22 && ( Util . MODEL . equals ( "" ) || Util . MODEL . equals ( "" ) ) && ( "" . equals ( var ) || "" . equals ( var ) )	return Util . SDK_INT <= 22 && ( "" . equals ( Util . MODEL ) || "" . equals ( Util . MODEL ) ) && ( "" . equals ( var ) || "" . equals ( var ) )
Integer var = var . get ( var )	int var = var . get ( var , - 1 )
if ( var == null )	if ( var == - 1 )
Integer var = var . get ( var )	int var = var . get ( var , - 1 )
if ( var == null )	if ( var == - 1 )
public MetadataRenderer ( Output var , Looper var )	public MetadataRenderer ( MetadataOutput var , Looper var )
public MetadataRenderer ( Output var , Looper var , MetadataDecoderFactory var )	public MetadataRenderer ( MetadataOutput var , Looper var , MetadataDecoderFactory var )
public EventMessage ( String var , String var , long var , long var , byte var )	public EventMessage ( String var , String var , long var , long var , byte var , long var )
return var == var . var && var == var . var && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var )	return var == var . var && var == var . var && var == var . var && Util . areEqual ( var , var . var ) && Util . areEqual ( var , var . var ) && Arrays . equals ( var , var . var )
return new Metadata ( new EventMessage ( var , var , var , var , var ) , var , var , var , var )	return new Metadata ( new EventMessage ( var , var , var , var , var , var ) , var , var , var , var , var )
var = new String ( var , var , var - var , var )	String var = decodeStringIfValid ( var , var , var , var )
var = new String ( var , var , var - var , "" )	String var = decodeStringIfValid ( var , var , var , "" )
String var = new String ( var , var , var - var , var )	String var = decodeStringIfValid ( var , var , var , var )
String var = new String ( var , var , var - var , var )	String var = decodeStringIfValid ( var , var , var , var )
if ( var . equals ( "" ) = "" )	if ( "" . equals ( var ) = "" )
if ( var < var . length = "" )	if ( var <= var || var > var . length )
var = new String ( var , var , var - var , var )	String var = decodeStringIfValid ( var , var , var , var )
var = ( ( var & 0x01 ) << 32 ) | var . readUnsignedInt ( )	long var = ( ( var & 0x01 ) << 32 ) | var . readUnsignedInt ( )
var = ( ( var & 0x01 ) << 32 ) | var . readUnsignedInt ( )	long var = ( ( var & 0x01 ) << 32 ) | var . readUnsignedInt ( )
return getFirstWindowIndexByChildIndex ( var )	return getFirstWindowIndexByChildIndex ( var ) + getTimelineByChildIndex ( var ) . getFirstWindowIndex ( var )
this . var = var	var . reevaluateBuffer ( var )
var . prepare ( this , var + var )	var . prepare ( this , var )
long var = var . selectTracks ( var , var , var , var , var + var )	long var = var . selectTracks ( var , var , var , var , var )
Assertions . checkState ( var == var + var || ( var >= var && ( var == C . TIME_END_OF_SOURCE || var <= var ) ) )	Assertions . checkState ( var == var || ( var >= var && ( var == C . TIME_END_OF_SOURCE || var <= var ) ) )
if ( var [ var ] == null [ var ] == null || var [ var ] . stream != var [ var ] )	if ( var [ var ] == null [ var ] == null || var [ var ] . childStream != var [ var ] )
if ( var [ var ] == null || var [ var ] . stream != var [ var ] )	if ( var [ var ] == null || var [ var ] . childStream != var [ var ] )
long var = var . seekToUs ( var + var )	long var = var . seekToUs ( var )
Assertions . checkState ( var == var + var || ( var >= var && ( var == C . TIME_END_OF_SOURCE || var <= var ) ) )	Assertions . checkState ( var == var || ( var >= var && ( var == C . TIME_END_OF_SOURCE || var <= var ) ) )
return var . continueLoading ( var + var )	return var . continueLoading ( var )
public ClippingSampleStream ( MediaPeriod var , SampleStream var , long var , long var , boolean var )	public ClippingMediaPeriod ( MediaPeriod var , boolean var , long var , long var )
var = false	this . var = var
return var . isReady ( )	return ! isPendingInitialDiscontinuity && var . isReady ( )
if ( var != C . TIME_END_OF_SOURCE && ( ( var == C . RESULT_BUFFER_READ && var . timeUs >= var ) || ( var == C . RESULT_NOTHING_READ && var . getBufferedPositionUs ( ) == C . TIME_END_OF_SOURCE ) ) )	if ( var != C . TIME_END_OF_SOURCE && ( ( var == C . RESULT_BUFFER_READ && var . timeUs >= var ) || ( var == C . RESULT_NOTHING_READ && getBufferedPositionUs == C . TIME_END_OF_SOURCE ) ) )
var . timeUs -= var	var . var = var . copyWithGaplessInfo ( var , var )
var . skipData ( var + var )	return var . skipData ( var )
this ( var , var , var , true )	this ( var , var , var , true , false , false )
public ClippingMediaSource ( MediaSource var , long var , long var , boolean var )	public ClippingMediaSource ( MediaSource var , long var , long var , boolean var , boolean var , boolean var )
var . prepareSource ( var , false , this )	super . prepareSourceInternal ( var , var )
var . maybeThrowSourceInfoRefreshError ( )	super . maybeThrowSourceInfoRefreshError ( )
ClippingMediaPeriod var = new ClippingMediaPeriod ( var . createPeriod ( var , var ) , var , var )	ClippingMediaPeriod var = new ClippingMediaPeriod ( var . createPeriod ( var , var ) , var , var , var , var )
var . releaseSource ( )	super . releaseSourceInternal ( )
long var = var . var	long var = C . usToMs ( var )
var . get ( var ) . setClipping ( var , var )	var . get ( var ) . updateClipping ( var , var )
if ( var . durationUs != C . TIME_UNSET )	if ( var . var != C . TIME_UNSET )
Assertions . checkArgument ( var == 0 || var . isSeekable )	if ( var != 0 && ! var . isSeekable )
return var . getNextWindowIndex ( var , var )	var = var . var && ( var == C . TIME_UNSET || ( var . var != C . TIME_UNSET && var == var . var ) )
var = var . getWindow ( 0 , var , var , var )	var . getWindow ( 0 , var )
var = var . getPeriod ( 0 , var , var )	timeline . getPeriod ( 0 , var , var )
if ( var . getNextLoadPositionUs ( ) == var )	if ( var == var || var )
this . var = var	this . var = new ArrayList
this . var = var	Assertions . checkNotNull ( var )
int var = var . getChildIndexByPeriodIndex ( var . periodIndex )	int var = findMediaSourceHolderByPeriodIndex ( var . periodIndex )
MediaPeriodId var = new MediaPeriodId ( var . periodIndex - var . getFirstPeriodIndexByChildIndex ( var ) )	MediaPeriodId var = var . copyWithPeriodIndex ( var . periodIndex - var . firstPeriodIndexInChild )
MediaPeriod var = var [ var ] . createPeriod ( var , var )	DeferredMediaPeriod var = new DeferredMediaPeriod ( var . mediaSource , var , var )
var . remove ( var )	MediaSourceHolder var = var . remove ( var )
var [ var ] . releaseSource	return var . copyWithPeriodIndex ( var . periodIndex + var . firstPeriodIndexInChild )
var . onSourceInfoRefreshed ( var , var . clone ( ) )	correctOffsets ( var , 1 , var . timeline . getWindowCount ( ) , var . timeline . getPeriodCount ( ) )
boolean var = new boolean [ var ] . length	int var = var . getPeriodCount ( ) - var . getPeriodCount ( )
for ( int var = 0 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
if ( ! var . containsKey ( var ) )	var . setDefaultPreparePositionUs ( var )
var . put ( var , null )	removeMediaSource ( var , null )
super ( var . length )	correctOffsets ( var , - 1 , - var . getWindowCount ( ) , - var . getPeriodCount ( ) )
int var = new int [ var ] . length	int var = Math . min ( var , var )
int var = new int [ var ] . length	int var = Math . max ( var , var )
for ( int var = 0 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var . activeMediaPeriods . size ( ) ; var ++ )
Assertions . checkState ( var <= Integer . MAX_VALUE , "" )	var . add ( var , var . remove ( var ) )
var += var . getWindowCount ( )	int var = var . getWindowCount ( ) - var . getWindowCount ( )
this . var = var	this . var = System . identityHashCode ( this )
this . var = var	this . var = new DeferredTimeline
this . var = var	this . var = new ArrayList
return var [ var ] . length - 1	return this . var - var . var
var = Player . REPEAT_MODE_ALL	var . post ( var )
var = Player . REPEAT_MODE_ALL	var [ var ] = var . firstPeriodIndexInChild
return ( Integer ) var	int var = var . get ( ( int ) var , - 1 )
super ( var . size ( ) )	super ( var )
if ( var && ! var )	if ( var )
var = ! var . advanceTo ( var , true , true ) && var . getReadIndex ( ) != 0	var = var . advanceTo ( var , true , true ) == SampleQueue . ADVANCE_FAILED && var . getReadIndex ( ) != 0
if ( var || ( var && var == 0 ) )	if ( var || var || ( var && var == 0 ) )
return var || ( ! isPendingReset && var [ var ] . hasNextSample )	return ! suppressRead && ( var || var [ var ] . hasNextSample )
var . maybeThrowError ( )	var . maybeThrowError ( var )
if ( var || isPendingReset )	if ( suppressRead )
return var [ var ] . read ( var , var , var , var , var )	int var = var [ var ] . read ( var , var , var , var , var )
void skipData ( int var , long var )	int skipData ( int var , long var )
var . advanceToEnd ( )	var = var . advanceToEnd ( )
var . advanceTo ( var , true , true )	var = var . advanceTo ( var , true , true )
if ( isLoadableExceptionFatal ( var ) )	if ( var )
var . setLoadPosition ( var . getPosition ( var ) , var )	var . setLoadPosition ( var . getSeekPoints ( var ) . first . position , var )
if ( var == ExtractorMediaSource . MIN_RETRY_COUNT_DEFAULT_FOR_MEDIA )	if ( var == ExtractorMediaSource . MIN_RETRY_COUNT_DEFAULT_FOR_MEDIA && var == C . LENGTH_UNSET && var . getDurationUs ( ) == C . TIME_UNSET )
var . startLoading ( var , this , var )	long var = var . startLoading ( var , this , var )
if ( var != C . LENGTH_UNSET || ( var != null && var . getDurationUs ( ) != C . TIME_UNSET ) )	if ( var != C . LENGTH_UNSET || ( var != null && var . getDurationUs ( ) != C . TIME_UNSET ) && ! suppressRead )
boolean var = var . advanceTo ( var , true , false )	boolean var = var . advanceTo ( var , true , false ) != SampleQueue . ADVANCE_FAILED
var . onLoadError ( var )	var . onContinueLoadingRequested ( this )
ExtractorMediaPeriod . this . skipData ( var , var )	return ExtractorMediaPeriod . this . skipData ( var , var )
var = var . open ( new DataSpec ( var , var , C . LENGTH_UNSET , var ) , var , C . LENGTH_UNSET , var )	var = new DataSpec ( var , var , C . LENGTH_UNSET , var )
this . var = var	this . var = C . TIME_UNSET
this . var = var	this . var = Assertions . checkNotNull ( var )
notifySourceInfoRefreshed ( C . TIME_UNSET , false )	notifySourceInfoRefreshed ( var , false )
return new ExtractorMediaPeriod ( var , var . createDataSource ( ) , var . createExtractors ( ) , var , var , var , this , var , var , var )	return new ExtractorMediaPeriod ( var , var . createDataSource ( ) , var . createExtractors ( ) , var , createEventDispatcher ( var ) , this , var , var , var )
var = null	var = true
if ( var == var && var == var || ( var != C . TIME_UNSET && var == C . TIME_UNSET ) )	if ( var == var && var == var )
var . onSourceInfoRefreshed ( new SinglePeriodTimeline ( var , var ) , var , null )	refreshSourceInfo ( new SinglePeriodTimeline ( var , var , false , var ) , var , false , var , null )
var . releaseSource ( )	super . releaseSourceInternal ( )
int var = var . getNextWindowIndex ( var , var )	int var = timeline . getNextWindowIndex ( var , var , var )
int var = var . getPreviousWindowIndex ( var , var )	int var = timeline . getPreviousWindowIndex ( var , var , var )
public MediaPeriodId ( int var , int var , int var )	public MediaPeriodId ( int var , int var , int var , long var )
return var == var . var && var == var . var && var == var . var	return var == var . var && var == var . var && var == var . var && var == var . var
public MergingMediaPeriod ( MediaPeriod ... var )	public MergingMediaPeriod ( CompositeSequenceableLoaderFactory var , MediaPeriod ... var )
var = var . length	Collections . addAll ( var , var )
var = new CompositeSequenceableLoader ( var )	var = var . createCompositeSequenceableLoader ( var )
return var . continueLoading ( var )	var . reevaluateBuffer ( var )
if ( -- var > 0 )	if ( ! var . isEmpty ( ) )
if ( var == null )	if ( ! var . isEmpty ( ) )
public MergingMediaSource ( MediaSource ... var )	public MergingMediaSource ( CompositeSequenceableLoaderFactory var , MediaSource ... var )
this . var = var	this ( new DefaultCompositeSequenceableLoaderFactory , var )
var . maybeThrowSourceInfoRefreshError ( )	super . maybeThrowSourceInfoRefreshError ( )
return new MergingMediaPeriod ( var )	return new MergingMediaPeriod ( var , var )
var . releaseSource ( )	var . clear ( )
if ( var == 0 )	if ( var == var [ 0 ] )
var . advanceToEnd ( )	return var . advanceToEnd ( )
public SinglePeriodTimeline ( long var , boolean var )	public SinglePeriodTimeline ( long var , boolean var , boolean var )
this ( var , var , 0 , 0 , var , false )	this ( var , var , 0 , 0 , var , var , var )
this ( C . TIME_UNSET , C . TIME_UNSET , var , var , var , var , var , var )	this ( C . TIME_UNSET , C . TIME_UNSET , var , var , var , var , var , var , var )
return var . set ( var , var , 0 , var , - var )	return var . set ( null , var , 0 , var , - var )
public SingleSampleMediaPeriod ( Uri var , DataSource . Factory var , Format var , int var , Handler var , EventListener var , int var )	public SingleSampleMediaPeriod ( DataSpec var , DataSource . Factory var , Format var , long var , int var , EventDispatcher var , boolean var )
var . startLoading ( new SourceLoadable ( var , var . createDataSource ( ) ) , var . createDataSource ( ) , this , var )	long var = var . startLoading ( new SourceLoadable ( var , var . createDataSource ( ) ) , var . createDataSource ( ) , this , var )
var . get ( var ) . seekToUs ( var )	var . get ( var ) . reset
if ( ! var )	if ( var )
if ( var > 0 = var )	if ( var > 0 && var != var )
public SourceLoadable ( Uri var , DataSource var )	public SourceLoadable ( DataSpec var , DataSource var )
var . open ( new DataSpec ( var ) )	var . open ( var )
var = new SinglePeriodTimeline ( var , true )	var = new SinglePeriodTimeline ( var , true , false , var )
var . onSourceInfoRefreshed ( var , null )	refreshSourceInfo ( var , null )
public BaseMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var )	public BaseMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var , long var )
public ChunkExtractorWrapper ( Extractor var , Format var )	public ChunkExtractorWrapper ( Extractor var , int var , Format var )
var . seek ( 0 , 0 )	var . seek ( 0 , var )
public ChunkSampleStream ( int var , int var , T var , Callback < ChunkSampleStream < T > > < T > var , Allocator var , long var , int var , EventDispatcher var )	public ChunkSampleStream ( int var , int var , Format var , T var , Callback < ChunkSampleStream < T > > < T > var , Allocator var , long var , int var , EventDispatcher var )
var = new LinkedList	var = new ArrayList
BaseMediaChunk var = var . getLast ( )	BaseMediaChunk var = getLastMediaChunk
discardDownstreamMediaChunks ( var . getReadIndex ( ) )	maybeNotifyPrimaryTrackFormatChanged ( var . getReadIndex ( ) , var )
var . discardTo ( var , true , false )	var . advanceTo ( var , true , false )
discardDownstreamMediaChunks ( var . getReadIndex ( ) )	maybeNotifyPrimaryTrackFormatChanged ( var . getReadIndex ( ) , 1 )
var . advanceToEnd ( )	var = var . advanceToEnd ( )
var . advanceTo ( var , true , true )	var = var . advanceTo ( var , true , true )
var . discardToRead ( )	if ( isPendingReset )
var . discardUpstreamSamples ( var . getFirstSampleIndex ( 0 ) )	var = var . setReadPosition ( var . getFirstSampleIndex ( 0 ) )
BaseMediaChunk var = var . getFirst ( )	BaseMediaChunk var = var . get ( var )
var = var . removeLast ( )	return var . get ( var . size ( ) - 1 )
var = var . var	Util . removeRange ( var , var , var . size ( ) )
var [ var ] . discardUpstreamSamples ( var . getFirstSampleIndex ( var + 1 ) + 1 )	if ( var [ var ] . getReadIndex > var . getFirstSampleIndex ( var + 1 ) )
var . upstreamDiscarded ( var , var , var )	var . upstreamDiscarded ( var , var . startTimeUs , var )
var . advanceToEnd ( )	var = var . advanceToEnd ( )
var . advanceTo ( var , true , true )	var = var . advanceTo ( var , true , true )
public ContainerMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var , int var , long var , ChunkExtractorWrapper var )	public ContainerMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var , long var , int var , long var , ChunkExtractorWrapper var )
super ( var , var , var , var , var , var , var , var )	super ( var , var , var , var , var , var , var , var , var )
var . init ( null )	var . init ( null , C . TIME_UNSET )
public MediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var )	public MediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var )
public SingleSampleMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , int var , int var , Format var )	public SingleSampleMediaChunk ( DataSource var , DataSpec var , Format var , int var , Object var , long var , long var , long var , int var , Format var )
super ( var , var , var , var , var , var , var , var )	super ( var , var , var , var , var , var , var , C . TIME_UNSET , var )
public DashMediaPeriod ( int var , DashManifest var , int var , DashChunkSource . Factory var , int var , EventDispatcher var , long var , LoaderErrorThrower var , Allocator var )	public DashMediaPeriod ( int var , DashManifest var , int var , DashChunkSource . Factory var , int var , EventDispatcher var , long var , LoaderErrorThrower var , Allocator var , CompositeSequenceableLoaderFactory var , PlayerEmsgCallback var )
var = new CompositeSequenceableLoader ( var )	var = var . createCompositeSequenceableLoader ( var )
var = var . getPeriod ( var ) . var	Period var = var . getPeriod ( var )
Pair < TrackGroupArray , TrackGroupInfo > var = buildTrackGroups ( var )	Pair < TrackGroupArray , TrackGroupInfo > var = buildTrackGroups ( var . adaptationSets , var )
var . release ( )	var . release ( this )
var . release ( )	var . release ( this )
if ( var . isPrimary )	if ( var . trackGroupCategory == TrackGroupInfo . CATEGORY_PRIMARY )
if ( ! var . isPrimary )	if ( var . trackGroupCategory == TrackGroupInfo . CATEGORY_EMBEDDED )
var . discardEmbeddedTracksTo ( var )	return var . continueLoading ( var )
return var . continueLoading ( var )	var . reevaluateBuffer ( var )
var [ var ] ++ = new TrackGroupInfo ( var . type , var , var , true , var , var )	var [ var ] = TrackGroupInfo . primaryTrack ( var . type , var , var , var , var )
boolean var = var . hasEmbeddedEventMessageTrack	boolean var = var . embeddedEventMessageTrackGroupIndex != C . INDEX_UNSET
boolean var = var . hasEmbeddedCea608Track	boolean var = var . embeddedCea608TrackGroupIndex != C . INDEX_UNSET
DashChunkSource var = var . createDashChunkSource ( var , var , var , var . adaptationSetIndices , var , var . trackType , var , var , var )	DashChunkSource var = var . createDashChunkSource ( var , var , var , var . adaptationSetIndices , var , var . trackType , var , var , var , var )
ChunkSampleStream < DashChunkSource > var = new ChunkSampleStream ( var . trackType , var , var , this , var , var , var , var )	ChunkSampleStream < DashChunkSource > var = new ChunkSampleStream ( var . trackType , var , var , var , this , var , var , var , var )
this ( var , null , null , null , var , var , var , var , var )	this ( var , null , null , null , var , new DefaultCompositeSequenceableLoaderFactory , var , var , null )
EventDispatcher var = var . copyWithMediaTimeOffsetMs ( var . getPeriod ( var ) . startMs )	EventDispatcher var = createEventDispatcher ( var , var . getPeriod ( var ) . startMs )
DashMediaPeriod var = new DashMediaPeriod ( var + var , var , var , var , var , var , var , var , var )	DashMediaPeriod var = new DashMediaPeriod ( var + var , var , var , var , var , var , var , var , var , var , var )
var = null	var = false
var . loadCompleted ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )
var . loadCanceled ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )	var . loadCompleted ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )
long var = getNowUnixTimeUs - C . msToUs ( var . availabilityStartTime )	long var = getNowUnixTimeUs - C . msToUs ( var . availabilityStartTimeMs )
if ( var . timeShiftBufferDepth != C . TIME_UNSET )	if ( var . timeShiftBufferDepthMs != C . TIME_UNSET )
long var = C . msToUs ( var . timeShiftBufferDepth )	long var = C . msToUs ( var . timeShiftBufferDepthMs )
long var = var . availabilityStartTime + var . getPeriod ( 0 ) . startMs + C . usToMs ( var )	long var = var . availabilityStartTimeMs + var . getPeriod ( 0 ) . startMs + C . usToMs ( var )
DashTimeline var = new DashTimeline ( var . availabilityStartTime , var , var , var , var , var , var )	DashTimeline var = new DashTimeline ( var . availabilityStartTimeMs , var , var , var , var , var , var , var )
if ( ! var . dynamic )	Assertions . checkArgument ( ! var . dynamic )
var = 5000	this . var = var
int var = var . getFirstSegmentNum ( )	long var = var . getFirstSegmentNum ( )
int var = var + var - 1	long var = var + var - 1
return var . set ( null , var , var , true , var . dynamic , var , var , 0 , var . getPeriodCount ( ) - 1 , var )	return var . set ( var , var , var , true , var . dynamic , var , var , 0 , var . getPeriodCount ( ) - 1 , var )
int var = var . getSegmentNum ( var , var )	long var = var . getSegmentNum ( var , var )
String var = new BufferedReader ( new InputStreamReader ( var ) ) . readLine	String var = new BufferedReader ( new InputStreamReader ( var , Charset . forName ( C . UTF8_NAME ) . UTF8_NAME ) , Charset . forName ( C . UTF8_NAME ) . UTF8_NAME ) . readLine
DashManifestParser var = new DashManifestParser	return ParsingLoadable . load ( var , new DashManifestParser , var )
return var . parse ( var . getUri ( ) , var )	return ParsingLoadable . load ( var , new DashManifestParser , var )
var = var . getAdaptationSetIndex ( C . TRACK_TYPE_AUDIO )	var = C . TRACK_TYPE_AUDIO
Representation var = var . representations . get ( 0 )	Representation var = getFirstRepresentation ( var , var )
Format var = DashUtil . loadSampleFormat ( var , var )	Format var = DashUtil . loadSampleFormat ( var , var , var )
DrmInitData var = var . format . var	Format var = var . format
ChunkExtractorWrapper var = loadInitializationData ( var , var , false )	ChunkExtractorWrapper var = loadInitializationData ( var , var , var , false )
ChunkExtractorWrapper var = loadInitializationData ( var , var , true )	ChunkExtractorWrapper var = loadInitializationData ( var , var , var , true )
ChunkExtractorWrapper var = newWrappedExtractor ( var . format )	ChunkExtractorWrapper var = newWrappedExtractor ( var , var . format )
boolean var = var . startsWith ( MimeTypes . VIDEO_WEBM ) || var . startsWith ( MimeTypes . AUDIO_WEBM )	boolean var = var != null && ( var . startsWith ( MimeTypes . VIDEO_WEBM ) || var . startsWith ( MimeTypes . AUDIO_WEBM ) )
return new ChunkExtractorWrapper ( var , var )	return new ChunkExtractorWrapper ( var , var , var )
return var . timesUs [ var ]	return var . timesUs [ ( ] int ) var
return var . durationsUs [ var ]	return var . durationsUs [ ( ] int ) var
return new DefaultDashChunkSource ( var , var , var , var , var , var , var , var , var , var , var )	return new DefaultDashChunkSource ( var , var , var , var , var , var , var , var , var , var , var , var )
var [ var ] = new RepresentationHolder ( var , var , var , var )	var [ var ] = new RepresentationHolder ( var , var , var , var , var , var )
var . updateSelectedTrack ( var )	var . updateSelectedTrack ( var , var , var )
int var = var . getFirstSegmentNum ( )	long var = var . getFirstSegmentNum ( )
if ( var . timeShiftBufferDepth != C . TIME_UNSET )	if ( var . timeShiftBufferDepthMs != C . TIME_UNSET )
long var = var . timeShiftBufferDepth * 1000	long var = C . msToUs ( var . timeShiftBufferDepthMs )
int var = Math . min ( var , var - var + 1 )	int var = ( int ) Math . min ( var , var - var + 1 )
var . chunk = newMediaChunk ( var , var , var , var . getSelectedFormat ( ) , var . getSelectionReason ( ) , var . getSelectionData ( ) , var , var )	var . chunk = newMediaChunk ( var , var , var , var . getSelectedFormat ( ) , var . getSelectionReason ( ) , var . getSelectionData ( ) , var , var , var )
int var = var . getFirstSegmentNum ( ) + var - 1	long var = var . getFirstSegmentNum ( ) + var - 1
return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , var , var , var . extractorWrapper )	return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , var , var , var , var . extractorWrapper )
RepresentationHolder ( long var , Representation var , boolean var , boolean var )	RepresentationHolder ( long var , int var , Representation var , boolean var , boolean var , TrackOutput var )
var = new FragmentedMp4Extractor ( var )	var = new FragmentedMp4Extractor ( var , null , null , null , var , var )
var = new ChunkExtractorWrapper ( var , var . format )	var = new ChunkExtractorWrapper ( var , var , var . format )
int var = var . getFirstSegmentNum ( ) + var - 1	long var = var . getFirstSegmentNum ( ) + var - 1
int var = var . getFirstSegmentNum ( )	long var = var . getFirstSegmentNum ( )
public DashManifest ( long var , long var , long var , boolean var , long var , long var , long var , UtcTimingElement var , Uri var , List < Period > var )	public DashManifest ( long var , long var , long var , boolean var , long var , long var , long var , long var , UtcTimingElement var , Uri var , List < Period > var )
return new DashManifest ( var , var , var , var , var , var , var , var , var , var )	return new DashManifest ( var , var , var , var , var , var , var , var , var , var , var )
boolean var = var != null && var . equals ( "" )	boolean var = var != null && "" . equals ( var )
SchemeData var = parseContentProtection ( var )	Pair < String , SchemeData > var = parseContentProtection ( var )
if ( var != null )	if ( var . second != null )
var . add ( var )	var . add ( var . second )
var . add ( buildRepresentation ( var . get ( var ) , var , var , var ) . get ( var ) , var , var , var )	var . add ( buildRepresentation ( var . get ( var ) , var , var , var , var ) . get ( var ) , var , var , var , var )
String var = var . getAttributeValue ( null , "" )	String var = Util . toLowerInvariant ( var . getAttributeValue ( null , "" ) , "" )
if ( var == null && var && XmlPullParserUtil . isStartTag ( var , "" ) && var . next ( ) == XmlPullParser . TEXT )	if ( C . PLAYREADY_UUID . equals ( var ) && XmlPullParserUtil . isStartTag ( var , "" ) && var . next ( ) == XmlPullParser . TEXT )
if ( XmlPullParserUtil . isStartTag ( var , "" ) )	if ( XmlPullParserUtil . isStartTag ( var , "" ) == null )
SchemeData var = parseContentProtection ( var )	Pair < String , SchemeData > var = parseContentProtection ( var )
if ( var != null )	if ( var . second != null )
var . add ( var )	var . add ( var . second )
Format var = buildFormat ( var , var , var , var , var , var , var , var , var , var , var , var )	Format var = buildFormat ( var , var , var , var , var , var , var , var , var , var , var , var , var )
return new RepresentationInfo ( var , var , var , var , var )	return new RepresentationInfo ( var , var , var , var , var , var , Representation . REVISION_ID_DEFAULT )
ArrayList < Descriptor > var = var . inbandEventStreams	ArrayList < Descriptor > var = var . var
return Representation . newInstance ( var , Representation . REVISION_ID_DEFAULT , var , var . baseUrl , var . segmentBase , var )	return Representation . newInstance ( var , var . revisionId , var , var . baseUrl , var . segmentBase , var )
private static final RepresentationInfo	protected static final RepresentationInfo
public RepresentationInfo ( Format var , String var , SegmentBase var , ArrayList < SchemeData > var , ArrayList < Descriptor > var )	public RepresentationInfo ( Format var , String var , SegmentBase var , String var , ArrayList < SchemeData > var , ArrayList < Descriptor > var , long var )
var . writeInt ( var )	if ( var == null || getClass != var . getClass ( ) )
return new RepresentationKey ( var . readInt ( ) , var . readInt ( ) , var . readInt ( ) )	return var == var . var && var == var . var && var == var . var
final int var	final long var
public MultiSegmentBase ( RangedUri var , long var , long var , int var , long var , List < SegmentTimelineElement > var )	public MultiSegmentBase ( RangedUri var , long var , long var , long var , long var , List < SegmentTimelineElement > var )
final int var = getFirstSegmentNum	final long var = getFirstSegmentNum
final int var = getSegmentCount ( var )	final long var = getSegmentCount ( var )
int var = var + int ( var / var )	long var = var + var / var
int var = var + var - 1	long var = var + var - 1
int var = var + ( var - var ) / 2	long var = var + ( var - var ) / 2
long var = var . get ( var - var ) . var	long var = var . get ( int ( var - var ) - var ) . var
var = var . get ( var - var ) . startTime - var	var = var . get ( int ( var - var ) - var ) . startTime - var
public SegmentList ( RangedUri var , long var , long var , int var , long var , List < SegmentTimelineElement > var , List < RangedUri > var )	public SegmentList ( RangedUri var , long var , long var , long var , long var , List < SegmentTimelineElement > var , List < RangedUri > var )
return var . get ( var - startNumber )	return var . get ( int ( var - startNumber ) - startNumber )
public SegmentTemplate ( RangedUri var , long var , long var , int var , long var , List < SegmentTimelineElement > var , UrlTemplate var , UrlTemplate var )	public SegmentTemplate ( RangedUri var , long var , long var , long var , long var , List < SegmentTimelineElement > var , UrlTemplate var , UrlTemplate var )
var = segmentTimeline . get ( var - startNumber ) . startTime	var = segmentTimeline . get ( int ( var - startNumber ) - startNumber ) . startTime
public HlsChunkSource ( HlsPlaylistTracker var , HlsUrl var , HlsDataSourceFactory var , TimestampAdjusterProvider var , List < Format > var )	public HlsChunkSource ( HlsExtractorFactory var , HlsPlaylistTracker var , HlsUrl var , HlsDataSourceFactory var , TimestampAdjusterProvider var , List < Format > var )
if ( var != null )	if ( var != null && var )
var . updateSelectedTrack ( var )	var . updateSelectedTrack ( var , var , var )
var = Util . binarySearchFloor ( var . segments , var - var . startTimeUs , true , ! var . isLive ( ) || var == null ) + var . mediaSequence	var = Util . binarySearchFloor ( var . segments , var , true , ! var . isLive ( ) || var == null ) + var . mediaSequence
int var = var - var . mediaSequence	int var = int ( var - var . mediaSequence )
if ( var . isEncrypted )	if ( var . fullSegmentEncryptionKeyUri != null )
Uri var = UriUtil . resolveToUri ( var . baseUri , var . var )	Uri var = UriUtil . resolveToUri ( var . baseUri , var . fullSegmentEncryptionKeyUri )
long var = var . var + var . relativeStartTimeUs	long var = var + var . relativeStartTimeUs
var . chunk = new HlsMediaChunk ( var , var , var , var , var , var . getSelectionReason ( ) , var . getSelectionData ( ) , var , var + var . durationUs , var , var , var , var , var , var , var )	var . chunk = new HlsMediaChunk ( var , var , var , var , var , var , var . getSelectionReason ( ) , var . getSelectionData ( ) , var , var + var . durationUs , var , var , var . hasGapTag , var , var , var , var . drmInitData , var , var )
if ( var != C . INDEX_UNSET )	if ( var == C . INDEX_UNSET )
if ( var != C . INDEX_UNSET )	if ( var == C . INDEX_UNSET )
var . blacklist ( var , var )	return ! var || var . blacklist ( var , ChunkedTrackBlacklistUtil . DEFAULT_TRACK_BLACKLIST_MS )
public HlsMediaChunk ( DataSource var , DataSpec var , DataSpec var , HlsUrl var , List < Format > var , int var , Object var , long var , long var , int var , int var , boolean var , TimestampAdjuster var , HlsMediaChunk var , byte var , byte var )	public HlsMediaChunk ( HlsExtractorFactory var , DataSource var , DataSpec var , DataSpec var , HlsUrl var , List < Format > var , int var , Object var , long var , long var , long var , int var , boolean var , boolean var , TimestampAdjuster var , HlsMediaChunk var , DrmInitData var , byte var , byte var )
if ( var != null )	if ( var )
var = true	var = null
var = var	this . var = var
var . init ( var , var )	var . init ( var , var , var )
if ( var == var || var || var == null )	if ( var || var == null )
if ( var == null )	if ( var && ! var )
return var . readLong ( )	return var . readLong ( ) & 0x1FFFFFFFFL
Extractor var	Extractor var = null
public HlsMediaPeriod ( HlsPlaylistTracker var , HlsDataSourceFactory var , int var , EventDispatcher var , Allocator var )	public HlsMediaPeriod ( HlsExtractorFactory var , HlsPlaylistTracker var , HlsDataSourceFactory var , int var , EventDispatcher var , Allocator var , CompositeSequenceableLoaderFactory var , boolean var )
var = new Handler	var = var . createCompositeSequenceableLoader ( )
var . removeCallbacksAndMessages ( null )	var . mediaPeriodReleased ( )
var = new CompositeSequenceableLoader ( var )	var = var . createCompositeSequenceableLoader ( var )
return var . continueLoading ( var )	var . reevaluateBuffer ( var )
var . onPlaylistBlacklisted ( var , var )	var &= var . onPlaylistError ( var , var )
if ( var . format . height > 0 || variantHasExplicitCodecWithPrefix ( var , "" ) ( var , "" ) )	if ( var . height > 0 || Util . getCodecsOfType ( var . codecs , C . TRACK_TYPE_VIDEO ) != null . getCodecsOfType ( var . codecs , C . TRACK_TYPE_AUDIO ) != null )
if ( variantHasExplicitCodecWithPrefix ( var , "" ) )	if ( Util . getCodecsOfType ( var . codecs , C . TRACK_TYPE_AUDIO ) != null )
HlsUrl var = new HlsMasterPlaylist . HlsUrl [ var ] . size ( )	Format var = new Format [ var ] . size ( )
HlsChunkSource var = new HlsChunkSource ( var , var , var , var , var )	HlsChunkSource var = new HlsChunkSource ( var , var , var , var , var , var )
String var = var . format . var	int var = Format . NO_VALUE
String var = var . split ( "" )	String var = MimeTypes . getMediaMimeType ( var )
this ( var , var , var , var , var , new HlsPlaylistParser )	this ( var , new DefaultHlsDataSourceFactory ( var ) , HlsExtractorFactory . DEFAULT , var , var , var , new HlsPlaylistParser )
return new HlsMediaPeriod ( var , var , var , var , var )	return new HlsMediaPeriod ( var , var , var , var , var , var , var , var )
var = new SinglePeriodTimeline ( var , var , var , var . durationUs , var . startTimeUs , var , true , ! var . hasEndTag )	var = new SinglePeriodTimeline ( var , var , var , var . durationUs , var , var , true , ! var . hasEndTag , var )
var = new SinglePeriodTimeline ( var , var , var . startTimeUs + var . durationUs , var . durationUs , var . startTimeUs , var , true , false )	var = new SinglePeriodTimeline ( var , var , var . durationUs , var . durationUs , 0 , var , true , false , var )
var . onSourceInfoRefreshed ( var , new HlsManifest ( var . getMasterPlaylist ( ) , var ) . getMasterPlaylist ( ) , var )	refreshSourceInfo ( var , new HlsManifest ( var . getMasterPlaylist ( ) , var ) . getMasterPlaylist ( ) , var )
var = new LinkedList	var = new ArrayList
if ( ! var )	if ( var && ! var )
var = ! var . advanceTo ( var , true , true ) && var . getReadIndex ( ) != 0	var = var . advanceTo ( var , true , true ) == SampleQueue . ADVANCE_FAILED && var . getReadIndex ( ) != 0
int var = var . getTrackGroup ( ) . indexOf ( var . getLast ( ) . trackFormat )	int var = var . getTrackGroup ( ) . indexOf ( getLastMediaChunk . trackFormat )
if ( ! var && ! isPendingReset && seekInsideBufferUs ( var ) )	if ( var && ! var && ! isPendingReset && seekInsideBufferUs ( var ) )
HlsMediaChunk var = var . getLast ( )	HlsMediaChunk var = getLastMediaChunk
if ( var && ! var )	if ( var )
var . onPlaylistBlacklisted ( var , var )	return var . onPlaylistError ( var , var )
while ( var . size ( ) > 1 && finishedReadingChunk ( var . getFirst ( ) ) )	while ( var < var . size ( ) - 1 && finishedReadingChunk ( var . get ( var ) ) ++ )
var . removeFirst ( )	var ++
var . advanceToEnd ( )	return var . advanceToEnd ( )
var . advanceTo ( var , true , true )	int var = var . advanceTo ( var , true , true )
for ( int var = 0 ; var < var . length ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
HlsMediaChunk var = var . removeLast ( )	HlsMediaChunk var = var . remove ( var . size ( ) - 1 )
var = var	var = false
if ( var || var || ! var )	if ( var || var != null || ! var )
var = new boolean [ var ]	var = TrackGroupArray . EMPTY
var = new boolean [ var ]	var = new int [ var ]
var = getAudioCodecs ( var . var )	var . setSampleOffsetUs ( var )
if ( var == C . TRACK_TYPE_VIDEO )	if ( var != null )
boolean var = var . advanceTo ( var , true , false )	boolean var = var . advanceTo ( var , true , false ) != SampleQueue . ADVANCE_FAILED
if ( TextUtils . isEmpty ( var ) )	String var = MimeTypes . getMediaMimeType ( var )
String var = var . split ( "" )	int var = MimeTypes . getTrackType ( var )
if ( var == MimeTypes . getTrackTypeOfCodec ( var ) )	return var == MimeTypes . getTrackType ( var )
if ( var . length ( ) > 0 )	if ( ! Util . areEqual ( var , var ) )
return new HlsMasterPlaylist ( baseUri , tags , copyRenditionsList ( var , var ) , var , copyRenditionsList ( var , var ) , var , copyRenditionsList ( var , var ) , var , var , var )	return new HlsMasterPlaylist ( baseUri , tags , copyRenditionsList ( var , RenditionKey . TYPE_VARIANT , var ) , RenditionKey . TYPE_VARIANT , var , copyRenditionsList ( var , RenditionKey . TYPE_AUDIO , var ) , RenditionKey . TYPE_AUDIO , var , copyRenditionsList ( var , RenditionKey . TYPE_SUBTITLE , var ) , RenditionKey . TYPE_SUBTITLE , var , var , var )
if ( var . contains ( var . url ) )	if ( var . type == var && var . trackIndex == var )
this ( var , 0 , - 1 , C . TIME_UNSET , false , null , null , var , var )	this ( var , null , 0 , - 1 , C . TIME_UNSET , null , null , var , var , false )
public Segment ( String var , long var , int var , long var , boolean var , String var , String var , long var , long var )	public Segment ( String var , Segment var , long var , int var , long var , String var , String var , long var , long var , boolean var )
Queue < String > var = new LinkedList	Queue < String > var = new ArrayDeque
var = Format . createAudioContainerFormat ( var , MimeTypes . APPLICATION_M3U8 , null , null , Format . NO_VALUE , Format . NO_VALUE , Format . NO_VALUE , null , var , var )	var = Format . createAudioContainerFormat ( var , MimeTypes . APPLICATION_M3U8 , var , var , Format . NO_VALUE , Format . NO_VALUE , Format . NO_VALUE , null , var , var )
Format var = Format . createVideoContainerFormat ( Integer . toString ( var . size ( ) ) . size ( ) , MimeTypes . APPLICATION_M3U8 , null , var , var , var , var , Format . NO_VALUE , null , 0 )	Format var = Format . createVideoContainerFormat ( Integer . toString ( var . size ( ) ) . size ( ) , MimeTypes . APPLICATION_M3U8 , null , var , var , var , var , var , null , 0 )
int var = 0	long var = 0
var = parseIntAttr ( var , var )	var = parseLongAttr ( var , var )
String var = parseStringAttr ( var , var )	String var = parseOptionalStringAttr ( var , var )
var = var . equals ( var )	if ( ! var . equals ( var ) )
if ( ! var = null != null = var )	if ( var == null = null != null = var )
var = Integer . toHexString ( var )	var = Long . toHexString ( var )
var . add ( new Segment ( var , var , var , var , var , var , var , var , var ) , var , var , var , var , var , var , var , var )	var . add ( new Segment ( var , var , var , var , var , var , var , var , var , var ) , var , var , var , var , var , var , var , var , var )
var . get ( var ) . onPlaylistBlacklisted ( var , var )	var |= ! var . get ( var ) . onPlaylistError ( var , var )
int var = var . mediaSequence - var . mediaSequence	int var = int ( var . mediaSequence - var . mediaSequence )
var = blacklistPlaylist	var |= blacklistPlaylist
FragmentedMp4Extractor var = new FragmentedMp4Extractor ( FragmentedMp4Extractor . FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor . FLAG_WORKAROUND_IGNORE_TFDT_BOX , null , var )	FragmentedMp4Extractor var = new FragmentedMp4Extractor ( FragmentedMp4Extractor . FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor . FLAG_WORKAROUND_IGNORE_TFDT_BOX , null , var , null )
var [ var ] = new ChunkExtractorWrapper ( var , var )	var [ var ] = new ChunkExtractorWrapper ( var , var . type , var )
var . updateSelectedTrack ( var )	var . updateSelectedTrack ( var , var , var )
var = var . getNextChunkIndex ( ) - var	var = int ( var . getNextChunkIndex ( ) - var )
var . chunk = newMediaChunk ( var . getSelectedFormat ( ) , var , var , null , var , var , var , var . getSelectionReason ( ) , var . getSelectionData ( ) , var )	var . chunk = newMediaChunk ( var . getSelectedFormat ( ) , var , var , null , var , var , var , var , var . getSelectionReason ( ) , var . getSelectionData ( ) , var )
return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , 1 , var , var )	return new ContainerMediaChunk ( var , var , var , var , var , var , var , var , var , 1 , var , var )
public SsMediaPeriod ( SsManifest var , SsChunkSource . Factory var , int var , EventDispatcher var , LoaderErrorThrower var , Allocator var )	public SsMediaPeriod ( SsManifest var , SsChunkSource . Factory var , CompositeSequenceableLoaderFactory var , int var , EventDispatcher var , LoaderErrorThrower var , Allocator var )
var = new CompositeSequenceableLoader ( var )	var = var . createCompositeSequenceableLoader ( var )
var = new CompositeSequenceableLoader ( var )	var = var . createCompositeSequenceableLoader ( var )
return var . continueLoading ( var )	var . reevaluateBuffer ( var )
this ( var , null , null , null , var , var , var , var , var )	this ( var , null , null , null , var , new DefaultCompositeSequenceableLoaderFactory , var , var , null )
if ( var != null )	if ( var )
SsMediaPeriod var = new SsMediaPeriod ( var , var , var , var , var , var )	SsMediaPeriod var = new SsMediaPeriod ( var , var , var , var , var , var , var )
var . loadCompleted ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )	var . loadCanceled ( var . dataSpec , var . type , var , var , var . bytesLoaded ( ) )
var = new SinglePeriodTimeline ( var , 0 , 0 , 0 , true , var . isLive )	var = new SinglePeriodTimeline ( var , 0 , 0 , 0 , true , var . isLive , var )
var = new SinglePeriodTimeline ( C . TIME_UNSET , var , var , var , true , true )	var = new SinglePeriodTimeline ( C . TIME_UNSET , var , var , var , true , true , var )
var = new SinglePeriodTimeline ( var + var , var , var , 0 , true , false )	var = new SinglePeriodTimeline ( var + var , var , var , 0 , true , false , var )
this . var = var . size ( )	var = var . size ( )
var = Util . scaleLargeTimestamp ( var , C . MICROS_PER_SECOND , var )	this ( var , var , var , var , var , var , var , var , var , var , var , var , var , Util . scaleLargeTimestamps ( var , C . MICROS_PER_SECOND , var ) , C . MICROS_PER_SECOND , var , Util . scaleLargeTimestamp ( var , C . MICROS_PER_SECOND , var ) , C . MICROS_PER_SECOND , var )
var = Util . scaleLargeTimestamps ( var , C . MICROS_PER_SECOND , var )	this ( var , var , var , var , var , var , var , var , var , var , var , var , var , Util . scaleLargeTimestamps ( var , C . MICROS_PER_SECOND , var ) , C . MICROS_PER_SECOND , var , Util . scaleLargeTimestamp ( var , C . MICROS_PER_SECOND , var ) , C . MICROS_PER_SECOND , var )
DrmInitData var = new DrmInitData ( new SchemeData ( var . uuid , null , MimeTypes . VIDEO_MP4 , var . data ) . uuid , null , MimeTypes . VIDEO_MP4 , var . data )	DrmInitData var = new DrmInitData ( new SchemeData ( var . uuid , MimeTypes . VIDEO_MP4 , var . data ) . uuid , MimeTypes . VIDEO_MP4 , var . data )
this ( null , null , var , var , var , var , var , var , var , var , false , Color . BLACK )	this ( null , null , var , var , var , var , var , var , var , var , var , var , false , Color . BLACK )
this ( var , var , null , var , var , var , var , var , var , var , var , var )	this ( var , var , null , var , var , var , var , var , var , var , var , var , var , var )
return MimeTypes . TEXT_VTT . equals ( var ) || MimeTypes . TEXT_SSA . equals ( var ) || MimeTypes . APPLICATION_TTML . equals ( var ) || MimeTypes . APPLICATION_MP4VTT . equals ( var ) || MimeTypes . APPLICATION_SUBRIP . equals ( var ) || MimeTypes . APPLICATION_TX3G . equals ( var ) || MimeTypes . APPLICATION_CEA608 . equals ( var ) || MimeTypes . APPLICATION_MP4CEA608 . equals ( var ) || MimeTypes . APPLICATION_CEA708 . equals ( var ) || MimeTypes . APPLICATION_DVBSUBS . equals ( var )	return MimeTypes . TEXT_VTT . equals ( var ) || MimeTypes . TEXT_SSA . equals ( var ) || MimeTypes . APPLICATION_TTML . equals ( var ) || MimeTypes . APPLICATION_MP4VTT . equals ( var ) || MimeTypes . APPLICATION_SUBRIP . equals ( var ) || MimeTypes . APPLICATION_TX3G . equals ( var ) || MimeTypes . APPLICATION_CEA608 . equals ( var ) || MimeTypes . APPLICATION_MP4CEA608 . equals ( var ) || MimeTypes . APPLICATION_CEA708 . equals ( var ) || MimeTypes . APPLICATION_DVBSUBS . equals ( var ) || MimeTypes . APPLICATION_PGS . equals ( var )
public TextRenderer ( Output var , Looper var )	public TextRenderer ( TextOutput var , Looper var )
public TextRenderer ( Output var , Looper var , SubtitleDecoderFactory var )	public TextRenderer ( TextOutput var , Looper var , SubtitleDecoderFactory var )
var = new LinkedList	var = new ArrayList
var = 2	setCaptionRowCount ( 2 )
var = 3	setCaptionRowCount ( 3 )
var = 4	setCaptionRowCount ( 4 )
var = new LinkedList	var = new ArrayList
var . add ( new SubtitleInputBuffer )	var . add ( new CeaInputBuffer )
var . add ( new CeaOutputBuffer ( this ) )	releaseOutputBuffer ( this )
SubtitleInputBuffer var = var . poll ( )	CeaInputBuffer var = var . poll ( )
var . setPosition ( var . limit ( ) )	var = var . limit ( )
int var = var . getPosition ( )	int var = var . readUnsignedShort ( )
int var = var . readUnsignedShort ( )	int var = var . getPosition ( ) + var
parseHeader ( var , var , var )	parseHeader ( var , var , var , var )
TtmlRegion var = parseRegionAttributes ( var )	TtmlRegion var = parseRegionAttributes ( var , var )
return new TtmlRegion ( var , var , var , Cue . LINE_TYPE_FRACTION , var , var )	return new TtmlRegion ( var , var , var , Cue . LINE_TYPE_FRACTION , var , var , Cue . TEXT_SIZE_TYPE_FRACTIONAL_IGNORE_PADDING , var )
traverseForStyle ( var , var )	traverseForStyle ( var , var , var )
var . add ( new Cue ( cleanUpText ( var . getValue ( ) ) . getValue ( ) , null , var . line , var . lineType , var . lineAnchor , var . position , Cue . TYPE_UNSET , var . width ) ( var . getValue ( ) ) . getValue ( ) , null , var . line , var . lineType , var . lineAnchor , var . position , Cue . TYPE_UNSET , var . width )	var . add ( new Cue ( cleanUpText ( var . getValue ( ) ) . getValue ( ) , null , var . line , var . lineType , var . lineAnchor , var . position , Cue . TYPE_UNSET , var . width , var . textSizeType , var . textSize ) ( var . getValue ( ) ) . getValue ( ) , null , var . line , var . lineType , var . lineAnchor , var . position , Cue . TYPE_UNSET , var . width , var . textSizeType , var . textSize )
getChild ( var ) . traverseForStyle ( var , var )	getChild ( var ) . traverseForStyle ( var , var , var )
this ( var , Cue . DIMEN_UNSET , Cue . DIMEN_UNSET , Cue . TYPE_UNSET , Cue . TYPE_UNSET , Cue . DIMEN_UNSET )	this ( var , Cue . DIMEN_UNSET , Cue . DIMEN_UNSET , Cue . TYPE_UNSET , Cue . TYPE_UNSET , Cue . DIMEN_UNSET , Cue . TYPE_UNSET , Cue . DIMEN_UNSET )
final WebvttCssStyle	public final WebvttCssStyle
final WebvttCueParser	public final WebvttCueParser
var = var * 60 + Long . parseLong ( var )	var = ( var * 60 ) + Long . parseLong ( var )
this ( var , DEFAULT_MAX_INITIAL_BITRATE , DEFAULT_MIN_DURATION_FOR_QUALITY_INCREASE_MS , DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS , DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS , DEFAULT_BANDWIDTH_FRACTION )	this ( var , DEFAULT_MIN_DURATION_FOR_QUALITY_INCREASE_MS , DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS , DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS , DEFAULT_BANDWIDTH_FRACTION , DEFAULT_BUFFERED_FRACTION_TO_LIVE_EDGE_FOR_QUALITY_INCREASE , DEFAULT_MIN_TIME_BETWEEN_BUFFER_REEVALUTATION_MS , Clock . DEFAULT )
public Factory ( BandwidthMeter var , int var , int var , int var , int var , float var )	public Factory ( BandwidthMeter var , int var , int var , int var , float var , float var , long var , Clock var )
return new AdaptiveTrackSelection ( var , var , var , var , var , var , var , var )	return new AdaptiveTrackSelection ( var , var , var , var , var , var , var , var , var , var )
this ( var , var , var , var , var , var , var , var )	this ( var , var , var , var , var , var , var , var , var , Clock . DEFAULT )
public AdaptiveTrackSelection ( TrackGroup var , int var , BandwidthMeter var , int var , long var , long var , long var , float var )	public AdaptiveTrackSelection ( TrackGroup var , int var , BandwidthMeter var , long var , long var , long var , float var , float var , long var , Clock var )
long var = SystemClock . elapsedRealtime ( )	long var = var . elapsedRealtime ( )
if ( var . bitrate > var . bitrate && var < var = var . bitrate < var . bitrate && var >= var = var )	if ( var . bitrate > var . bitrate && var < var ( var ) = var . bitrate < var . bitrate && var >= var = var )
long var = var . get ( var - 1 ) . endTimeUs - var	MediaChunk var = var . get ( var - 1 )
int var = determineIdealSelectedIndex ( SystemClock . elapsedRealtime ( ) )	long var = Util . getPlayoutDurationForMediaDuration ( var . startTimeUs - var , var )
long var = var . getBitrateEstimate ( )	long var = long ( var . getBitrateEstimate ( ) * var )
if ( var . bitrate <= var = var )	if ( Math . round ( var . bitrate * var ) <= var = var )
public static final Parameters	public static final ParametersBuilder
public Parameters	private Parameters
this ( null , null , false , true , Integer . MAX_VALUE , Integer . MAX_VALUE , Integer . MAX_VALUE , true , true , Integer . MAX_VALUE , Integer . MAX_VALUE , true )	this ( new SparseArray < Map < TrackGroupArray , SelectionOverride > , SelectionOverride > < TrackGroupArray , SelectionOverride > , SelectionOverride ( ) , new SparseBooleanArray , null , null , false , 0 , false , false , true , Integer . MAX_VALUE , Integer . MAX_VALUE , Integer . MAX_VALUE , true , true , Integer . MAX_VALUE , Integer . MAX_VALUE , true , C . AUDIO_SESSION_ID_UNSET )
public Parameters ( String var , String var , boolean var , boolean var , int var , int var , int var , boolean var , boolean var , int var , int var , boolean var )	Parameters ( SparseArray < Map < TrackGroupArray , SelectionOverride > , SelectionOverride > < TrackGroupArray , SelectionOverride > , SelectionOverride var , SparseBooleanArray var , String var , String var , boolean var , int var , boolean var , boolean var , boolean var , int var , int var , int var , boolean var , boolean var , int var , int var , boolean var , int var )
return withMaxVideoSize ( 1279 , 719 )	return setMaxVideoSize ( 1279 , 719 )
return withMaxVideoSize ( Integer . MAX_VALUE , Integer . MAX_VALUE )	return setMaxVideoSize ( Integer . MAX_VALUE , Integer . MAX_VALUE )
return new Parameters ( var , var , var , var , var , var , var , var , var , var , var , var )	return new Parameters ( var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var , var )
return withViewportSize ( var . x , var . y , var )	return setViewportSize ( var . x , var . y , var )
return withViewportSize ( Integer . MAX_VALUE , Integer . MAX_VALUE , true )	return setViewportSize ( Integer . MAX_VALUE , Integer . MAX_VALUE , true )
return var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && TextUtils . equals ( var , var . var ) && TextUtils . equals ( var , var . var )	return var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && var == var . var && TextUtils . equals ( var , var . var ) && TextUtils . equals ( var , var . var ) && areRendererDisabledFlagsEqual ( var , var . var ) && areSelectionOverridesEqual ( var , var . var )
Parameters var = var . get ( )	int var = var . getRendererCount ( )
if ( C . TRACK_TYPE_VIDEO == var [ var ] . getTrackType )	if ( C . TRACK_TYPE_VIDEO == var . getRendererType ( var ) )
var |= var [ var ] . length > 0	var |= var . getTrackGroups ( var ) . length > 0
if ( var != null )	if ( ! var . forceLowestBitrate && var != null )
boolean var = var . allowMixedMimeAdaptiveness && ( var . supportsMixedMimeTypeAdaptation ( ) & var ) != 0	boolean var = var . allowMixedMimeAdaptiveness && ( var & var ) != 0
if ( var != var )	if ( var . forceLowestBitrate )
var = compareFormatValues ( var . bitrate , var )	var = compareFormatValues ( var . bitrate , var ) < 0
if ( var > var )	if ( var == null || var . compareTo ( var ) > 0 )
if ( var != null )	if ( ! var . forceLowestBitrate && var != null )
if ( var = 4 = 3 )	if ( var != - 1 = var )
var = 4	var = false
var = 3	var = var
if ( var = 2 )	if ( var != - 1 = var )
var = 2	var = false
boolean var = ( var . selectionFlags & C . SELECTION_FLAG_FORCED ) != 0	boolean var = ( var & C . SELECTION_FLAG_FORCED ) != 0
if ( var = 6 var = 5 = 4 )	if ( var = 8 var = 6 = 4 )
var = 5	var = 8
this . var = var . var	this . var = var
int var = getTrackFormatSupport ( var , var , var )	int var = getTrackSupport ( var , var , var )
int var = getMixedMimeTypeAdaptationSupport ( var )	int var = getMixedMimeTypeAdaptationSupports ( var )
return new TrackSelectorResult ( var , new TrackSelectionArray ( var ) , var , var )	return new TrackSelectorResult ( var . first , var . second , var )
public TrackSelectorResult ( TrackGroupArray var , TrackSelectionArray var , Object var , RendererConfiguration var )	public TrackSelectorResult ( RendererConfiguration var , TrackSelection var , Object var )
if ( var == null )	if ( var == null || var . var . var != var . var )
this ( var , null )	this . var = var
super ( var , var )	super ( var )
if ( this . var != var || this . var != var )	if ( this . var != var )
if ( var == var || var <= 0 )	if ( var <= 0 )
this ( null , null )	this ( null , null , var , var , Clock . DEFAULT )
this ( var , var , var , Clock . DEFAULT )	this ( var , var , var , var , Clock . DEFAULT )
var = NO_ESTIMATE	var = var
float var = var . getPercentile ( 0.5f )	var = ( long ) var . getPercentile ( 0.5f )
var = ( DataSource ) var . getDeclaredConstructor ( ) . newInstance	var = ( DataSource ) var . getConstructor ( ) . newInstance
if ( Thread . interrupted ( ) )	if ( Thread . currentThread ( ) . isInterrupted )
if ( var . equals ( "" ) || var . equals ( "" ) )	if ( "" . equals ( var ) || "" . equals ( var ) )
if ( var != null != null )	if ( var != null )
this . var = new DataSpec ( var , DataSpec . FLAG_ALLOW_GZIP )	this ( var , new DataSpec ( var , DataSpec . FLAG_ALLOW_GZIP | DataSpec . FLAG_ALLOW_CACHING_UNKNOWN_LENGTH ) , DataSpec . FLAG_ALLOW_GZIP | DataSpec . FLAG_ALLOW_CACHING_UNKNOWN_LENGTH , var , var )
public CacheException ( IOException var )	public CacheException ( Throwable var )
this ( var , var , var )	this ( var , var , var , true )
public CacheDataSink ( Cache var , long var , int var )	public CacheDataSink ( Cache var , long var , int var , boolean var )
if ( var == var += var )	if ( isReadingFromCache += var )
if ( var != null )	if ( var != null = var )
if ( var == var )	return var == var
var . setContentLength ( var , var )	var . applyContentMetadataMutations ( var , var )
if ( var != null )	if ( var . isHoleSpan ( ) )
if ( var == var || var instanceof CacheException = true )	if ( isReadingFromCache || var instanceof CacheException = true )
public CachedContent ( int var , String var , long var )	public CachedContent ( int var , String var )
this . var = var	this . var = DefaultContentMetadata . EMPTY
var . writeLong ( var )	var . writeToStream ( var )
return add ( var ) . id	return getOrAdd ( var ) . id
if ( var != null )	if ( var != null && var . isEmpty ( ) && ! var . isLocked ( ) )
LinkedList < String > var = new LinkedList	String var = new String [ var ] . size ( )
if ( var . isEmpty ( ) )	var . keySet ( ) . toArray ( var )
var . add ( var . key )	var . keySet ( ) . toArray ( var )
var . setLength ( var )	if ( var . applyMetadataMutations ( var ) = true )
if ( ( var & var ) != 0 )	if ( ( var & var ) != 0 = true )
if ( var != null = true )	if ( var = true )
CachedContent var = new CachedContent ( var )	CachedContent var = CachedContent . readFromStream ( var , var )
var += var . headerHashCode ( )	var += var . headerHashCode ( var )
boolean var = var && var != null	boolean var = var . read ( ) == - 1
var += var . headerHashCode ( )	var += var . headerHashCode ( var )
CachedContent var = new CachedContent ( var , var , var )	CachedContent var = new CachedContent ( var , var )
if ( ! var . containsKey ( var ) )	if ( ! var . isLocked ( ) )
return SimpleCacheSpan . getCacheFile ( var , var . assignIdForKey ( var ) , var , System . currentTimeMillis ( ) )	return SimpleCacheSpan . getCacheFile ( var , var . id , var , System . currentTimeMillis ( ) )
Long var = getContentLength ( var . key )	long var = ContentMetadataInternal . getContentLength ( var . getMetadata ( ) )
var . add ( var . key ) . addSpan ( var )	var . getOrAdd ( var . key ) . addSpan ( var )
var . removeEmpty ( var . key )	var . maybeRemove ( var . key )
LinkedList < CacheSpan > var = new LinkedList	ArrayList < CacheSpan > var = new ArrayList
removeSpan ( var , false )	removeSpan ( var . get ( var ) , false )
var . setContentLength ( var , var )	ContentMetadataInternal . setContentLength ( var , var )
return var . getContentLength ( var )	return var . getContentMetadata ( var )
return var * var * 2	return var * var * ( var / 8 )
public StandaloneMediaClock	public StandaloneMediaClock ( Clock var )
var = PlaybackParameters . DEFAULT	this . var = PlaybackParameters . DEFAULT
var = SystemClock . elapsedRealtime ( )	var = var . elapsedRealtime ( )
setPositionUs ( getPositionUs )	resetPosition ( getPositionUs )
var = SystemClock . elapsedRealtime ( )	var = var . elapsedRealtime ( )
long var = SystemClock . elapsedRealtime ( ) - var	long var = var . elapsedRealtime ( ) - var
var += var . getSpeedAdjustedDurationUs ( var )	var += var . getMediaTimeUsForPlayoutTimeMs ( var )
setPositionUs ( getPositionUs )	resetPosition ( getPositionUs )
return TextUtils . isEmpty ( var ) || var . equals ( "" )	return TextUtils . isEmpty ( var ) || "" . equals ( var )
if ( var . group ( 11 ) . equals ( "" ) )	if ( "" . equals ( var . group ( 11 ) ) )
if ( var . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )	if ( var . matches ( "" ) )
if ( "" . equals ( Util . var ) && Util . var . startsWith ( "" ) && var . getPackageManager ( ) . hasSystemFeature ( "" ) . equals ( Util . var ) && Util . var . contains ( "" ) )	if ( "" . equals ( Util . var ) && Util . var . startsWith ( "" ) && var . getPackageManager ( ) . hasSystemFeature ( "" ) "" . equals ( Util . var ) && Util . var . contains ( "" ) ) || ( "" . equals ( Util . toLowerInvariant ( Util . var ) . var ) && ( Util . var . startsWith ( "" ) || Util . var . equals ( "" ) || Util . var . equals ( "" ) ) ) )
if ( "" . equals ( Util . var ) && Util . var . contains ( "" ) )	if ( ( "" . equals ( Util . var ) && Util . var . contains ( "" ) ) || ( "" . equals ( Util . toLowerInvariant ( Util . var ) . var ) && ( Util . var . startsWith ( "" ) || Util . var . equals ( "" ) || Util . var . equals ( "" ) ) ) )
boolean var = var . readInt ( ) != 0	boolean var = Util . readBoolean ( var )
if ( var != var . var || var != var . var || var != var . var || ! Arrays . equals ( var , var . var ) )	return var == var . var && var == var . var && var == var . var && Arrays . equals ( var , var . var )
EGLDisplay var = eglGetDisplay ( EGL_DEFAULT_DISPLAY )	EGLDisplay var = EGL14 . eglGetDisplay ( EGL14 . EGL_DEFAULT_DISPLAY )
if ( Util . SDK_INT == 24 && "" . equals ( Util . MANUFACTURER ) )	if ( Util . SDK_INT < 26 && ( "" . equals ( Util . MANUFACTURER ) || "" . equals ( Util . MODEL ) ) )
initInternal ( var . arg1 != 0 )	initInternal ( var . arg1 )
Assertions . checkState ( var != null , "" )	Assertions . checkNotNull ( var )
Assertions . checkState ( var , "" )	var . init ( var )
Assertions . checkState ( var != null , "" )	this . var = new DummySurface ( this , var . getSurfaceTexture ( ) , var != SECURE_MODE_NONE )
Assertions . checkState ( var != null , "" )	this . var = new DummySurface ( this , var . getSurfaceTexture ( ) , var != SECURE_MODE_NONE )
Assertions . checkState ( var , "" )	Assertions . checkNotNull ( var )
var . setOnFrameAvailableListener ( this )	this . var = new DummySurface ( this , var . getSurfaceTexture ( ) , var != SECURE_MODE_NONE )
setVideoScalingMode ( var , var )	var . setVideoScalingMode ( var )
if ( var != null && shouldUseDummySurface ( var . secure ) )	if ( var != null && shouldUseDummySurface ( var ) )
return var != null || shouldUseDummySurface ( var . secure )	return var != null || shouldUseDummySurface ( var )
var = getCodecMaxValues ( var , var , var )	var = getCodecMaxValues ( var , var , getStreamFormats )
var = getPixelWidthHeightRatio ( var )	var = var . pixelWidthHeightRatio
setVideoScalingMode ( var , var )	var . setVideoScalingMode ( var )
return areAdaptationCompatible ( var , var , var ) && var . width <= var . width && var . height <= var . height && getMaxInputSize ( var ) <= var . inputSize	if ( areAdaptationCompatible ( var . adaptive , var , var ) && var . width <= var . width && var . height <= var . height && getMaxInputSize ( var ) <= var . inputSize )
long var = ( SystemClock . elapsedRealtime ( ) * 1000 ) - var	long var = SystemClock . elapsedRealtime ( ) * 1000
decoderCounters . maxConsecutiveDroppedOutputBufferCount = Math . max ( var , decoderCounters . maxConsecutiveDroppedOutputBufferCount )	decoderCounters . maxConsecutiveDroppedBufferCount = Math . max ( var , decoderCounters . maxConsecutiveDroppedBufferCount )
if ( var == var )	if ( var >= var )
return Util . SDK_INT >= 23 && ! var && ( ! var || DummySurface . isSecureSupported ( var ) )	return Util . SDK_INT >= 23 && ! var && ! var ( var . name ) && ( ! var . secure || DummySurface . isSecureSupported ( var ) )
if ( var . inputSize != Format . NO_VALUE )	var . setInteger ( MediaFormat . KEY_WIDTH , var . width )
var . setInteger ( MediaFormat . KEY_MAX_INPUT_SIZE , var . inputSize )	MediaFormatUtil . maybeSetInteger ( var , MediaFormat . KEY_MAX_INPUT_SIZE , var . inputSize )
return var . sampleMimeType . equals ( var . sampleMimeType ) && getRotationDegrees ( var ) == getRotationDegrees ( var ) && ( var || ( var . width == var . width && var . height == var . height ) )	return var . sampleMimeType . equals ( var . sampleMimeType ) && var . rotationDegrees == var . rotationDegrees && ( var || ( var . width == var . width && var . height == var . height ) ) && Util . areEqual ( var . colorInfo , var . colorInfo )
this ( var )	this ( null )
if ( var == null || var . sampledVsyncTimeNs == 0 )	if ( var == null || var == C . TIME_UNSET )
long var = closestVsync ( var , var . sampledVsyncTimeNs , var )	long var = closestVsync ( var , var , var )
var = 0	var = C . TIME_UNSET
if ( var == - var || var != var && var [ var ] + var - 1 < var [ var ] + var + 1 )	if ( var == - var || ( var != var && var [ var ] + var - 1 < var [ var ] + var + 1 ) )
if ( var == var + var || var != - var + var && var [ var ] + var - 1 < var [ var ] + var + 1 )	if ( var == var + var || ( var != - var + var && var [ var ] + var - 1 < var [ var ] + var + 1 ) )
final int var = deduplicate ( var )	final int var = sortAndDedup ( var )
var . set ( var - var )	return var . get ( var - var )
var . clear ( var - var )	var . set ( var - var )
return var . get ( var - var )	var . clear ( var - var )
if ( var != null )	if ( var . get ( 0 ) )
if ( var . get ( 0 ) )	if ( var != null )
var . remove ( 0 )	if ( var . get ( 0 ) )
if ( var || var || var )	if ( var && ( var || var || var ) )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )	final ViewPropertyAnimator var = var . animate ( )
ViewCompat . setAlpha ( var , 1 )	var . setAlpha ( 1 )
ViewCompat . setAlpha ( var . itemView , 0 )	var . itemView . setAlpha ( 0 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )	final ViewPropertyAnimator var = var . animate ( )
ViewCompat . setAlpha ( var , 1 )	var . setAlpha ( 1 )
var += ViewCompat . getTranslationX ( var . itemView )	var += ( int ) var . itemView . getTranslationX ( )
var += ViewCompat . getTranslationY ( var . itemView )	var += ( int ) var . itemView . getTranslationY ( )
ViewCompat . setTranslationX ( var , - var )	var . setTranslationX ( - var )
ViewCompat . setTranslationY ( var , - var )	var . setTranslationY ( - var )
ViewCompat . animate ( var ) . translationX ( 0 )	var . animate ( ) . translationX ( 0 )
ViewCompat . animate ( var ) . translationY ( 0 )	var . animate ( ) . translationY ( 0 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )	final ViewPropertyAnimator var = var . animate ( )
ViewCompat . setTranslationX ( var . itemView , var )	var . itemView . setTranslationX ( var )
ViewCompat . setTranslationY ( var . itemView , var )	var . itemView . setTranslationY ( var )
ViewCompat . setAlpha ( var . itemView , var )	var . itemView . setAlpha ( var )
ViewCompat . setTranslationX ( var . itemView , - var )	var . itemView . setTranslationX ( - var )
ViewCompat . setTranslationY ( var . itemView , - var )	var . itemView . setTranslationY ( - var )
ViewCompat . setAlpha ( var . itemView , 0 )	var . itemView . setAlpha ( 0 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var ) . setDuration ( getChangeDuration )	final ViewPropertyAnimator var = var . animate ( ) . setDuration ( getChangeDuration )
ViewCompat . setAlpha ( var , 1 )	var . setAlpha ( 1 )
final ViewPropertyAnimatorCompat var = ViewCompat . animate ( var )	final ViewPropertyAnimator var = var . animate ( )
ViewCompat . setAlpha ( var , 1 )	var . setAlpha ( 1 )
ViewCompat . setAlpha ( var . itemView , 1 )	var . itemView . setAlpha ( 1 )
ViewCompat . animate ( var ) . cancel	var . animate ( ) . cancel
ViewCompat . setAlpha ( var , 1 )	var . setAlpha ( 1 )
View var = var . itemView	var . itemView . setAlpha ( 1 )
ViewCompat . setAlpha ( var , 1 )	var . itemView . setAlpha ( 1 )
ViewCompat . setAlpha ( var , 1 )	var . setAlpha ( 1 )
ViewCompat . animate ( var . get ( var ) . itemView ) . cancel	var . get ( var ) . itemView . animate ( ) . cancel
if ( var . getLayoutManager ( ) == null )	if ( var . getLayoutManager ( ) == null || var == null )
final int var = var . var + Math . round ( ViewCompat . getTranslationY ( var ) )	final int var = var . var + Math . round ( var . getTranslationY ( ) )
final int var = var . var + Math . round ( ViewCompat . getTranslationX ( var ) )	final int var = var . var + Math . round ( var . getTranslationX ( ) )
if ( var . isBound ( ) )	if ( var . isBound ( ) && ! var . isInvalid ( ) )
if ( var != null && var . mNestedRecyclerView != null )	if ( var != null && var . mNestedRecyclerView != null && var . isBound ( ) && ! var . isInvalid ( ) )
public static abstract SpanSizeLookup	public abstract static SpanSizeLookup
this ( var , var , false )	this ( var , RecyclerView . DEFAULT_ORIENTATION , false )
if ( ! var . mValid || var != NO_POSITION || var != null )	if ( ! var . mValid || var != NO_POSITION || var != null != null && ( var . getDecoratedStart ( var ) >= var . getEndAfterPadding ( ) || var . getDecoratedEnd ( var ) <= var . getStartAfterPadding ( ) ) )
var . assignFromViewAndKeepVisibleRect ( var )	var . assignFromViewAndKeepVisibleRect ( var , getPosition ( var ) )
var . assignFromView ( var )	var . assignFromView ( var , getPosition ( var ) )
if ( var == null )	if ( var != var || var == null )
var = getPosition ( var )	var = var
return ( int ) Math . floor ( var / var )	return ( int ) Math . round ( var / var )
public OpReorderer ( Callback var ) = var	OpReorderer ( Callback var ) = var
public PositionMap	PositionMap
public PositionMap ( int var )	PositionMap ( int var )
mLayoutRequestEaten = true	mLayoutWasDefered = true
if ( var . length ( ) != 0 )	if ( ! var . isEmpty ( ) )
resumeRequestLayout ( ! var )	stopInterceptRequestLayout ( ! var )
resumeRequestLayout ( true )	stopInterceptRequestLayout ( true )
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
if ( dispatchNestedScroll ( var , var , var , var , var )  != View . OVER_SCROLL_NEVER )	if ( dispatchNestedScroll ( var , var , var , var , var , TYPE_TOUCH )  != View . OVER_SCROLL_NEVER )
void eatRequestLayout	void startInterceptRequestLayout
void resumeRequestLayout ( boolean var )	void stopInterceptRequestLayout ( boolean var )
if ( ! var = false )	if ( ! var && ! var = false )
if ( var > 0 )	if ( var < 0 > 0 )
if ( var > 0 )	if ( var < 0 > 0 )
var = var . onRelease ( )	var . onRelease ( )
var |= var . onRelease ( )	var . onRelease ( )
var |= var . onRelease ( )	var . onRelease ( )
var |= var . onRelease ( )	var . onRelease ( )
var = var . onRelease ( )	var . onRelease ( )
var |= var . onRelease ( )	var . onRelease ( )
var |= var . onRelease ( )	var . onRelease ( )
var |= var . onRelease ( )	var . onRelease ( )
var = new EdgeEffectCompat ( getContext )	var = var . createEdgeEffect ( this , EdgeEffectFactory . DIRECTION_RIGHT )
var = new EdgeEffectCompat ( getContext )	var = var . createEdgeEffect ( this , EdgeEffectFactory . DIRECTION_TOP )
var = new EdgeEffectCompat ( getContext )	var = var . createEdgeEffect ( this , EdgeEffectFactory . DIRECTION_BOTTOM )
if ( Build . VERSION . SDK_INT >= 21 && var != 0 )	if ( Build . VERSION . SDK_INT < 23 )
var . setAccessible ( true )	processDataSetCompletelyChanged ( true )
if ( var != null )	if ( var != null && Build . VERSION . SDK_INT >= 21 && var != 0 )
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
if ( isPreferredNextFocusAbsolute ( var , var , var ) )	if ( findContainingItemView ( var ) == null )
return ( var . right > var . right || var . left >= var . right ) && var . left > var . left	if ( ( var . right > var . right || var . left >= var . right ) && var . left > var . left )
return ( var . left < var . left || var . right <= var . left ) && var . right < var . right	if ( ( var . left < var . left || var . right <= var . left ) && var . right < var . right = 1 var . right > var . right || var . left >= var . right ) && var . left > var . left )
return ( var . bottom > var . bottom || var . top >= var . bottom ) && var . top > var . top	if ( ( var . bottom > var . bottom || var . top >= var . bottom ) && var . top > var . top )
return ( var . top < var . top || var . bottom <= var . top ) && var . bottom < var . bottom	if ( ( var . top < var . top || var . bottom <= var . top ) && var . bottom < var . bottom = 1 var . bottom > var . bottom || var . top >= var . bottom ) && var . top > var . top )
Log . w ( var , "" + "" + "" + "" + "" , new IllegalStateException ( "" ) )	Log . w ( var , "" + "" + "" + "" + "" , new IllegalStateException ( "" + exceptionLabel ) + exceptionLabel )
final int var = MotionEventCompat . getActionMasked ( var )	final int var = var . getActionMasked ( )
final int var = MotionEventCompat . getActionIndex ( var )	final int var = var . getActionIndex ( )
startNestedScroll ( var )	startNestedScroll ( var , TYPE_TOUCH )
final int var = MotionEventCompat . getActionMasked ( var )	final int var = var . getActionMasked ( )
final int var = MotionEventCompat . getActionIndex ( var )	final int var = var . getActionIndex ( )
startNestedScroll ( var )	startNestedScroll ( var , TYPE_TOUCH )
if ( dispatchNestedPreScroll ( var , var , var , var ) )	if ( dispatchNestedPreScroll ( var , var , var , var , TYPE_TOUCH ) )
final int var = MotionEventCompat . getActionIndex ( var )	final int var = var . getActionIndex ( )
var = - MotionEventCompat . getAxisValue ( var , MotionEventCompat . AXIS_VSCROLL )	var = - var . getAxisValue ( MotionEvent . AXIS_VSCROLL )
var = MotionEventCompat . getAxisValue ( var , MotionEventCompat . AXIS_HSCROLL )	var = var . getAxisValue ( MotionEvent . AXIS_HSCROLL )
final float var = getScrollFactor	final float var = var . getAxisValue ( MotionEventCompat . AXIS_SCROLL )
if ( var == Float . MIN_VALUE )	if ( getScrollState == var )
if ( var . mAutoMeasure )	if ( var . isAutoMeasureEnabled ( ) )
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
void onExitLayoutOrScroll	void onExitLayoutOrScroll ( boolean var )
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
Log . e ( var , "" + "" + var + "" + var )	Log . e ( var , "" + "" + var + "" + var + exceptionLabel )
void setDataSetChangedAfterLayout	void processDataSetCompletelyChanged ( boolean var )
var . addFlags ( ViewHolder . FLAG_ADAPTER_POSITION_UNKNOWN )	new FastScroller ( this , var , var , var , var , AndroidUtilities . dp ( 8 ) , AndroidUtilities . dp ( 50 ) , 0 )
var . setAdapterPositionsAsUnknown ( )	getScrollingChildHelper . stopNestedScroll ( var )
final float var = ViewCompat . getTranslationX ( var )	final float var = var . getTranslationX ( )
final float var = ViewCompat . getTranslationY ( var )	final float var = var . getTranslationY ( )
public ViewFlinger	ViewFlinger
var = ScrollerCompat . create ( getContext , var )	var = new OverScroller ( getContext , var )
final ScrollerCompat var = var	final OverScroller var = var
final int var = var - var	int var = var - var
resumeRequestLayout ( false )	stopInterceptRequestLayout ( false )
if ( var != 0 || var != 0 )	if ( ! dispatchNestedScroll ( var , var , var , var , null , TYPE_NON_TOUCH ) && ( var != 0 || var != 0 ) )
if ( var . isFinished ( ) || ! var )	if ( var . isFinished ( ) || ( ! var && ! hasNestedScrollingParent ( TYPE_NON_TOUCH ) ) )
var *= 0.3f * Math . PI / 2.0f	var *= 0.3f * ( float ) Math . PI / 2.0f
var = ScrollerCompat . create ( getContext , var )	var = new OverScroller ( getContext , var )
ArrayList < ViewHolder > var = new ArrayList	final ArrayList < ViewHolder > var = new ArrayList
final ArrayList var = getScrapDataForType ( var ) . mScrapHeap	final ArrayList < ViewHolder > var = getScrapDataForType ( var ) . mScrapHeap
Log . d ( var , "" + "" )	Log . d ( var , "" + "" + exceptionLabel )
var . addFlags ( ViewHolder . FLAG_ADAPTER_POSITION_UNKNOWN )	var . addFlags ( ViewHolder . FLAG_SET_A11Y_ITEM_DELEGATE )
public static abstract LayoutManager	public abstract static LayoutManager
final Matrix var = ViewCompat . getMatrix ( var )	final Matrix var = var . getMatrix ( )
if ( ViewCompat . canScrollVertically ( var , - 1 ) || ViewCompat . canScrollHorizontally ( var , - 1 ) )	if ( var . canScrollVertically ( - 1 ) || var . canScrollHorizontally ( - 1 ) )
if ( ViewCompat . canScrollVertically ( var , 1 ) || ViewCompat . canScrollHorizontally ( var , 1 ) )	if ( var . canScrollVertically ( 1 ) || var . canScrollHorizontally ( 1 ) )
var . setScrollable ( ViewCompat . canScrollVertically ( var , 1 ) , 1 || ViewCompat . canScrollVertically ( var , - 1 ) , - 1 || ViewCompat . canScrollHorizontally ( var , - 1 ) , - 1 || ViewCompat . canScrollHorizontally ( var , 1 ) , 1 )	var . setScrollable ( var . canScrollVertically ( 1 ) || var . canScrollVertically ( - 1 ) 1 || var . canScrollHorizontally ( - 1 ) 1 || var . canScrollHorizontally ( 1 ) )
if ( ViewCompat . canScrollVertically ( var , - 1 ) )	if ( var . canScrollVertically ( - 1 ) )
if ( ViewCompat . canScrollHorizontally ( var , - 1 ) )	if ( var . canScrollHorizontally ( - 1 ) )
if ( ViewCompat . canScrollVertically ( var , 1 ) )	if ( var . canScrollVertically ( 1 ) )
if ( ViewCompat . canScrollHorizontally ( var , 1 ) )	if ( var . canScrollHorizontally ( 1 ) )
public static abstract ItemDecoration	public abstract static ItemDecoration
public static abstract ViewHolder	public abstract static ViewHolder
public static abstract AdapterDataObserver	public abstract static AdapterDataObserver
public static abstract SmoothScroller	public abstract static SmoothScroller
final double var = Math . sqrt ( var . x * var . x + var . y * var . y )	final float var = ( float ) Math . sqrt ( var . x * var . x + var . y * var . y )
return "" + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + '}'	return "" + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + '}'
public static abstract OnFlingListener	public abstract static OnFlingListener
public RecyclerViewAccessibilityDelegate ( RecyclerView var ) = var	public RecyclerViewAccessibilityDelegate ( RecyclerView var )
if ( ! shouldIgnore && var . getLayoutManager ( ) != null )	if ( ! var . shouldIgnore ( ) && var . var . getLayoutManager ( ) != null )
var . getLayoutManager ( ) . onInitializeAccessibilityNodeInfoForItem ( var , var )	var . var . getLayoutManager ( ) . onInitializeAccessibilityNodeInfoForItem ( var , var )
if ( ! shouldIgnore && var . getLayoutManager ( ) != null )	if ( ! var . shouldIgnore ( ) && var . var . getLayoutManager ( ) != null )
return var . getLayoutManager ( ) . performAccessibilityActionForItem ( var , var , var )	return var . var . getLayoutManager ( ) . performAccessibilityActionForItem ( var , var , var )
setAutoMeasureEnabled ( var != var )	return var != var
measureChildWithDecorationsAndMargin ( var , var , getChildMeasureSpec ( getHeight , getHeightMode , 0 , var . height , true )  , getHeightMode , 0 , var . height , true , var )	measureChildWithDecorationsAndMargin ( var , var , getChildMeasureSpec ( getHeight , getHeightMode , getPaddingTop + getPaddingBottom , var . height , true )  , getHeightMode , getPaddingTop + getPaddingBottom , var . height , true , var )
measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( getWidth , getWidthMode , 0 , var . width , true )  , getWidthMode , 0 , var . width , true , var , var )	measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( getWidth , getWidthMode , getPaddingLeft + getPaddingRight , var . width , true )  , getWidthMode , getPaddingLeft + getPaddingRight , var . width , true , var , var )
measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( var , getWidthMode , 0 , var . width , false ) , getWidthMode , 0 , var . width , false , getChildMeasureSpec ( getHeight , getHeightMode , 0 , var . height , true )  , getHeightMode , 0 , var . height , true , var )	measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( var , getWidthMode , 0 , var . width , false ) , getWidthMode , 0 , var . width , false , getChildMeasureSpec ( getHeight , getHeightMode , getPaddingTop + getPaddingBottom , var . height , true )  , getHeightMode , getPaddingTop + getPaddingBottom , var . height , true , var )
measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( getWidth , getWidthMode , 0 , var . width , true )  , getWidthMode , 0 , var . width , true , getChildMeasureSpec ( var , getHeightMode , 0 , var . height , false ) , getHeightMode , 0 , var . height , false , var )	measureChildWithDecorationsAndMargin ( var , getChildMeasureSpec ( getWidth , getWidthMode , getPaddingLeft + getPaddingRight , var . width , true )  , getWidthMode , getPaddingLeft + getPaddingRight , var . width , true , getChildMeasureSpec ( var , getHeightMode , 0 , var . height , false ) , getHeightMode , 0 , var . height , false , var )
public FullSpanItem ( Parcel var )	FullSpanItem ( Parcel var )
public FullSpanItem	FullSpanItem
public AnchorInfo	AnchorInfo
final int var = MotionEventCompat . getActionMasked ( var )	final int var = var . getActionMasked ( )
final int var = MotionEventCompat . getActionMasked ( var )	final int var = var . getActionMasked ( )
final int var = MotionEventCompat . getActionIndex ( var )	final int var = var . getActionIndex ( )
if ( var != null )	if ( var != null = null )
var = new GestureDetectorCompat ( var . getContext ( ) , new ItemTouchHelperGestureListener )	var = new GestureDetectorCompat ( var . getContext ( ) , var )
var [ 0 ] = ViewCompat . getTranslationX ( var . itemView )	var [ 0 ] = var . itemView . getTranslationX ( )
var [ 1 ] = ViewCompat . getTranslationY ( var . itemView )	var [ 1 ] = var . itemView . getTranslationY ( )
var = new ItemTouchUIUtilImpl . Lollipop ( )	var = new ItemTouchUIUtilImpl . Api21Impl ( )
var = new ItemTouchUIUtilImpl . Gingerbread ( )	var = new ItemTouchUIUtilImpl . BaseImpl ( )
public RecoverAnimation ( ViewHolder var , int var , int var , float var , float var , float var , float var )	RecoverAnimation ( ViewHolder var , int var , int var , float var , float var , float var , float var )
var = AnimatorCompatHelper . emptyValueAnimator ( )	var = ValueAnimator . ofFloat ( 0f , 1f )
var = ViewCompat . getTranslationX ( var . itemView )	var = var . itemView . getTranslationX ( )
var = ViewCompat . getTranslationY ( var . itemView )	var = var . itemView . getTranslationY ( )
ViewCompat . setTranslationX ( var , 0f )	var . setTranslationX ( 0f )
ViewCompat . setTranslationY ( var , 0f )	var . setTranslationY ( 0f )
ViewCompat . setTranslationX ( var , var )	var . setTranslationX ( var )
ViewCompat . setTranslationY ( var , var )	var . setTranslationY ( var )
var . translate ( var , var )	var . setTranslationX ( var )
updateBluetoothHeadsetState ( var . getIntExtra ( BluetoothProfile . EXTRA_STATE , 0 ) . EXTRA_STATE , 0 == BluetoothProfile . STATE_CONNECTED )	FileLog . e ( "" + var . getIntExtra ( BluetoothProfile . EXTRA_STATE , 0 ) . EXTRA_STATE , 0 )
var . setMicMute ( var = var )	var = var
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didEndedCall )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didEndedCall )
StatsController . getInstance ( ) . incrementTotalCallsTime ( getStatsNetworkType , int ( var / 1000 ) / 1000 % 5 )	StatsController . getInstance ( var ) . incrementTotalCallsTime ( getStatsNetworkType , int ( var / 1000 ) / 1000 % 5 )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( true , false )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( false , false )
if ( var != null && var . isEnabled ( ) )	if ( ! var && var != null && var . isEnabled ( ) )
if ( var == BluetoothProfile . STATE_CONNECTED )	if ( ! var . isEnabled ( ) || var . getProfileConnectionState ( BluetoothProfile . HEADSET ) != BluetoothProfile . STATE_CONNECTED )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . appDidLogout )
StatsController . getInstance ( ) . incrementSentBytesCount ( StatsController . TYPE_WIFI , StatsController . TYPE_CALLS , var )	StatsController . getInstance ( var ) . incrementSentBytesCount ( StatsController . TYPE_WIFI , StatsController . TYPE_CALLS , var )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( StatsController . TYPE_WIFI , StatsController . TYPE_CALLS , var )	StatsController . getInstance ( var ) . incrementReceivedBytesCount ( StatsController . TYPE_WIFI , StatsController . TYPE_CALLS , var )
StatsController . getInstance ( ) . incrementTotalCallsTime ( var , 5 )	StatsController . getInstance ( var ) . incrementTotalCallsTime ( var , 5 )
StatsController . getInstance ( ) . incrementSentItemsCount ( getStatsNetworkType , StatsController . TYPE_CALLS , 1 )	StatsController . getInstance ( var ) . incrementSentItemsCount ( getStatsNetworkType , StatsController . TYPE_CALLS , 1 )
StatsController . getInstance ( ) . incrementReceivedItemsCount ( getStatsNetworkType , StatsController . TYPE_CALLS , 1 )	StatsController . getInstance ( var ) . incrementReceivedItemsCount ( getStatsNetworkType , StatsController . TYPE_CALLS , 1 )
if ( ( getPackageName + "" ) . equals ( var . getAction ( ) ) )	if ( ( getPackageName + "" ) . equals ( var . getAction ( ) )  )
PendingIntent . getActivity ( VoIPBaseService . this , 0 , new Intent ( VoIPBaseService . this , VoIPActivity . class ) . this , VoIPActivity . class . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP ) . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP , 0 ) . send	PendingIntent . getActivity ( VoIPBaseService . this , 0 , new Intent ( VoIPBaseService . this , getUIActivityClass ) . this , getUIActivityClass . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP ) . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP , 0 ) . send
nativeSetRemoteEndpoints ( var , var , var )	nativeSetRemoteEndpoints ( var , var , var , var , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeInCallActivity )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . closeInCallActivity )
final SharedPreferences var = getSharedPreferences ( "" , MODE_PRIVATE )	final SharedPreferences var = MessagesController . getMainSettings ( currentAccount )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didStartedCall )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didStartedCall )
var . version = MessagesStorage . lastSecretVersion	var . version = var . getLastSecretVersion ( )
MessagesStorage . secretPBytes = var . p	var . setSecretPBytes ( var . p )
MessagesStorage . secretG = var . g	var . setSecretG ( var . g )
MessagesStorage . lastSecretVersion = var . version	var . setLastSecretVersion ( var . version )
MessagesStorage . getInstance ( ) . saveSecretParams ( MessagesStorage . lastSecretVersion , MessagesStorage . secretG , MessagesStorage . secretPBytes )	var . saveSecretParams ( var . getLastSecretVersion ( ) , var . getSecretG ( ) , var . getSecretPBytes ( ) )
BigInteger var = BigInteger . valueOf ( MessagesStorage . secretG )	BigInteger var = BigInteger . valueOf ( var . getSecretG ( ) )
var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , MessagesStorage . secretPBytes ) , MessagesStorage . secretPBytes )	var = var . modPow ( new BigInteger ( 1 , var ) , var , new BigInteger ( 1 , var . getSecretPBytes ( ) ) , var . getSecretPBytes ( ) )
var . user_id = MessagesController . getInputUser ( var )	var . user_id = MessagesController . getInstance ( currentAccount ) . getInputUser ( var )
if ( var != null )	if ( BuildVars . LOGS_ENABLED )
if ( var != null )	if ( BuildVars . LOGS_ENABLED )
ringtonePlayer . start ( )	super . onCreate ( )
ringtonePlayer . setLooping ( true )	acknowledgeCall ( true )
ringtonePlayer . setDataSource ( this , Uri . parse ( var ) )	startForeground ( ID_ONGOING_CALL_NOTIFICATION , var . build ( ) )
FileLog . var ( var )	FileLog . e ( "" )
if ( ringtonePlayer != null )	if ( USE_CONNECTION_SERVICE && systemCallConnection != null )
ringtonePlayer . release ( )	systemCallConnection . setRinging ( )
if ( var . getBoolean ( "" + var . id , false ) )	controller . setRemoteEndpoints ( var , var . protocol . udp_p2p && var , BuildVars . DEBUG_VERSION && var . getBoolean ( "" , false ) , false , var . protocol . max_layer )
var = var . getInt ( "" + var . id , 0 )	startRingtoneAndVibration ( var . id )
var = var . getInt ( "" , 0 )	if ( BuildVars . LOGS_ENABLED )
vibrator . var ( new long , 0 )	var . write ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didStartedCall )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didStartedCall )
var . version = MessagesStorage . lastSecretVersion	var . version = var . getLastSecretVersion ( )
MessagesStorage . secretPBytes = var . p	var . setSecretPBytes ( var . p )
MessagesStorage . secretG = var . g	var . setSecretG ( var . g )
MessagesStorage . lastSecretVersion = var . version	var . setLastSecretVersion ( var . version )
MessagesStorage . getInstance ( ) . saveSecretParams ( MessagesStorage . lastSecretVersion , MessagesStorage . secretG , MessagesStorage . secretPBytes )	MessagesStorage . getInstance ( currentAccount ) . saveSecretParams ( var . getLastSecretVersion ( ) , var . getSecretG ( ) , var . getSecretPBytes ( ) )
BigInteger var = BigInteger . valueOf ( MessagesStorage . secretG )	BigInteger var = BigInteger . valueOf ( var . getSecretG ( ) )
BigInteger var = new BigInteger ( 1 , MessagesStorage . secretPBytes )	BigInteger var = new BigInteger ( 1 , var . getSecretPBytes ( ) )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , false )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , false )
final boolean var = ConnectionsManager . getInstance ( ) . getConnectionState != ConnectionsManager . ConnectionStateConnected	final boolean var = ConnectionsManager . getInstance ( currentAccount ) . getConnectionState != ConnectionsManager . ConnectionStateConnected
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( currentAccount ) . processUpdates ( var , false )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
AndroidUtilities . runOnUIThread ( timeoutRunnable , MessagesController . getInstance ( ) . callRingTimeout )	AndroidUtilities . runOnUIThread ( timeoutRunnable , MessagesController . getInstance ( currentAccount ) . callRingTimeout )
PendingIntent . getActivity ( VoIPService . this , 0 , new Intent ( VoIPService . this , VoIPFeedbackActivity . class ) . this , VoIPFeedbackActivity . class . putExtra ( "" , var . id ) , var . id . putExtra ( "" , var . access_hash ) , var . access_hash . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP ) . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP , 0 ) . send	PendingIntent . getActivity ( VoIPService . this , 0 , new Intent ( VoIPService . this , VoIPFeedbackActivity . class ) . this , VoIPFeedbackActivity . class . putExtra ( "" , var . id ) , var . id . putExtra ( "" , var . access_hash ) , var . access_hash . putExtra ( "" , currentAccount ) , currentAccount . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP ) . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP , 0 ) . send
SharedPreferences var = getSharedPreferences ( "" , MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
var . edit ( ) . putStringSet ( "" , var ) . apply	var . edit ( ) . putStringSet ( "" , var ) . commit
final SharedPreferences var = getSharedPreferences ( "" , MODE_PRIVATE )	final SharedPreferences var = MessagesController . getGlobalMainSettings ( )
controller . setConfig ( MessagesController . getInstance ( ) . callPacketTimeout / 1000.0 , MessagesController . getInstance ( ) . callConnectTimeout / 1000.0 , var . getInt ( "" , VoIPController . DATA_SAVING_NEVER ) , VoIPController . DATA_SAVING_NEVER , var . id )	controller . setConfig ( MessagesController . getInstance ( currentAccount ) . callPacketTimeout / 1000.0 , MessagesController . getInstance ( currentAccount ) . callConnectTimeout / 1000.0 , var . getInt ( "" , VoIPController . DATA_SAVING_NEVER ) , VoIPController . DATA_SAVING_NEVER , var . id )
VoIPHelper . upgradeP2pSetting ( )	VoIPHelper . upgradeP2pSetting ( currentAccount )
var = ContactsController . getInstance ( ) . contactsDict . get ( var . id ) != null	var = ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) != null
controller . setRemoteEndpoints ( var , var . protocol . udp_p2p && var )	controller . setRemoteEndpoints ( var , var . protocol . udp_p2p && var , BuildVars . DEBUG_VERSION && var . getBoolean ( "" , false ) , false , var . protocol . max_layer )
if ( var != null )	if ( ! TextUtils . isEmpty ( var ) && TextUtils . isEmpty ( var ) )
var . addFlags ( Intent . FLAG_ACTIVITY_NEW_TASK | Intent . FLAG_ACTIVITY_SINGLE_TOP )	return EncryptionKeyEmojifier . emojifyForCall ( Utilities . computeSHA256 ( var . toByteArray ( ) , 0 , var . size ( ) ) . toByteArray ( ) , 0 , var . size ( ) )
var . putExtra ( "" , getCallID )	Utilities . random . nextBytes ( var )
CharSequence var = LocaleController . getString ( "" , R . string . VoipDeclineCall )	byte var = Utilities . computeSHA1 ( var )
var = new SpannableString ( var )	byte var = new byte [ 8 ]
( ( SpannableString ) var ) . setSpan ( new ForegroundColorSpan ( 0xFFF44336 ) , 0 , var . length ( ) , 0 )	System . arraycopy ( var , var . length - 8 , var , 0 , 8 )
var . setAction ( getPackageName + "" )	var = controller . getPeerCapabilities ( )
var . putExtra ( "" , getCallID )	super . onConnectionStateChanged ( var )
if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . N )	byte var = Utilities . computeSHA1 ( var )
var = new SpannableString ( var )	byte var = Utilities . computeSHA1 ( var )
var . addAction ( R . drawable . ic_call_white_24dp , var , PendingIntent . getBroadcast ( this , 0 , var , PendingIntent . FLAG_UPDATE_CURRENT ) , 0 , var , PendingIntent . FLAG_UPDATE_CURRENT )	System . arraycopy ( var , var . length - 8 , var , 0 , 8 )
var . setPriority ( Notification . PRIORITY_MAX )	var = Utilities . bytesToLong ( var )
if ( var != null )	if ( systemCallConnection == null )
var . setLargeIcon ( var . getBitmap ( ) )	if ( BuildVars . LOGS_ENABLED )
BitmapFactory . Options var = new BitmapFactory . Options ( )	systemCallConnection = new CallConnection
if ( ! ( ( KeyguardManager ) getSystemService ( KEYGUARD_SERVICE ) ) . inKeyguardRestrictedInputMode  )	if ( ! ( ( KeyguardManager ) getSystemService ( KEYGUARD_SERVICE ) ) . inKeyguardRestrictedInputMode )
ConnectionsManager var = var	ConnectionsManager var = var [ var ]
var = var	var = var [ var ]
var = var = new ConnectionsManager	var [ var ] = var = new ConnectionsManager ( var )
public ConnectionsManager	public ConnectionsManager ( int var )
String var = ApplicationLoader . getFilesDirFixed ( ) . toString	File var = ApplicationLoader . getFilesDirFixed ( )
var = LocaleController . getSystemLocaleStringIso639 ( )	var = LocaleController . getSystemLocaleStringIso639 ( ) . toLowerCase
var = LocaleController . getLocaleStringIso639 ( )	var = LocaleController . getLocaleStringIso639 ( ) . toLowerCase
UserConfig . loadConfig ( )	var . mkdirs ( )
init ( BuildVars . BUILD_VERSION , TLRPC . LAYER , BuildVars . APP_ID , var , var , var , var , var , var , FileLog . getNetworkLogPath ( ) , UserConfig . getClientUserId ( ) , var )	init ( BuildVars . BUILD_VERSION , TLRPC . LAYER , BuildVars . APP_ID , var , var , var , var , var , var , FileLog . getNetworkLogPath ( ) , UserConfig . getInstance ( var ) . getClientUserId , var )
var . setReferenceCounted ( false )	SharedPreferences var = MessagesController . getGlobalNotificationsSettings ( )
FileLog . var ( var )	UserConfig . getInstance ( var ) . loadConfig
native_cancelRequest ( var , var )	native_cancelRequest ( var , var , var )
native_applyDatacenterAddress ( var , var , var )	native_applyDatacenterAddress ( var , var , var , var )
native_setUserId ( var )	native_setUserId ( var , var )
native_setUseIpv6 ( useIpv6Address )	native_setUseIpv6 ( var , useIpv6Address )
native_setNetworkAvailable ( isNetworkOnline , getCurrentNetworkType )	native_setNetworkAvailable ( var , isNetworkOnline , getCurrentNetworkType , isConnectionSlow )
native_setPushConnectionEnabled ( var )	native_setPushConnectionEnabled ( var , var )
native_setProxySettings ( var , var , var , var )	native_setProxySettings ( var , var , var , var , var , var )
native_init ( var , var , var , var , var , var , var , var , var , var , var , var , isNetworkOnline , getCurrentNetworkType )	native_init ( var , var , var , var , var , var , var , var , var , var , var , var , var , isNetworkOnline , getCurrentNetworkType )
native_setLangCode ( var )	native_setLangCode ( var , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
native_resumeNetwork ( true )	MessagesController . getInstance ( var ) . checkProxyInfo ( true )
FileLog . e ( "" )	FileLog . d ( "" )
ContactsController . getInstance ( ) . checkContacts	ContactsController . getInstance ( var ) . checkContacts
native_resumeNetwork ( false )	native_resumeNetwork ( var , false )
if ( getInstance . var . isHeld ( ) )	if ( BuildVars . LOGS_ENABLED )
FileLog . d ( "" )	KeepAliveJob . finishJob ( )
MessagesController . getInstance ( ) . processUpdates ( ( TLRPC . Updates ) var , false )	MessagesController . getInstance ( var ) . processUpdates ( ( TLRPC . Updates ) var , false )
MessagesController . getInstance ( ) . getDifference	MessagesController . getInstance ( var ) . updateTimerProc
getInstance . var = var	getInstance ( var ) . var = var
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )
if ( UserConfig . getClientUserId ( ) != 0 )	if ( UserConfig . getInstance ( var ) . getClientUserId != 0 )
UserConfig . clearConfig ( )	UserConfig . getInstance ( var ) . clearConfig
StatsController . getInstance ( ) . incrementSentBytesCount ( var , StatsController . TYPE_TOTAL , var )	StatsController . getInstance ( var ) . incrementSentBytesCount ( var , StatsController . TYPE_TOTAL , var )
if ( var != null || var != 1 && Math . abs ( var - System . currentTimeMillis ( ) ) < 10000 || ! isNetworkOnline )	if ( var != null || var == 0 && Math . abs ( var - System . currentTimeMillis ( ) ) < 10000 || ! isNetworkOnline )
DnsTxtLoadTask var = new DnsTxtLoadTask	DnsTxtLoadTask var = new DnsTxtLoadTask ( var )
DnsLoadTask var = new DnsLoadTask	AzureLoadTask var = new AzureLoadTask ( var )
StatsController . getInstance ( ) . incrementReceivedBytesCount ( var , StatsController . TYPE_TOTAL , var )	StatsController . getInstance ( var ) . incrementReceivedBytesCount ( var , StatsController . TYPE_TOTAL , var )
getInstance . var . acquire ( 10000 )	var . setReadTimeout ( 2000 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . didUpdatedConnectionState )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" + var )	FileLog . d ( "" + var )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" + var . getHostAddress ( ) )	FileLog . d ( "" + var . getHostAddress ( ) )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" )	FileLog . var ( var )
URL var = new URL ( "" + var + "" )	URL var = new URL ( "" + var + "" + var + "" )
if ( native_isTestBackend != 0 )	if ( native_isTestBackend ( var ) != 0 )
native_applyDnsConfig ( var . var )	native_applyDnsConfig ( var , var . var , UserConfig . getInstance ( var ) . getClientPhone )
DnsTxtLoadTask var = new DnsTxtLoadTask	AzureLoadTask var = new AzureLoadTask ( var )
var = new HashMap	var = new SparseArray
id = var . readInt32 ( var )	var = TL_dataJSON . TLdeserialize ( var , var . readInt32 ( var ) , var )
critical = var . readBool ( var )	show_previews = var . readBool ( var )
var . writeInt32 ( id )	var . writeInt32 ( var )
var . writeBool ( critical )	var . writeBool ( show_previews )
var = TL_webDocument . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = InputPeer . TLdeserialize ( var , var . readInt32 ( var ) , var )
caption = var . readString ( var )	var = var . readString ( var )
var . writeString ( caption )	var . writeString ( var )
caption = var . readString ( var )	sound = var . readString ( var )
var . writeString ( caption )	var . writeString ( sound )
caption = var . readString ( var )	vcard = var . readString ( var )
var . writeString ( caption )	var . writeString ( vcard )
caption = var . readString ( var )	captionLegacy = var . readString ( var )
var . writeString ( caption )	var . writeString ( captionLegacy )
caption = var . readString ( var )	captionLegacy = var . readString ( var )
var . writeString ( caption )	var . writeString ( captionLegacy )
thumb_url = var . readString ( var )	captionLegacy = var . readString ( var )
if ( ( flags & 32 ) != 0 )	if ( ( var & 32 ) != 0 )
content_url = var . readString ( var )	captionLegacy = var . readString ( var )
content_type = var . readString ( var )	captionLegacy = var . readString ( var )
if ( ( flags & 64 ) != 0 )	if ( ( flags & 16 ) != 0 )
w = var . readInt32 ( var )	var = var . readInt32 ( var )
if ( ( flags & 64 ) != 0 )	if ( ( flags & 32 ) != 0 )
duration = var . readInt32 ( var )	content = WebDocument . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeString ( thumb_url )	var . writeString ( captionLegacy )
var . writeString ( content_url )	var . writeString ( captionLegacy )
var . writeString ( content_type )	var . writeString ( captionLegacy )
var . writeInt32 ( w )	var . writeInt32 ( var )
var . writeInt32 ( duration )	content . serializeToStream ( var )
var = new TL_peerNotifySettingsEmpty	var = new TL_peerNotifySettingsEmpty_layer77
var = var . readString ( var )	MessageEntity var = MessageEntity . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( var )	var . writeInt32 ( 0x1cb5c415 )
var . writeString ( var )	var . get ( var ) . serializeToStream ( var )
caption = var . readString ( var )	var = var . readString ( var )
var . writeString ( caption )	var . writeString ( var )
var = TL_inputGeoChat . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = SecureValueType . TLdeserialize ( var , var . readInt32 ( var ) , var )
GeoChatMessage var = null	help_TermsOfServiceUpdate var = null
var = new TL_geoChatMessageService	var = new TL_help_termsOfServiceUpdate
var = new TL_geoChatMessageEmpty	var = new TL_help_termsOfServiceUpdateEmpty
chat_id = var . readInt32 ( var )	var = var . readInt32 ( var )
from_id = var . readInt32 ( var )	var = var . readInt64 ( var )
media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = var . readInt64 ( var )
var . writeInt32 ( chat_id )	var . writeInt32 ( var )
var . writeInt32 ( from_id )	var . writeInt32 ( var )
media . serializeToStream ( var )	var . writeInt32 ( var )
chat_id = var . readInt32 ( var )	mute_until = var . readInt32 ( var )
id = var . readInt32 ( var )	var = var . readInt32 ( var )
action = MessageAction . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = TL_help_termsOfService . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( chat_id )	var . writeInt32 ( mute_until )
var . writeInt32 ( from_id )	var . writeInt32 ( var )
action . serializeToStream ( var )	var . serializeToStream ( var )
chat_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeInt32 ( chat_id )	var . writeInt32 ( var )
var . writeInt32 ( id )	var . writeInt64 ( access_hash )
var = new TL_messageActionGeoChatCheckin	var = new TL_messageActionSecureValuesSent
var = new TL_messageActionGeoChatCreate	var = new TL_messageActionBotAllowed
address = var . readString ( var )	var = var . readString ( var )
var . writeString ( title )	var . writeInt32 ( var )
var . writeString ( address )	var . writeString ( var )
PeerNotifyEvents var = null	SecureValueError var = null
var = new TL_peerNotifyEventsEmpty	var = new TL_inputDialogPeer
var = new TL_peerNotifyEventsAll	var = new TL_inputDialogPeerFeed
InputPeerNotifyEvents var = null	help_ProxyData var = null
var = new TL_inputPeerNotifyEventsAll	document = Document . TLdeserialize ( var , var . readInt32 ( var ) , var )
var = new TL_inputPeerNotifyEventsEmpty	document = new TLRPC . TL_documentEmpty ( )
caption = var . readString ( var )	var = var . readString ( var )
var . writeString ( caption )	var . writeString ( var )
caption = var . readString ( var )	google_transaction_id = var . readString ( var )
var . writeString ( caption )	var . writeString ( google_transaction_id )
caption = var . readString ( var )	var = var . readString ( var )
var . writeString ( caption )	var . writeString ( var )
caption = var . readString ( var )	var = var . readString ( var )
var . writeString ( caption )	var . writeString ( var )
caption = var . readString ( var )	vcard = var . readString ( var )
var . writeString ( caption )	var . writeString ( vcard )
caption = var . readString ( var )	venue_type = var . readString ( var )
var . writeString ( caption )	var . writeString ( venue_type )
geochats_Messages var = null	SecureValueType var = null
var = new TL_geochats_messages	TL_inputSecureValue var = new TL_inputSecureValue
GeoChatMessage var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )	SecureValueType var = SecureValueType . TLdeserialize ( var , var . readInt32 ( var ) , var )
messages . add ( var )	var . add ( var )
chats . add ( var )	int var = var . readInt32 ( var )
User var = User . TLdeserialize ( var , var . readInt32 ( var ) , var )	InputSecureFile var = InputSecureFile . TLdeserialize ( var , var . readInt32 ( var ) , var )
users . add ( var )	var . add ( var )
int var = messages . size ( )	int var = var . size ( )
messages . get ( var ) . serializeToStream ( var )	var . get ( var ) . serializeToStream ( var )
var = chats . size ( )	var . writeInt32 ( var )
chats . get ( var ) . serializeToStream ( var )	var . get ( var ) . serializeToStream ( var )
GeoChatMessage var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = SecurePlainData . TLdeserialize ( var , var . readInt32 ( var ) , var )
messages . add ( var )	var . add ( var )
Chat var = Chat . TLdeserialize ( var , var . readInt32 ( var ) , var )	MessageEntity var = MessageEntity . TLdeserialize ( var , var . readInt32 ( var ) , var )
chats . add ( var )	entities . add ( var )
int var = messages . size ( )	int var = entities . size ( )
messages . get ( var ) . serializeToStream ( var )	var . get ( var ) . serializeToStream ( var )
var = chats . size ( )	var . writeInt32 ( var )
chats . get ( var ) . serializeToStream ( var )	entities . get ( var ) . serializeToStream ( var )
var = users . size ( )	phone_number = var . readString ( var )
users . get ( var ) . serializeToStream ( var )	var . writeString ( first_name )
if ( TL_disabledFeature . var != var )	var . writeInt32 ( var )
var = var . readString ( var )	vcard = var . readString ( var )
var = var . readString ( var )	var . writeString ( var )
var . writeString ( var )	var . writeString ( vcard )
var = new TL_updateBotInlineQuery	var = new TL_updateDialogUnreadMark
query_id = var . readInt64 ( var )	var = var . readInt64 ( var )
user_id = var . readInt32 ( var )	var = SecureValueType . TLdeserialize ( var , var . readInt32 ( var ) , var )
var = TL_inputBotInlineMessageID . TLdeserialize ( var , var . readInt32 ( var ) , var )	SecureValueType var = SecureValueType . TLdeserialize ( var , var . readInt32 ( var ) , var )
chat_instance = var . readInt64 ( var )	var = var . readString ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )	if ( ( var & 4096 ) != 0 )
game_short_name = var . readString ( var )	var = var . readString ( var )
var . writeInt64 ( query_id )	var . writeInt64 ( var )
var . writeInt32 ( user_id )	var . writeInt32 ( var )
var . writeInt64 ( chat_instance )	var . writeInt64 ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )	if ( ( var & 2048 ) != 0 )
var . writeString ( game_short_name )	var . writeString ( var )
query_id = var . readInt64 ( var )	var = SecureValueType . TLdeserialize ( var , var . readInt32 ( var ) , var )
var = var . readInt32 ( var )	offset = var . readInt32 ( var )
chat_instance = var . readInt64 ( var )	var = var . readInt64 ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )	if ( ( var & 2048 ) != 0 )
game_short_name = var . readString ( var )	var = var . readString ( var )
var . writeInt64 ( query_id )	var . writeInt64 ( var )
var . writeInt64 ( chat_instance )	var . writeInt64 ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )	if ( ( var & 1024 ) != 0 )
var . writeString ( game_short_name )	var . writeString ( var )
user_id = var . readInt32 ( var )	var = SecureValueType . TLdeserialize ( var , var . readInt32 ( var ) , var )
query = var . readString ( var )	var = var . readString ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )	if ( ( var & 2 ) != 0 )
var = TL_inputBotInlineMessageID . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = DialogPeer . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( user_id )	var . writeByteArray ( var )
var . writeString ( query )	var . writeString ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
if ( ( flags & 2 ) != 0 )	if ( ( var & 8 ) != 0 )
chat_id = var . readInt32 ( var )	var = var . readInt32 ( var )
query_id = var . readInt64 ( var )	var = var . readInt64 ( var )
user_id = var . readInt32 ( var )	var = SecureValueType . TLdeserialize ( var , var . readInt32 ( var ) , var )
query = var . readString ( var )	var = var . readString ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
geo = GeoPoint . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = var . readByteArray ( var )
offset = var . readString ( var )	var = var . readString ( var )
var . writeInt64 ( query_id )	var . writeInt64 ( var )
var . writeInt32 ( user_id )	var . writeByteArray ( var )
var . writeString ( query )	var . writeString ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
geo . serializeToStream ( var )	var . writeString ( var )
var . writeString ( offset )	var . writeString ( var )
last_name = var . readString ( var )	var = var . readString ( var )
if ( ( flags & 1 ) != 0 )	if ( ( var & 1 ) != 0 )
var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = DialogPeer . TLdeserialize ( var , var . readInt32 ( var ) , var )
my_link = ContactLink . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = ContactLink . TLdeserialize ( var , var . readInt32 ( var ) , var )
foreign_link = ContactLink . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = ContactLink . TLdeserialize ( var , var . readInt32 ( var ) , var )
channel_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeInt32 ( pts_count )	var . writeInt32 ( var )
messages . add ( var . readInt32 ( var ) )	var . add ( var . readInt32 ( var ) )
pts_count = var . readInt32 ( var )	var = var . readInt32 ( var )
participants = ChatParticipants . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = ChatParticipants . TLdeserialize ( var , var . readInt32 ( var ) , var )
has_recovery = var . readBool ( var )	var = var . readBool ( var )
var . writeBool ( has_recovery )	var . writeBool ( var )
caption = var . readString ( var )	var = var . readString ( var )
var . writeString ( caption )	var . writeString ( "" )
if ( TL_geochats_statedMessage . var != var )	if ( TL_secureValue . var != var )
if ( var )	if ( var == null && var )
TL_geochats_statedMessage var = new TL_geochats_statedMessage	TL_secureValue var = new TL_secureValue
var = GeoChatMessage . TLdeserialize ( var , var . readInt32 ( var ) , var )	DialogPeer var = DialogPeer . TLdeserialize ( var , var . readInt32 ( var ) , var )
var = var . readInt32 ( var )	length = var . readInt32 ( var )
var . serializeToStream ( var )	admin_rights . serializeToStream ( var )
var . writeInt32 ( var )	var . writeInt32 ( length )
var = var . readInt32 ( var )	offset = var . readInt32 ( var )
TL_disabledFeature var = TL_disabledFeature . TLdeserialize ( var , var . readInt32 ( var ) , var )	StickerSetCovered var = StickerSetCovered . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeInt32 ( var )	var . writeInt32 ( length )
var = var . size ( )	var . writeInt32 ( var )
if ( var )	if ( var == null && var )
TL_webDocument var = new TL_webDocument	var = new TL_webDocument
if ( var )	if ( var == null && var )
TL_inputWebFileLocation var = new TL_inputWebFileLocation	var = new TL_inputWebFileLocation
var = new TL_geoChat	var = new TL_channel_layer77
venue = var . readString ( var )	var = var . readString ( var )
geo = GeoPoint . TLdeserialize ( var , var . readInt32 ( var ) , var )	var = SecureFile . TLdeserialize ( var , var . readInt32 ( var ) , var )
checked_in = var . readBool ( var )	var = var . readBool ( var )
var . writeString ( venue )	var . writeString ( var )
geo . serializeToStream ( var )	var = SecureFile . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . writeBool ( checked_in )	var . writeBool ( var )
if ( TL_cdnFileHash . var != var )	if ( TL_fileHash . var != var )
if ( var )	if ( var == null && var )
TL_cdnFileHash var = new TL_cdnFileHash	TL_fileHash var = new TL_fileHash
if ( var )	if ( var == null && var )
TL_chatLocated var = TL_chatLocated . TLdeserialize ( var , var . readInt32 ( var ) , var )	admin_rights = TL_channelAdminRights . TLdeserialize ( var , var . readInt32 ( var ) , var )
Chat var = Chat . TLdeserialize ( var , var . readInt32 ( var ) , var )	SecureFile var = SecureFile . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . add ( var )	var . writeInt32 ( var )
var . get ( var ) . serializeToStream ( var )	var . writeInt32 ( var )
if ( TL_inputGeoChat . var != var )	if ( TL_account_sentEmailCode . var != var )
hash = var . readString ( var )	short_name = var . readString ( var )
var . writeString ( hash )	var . writeString ( short_name )
var . writeString ( var . get ( var ) )	var . get ( var ) . serializeToStream ( var )
return TL_geochats_located . TLdeserialize ( var , var , var )	var = var . readInt32 ( var )
var . writeInt32 ( var )	var = var . readInt32 ( var )
return geochats_Messages . TLdeserialize ( var , var , var )	var . readParams ( var , var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )	return messages_Stickers . TLdeserialize ( var , var , var )
return TL_messages_chatFull . TLdeserialize ( var , var , var )	return help_DeepLinkInfo . TLdeserialize ( var , var , var )
var . writeInt32 ( var )	var . writeByteArray ( var )
var . serializeToStream ( var )	var . writeByteArray ( var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )	return help_ProxyData . TLdeserialize ( var , var , var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )	return messages_FoundStickerSets . TLdeserialize ( var , var , var )
var . serializeToStream ( var )	TL_secureValue var = TL_secureValue . TLdeserialize ( var , var . readInt32 ( var ) , var )
var . serializeToStream ( var )	SecureValueError var = SecureValueError . TLdeserialize ( var , var . readInt32 ( var ) , var )
return geochats_Messages . TLdeserialize ( var , var , var )	return TL_account_sentEmailCode . TLdeserialize ( var , var , var )
var . serializeToStream ( var )	var . writeInt32 ( var )
var . writeInt32 ( var )	var . writeInt32 ( size )
var . writeInt32 ( var )	var . writeString ( mime_type )
var . writeInt32 ( var )	var . writeInt32 ( 0x1cb5c415 )
return geochats_Messages . TLdeserialize ( var , var , var )	return TL_auth_sentCode . TLdeserialize ( var , var , var )
var . serializeToStream ( var )	var . writeInt32 ( var )
var . writeInt32 ( var )	var . writeInt64 ( access_hash )
var . writeInt32 ( var )	var . writeInt32 ( size )
var . serializeToStream ( var )	var . writeString ( var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )	return TL_account_authorizationForm . TLdeserialize ( var , var , var )
var . serializeToStream ( var )	var . readParams ( var , var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )	return TL_secureValue . TLdeserialize ( var , var , var )
return TL_geochats_statedMessage . TLdeserialize ( var , var , var )	return help_TermsOfServiceUpdate . TLdeserialize ( var , var , var )
var . serializeToStream ( var )	var . writeInt32 ( var )
var . writeString ( var )	var . writeInt64 ( var )
return TL_help_termsOfService . TLdeserialize ( var , var , var )	return TL_account_webAuthorizations . TLdeserialize ( var , var , var )
attachPath = var . readString ( var )	restriction_reason = var . readString ( var )
if ( id < 0 && attachPath . startsWith ( "" ) )	to_id = Peer . TLdeserialize ( var , var . readInt32 ( var ) , var )
String args = attachPath . split ( "" )	to_id = Peer . TLdeserialize ( var , var . readInt32 ( var ) , var )
if ( args . length > 0 )	if ( ( flags & 512 ) != 0 )
params = new HashMap var ( var )	media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )
for ( int var = 1 ; var < args . length - 1 ; var ++ )	media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )
String args2 var = args [ var ] . split ( "" )	media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )
attachPath = args [ args ] . length - 1	message = media . captionLegacy
if ( ( flags & var ) != 0 && id < 0 )	if ( ( flags & 131072 ) != 0 )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var = var . getKey ( ) + "" + var . getValue ( ) + "" + var	to_id . serializeToStream ( var )
if ( ( flags & var ) != 0 && id < 0 )	if ( ( flags & 131072 ) != 0 )
var . writeInt32 ( fwd_msg_id )	var . writeInt64 ( grouped_id )
attachPath = var . readString ( var )	username = var . readString ( var )
if ( id < 0 && attachPath . startsWith ( "" ) )	media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )
String args = attachPath . split ( "" )	media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )
attachPath = args [ args ] . length - 1	message = media . captionLegacy
fwd_msg_id = var . readInt32 ( var )	hash = var . readInt32 ( var )
attachPath = var . readString ( var )	var = var . readString ( var )
String args = attachPath . split ( "" )	banned_rights = TL_channelBannedRights . TLdeserialize ( var , var . readInt32 ( var ) , var )
if ( args . length > 0 )	if ( ( flags & 131072 ) != 0 )
if ( ( flags & var ) != 0 && id < 0 )	if ( ( flags & 1 ) != 0 )
fwd_msg_id = var . readInt32 ( var )	installed_date = var . readInt32 ( var )
if ( ( flags & var ) != 0 && id < 0 )	if ( ( flags & 32768 ) != 0 )
var . writeInt32 ( fwd_msg_id )	banned_rights . serializeToStream ( var )
attachPath = var . readString ( var )	var = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeString ( attachPath )	var . writeInt32 ( flags )
if ( ( flags & var ) != 0 && id < 0 )	if ( ( flags & 1 ) != 0 )
var . writeInt32 ( fwd_msg_id )	var . writeInt32 ( installed_date )
if ( id < 0 )	unread = ( flags & 1 ) != 0
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
attachPath = var . readString ( var )	var = var . readString ( var )
var . writeInt32 ( fwd_msg_id )	var . writeInt32 ( var )
var . writeString ( attachPath )	var . writeByteArray ( var )
attachPath = var . readString ( var )	var = var . readString ( var )
if ( id < 0 && attachPath . startsWith ( "" ) )	if ( ( var < 0 || var == 3 ) && var . startsWith ( "" ) )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeInt64 ( grouped_id )	var . writeInt32 ( var )
var . writeString ( var )	to_id . serializeToStream ( var )
attachPath = var . readString ( var )	var = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeString ( attachPath )	var . writeInt32 ( var )
var . writeInt32 ( fwd_msg_id )	var . writeInt32 ( reply_to_msg_id )
attachPath = var . readString ( var )	var = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeString ( attachPath )	var . writeByteArray ( var )
var . writeInt32 ( fwd_msg_id )	var . writeInt32 ( var . get ( var ) )
attachPath = var . readString ( var )	var = var . readString ( var )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
var . writeString ( attachPath )	var . writeInt32 ( var )
var . writeInt32 ( fwd_msg_id )	var . writeInt32 ( var )
attachPath = var . readString ( var )	var = var . readString ( var )
if ( ( flags & var ) != 0 && id < 0 )	if ( ( var & var ) != 0 && var < 0 )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
attachPath = var . readString ( var )	venue_id = var . readString ( var )
var . writeString ( attachPath )	var . writeString ( var )
fwd_msg_id = var . readInt32 ( var )	var = var . readInt32 ( var )
attachPath = var . readString ( var )	provider = var . readString ( var )
var . writeInt32 ( fwd_msg_id )	var . writeInt32 ( var )
var . writeString ( attachPath )	var . writeInt32 ( id )
attachPath = var . readString ( var )	var = var . readString ( var )
var . writeInt32 ( id )	var . writeInt32 ( var )
attachPath = var . readString ( var )	var . readString ( var )
var . writeString ( attachPath )	var . writeInt32 ( var )
attachPath = var . readString ( var )	message = media . captionLegacy
var . writeString ( attachPath )	var . writeInt32 ( var )
attachPath = var . readString ( var )	var . writeInt32 ( var )
to_id . serializeToStream ( var )	var . writeString ( var )
var . writeString ( attachPath )	var . writeInt32 ( var )
TL_cdnFileHash var = TL_cdnFileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )	TL_fileHash var = TL_fileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )
TL_cdnFileHash var = TL_cdnFileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )	TL_fileHash var = TL_fileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )
TL_cdnFileHash var = TL_cdnFileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )	TL_fileHash var = TL_fileHash . TLdeserialize ( var , var . readInt32 ( var ) , var )
cdn_file_hashes . add ( var )	file_hashes . add ( var )
int var = cdn_file_hashes . size ( )	int var = file_hashes . size ( )
cdn_file_hashes . get ( var ) . serializeToStream ( var )	file_hashes . get ( var ) . serializeToStream ( var )
if ( var && var == null )	if ( var && var && var == null )
if ( var != null )	if ( var != null && ! TextUtils . isEmpty ( var . getText ( ) ) )
if ( var != null )	if ( var != null && ! TextUtils . isEmpty ( var . getText ( ) ) )
if ( var != null )	if ( var != null && ! TextUtils . isEmpty ( var . getText ( ) ) )
return ! ( ! var && ! checkTransitionAnimation ) || onTouchEvent ( var )	return var || checkTransitionAnimation var || onTouchEvent ( var )
if ( ! var )	if ( ! var && ! var )
if ( ! var )	if ( ! var var )
ViewGroup . LayoutParams var = var . getLayoutParams ( )	LinearLayout . LayoutParams var = ( LinearLayout . LayoutParams ) var . getLayoutParams ( var )
if ( ! var && var . get ( var . size ( ) - 1 ) . swipeBackEnabled )	if ( ! var && ! var && ! var && var . get ( var . size ( var ) - 1 ) . swipeBackEnabled )
if ( var || checkTransitionAnimation || var . isEmpty ( ) )	if ( var || var || checkTransitionAnimation var || var . isEmpty ( var ) )
return presentFragment ( var , false , false , true )	return presentFragment ( var , false , false , true , true )
return presentFragment ( var , var , false , true )	return presentFragment ( var , var , false , true , false )
startLayoutAnimation ( var , false )	startLayoutAnimation ( var , false , var )
if ( var && var . size ( ) == 1 )	if ( var && var . size ( var ) == 1 var )
if ( var == null )	if ( var == null var )
startLayoutAnimation ( true , true )	var . setClipToOutline ( true )
boolean var = var && var . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" , true )	boolean var = var || var || var && MessagesController . getGlobalMainSettings ( var ) . getBoolean ( "" , true )
if ( var != null )	if ( var != null var )
ViewGroup . LayoutParams var = var . getLayoutParams ( )	LinearLayout . LayoutParams var = ( LinearLayout . LayoutParams ) var . getLayoutParams ( var )
startLayoutAnimation ( false , true )	presentFragmentInternalRemoveOld ( false , var )
if ( hasSubMenu && ( var == null || var != null && ! var . isShowing ( ) ) )	if ( var && hasSubMenu && ( var == null || var != null && ! var . isShowing ( ) ) )
if ( var != null )	if ( var != null && var . getVisibility ( ) != GONE )
if ( var != null )	if ( var != null && var . getVisibility ( ) != VISIBLE )
var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_dialogBackground ) . key_dialogBackground , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_dialogBackground ) . key_dialogBackground , PorterDuff . Mode . MULTIPLY )	var . setColorFilter ( new PorterDuffColorFilter ( getThemeColor ( Theme . key_dialogBackground ) . key_dialogBackground , PorterDuff . Mode . MULTIPLY ) ( Theme . key_dialogBackground ) . key_dialogBackground , PorterDuff . Mode . MULTIPLY )
TextView var = ( TextView ) var . getChildAt ( var )	View var = var . getChildAt ( var )
var . setTextColor ( Theme . getColor ( Theme . key_dialogTextBlack ) . key_dialogTextBlack )	var . setTextColor ( getThemeColor ( Theme . key_dialogTextBlack ) . key_dialogTextBlack )
var . setTextColor ( Theme . getColor ( Theme . key_dialogIcon ) . key_dialogIcon )	var . setTextColor ( getThemeColor ( Theme . key_dialogIcon ) . key_dialogIcon )
AndroidUtilities . setScrollViewEdgeEffectColor ( var , Theme . getColor ( Theme . key_dialogScrollGlow ) . key_dialogScrollGlow )	AndroidUtilities . setScrollViewEdgeEffectColor ( var , getThemeColor ( Theme . key_dialogScrollGlow ) . key_dialogScrollGlow )
var . setTextColor ( Theme . getColor ( Theme . key_dialogTextBlack ) . key_dialogTextBlack )	var . setTextColor ( getThemeColor ( Theme . key_dialogTextBlack ) . key_dialogTextBlack )
var . setProgressColor ( Theme . getColor ( Theme . key_dialogProgressCircle ) . key_dialogProgressCircle )	var . setProgressColor ( getThemeColor ( Theme . key_dialogProgressCircle ) . key_dialogProgressCircle )
var . setProgressColor ( Theme . getColor ( Theme . key_dialogLineProgress ) . key_dialogLineProgress )	var . setProgressColor ( getThemeColor ( Theme . key_dialogLineProgress ) . key_dialogLineProgress )
var . setBackColor ( Theme . getColor ( Theme . key_dialogLineProgressBackground ) . key_dialogLineProgressBackground )	var . setBackColor ( getThemeColor ( Theme . key_dialogLineProgressBackground ) . key_dialogLineProgressBackground )
var . setTextColor ( Theme . getColor ( Theme . key_dialogTextGray2 ) . key_dialogTextGray2 )	var . setTextColor ( getThemeColor ( Theme . key_dialogTextGray2 ) . key_dialogTextGray2 )
if ( ( Integer ) var . getTag ( var ) == Dialog . BUTTON_NEGATIVE )	if ( var == Dialog . BUTTON_NEGATIVE )
var . setTextColor ( Theme . getColor ( Theme . key_dialogButton ) . key_dialogButton )	var . setTextColor ( getThemeColor ( Theme . key_dialogButton ) . key_dialogButton )
var . setTextColor ( Theme . getColor ( Theme . key_dialogButton ) . key_dialogButton )	var . setTextColor ( getThemeColor ( Theme . key_dialogButton ) . key_dialogButton )
var . setTextColor ( Theme . getColor ( Theme . key_dialogButton ) . key_dialogButton )	var . setTextColor ( getThemeColor ( Theme . key_dialogButton ) . key_dialogButton )
if ( var == null || ! canTextInput ( var ) )	if ( var == null || ! canTextInput ( var ) var )
var = ConnectionsManager . getInstance ( ) . generateClassGuid	var = ConnectionsManager . generateClassGuid ( )
var = ConnectionsManager . getInstance ( ) . generateClassGuid	var = ConnectionsManager . generateClassGuid ( )
ConnectionsManager . getInstance ( ) . cancelRequestsForGuid ( var )	ConnectionsManager . getInstance ( var ) . cancelRequestsForGuid ( var )
return var != null && var . presentFragment ( var , var , var , true )	return var != null && var . presentFragment ( var , var , var , true , false )
return ! var && var && var == ViewCompat . SCROLL_AXIS_VERTICAL && ! canDismissWithSwipe	return ! ( var != null && var != var ) && ! var && var && var == ViewCompat . SCROLL_AXIS_VERTICAL && ! canDismissWithSwipe
return var || ! canDismissWithSwipe	return ! var && var || var || ! canDismissWithSwipe
var . put ( var , 0xff4e9ad4 )	var . put ( var , 0xffffffff )
var . put ( var , 0xff55ab4f )	var . put ( var , 0xffffffff )
var . put ( var , 0xff888888 )	var . put ( var , 0xffa8a8a8 )
var . add ( var = var = var )	var . add ( var = var = var = var )
var . add ( var )	var . add ( var = var )
if ( var == null = var )	if ( var == null = var = var )
applyTheme ( var , false , false )	applyTheme ( var , false , false , false )
applyTheme ( var , true , false )	applyTheme ( var , true , false , false )
applyTheme ( var , ! var , true )	applyTheme ( var , ! var , true , false )
applyTheme ( var , true , true )	applyTheme ( var , true , true , false )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetNewTheme )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didSetNewTheme , var )
if ( var . endsWith ( "" ) )	if ( var . toLowerCase ( ) . endsWith ( "" ) )
applyTheme ( var , true , false )	applyTheme ( var , true , false , false )
var . write ( var . toString ( ) . getBytes )	var . write ( AndroidUtilities . getStringBytes ( var . toString ( ) ) . toString ( ) )
FileLog . var ( "" , var )	FileLog . var ( var )
var [ 0 ] = var . getDrawable ( R . drawable . attach_camera_states )	var [ 1 ] = createCircleDrawableWithIcon ( AndroidUtilities . dp ( 54 ) , R . drawable . attach_gallery )
var [ 1 ] = var . getDrawable ( R . drawable . attach_gallery_states )	var [ 2 ] = createCircleDrawableWithIcon ( AndroidUtilities . dp ( 54 ) , R . drawable . attach_video )
var [ 2 ] = var . getDrawable ( R . drawable . attach_video_states )	var [ 3 ] = createCircleDrawableWithIcon ( AndroidUtilities . dp ( 54 ) , R . drawable . attach_audio )
var [ 3 ] = var . getDrawable ( R . drawable . attach_audio_states )	var [ 4 ] = createCircleDrawableWithIcon ( AndroidUtilities . dp ( 54 ) , R . drawable . attach_file )
var [ 4 ] = var . getDrawable ( R . drawable . attach_file_states )	var [ 5 ] = createCircleDrawableWithIcon ( AndroidUtilities . dp ( 54 ) , R . drawable . attach_contact )
var . setTextSize ( AndroidUtilities . dp ( MessagesController . getInstance ( ) . fontSize ) . getInstance ( ) . fontSize )	var . setTextSize ( AndroidUtilities . dp ( SharedConfig . fontSize ) . fontSize )
var . setTextSize ( AndroidUtilities . dp ( Math . max ( 16 , MessagesController . getInstance ( ) . fontSize ) , MessagesController . getInstance ( ) . fontSize - 2 ) . max ( 16 , MessagesController . getInstance ( ) . fontSize ) , MessagesController . getInstance ( ) . fontSize - 2 )	var . setTextSize ( AndroidUtilities . dp ( Math . max ( 16 , SharedConfig . fontSize ) , SharedConfig . fontSize - 2 ) . max ( 16 , SharedConfig . fontSize ) , SharedConfig . fontSize - 2 )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit . remove ( "" ) . commit	MessagesController . getGlobalMainSettings ( ) . edit . remove ( "" ) . commit
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didSetNewWallpapper )
var . setColorFilter ( new PorterDuffColorFilter ( getColor ( var ) , PorterDuff . Mode . MULTIPLY ) ( var ) , PorterDuff . Mode . MULTIPLY )	setDrawableColor ( var , getColor ( var ) )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	var = MessagesController . getGlobalMainSettings ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didSetNewWallpapper )
if ( ( var & var ) == 0 || ( var & var ) != 0 && var . equals ( var . getTag ( ) ) )	if ( ( var & var ) == 0 || checkTag ( var , var ) )
if ( ( var & var ) == 0 || var != null && ( var & var ) != 0 && var . equals ( var . getTag ( ) ) )	if ( ( var & var ) == 0 || checkTag ( var , var ) )
if ( ( var & var ) == 0 || ( var & var ) != 0 && var . equals ( var . getTag ( ) ) )	if ( ( var & var ) == 0 || checkTag ( var , var ) )
if ( var instanceof RecyclerListView != null )	if ( var instanceof RecyclerListView != null && ( var == null || var . length == 0 ) )
if ( var != null )	if ( var != null && ( var == null || var . length == 0 ) )
var . didSetColor ( var )	var . didSetColor ( )
if ( var instanceof CombinedDrawable )	if ( var instanceof CombinedDrawable instanceof StateListDrawable || Build . VERSION . SDK_INT >= 21 && var instanceof RippleDrawable )
if ( ! var && var instanceof View && ! var . equals ( ( ( View ) var ) . getTag ) )	if ( ! var && var instanceof View && ! checkTag ( var , ( View ) var ) )
Drawable var = ( ( TextView ) var ) . getCompoundDrawables	Drawable var = var . getCompoundDrawables ( )
( ( TextView ) var ) . invalidate	TypefaceSpan var = ( ( SpannedString ) var ) . getSpans ( 0 , var . length ( ) , TypefaceSpan . class )
( ( TextView ) var ) . setTextColor ( var )	( ( SeekBarView ) var ) . setInnerColor ( var )
var . cancel ( true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( var != null && var . distanceTo ( var ) < 200 )	if ( var == null || var != null && var . distanceTo ( var ) < 200 )
if ( var != null )	if ( var != 0 )
var = null	var = 0
var = var . openConnection ( )	TLRPC . TL_contacts_resolvedPeer var = ( TLRPC . TL_contacts_resolvedPeer ) var
var . addRequestProperty ( "" , "" )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
var . addRequestProperty ( "" , "" )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
var . addRequestProperty ( "" , "" )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
var . addRequestProperty ( "" , "" )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
var . setConnectTimeout ( 5000 )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
var . setReadTimeout ( 5000 )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , true , true )
var . setInstanceFollowRedirects ( true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( var == HttpURLConnection . HTTP_MOVED_TEMP || var == HttpURLConnection . HTTP_MOVED_PERM || var == HttpURLConnection . HTTP_SEE_OTHER )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , true , true )
var = var . openConnection ( )	var = null
var = var . getInputStream ( )	var = var
var = false	var = 0
if ( var . getMessage ( ) != null && var . getMessage ( ) . contains ( "" ) = false )	TLObject var = MessagesController . getInstance ( var ) . getUserOrChat ( MessagesController . getInstance ( var ) . venueSearchBot )
if ( var != null && var instanceof HttpURLConnection )	if ( ! ( var instanceof TLRPC . User ) )
var . append ( new String ( var , 0 , var , "" ) , 0 , var , "" )	var . bot = MessagesController . getInstance ( var ) . getInputUser ( var )
FileLog . var ( var )	var . bot = MessagesController . getInstance ( var ) . getInputUser ( var )
FileLog . var ( var )	var . bot = MessagesController . getInstance ( var ) . getInputUser ( var )
var . close ( )	var . offset = ""
FileLog . var ( var )	var . geo_point = new TLRPC . TL_inputGeoPoint ( )
return new JSONObject ( var )	var . geo_point = new TLRPC . TL_inputGeoPoint ( )
FileLog . var ( var )	var . geo_point = new TLRPC . TL_inputGeoPoint ( )
JSONArray var = var . getJSONObject ( "" ) . getJSONArray ( "" )	var . geo_point . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( ) )
if ( var . has ( "" ) )	var . geo_point . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( ) )
JSONArray var = var . getJSONArray ( "" )	var . geo_point . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( ) )
if ( var . length ( ) > 0 )	var . flags |= 1
JSONObject var = var . getJSONObject ( "" )	var . peer = new TLRPC . TL_inputPeerEmpty ( )
var . geo = new TLRPC . TL_geoPoint ( )	var . peer = new TLRPC . TL_inputPeerEmpty ( )
var . address = var . getString ( "" )	TLRPC . messages_BotResults var = ( TLRPC . messages_BotResults ) var
var . venue_type = ""	var . venue_type = var . venue_type
var . provider = ""	var . provider = var . provider
var . didLoadedSearchResult ( var )	TLRPC . TL_botInlineMessageMediaVenue var = ( TLRPC . TL_botInlineMessageMediaVenue ) var . send_message
var . executeOnExecutor ( AsyncTask . THREAD_POOL_EXECUTOR , null , null , null )	var . add ( "" + var . venue_type + "" )
FileLog . var ( var )	var . geo = var . geo
var = false	var . address = var . address
var . didLoadedSearchResult ( var )	var . venue_id = var . venue_id
public ContactsAdapter ( Context var , int var , boolean var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )	public ContactsAdapter ( Context var , int var , boolean var , SparseArray < TLRPC . User > . User var , boolean var )
return MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )	return MessagesController . getInstance ( var ) . getUser ( var . get ( var ) . user_id )
return MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )	return MessagesController . getInstance ( var ) . getUser ( var . get ( var ) . user_id )
return ContactsController . getInstance ( ) . phoneBookContacts . get ( var )	return ContactsController . getInstance ( var ) . phoneBookContacts . get ( var )
if ( var || var )	if ( var || var != 1 != 3 )
if ( var == 1 )	return var != 1
if ( var == 3 )	return var != 3
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . get ( var ) . user_id )
if ( var . containsKey ( var . id ) )	if ( var . indexOfKey ( var . id ) >= 0 )
ContactsController . Contact var = ContactsController . getInstance ( ) . phoneBookContacts . get ( var )	ContactsController . Contact var = ContactsController . getInstance ( var ) . phoneBookContacts . get ( var )
return MessagesController . getInstance ( ) . dialogs	return MessagesController . getInstance ( var ) . hintDialogs . get ( var - 1 )
return MessagesController . getInstance ( ) . dialogsServerOnly	int var = MessagesController . getInstance ( var ) . hintDialogs . size ( )
return MessagesController . getInstance ( ) . dialogsForward	return MessagesController . getInstance ( var ) . dialogs
var += 2 + MessagesController . getInstance ( ) . hintDialogs . size ( )	var += 2 + MessagesController . getInstance ( var ) . hintDialogs . size ( )
return MessagesController . getInstance ( ) . hintDialogs . get ( var - 1 )	return MessagesController . getInstance ( var ) . hintDialogs . get ( var - 1 )
var = var == 0 && ! var && ! MessagesController . getInstance ( ) . hintDialogs . isEmpty ( )	var = var == 0 && ! var && ! MessagesController . getInstance ( var ) . hintDialogs . isEmpty ( )
return var != 1 && var != 5 && var != 3	return var != 1 && var != 5 && var != 3 && var != 8 && var != 7
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
var -= 2 + MessagesController . getInstance ( ) . hintDialogs . size ( )	var -= 2 + MessagesController . getInstance ( var ) . hintDialogs . size ( )
int var = MessagesController . getInstance ( ) . hintDialogs . size ( )	int var = MessagesController . getInstance ( var ) . hintDialogs . size ( )
if ( ! MessagesController . getInstance ( ) . dialogsEndReached )	if ( ! MessagesController . getInstance ( var ) . dialogsEndReached )
TLRPC . TL_topPeer var = SearchQuery . hints . get ( var )	TLRPC . TL_topPeer var = DataQuery . getInstance ( var ) . hints . get ( var )
var = MessagesController . getInstance ( ) . getUser ( var . var . user_id )	var = MessagesController . getInstance ( var ) . getUser ( var . var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var . var . channel_id )	var = MessagesController . getInstance ( var ) . getChat ( var . var . channel_id )
var = MessagesController . getInstance ( ) . getChat ( var . var . chat_id )	var = MessagesController . getInstance ( var ) . getChat ( var . var . chat_id )
return SearchQuery . hints . size ( )	return DataQuery . getInstance ( var ) . hints . size ( )
var = new SearchAdapterHelper	var = new SearchAdapterHelper ( false )
var = UserConfig . getClientUserId ( )	var = UserConfig . getInstance ( var ) . getClientUserId
SearchQuery . loadHints ( true )	DataQuery . getInstance ( var ) . loadHints ( true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
var . offset_peer = MessagesController . getInputPeer ( var )	var . offset_peer = MessagesController . getInstance ( var ) . getInputPeer ( var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , true , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
var . add ( new MessageObject ( var , null , false ) , null , false )	var . add ( new MessageObject ( var , var , false ) , var , false )
var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var )	var = MessagesStorage . getInstance ( var ) . getDialogReadMax ( var . out , var )
return ! var . isEmpty ( ) || ! SearchQuery . hints . isEmpty ( )	return ! var . isEmpty ( ) || ! DataQuery . getInstance ( var ) . hints . isEmpty ( )
return var != 2 && ( var == null || var . length ( ) == 0 ) && ( ! var . isEmpty ( ) || ! SearchQuery . hints . isEmpty ( ) )	return var != 2 && ( var == null || var . length ( ) == 0 ) && ( ! var . isEmpty ( ) || ! DataQuery . getInstance ( var ) . hints . isEmpty ( ) )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )	SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase . queryFinalized ( "" )
final HashMap < Long , RecentSearchObject > var = new HashMap	final LongSparseArray < RecentSearchObject > var = new LongSparseArray
MessagesStorage . getInstance ( ) . getEncryptedChatsInternal ( TextUtils . join ( "" , var ) , var , var , var )	MessagesStorage . getInstance ( var ) . getEncryptedChatsInternal ( TextUtils . join ( "" , var ) , var , var , var )
MessagesStorage . getInstance ( ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )	MessagesStorage . getInstance ( var ) . getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
MessagesStorage . getInstance ( ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )	MessagesStorage . getInstance ( var ) . getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
SQLitePreparedStatement var = MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" )	SQLitePreparedStatement var = MessagesStorage . getInstance ( var ) . getDatabase . executeFast ( "" )
var = new HashMap	var = new LongSparseArray
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" ) . stepThis . dispose	MessagesStorage . getInstance ( var ) . getDatabase . executeFast ( "" ) . stepThis . dispose
MessagesController . getInstance ( ) . putUser ( ( TLRPC . User ) var . object , true )	MessagesController . getInstance ( var ) . putUser ( ( TLRPC . User ) var . object , true )
MessagesController . getInstance ( ) . putChat ( ( TLRPC . Chat ) var . object , true )	MessagesController . getInstance ( var ) . putChat ( ( TLRPC . Chat ) var . object , true )
MessagesController . getInstance ( ) . putEncryptedChat ( ( TLRPC . EncryptedChat ) var . object , true )	MessagesController . getInstance ( var ) . putEncryptedChat ( ( TLRPC . EncryptedChat ) var . object , true )
HashMap < Long , DialogSearchResult > var = new HashMap var ( var )	LongSparseArray < DialogSearchResult > var = new LongSparseArray var ( var )
TLRPC . User var = UserConfig . getCurrentUser ( var )	TLRPC . User var = UserConfig . getInstance ( var ) . getCurrentUser var
if ( var . containsKey ( ( long ) var ) )	if ( var . indexOfKey ( ( long ) var ) >= 0 )
MessagesController . getInstance ( ) . putUser ( var , true )	MessagesController . getInstance ( var ) . putUser ( var , true )
MessagesController . getInstance ( ) . putChat ( var , true )	MessagesController . getInstance ( var ) . putChat ( var , true )
MessagesController . getInstance ( ) . putEncryptedChat ( var , true )	MessagesController . getInstance ( var ) . putEncryptedChat ( var , true )
MessagesController . getInstance ( ) . putUsers ( var , true )	MessagesController . getInstance ( var ) . putUsers ( var , true )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . User ) var ) . id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( ( ( TLRPC . User ) var ) . id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( ( ( TLRPC . Chat ) var ) . id )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( ( ( TLRPC . Chat ) var ) . id )
if ( var > var && var < var + var )	if ( var > var + var && var < var + var + var )
return var . get ( var - var - 1 )	return var . get ( var - var - var - 1 )
if ( var > var + var && var < var + var + var )	if ( var > var + var + var && var < var + var + var + var )
return var . get ( var - var - var - 1 )	return var . get ( var - var - var - var - 1 )
var = MessagesController . getInstance ( ) . getChat ( ( ( TLRPC . Chat ) var ) . id )	var = MessagesController . getInstance ( var ) . getChat ( ( ( TLRPC . Chat ) var ) . id )
var = MessagesController . getInstance ( ) . getEncryptedChat ( ( ( TLRPC . EncryptedChat ) var ) . id )	var = MessagesController . getInstance ( var ) . getEncryptedChat ( ( ( TLRPC . EncryptedChat ) var ) . id )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )	var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
var . useSeparator = ( var != getItemCount - 1 && var != var - 1 && var != var + var - 1 )	var . useSeparator = ( var != getItemCount - 1 && var != var + var - 1 && var != var + var + var - 1 )
if ( var > var . size ( ) && var != null )	if ( var != null && ( var = var . indexOf ( var ) ) != - 1 != null )
var . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , Math . min ( var . length ( ) , var . length ( ) + 1 ) . length ( ) , var . length ( ) + 1 , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , var , var + var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( ! var . getGlobalSearch ( ) . isEmpty && var == var . size ( ) )	if ( ! var . getGlobalSearch ( ) . isEmpty && var == var . size ( ) + var . getLocalServerSearch ( ) . size )
if ( var > var + var && var < var + var + var )	if ( var > var + var + var && var < var + var + var + var )
if ( var != 0 && var == var + var + var )	if ( var != 0 && var == var + var + var + var )
return var . size ( )	int var = var . size ( ) + 2
return var . getItemViewType ( ) == 3	int var = var . getItemViewType ( )
( ( DrawerProfileCell ) var . itemView ) . setUser ( MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) ) . getClientUserId ( ) )	( ( DrawerProfileCell ) var . itemView ) . setUser ( MessagesController . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getUser ( UserConfig . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getClientUserId ) . getInstance ( UserConfig . selectedAccount ) . selectedAccount . getClientUserId , var )
var . get ( var ) . bind ( ( DrawerActionCell ) var . itemView )	var . get ( var ) . bind ( var )
if ( var == 0 == 1 == 5 )	if ( var == 0 == 1 )
if ( var == 5 )	if ( var == var . size ( ) + 1 )
var . add ( null )	var . add ( var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
if ( var > 3 && var < places . size ( ) + 3 )	if ( var > 3 && var < places . size ( ) + 4 )
if ( var > 2 && var < places . size ( ) + 2 )	if ( var > 2 && var < places . size ( ) + 3 )
return ! ( LocationController . getInstance ( ) . getSharingLocationInfo ( var ) == null && var == null )	return ! ( LocationController . getInstance ( var ) . getSharingLocationInfo ( var ) == null && var == null )
var = new SearchAdapterHelper	var = new SearchAdapterHelper ( true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( var )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
TLObject var = MessagesController . getInstance ( ) . getUserOrChat ( var )	TLObject var = var . getUserOrChat ( var )
MessagesController . getInstance ( ) . putUser ( var , false )	var . putUser ( var , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )	var . putUsersAndChats ( var . users , null , true , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
MessagesStorage . getInstance ( ) . saveBotCache ( var , var )	var . saveBotCache ( var , var )
if ( var . containsKey ( var . id ) || ! ( var . document instanceof TLRPC . TL_document ) && ! ( var . photo instanceof TLRPC . TL_photo ) && var . content_url == null && var . send_message instanceof TLRPC . TL_botInlineMessageMediaAuto )	if ( ! ( var . document instanceof TLRPC . TL_document ) && ! ( var . photo instanceof TLRPC . TL_photo ) && var . content == null && var . send_message instanceof TLRPC . TL_botInlineMessageMediaAuto )
MessagesStorage . getInstance ( ) . getBotCache ( var , var )	var . getBotCache ( var , var )
var . bot = MessagesController . getInputUser ( var )	var . bot = MessagesController . getInstance ( var ) . getInputUser ( var )
var . geo_point . lat = var . getLatitude ( )	var . geo_point . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( ) )
var . geo_point . _long = var . getLongitude ( )	var . geo_point . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( ) )
var . peer = MessagesController . getInputPeer ( var )	var . peer = MessagesController . getInstance ( var ) . getInputPeer ( var )
var = ConnectionsManager . getInstance ( ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )	var = ConnectionsManager . getInstance ( var ) . sendRequest ( var , var , ConnectionsManager . RequestFlagFailOnServerErrors )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
final HashMap < Integer , TLRPC . User > var = new HashMap	final SparseArray < TLRPC . User > var = new SparseArray
if ( ! var && var && var == 0 && ! SearchQuery . inlineBots . isEmpty ( ) )	if ( ! var && var && var == 0 && ! var . isEmpty ( ) )
for ( int var = 0 ; var < SearchQuery . inlineBots . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( ) ; var ++ )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( SearchQuery . inlineBots . get ( var ) . peer . user_id )	TLRPC . User var = var . getUser ( var . get ( var ) . peer . user_id )
var = MessagesController . getInstance ( ) . getChat ( var . id )	var = var . getChat ( var . id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = var . getUser ( var . user_id )
if ( var == null || ! var && UserObject . isUserSelf ( var ) || var . containsKey ( var . id ) )	if ( var == null || ! var && UserObject . isUserSelf ( var ) || var . indexOfKey ( var . id ) >= 0 )
MessagesController . getInstance ( ) . putUsers ( var . var , false )	var . putUsers ( var . var , false )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
if ( var . containsKey ( var . id ) && var . containsKey ( var . id ) . containsKey ( var . id ) 1 . containsKey ( var . id ) )	if ( var . indexOfKey ( var . id ) >= 0 && var . indexOfKey ( var . id ) >= 0 . indexOfKey ( var . id ) >= 0 1 . indexOfKey ( var . id ) >= 0 )
if ( var . containsKey ( var . id ) 1 )	if ( var . indexOfKey ( var . id ) >= 0 && var . indexOfKey ( var . id ) >= 0 . indexOfKey ( var . id ) >= 0 1 . indexOfKey ( var . id ) >= 0 )
if ( var . containsKey ( var . id ) )	if ( var . indexOfKey ( var . id ) >= 0 && var . indexOfKey ( var . id ) >= 0 . indexOfKey ( var . id ) >= 0 1 . indexOfKey ( var . id ) >= 0 )
TLRPC . BotInfo var = var . getValue ( )	TLRPC . BotInfo var = var . valueAt ( var )
var . add ( MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id )	var . add ( var . getUser ( var . user_id ) . user_id )
public SearchAdapter ( Context var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var , boolean var , boolean var , boolean var , int var )	public SearchAdapter ( Context var , SparseArray < TLRPC . User > . User var , boolean var , boolean var , boolean var , boolean var , int var )
var = new SearchAdapterHelper	var = new SearchAdapterHelper ( true )
final ArrayList < TLRPC . TL_contact > var = new ArrayList	final ArrayList < TLRPC . TL_contact > var = new ArrayList ( ContactsController . getInstance ( var ) . contacts )
var . addAll ( ContactsController . getInstance ( ) . contacts )	final ArrayList < TLRPC . TL_contact > var = new ArrayList ( ContactsController . getInstance ( var ) . contacts )
if ( var . id == UserConfig . getClientUserId ( var ) || var && ! var . mutual_contact )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId var || var && ! var . mutual_contact )
( ( SpannableStringBuilder ) var ) . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , var , var + var , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setChecked ( var . containsKey ( var ) , false )	var . setChecked ( var . indexOfKey ( var ) >= 0 , false )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( var ) . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( var ) . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
if ( var . length ( ) >= 5 )	if ( var . length ( ) > 0 )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , true , true )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( "" )	SQLiteCursor var = MessagesStorage . getInstance ( var ) . getDatabase . queryFinalized ( "" )
if ( var . isEmpty ( ) || var == null )	if ( var . size ( ) == 0 || var == null )
SQLitePreparedStatement var = MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" )	SQLitePreparedStatement var = MessagesStorage . getInstance ( var ) . getDatabase . executeFast ( "" )
MessagesStorage . getInstance ( ) . getDatabase . beginTransaction	MessagesStorage . getInstance ( var ) . getDatabase . beginTransaction
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" + var . get ( var ) . hashtag + "" ) . stepThis . dispose	MessagesStorage . getInstance ( var ) . getDatabase . executeFast ( "" + var . get ( var ) . hashtag + "" ) . stepThis . dispose
MessagesStorage . getInstance ( ) . getDatabase . executeFast ( "" ) . stepThis . dispose	MessagesStorage . getInstance ( var ) . getDatabase . executeFast ( "" ) . stepThis . dispose
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )	DataQuery . getInstance ( var ) . checkStickers ( DataQuery . TYPE_IMAGE )
StickersQuery . checkStickers ( StickersQuery . TYPE_MASK )	DataQuery . getInstance ( var ) . checkStickers ( DataQuery . TYPE_MASK )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )
FileLoader . getInstance ( ) . loadFile ( var . thumb . location , "" , 0 , 1 )	FileLoader . getInstance ( var ) . loadFile ( var . thumb . location , "" , 0 , 1 )
var = var . toString ( )	var = var . toString ( ) . trim
HashMap < String , ArrayList < TLRPC . Document > . Document > var = StickersQuery . getAllStickers ( )	HashMap < String , ArrayList < TLRPC . Document > . Document > var = DataQuery . getInstance ( var ) . getAllStickers
if ( var != null )	if ( var )
if ( var != null )	if ( var != null && ! var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . needReloadArchivedStickers )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . needReloadArchivedStickers )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . needReloadArchivedStickers )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . needReloadArchivedStickers )
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
var . masks = var == StickersQuery . TYPE_MASK	var . masks = var == DataQuery . TYPE_MASK
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
var . setChecked ( StickersQuery . isStickerPackInstalled ( var . set . id ) . set . id )	var . setChecked ( DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . set . id ) . set . id )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )	var . to_id . user_id = var . from_id = UserConfig . getInstance ( var ) . getClientUserId
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( UserConfig . selectedAccount , var , false )
HashMap < Integer , TextPaint > var = null	SparseArray < TextPaint > var = null
if ( var != null )	if ( var != null && var != null )
var . getValue ( ) . setColor ( getGrayTextColor )	var . valueAt ( var ) . setColor ( getTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )	var . valueAt ( var ) . setColor ( getTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )	var . valueAt ( var ) . setColor ( getTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )	var . valueAt ( var ) . setColor ( getTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )	var . valueAt ( var ) . setColor ( getTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )	var . valueAt ( var ) . setColor ( getTextColor )
var . getValue ( ) . setColor ( getGrayTextColor )	var . valueAt ( var ) . setColor ( getTextColor )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
TLObject var = MessagesController . getInstance ( ) . getUserOrChat ( "" )	TLObject var = MessagesController . getInstance ( var ) . getUserOrChat ( "" )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , false , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , false , true )
MessagesController . openByUserName ( var . channel . username , var , 2 )	MessagesController . getInstance ( var ) . openByUserName ( var . channel . username , var , 2 )
videoPlayerSeekbar . setColors ( 0x66ffffff , 0xffffffff , 0xffffffff )	videoPlayerSeekbar . setColors ( 0x66ffffff , 0x66ffffff , 0xffd5d0d7 , 0xffffffff , 0xffffffff )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . BOTTOM | Gravity . LEFT )
HashMap < Long , TLRPC . WebPage > var = new HashMap	LongSparseArray < TLRPC . WebPage > var = new LongSparseArray ( 1 )
MessagesStorage . getInstance ( ) . putWebPages ( var )	MessagesStorage . getInstance ( var ) . putWebPages ( var )
NotificationCenter . getInstance ( ) . setAllowedNotificationsDutingAnimation ( new int )	NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , false , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , false , true )
AlertsCreator . processError ( var , var , var , true )	AlertsCreator . processError ( var , var , var , var , true )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . generateJoinMessage ( var . id , true )	MessagesController . getInstance ( var ) . generateJoinMessage ( var . id , true )
MessagesController . getInstance ( ) . loadFullChat ( var . id , 0 , true )	MessagesController . getInstance ( var ) . loadFullChat ( var . id , 0 , true )
MessagesStorage . getInstance ( ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , true , var . id )	MessagesStorage . getInstance ( var ) . updateDialogsWithDeletedMessages ( new ArrayList < Integer > ( ) , null , true , var . id )
var = MediaController . getInstance ( ) . generateObserverTag	var = DownloadController . getInstance ( var ) . generateObserverTag
MessagesController . openByUserName ( var . channel . username , var , 2 )	MessagesController . getInstance ( var ) . openByUserName ( var . channel . username , var , 2 )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , null , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , null , this )
if ( ! FileLoader . getInstance ( ) . isLoadingFile ( var ) )	if ( ! FileLoader . getInstance ( var ) . isLoadingFile ( var ) )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
FileLoader . getInstance ( ) . loadFile ( var , true , 1 )	FileLoader . getInstance ( var ) . loadFile ( var , true , 1 )
var . setStrikeWidth ( AndroidUtilities . dp ( 2 ) )	var . setStrokeWidth ( AndroidUtilities . dp ( 2 ) )
var = MediaController . getInstance ( ) . generateObserverTag	var = DownloadController . getInstance ( var ) . generateObserverTag
var . setColors ( getTextColor & 0x3fffffff , getTextColor , getTextColor )	var . setColors ( getTextColor & 0x3fffffff , getTextColor & 0x3fffffff , getTextColor , getTextColor , getTextColor )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , null , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , null , this )
if ( ! FileLoader . getInstance ( ) . isLoadingFile ( var ) )	if ( ! FileLoader . getInstance ( var ) . isLoadingFile ( var ) )
FileLoader . getInstance ( ) . loadFile ( var , true , 1 )	FileLoader . getInstance ( var ) . loadFile ( var , true , 1 )
if ( var = ( var != null ) )	if ( var = ( var instanceof TLRPC . TL_photo ) )
MessagesController . openByUserName ( var . channel . username , var , 2 )	MessagesController . getInstance ( var ) . openByUserName ( var . channel . username , var , 2 )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . var . id )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . var . id )
if ( ! var = null )	if ( ! var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var . setImageBitmap ( var . getBitmap ( var ) )	var . setImageBitmap ( var . getBitmapSafe ( var ) )
var . thumb = var . getBitmap ( var )	var . thumb = var . getBitmapSafe ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
if ( var . containsKey ( var . id ) )	if ( var . indexOfKey ( var . id ) >= 0 )
var . add ( var . getValue ( ) . messageObject )	var . add ( var . valueAt ( var ) . messageObject )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )	var . to_id . user_id = var . from_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
var . messageObject = new MessageObject ( var , null , false )	var . messageObject = new MessageObject ( currentAccount , var , false )
( ( AudioCell ) var . itemView ) . setAudio ( var . get ( var ) , var != var . size ( ) - 1 , var . containsKey ( var . id ) . id )	( ( AudioCell ) var . itemView ) . setAudio ( var . get ( var ) , var != var . size ( ) - 1 , var . indexOfKey ( var . id ) . id >= 0 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )
MessagesController . getInstance ( ) . getBlockedUsers ( false )	MessagesController . getInstance ( currentAccount ) . getBlockedUsers ( false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )
if ( var >= MessagesController . getInstance ( ) . blockedUsers . size ( ) )	if ( var >= MessagesController . getInstance ( currentAccount ) . blockedUsers . size ( ) )
var . putInt ( "" , MessagesController . getInstance ( ) . blockedUsers . get ( var ) )	var . putInt ( "" , MessagesController . getInstance ( currentAccount ) . blockedUsers . get ( var ) )
if ( var >= MessagesController . getInstance ( ) . blockedUsers . size ( ) || getParentActivity == null )	if ( var >= MessagesController . getInstance ( currentAccount ) . blockedUsers . size ( ) || getParentActivity == null )
var = MessagesController . getInstance ( ) . blockedUsers . get ( var )	var = MessagesController . getInstance ( currentAccount ) . blockedUsers . get ( var )
MessagesController . getInstance ( ) . unblockUser ( var )	MessagesController . getInstance ( currentAccount ) . unblockUser ( var )
if ( MessagesController . getInstance ( ) . loadingBlockedUsers )	if ( MessagesController . getInstance ( currentAccount ) . loadingBlockedUsers )
MessagesController . getInstance ( ) . blockUser ( var . id )	MessagesController . getInstance ( currentAccount ) . blockUser ( var . id )
if ( MessagesController . getInstance ( ) . blockedUsers . isEmpty ( ) )	if ( MessagesController . getInstance ( currentAccount ) . blockedUsers . isEmpty ( ) )
return MessagesController . getInstance ( ) . blockedUsers . size ( ) + 1	return MessagesController . getInstance ( currentAccount ) . blockedUsers . size ( ) + 1
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( MessagesController . getInstance ( ) . blockedUsers . get ( var ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( MessagesController . getInstance ( currentAccount ) . blockedUsers . get ( var ) )
if ( var == MessagesController . getInstance ( ) . blockedUsers . size ( ) )	if ( var == MessagesController . getInstance ( currentAccount ) . blockedUsers . size ( ) )
File var = new File ( ApplicationLoader . getFilesDirFixed ( var ) , "" )	var = MessagesStorage . getInstance ( currentAccount ) . getDatabaseSize var
var = var . length ( var )	var = MessagesStorage . getInstance ( currentAccount ) . getDatabaseSize var
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , 0 )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , 0 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , 0 )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , 0 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , 0 )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , 0 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , 1 )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , 2 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , 2 )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , 1 )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_AUDIO ) . MEDIA_DIR_AUDIO , 0 )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_AUDIO ) . MEDIA_DIR_AUDIO , 0 )
var += var . length ( var )	var = Utilities . getDirSize ( var . getAbsolutePath ( var ) , var )
FileLog . var ( var )	var = Utilities . getDirSize ( var . getAbsolutePath ( var ) , var )
File var = FileLoader . getInstance ( var ) . checkDirectory ( var )	File var = FileLoader . checkDirectory ( var )
File var var = var . listFiles ( var )	Utilities . clearDir ( var . getAbsolutePath ( var ) , var , Long . MAX_VALUE )
if ( var == 1 )	if ( var == 1 var )
FileLog . var ( var )	Utilities . clearDir ( var . getAbsolutePath ( var ) , var , Long . MAX_VALUE )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_AUDIO ) . MEDIA_DIR_AUDIO , var )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_AUDIO ) . MEDIA_DIR_AUDIO , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_DOCUMENT ) . MEDIA_DIR_DOCUMENT , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , var )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_IMAGE ) . MEDIA_DIR_IMAGE , var )
var = getDirectorySize ( FileLoader . getInstance ( var ) . checkDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , var )	var = getDirectorySize ( FileLoader . checkDirectory ( FileLoader . MEDIA_DIR_VIDEO ) . MEDIA_DIR_VIDEO , var )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var	SharedPreferences . Editor var = MessagesController . getGlobalMainSettings ( var ) . edit var
PendingIntent var = PendingIntent . getService ( ApplicationLoader . applicationContext , 0 , new Intent ( ApplicationLoader . applicationContext , ClearCacheService . class ) . applicationContext , ClearCacheService . class , 0 )	PendingIntent var = PendingIntent . getService ( ApplicationLoader . applicationContext , 1 , new Intent ( ApplicationLoader . applicationContext , ClearCacheService . class ) . applicationContext , ClearCacheService . class , 0 )
BotQuery . clearBotKeyboard ( var , null )	DataQuery . getInstance ( currentAccount ) . clearBotKeyboard ( var , null )
File var = new File ( ApplicationLoader . getFilesDirFixed ( var ) , "" )	var = MessagesStorage . getInstance ( currentAccount ) . getDatabaseSize var
var = var . length ( var )	var = MessagesStorage . getInstance ( currentAccount ) . getDatabaseSize var
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )	CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( var )
var . user = MessagesController . getInstance ( ) . getUser ( var )	var . user = MessagesController . getInstance ( currentAccount ) . getUser ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
CallLogRow var = var . get ( var . size ( ) - 1 )	final CallLogRow var = var . get ( var . size ( ) - 1 )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
MessagesController . getInstance ( ) . deleteMessages ( var , null , null , 0 , false )	MessagesController . getInstance ( currentAccount ) . deleteMessages ( var , null , null , 0 , false )
var = AlertsCreator . processError ( var , CancelAccountDeletionActivity . this , var )	var = AlertsCreator . processError ( currentAccount , var , CancelAccountDeletionActivity . this , var )
AlertsCreator . processError ( var , CancelAccountDeletionActivity . this , var )	AlertsCreator . processError ( currentAccount , var , CancelAccountDeletionActivity . this , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )
AlertsCreator . processError ( var , CancelAccountDeletionActivity . this , var )	AlertsCreator . processError ( currentAccount , var , CancelAccountDeletionActivity . this , var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
final String var = MessagesController . getInstance ( ) . linkPrefix + ""	final String var = MessagesController . getInstance ( var ) . linkPrefix + ""
var = MediaController . getInstance ( ) . generateObserverTag	var = DownloadController . getInstance ( var ) . generateObserverTag
var . setProgressRect ( var + AndroidUtilities . dp ( 4 ) , AndroidUtilities . dp ( 6 ) , var + AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 50 ) )	var . setProgressRect ( var = var + AndroidUtilities . dp ( 4 ) , var = AndroidUtilities . dp ( 6 ) , var + AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 50 ) )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
FileLoader . getInstance ( ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )
FileLoader . getInstance ( ) . cancelLoadFile ( var . getDocument ( ) )	FileLoader . getInstance ( var ) . cancelLoadFile ( var . getDocument ( ) )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , this )
FileLog . var ( "" , var )	FileLog . var ( var )
if ( var == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getInstance ( var ) . getClientUserId )
var . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
var = MediaController . getInstance ( var ) . generateObserverTag var	var = DownloadController . getInstance ( var ) . generateObserverTag var
if ( ! ( var . caption instanceof Spannable ) || var == null )	if ( ! ( var instanceof Spannable ) || var == null )
Spannable var = ( Spannable ) var . caption	Spannable var = ( Spannable ) var
ClickableSpan var var = var . getSpans ( var , var , ClickableSpan . class )	CharacterStyle var var = var . getSpans ( var , var , ClickableSpan . class )
if ( var == var && var == - 1 && MediaController . getInstance ( var ) . canAutoplayGifs var && ( var . getAnimation ( var ) == null || ! TextUtils . isEmpty ( var . embed_url ) ) )	if ( var == var && var == - 1 && SharedConfig . autoplayGifs && ( var . getAnimation ( var ) == null || ! TextUtils . isEmpty ( var . embed_url ) ) )
if ( var == 2 || var != 0 || var )	if ( var == 2 || var != 0 || var != 0 || var )
if ( MediaController . getInstance ( var ) . canAutoplayGifs var var )	if ( SharedConfig . autoplayGifs var )
if ( var . var == 8 && var == - 1 && MediaController . getInstance ( var ) . canAutoplayGifs var && var . getAnimation ( var ) == null )	if ( var . var == 8 && var == - 1 && SharedConfig . autoplayGifs && var . getAnimation ( var ) == null )
updateRadialProgressBackground ( true )	updateRadialProgressBackground var
updateRadialProgressBackground ( true )	updateRadialProgressBackground var
updateRadialProgressBackground ( true )	didPressedMiniButton ( true )
for ( int var = 0 ; var < var . attributes . size ( var ) ; var ++ )	for ( int var = 0 ; var < var . posArray . size ( var ) ; var ++ )
var = var . var	var = var . getDuration ( var )
if ( MediaController . getInstance ( var ) . canAutoplayGifs var var )	if ( SharedConfig . autoplayGifs var )
if ( var == null || ! var . isSecretPhoto ( var ) )	if ( var == null || ! var . needDrawBluredPreview ( var ) )
var = String . format ( Locale . US , "" , var , var , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )	var = AndroidUtilities . formapMapUrl ( var , var , var , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , false , 15 )
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )	var = AndroidUtilities . formapMapUrl ( var , var , var , 72 , 72 , true , 15 )
if ( var . exists ( var ) )	return var . exists ( var )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
if ( var . onAttachedToWindow ( var ) )	if ( var . onAttachedToWindow ( var ) var )
updateButtonState ( false )	didPressedMiniButton ( false )
updateButtonState ( false )	didPressedMiniButton ( false )
if ( var != 0 || var != - 1 )	if ( var != 0 || var != 0 || var != - 1 )
updateRadialProgressBackground ( true )	updateRadialProgressBackground var
if ( ! var )	if ( ! var var )
updateRadialProgressBackground ( true )	var . setShouldGenerateQualityThumb ( true )
updateRadialProgressBackground ( true )	var . setNeedsQualityThumb ( true )
if ( ! var . isSecretPhoto ( var ) )	if ( ! var . needDrawBluredPreview ( var ) )
var = var . mime_type != null && var . mime_type . toLowerCase ( var ) . startsWith ( "" ) || var . thumb instanceof TLRPC . TL_photoSize && ! ( var . thumb . location instanceof TLRPC . TL_fileLocationUnavailable )	var = var . mime_type != null && var . mime_type . toLowerCase ( var ) . startsWith ( "" ) || var . thumb != null && ! ( var . thumb instanceof TLRPC . TL_photoSizeEmpty ) && ! ( var . thumb . location instanceof TLRPC . TL_fileLocationUnavailable )
return Math . abs ( ConnectionsManager . getInstance ( var ) . getCurrentTime var - var . messageOwner . date ) > var . messageOwner . media . period	return Math . abs ( ConnectionsManager . getInstance ( var ) . getCurrentTime var - var . messageOwner . date ) > var . messageOwner . media . period - 5
return Math . abs ( ConnectionsManager . getInstance ( var ) . getCurrentTime var - var . messageOwner . date ) > var . messageOwner . media . period - 5	return Math . abs ( ConnectionsManager . getInstance ( var ) . getCurrentTime var - var . messageOwner . date ) > var . messageOwner . media . period
boolean var = var == var && ( isUserDataChanged var || var )	boolean var = var != null && var . getId ( var ) == var . getId ( var ) && var == MessageObject . MESSAGE_SEND_STATE_EDITING && var . isSent ( var ) || var == var && ( isUserDataChanged var || var )
if ( ( var . equals ( "" ) || var . equals ( "" ) ) && var . messageOwner . media . webpage . cached_page instanceof TLRPC . TL_pageFull && var . messageOwner . media . webpage . photo instanceof TLRPC . TL_photo )	if ( ( var . equals ( "" ) || var . equals ( "" ) || "" . equals ( var ) ) && var . messageOwner . media . webpage . cached_page instanceof TLRPC . TL_pageFull && ( var . messageOwner . media . webpage . photo instanceof TLRPC . TL_photo || MessageObject . isVideoDocument ( var . messageOwner . media . webpage . document ) ) )
var = ( ( TLRPC . TL_messageMediaInvoice ) var . messageOwner . media ) . var	TLRPC . TL_messageMediaInvoice var = ( TLRPC . TL_messageMediaInvoice ) var . messageOwner . media
int var = ( int ) Math . ceil ( Theme . chat_replyNamePaint . measureText ( var ) )	int var = ( int ) Math . ceil ( Theme . chat_replyNamePaint . measureText ( var ) + 1 )
var = var . getWidth ( var )	var = var = var . getWidth ( var )
if ( ! MediaController . getInstance ( var ) . canAutoplayGifs var )	if ( ! SharedConfig . autoplayGifs )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )	var = DownloadController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )	var = DownloadController . getInstance ( var ) . canDownloadMedia ( var )
if ( ! var . isSending ( var ) && ( var . mediaExists || FileLoader . getInstance ( var ) . isLoadingFile ( var ) || var ) var )	if ( ! var . isSending ( var ) && ! var . isEditing ( var ) && ( var . mediaExists || FileLoader . getInstance ( var ) . isLoadingFile ( var ) || var ) var )
if ( var || var || MediaController . getInstance ( var ) . canDownloadMedia ( var ) || FileLoader . getInstance ( var ) . isLoadingFile ( var ) var )	if ( var || var || DownloadController . getInstance ( var ) . canDownloadMedia ( var ) || FileLoader . getInstance ( var ) . isLoadingFile ( var ) var )
if ( var + var + AndroidUtilities . dp ( 6 ) > var var )	if ( var + var > var var )
var += ( int ) - var . getLineLeft ( 0 )	var = ( int ) var . getLineLeft ( 0 )
var = PhoneFormat . getInstance ( var ) . format ( var )	var = PhoneFormat . getInstance ( var ) . format ( ( String ) var )
var = new StaticLayout ( TextUtils . ellipsize ( var , Theme . chat_contactNamePaint , var , TextUtils . TruncateAt . END ) , Theme . chat_contactNamePaint , var , TextUtils . TruncateAt . END , Theme . chat_contactNamePaint , var + AndroidUtilities . dp ( 2 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )	var = new StaticLayout ( TextUtils . ellipsize ( var , Theme . chat_contactNamePaint , var , TextUtils . TruncateAt . END ) , Theme . chat_contactNamePaint , var , TextUtils . TruncateAt . END , Theme . chat_contactNamePaint , var + AndroidUtilities . dp ( 4 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
var = new StaticLayout ( TextUtils . ellipsize ( var . replace ( '\n' , ' ' ) , ' ' , Theme . chat_contactPhonePaint , var , TextUtils . TruncateAt . END ) . replace ( '\n' , ' ' ) , ' ' , Theme . chat_contactPhonePaint , var , TextUtils . TruncateAt . END , Theme . chat_contactPhonePaint , var + AndroidUtilities . dp ( 2 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )	var = new StaticLayout ( var , Theme . chat_contactPhonePaint , var + AndroidUtilities . dp ( 2 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , AndroidUtilities . dp ( 1 ) , false )
var = AndroidUtilities . dp ( 70 ) + var	int var = getMaxNameWidth var - AndroidUtilities . dp ( 80 )
int var = var - AndroidUtilities . dp ( 40 + 18 + 44 + 8 ) - ( int ) Math . ceil ( var . getLineWidth ( 0 ) )	int var = var - AndroidUtilities . dp ( 40 + 18 + 44 + 8 ) - ( int ) Math . ceil ( var . getLineWidth ( var . getLineCount ( var ) - 1 ) . getLineCount ( var ) - 1 )
if ( var . gifState != 2 && ! MediaController . getInstance ( var ) . canAutoplayGifs var && ( var . var == 8 || var . var == 5 ) )	if ( var . gifState != 2 && ! SharedConfig . autoplayGifs && ( var . var == 8 || var . var == 5 ) )
var . setForcePreview ( var . isSecretPhoto ( var ) )	var . setForcePreview ( var . needDrawBluredPreview ( var ) )
double var = var . messageOwner . media . geo . var	TLRPC . GeoPoint var = var . messageOwner . media . geo
var = String . format ( Locale . US , "" , var , var , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )	var = WebFile . createWithGeoPoint ( var , var , var . access_hash , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , 15 , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )
int var = var - AndroidUtilities . dp ( 86 + 37 )	int var = var - AndroidUtilities . dp ( 34 )
var = StaticLayoutEx . createStaticLayout ( var . messageOwner . media . var , Theme . chat_locationTitlePaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false , TextUtils . TruncateAt . END , var , 2 )	var = StaticLayoutEx . createStaticLayout ( var . messageOwner . media . var , Theme . chat_locationTitlePaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false , TextUtils . TruncateAt . END , var , 1 )
var = StaticLayoutEx . createStaticLayout ( var . messageOwner . media . address , Theme . chat_locationAddressPaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false , TextUtils . TruncateAt . END , var , Math . min ( 3 , 3 - var ) , 3 - var )	var = StaticLayoutEx . createStaticLayout ( var . messageOwner . media . address , Theme . chat_locationAddressPaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false , TextUtils . TruncateAt . END , var , 1 )
var = AndroidUtilities . dp ( 86 )	var = var - AndroidUtilities . dp ( 86 )
var = AndroidUtilities . dp ( 86 )	var += AndroidUtilities . dp ( 50 )
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )	var = WebFile . createWithGeoPoint ( var , 200 , 100 , 15 , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )	var = WebFile . createWithGeoPoint ( var , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , int ( var / AndroidUtilities . density ) / AndroidUtilities . density , 15 , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )
if ( ! var . isSecretPhoto ( var ) )	if ( ! var . needDrawBluredPreview ( var ) )
if ( ! var . isSecretPhoto ( var ) )	if ( ! var . needDrawBluredPreview ( var ) )
if ( ! var . isSecretPhoto ( var ) )	if ( ! var . needDrawBluredPreview ( var ) )
if ( var . isSecretPhoto ( var ) )	if ( var . needDrawBluredPreview ( var ) )
var = var . var	var = var . caption
var = new StaticLayout ( var , Theme . chat_msgTextPaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )	var = new StaticLayout ( var . caption , Theme . chat_msgTextPaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
var += var + AndroidUtilities . dp ( 9 )	var = var + AndroidUtilities . dp ( 9 )
if ( var || MediaController . getInstance ( var ) . canDownloadMedia ( var ) || FileLoader . getInstance ( var ) . isLoadingFile ( var ) var )	if ( var || DownloadController . getInstance ( var ) . canDownloadMedia ( var ) || FileLoader . getInstance ( var ) . isLoadingFile ( var ) var )
var . setImageBitmap ( ( BitmapDrawable ) null )	var . setImageBitmap ( ( Drawable ) null )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )	var = DownloadController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )	var = DownloadController . getInstance ( var ) . canDownloadMedia ( var )
if ( ! var . isSending ( var ) && ( var != 0 || FileLoader . getInstance ( var ) . isLoadingFile ( var ) || var ) var )	if ( ! var . isSending ( var ) && ! var . isEditing ( var ) && ( var != 0 || FileLoader . getInstance ( var ) . isLoadingFile ( var ) || var ) var )
if ( ( var . flags & MessageObject . POSITION_FLAG_RIGHT ) == 0 )	if ( ( var . flags & MessageObject . POSITION_FLAG_LEFT ) == 0 )
if ( ( var . flags & MessageObject . POSITION_FLAG_LEFT ) == 0 )	if ( ( var . flags & MessageObject . POSITION_FLAG_RIGHT ) == 0 )
var = StaticLayout . Builder . obtain ( var . caption , 0 , var . caption . length ( var ) , Theme . chat_msgTextPaint , var - AndroidUtilities . dp ( 10 ) ) . setBreakStrategy ( StaticLayout . BREAK_STRATEGY_HIGH_QUALITY ) . setHyphenationFrequency ( StaticLayout . HYPHENATION_FREQUENCY_NONE ) . setAlignment ( Layout . Alignment . ALIGN_NORMAL ) . build var	var = StaticLayout . Builder . obtain ( var . caption , 0 , var . caption . length ( var ) , Theme . chat_msgTextPaint , var ) . setBreakStrategy ( StaticLayout . BREAK_STRATEGY_HIGH_QUALITY ) . setHyphenationFrequency ( StaticLayout . HYPHENATION_FREQUENCY_NONE ) . setAlignment ( Layout . Alignment . ALIGN_NORMAL ) . build var
var = new StaticLayout ( var . caption , Theme . chat_msgTextPaint , var - AndroidUtilities . dp ( 10 ) , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )	var = new StaticLayout ( var , Theme . chat_msgTextPaint , var , Layout . Alignment . ALIGN_NORMAL , 1.0f , 0.0f , false )
int var = ( int ) Math . ceil ( Theme . chat_replyNamePaint . measureText ( var . site_name ) . site_name )	int var = var = ( int ) Math . ceil ( Theme . chat_replyNamePaint . measureText ( var . site_name ) . site_name + 1 )
var += Math . min ( AndroidUtilities . displaySize . x , AndroidUtilities . displaySize . y )	var += Math . min ( AndroidUtilities . displaySize . x , AndroidUtilities . displaySize . y ) - AndroidUtilities . dp ( 5 )
updateButtonState ( var )	updateButtonState ( var && ! var . cancelEditing , true )
var = var - AndroidUtilities . dp ( 10 )	var += var - AndroidUtilities . dp ( 10 )
var = int ( AndroidUtilities . dp ( 7 ) + ( var . getImageHeight ( var ) - AndroidUtilities . dp ( 48 ) ) / 2.0f ) + var	var = var . getImageY ( var ) + ( var . getImageHeight ( var ) - AndroidUtilities . dp ( 48 ) ) / 2
var . setVisible ( ! PhotoViewer . getInstance ( var ) . isShowingImage ( var ) && ! SecretMediaViewer . getInstance ( var ) . isShowingImage ( var ) , false )	var . setVisible ( ! PhotoViewer . isShowingImage ( var ) && ! SecretMediaViewer . getInstance ( var ) . isShowingImage ( var ) , false )
setDrawableBounds ( var , var + var - AndroidUtilities . dp ( 15 ) , var + AndroidUtilities . dp ( 11.5f ) , AndroidUtilities . dp ( 9 ) , AndroidUtilities . dp ( 13 ) )	setDrawableBounds ( var , var + var + var - AndroidUtilities . dp ( 15 ) , var + AndroidUtilities . dp ( 11.5f ) , AndroidUtilities . dp ( 9 ) , AndroidUtilities . dp ( 13 ) )
if ( var == - 1 && var . isSecretPhoto ( var ) && ! MediaController . getInstance ( var ) . isPlayingMessage ( var ) && var . getVisible ( var ) )	if ( var == - 1 && var . needDrawBluredPreview ( var ) && ! MediaController . getInstance ( var ) . isPlayingMessage ( var ) && var . getVisible ( var ) )
if ( var . getVisible ( var ) && ! var && ! var . isSecretPhoto ( var ) )	if ( var . getVisible ( var ) && ! var && ! var . needDrawBluredPreview ( var ) )
var = var - AndroidUtilities . dp ( 28 )	var = var - var - AndroidUtilities . dp ( 32 )
if ( ! var . isSecretPhoto ( var ) )	if ( ! var . needDrawBluredPreview ( var ) )
if ( ! var && var != null && ( var == 1 || var == 0 || var == 3 || var . isSecretPhoto ( var ) ) )	if ( ! var && var != null && ( var == 1 || var == 0 || var == 3 || var . needDrawBluredPreview ( var ) ) )
if ( var . messageOwner . media instanceof TLRPC . TL_messageMediaGeoLive var )	if ( var . isOutOwner ( var ) var )
Theme . chat_locationTitlePaint . setColor ( Theme . getColor ( Theme . key_chat_outVenueNameText ) . key_chat_outVenueNameText )	var . setColor ( Theme . getColor ( Theme . key_chat_outPreviewInstantText ) . key_chat_outPreviewInstantText )
Theme . chat_locationTitlePaint . setColor ( Theme . getColor ( Theme . key_chat_inVenueNameText ) . key_chat_inVenueNameText )	Theme . chat_instantViewPaint . setColor ( Theme . getColor ( Theme . key_chat_outPreviewInstantText ) . key_chat_outPreviewInstantText )
if ( var == null )	if ( var && var . var == 5 )
if ( var . isOut ( var ) && var . isSending ( var ) || var . isSendError ( var ) && var var )	if ( var . isOut ( var ) && ( var . isSending ( var ) || var . isEditing ( var ) ) || var . isSendError ( var ) && var var )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var . messageOwner . attachPath , var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var . messageOwner . attachPath , var , this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
if ( var . isOut ( var ) && var . isSending ( var ) var )	if ( var . isOut ( var ) && ( var . isSending ( var ) || var . isEditing ( var ) ) var )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var . messageOwner . attachPath , var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var . messageOwner . attachPath , var , this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , var , this )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )	var = DownloadController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )	var = DownloadController . getInstance ( var ) . canDownloadMedia ( var )
var = MediaController . getInstance ( var ) . canDownloadMedia ( var )	var = DownloadController . getInstance ( var ) . canDownloadMedia ( var )
if ( var . isSecretPhoto ( var ) var )	if ( var . needDrawBluredPreview ( var ) var )
if ( var . isOut ( var ) && var . isSending ( var ) var )	if ( var . isOut ( var ) && ( var . isSending ( var ) || var . isEditing ( var ) ) var )
if ( var . isOut ( var ) && var . isSending ( var ) || var . isSendError ( var ) var )	if ( var . isOut ( var ) && ( var . isSending ( var ) || var . isEditing ( var ) ) || var . isSendError ( var ) var )
updateButtonState ( var == var || var == var )	updateButtonState ( var == var || var == var , false )
updateButtonState ( true )	updateButtonState ( true , false )
updateButtonState ( true )	updateButtonState ( true , false )
updateButtonState ( true )	updateButtonState ( true , false )
if ( var != null && var && ! var && ! var . mediaExists && ! var . attachPathExists )	if ( var != null && ( var . var == 0 || var . var == 1 || var . var == 5 || var . var == 8 ) && var && ! var && ! var . mediaExists && ! var . attachPathExists )
updateButtonState ( true )	var . setAlphaForMiniPrevious ( true )
if ( var != 4 )	if ( var != 1 )
updateButtonState ( false )	updateButtonState ( false , false )
updateButtonState ( false )	updateButtonState ( false , false )
if ( var . messageOwner . fwd_from != null && ! var . isOutOwner ( var ) && var . messageOwner . fwd_from . saved_from_peer != null && var . getDialogId ( var ) == UserConfig . getClientUserId ( var ) )	if ( var . messageOwner . fwd_from != null && ! var . isOutOwner ( var ) && var . messageOwner . fwd_from . saved_from_peer != null && var . getDialogId ( var ) == UserConfig . getInstance ( var ) . getClientUserId var )
int var = UserConfig . getClientUserId ( var )	int var = UserConfig . getInstance ( var ) . getClientUserId var
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )	var = var . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getUser ( var . saved_from_peer . user_id )	var = var . getUser ( var . saved_from_peer . user_id )
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )	var = var . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getChat ( var . saved_from_peer . channel_id )	var = var . getChat ( var . saved_from_peer . channel_id )
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )	var = var . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getChat ( var . saved_from_peer . chat_id )	var = var . getChat ( var . saved_from_peer . chat_id )
var = MessagesController . getInstance ( var ) . getUser ( var . from_id )	var = var . getUser ( var . from_id )
var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )	var = var . getUser ( var . messageOwner . from_id )
var = MessagesController . getInstance ( var ) . getChat ( - var . messageOwner . from_id )	var = var . getChat ( - var . messageOwner . from_id )
var = MessagesController . getInstance ( var ) . getChat ( var . messageOwner . to_id . channel_id )	var = var . getChat ( var . messageOwner . to_id . channel_id )
var = new SpannableStringBuilder ( String . format ( "" , var , var , var ) , var , var , var )	var = new SpannableStringBuilder ( String . format ( "" , var , var ) , var , var )
var = ( int ) Math . ceil ( Theme . chat_forwardNamePaint . measureText ( var + "" + var ) + "" + var )	int var = ( int ) Math . ceil ( Theme . chat_forwardNamePaint . measureText ( var + "" ) + "" )
var . setSpan ( new TypefaceSpan ( AndroidUtilities . getTypeface ( "" ) ) . getTypeface ( "" ) , var . length ( var ) + 1 , var . length ( var ) + 1 + var . length ( var ) , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new TypefaceSpan ( AndroidUtilities . getTypeface ( "" ) ) . getTypeface ( "" ) , var , var + var . length ( var ) , Spannable . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setColors ( Theme . getColor ( Theme . key_chat_outAudioSeekbar ) . key_chat_outAudioSeekbar , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarSelected ) . key_chat_outAudioSeekbarSelected )	var . setColors ( Theme . getColor ( Theme . key_chat_outAudioSeekbar ) . key_chat_outAudioSeekbar , Theme . getColor ( Theme . key_chat_outAudioCacheSeekbar ) . key_chat_outAudioCacheSeekbar , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarSelected ) . key_chat_outAudioSeekbarSelected )
var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )	var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioCacheSeekbar ) . key_chat_inAudioCacheSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )
var . setColors ( Theme . getColor ( Theme . key_chat_outAudioSeekbar ) . key_chat_outAudioSeekbar , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarSelected ) . key_chat_outAudioSeekbarSelected )	var . setColors ( Theme . getColor ( Theme . key_chat_outAudioSeekbar ) . key_chat_outAudioSeekbar , Theme . getColor ( Theme . key_chat_outAudioCacheSeekbar ) . key_chat_outAudioCacheSeekbar , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarFill ) . key_chat_outAudioSeekbarFill , Theme . getColor ( Theme . key_chat_outAudioSeekbarSelected ) . key_chat_outAudioSeekbarSelected )
var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )	var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioCacheSeekbar ) . key_chat_inAudioCacheSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )
var -= AndroidUtilities . dp ( 25 + 6 )	var = var - var - AndroidUtilities . dp ( 32 )
var . translate ( var = var . getImageX ( var ) + AndroidUtilities . dp ( 5 ) , var = var . getImageY ( var ) + var . getImageHeight ( var ) + AndroidUtilities . dp ( 6 ) )	var = var . getImageY ( var ) + var . getImageHeight ( var ) + AndroidUtilities . dp ( 6 )
if ( ( ! var || var ) && var )	if ( ( ! var || var ) && var && var == null || var == null )
public CheckBoxCell ( Context var , boolean var )	public CheckBoxCell ( Context var , int var )
var = new CheckBoxSquare ( var , var )	var = new CheckBoxSquare ( var , var == 1 )
var = MediaController . getInstance ( ) . generateObserverTag	var = DownloadController . getInstance ( var ) . generateObserverTag
String var = null	WebFile var = null
if ( var . content_url != null )	if ( var . content instanceof TLRPC . TL_webDocument )
var = var . content_url	var = ( TLRPC . TL_webDocument ) var . content
var = var . thumb_url	if ( var . thumb instanceof TLRPC . TL_webDocument )
var = var . content_url	var = ( TLRPC . TL_webDocument ) var . content
if ( var == null && var . thumb_url != null )	if ( var == null && ( var . thumb instanceof TLRPC . TL_webDocument ) )
var = var . thumb_url	var = ( TLRPC . TL_webDocument ) var . thumb
var = String . format ( Locale . US , "" , var , var , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density , var , var )	var = WebFile . createWithGeoPoint ( var . send_message . geo , 72 , 72 , 15 , Math . min ( 2 , ( int ) Math . ceil ( AndroidUtilities . density ) . density ) , ( int ) Math . ceil ( AndroidUtilities . density ) . density )
var = var . var	var = result [ 0 ]
var = var . var	var = result [ 1 ]
if ( var != null || var != null || var != null )	if ( var != null || var != null || var != null || var != null )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )	var . to_id . user_id = var . from_id = UserConfig . getInstance ( var ) . getClientUserId
var . duration = var . duration	var . duration = MessageObject . getInlineResultDuration ( var )
var = new MessageObject ( var , null , false )	var = new MessageObject ( var , var , false )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
if ( var != null && var . content_url != null && var . content_url . length ( ) > 0 )	if ( var != null && var . content != null && ! TextUtils . isEmpty ( var . content . url ) )
if ( var != null )	if ( var != null . content instanceof TLRPC . TL_webDocument )
FileLoader . getInstance ( ) . loadFile ( var , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var , true , 0 )
if ( var != null )	if ( var != null . content instanceof TLRPC . TL_webDocument )
ImageLoader . getInstance ( ) . cancelLoadHttpFile ( var . content_url )	FileLoader . getInstance ( var ) . cancelLoadFile ( WebFile . createWithWebDocument ( var . content ) . content )
var . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
if ( var != null )	if ( var != null . content instanceof TLRPC . TL_webDocument )
if ( var . content_url != null )	if ( var . content instanceof TLRPC . TL_webDocument )
var = Utilities . MD5 ( var . content_url ) + "" + ImageLoader . getHttpUrlExtension ( var . content_url , "" )	var = Utilities . MD5 ( var . content . url ) + "" + ImageLoader . getHttpUrlExtension ( var . content . url , "" )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
if ( var . thumb_url != null )	if ( var . thumb instanceof TLRPC . TL_webDocument )
var = Utilities . MD5 ( var . thumb_url ) + "" + ImageLoader . getHttpUrlExtension ( var . thumb_url , "" )	var = Utilities . MD5 ( var . thumb . url ) + "" + ImageLoader . getHttpUrlExtension ( var . thumb . url , "" )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , this )
var = FileLoader . getInstance ( ) . isLoadingFile ( var )	var = FileLoader . getInstance ( var ) . isLoadingFile ( var )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
var = MessagesController . getInstance ( ) . printingStrings . get ( var )	var = MessagesController . getInstance ( var ) . printingStrings . get ( var )
var = DraftQuery . getDraft ( var )	var = DataQuery . getInstance ( var ) . getDraft ( var )
if ( var != null )	if ( var != null = "" )
if ( var . admin_id == UserConfig . getClientUserId ( ) )	if ( var . admin_id == UserConfig . getInstance ( var ) . getClientUserId )
var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )	var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )
var = MessagesController . getInstance ( ) . getChat ( var . messageOwner . to_id . channel_id )	var = MessagesController . getInstance ( var ) . getChat ( var . messageOwner . to_id . channel_id )
if ( var . id / 1000 != 777 && var . id / 1000 != 333 && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) == null )	if ( var . id / 1000 != 777 && var . id / 1000 != 333 && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null )
if ( ContactsController . getInstance ( ) . contactsDict . size ( ) == 0 && ( ! ContactsController . getInstance ( ) . contactsLoaded || ContactsController . getInstance ( ) . isLoadingContacts ) )	if ( ContactsController . getInstance ( var ) . contactsDict . size ( ) == 0 && ( ! ContactsController . getInstance ( var ) . contactsLoaded || ContactsController . getInstance ( var ) . isLoadingContacts ) )
return MessagesController . getInstance ( ) . dialogsGroupsOnly	return MessagesController . getInstance ( var ) . dialogsGroupsOnly
return MessagesController . getInstance ( ) . dialogsForward	return MessagesController . getInstance ( var ) . dialogsServerOnly
TLRPC . DraftMessage var = DraftQuery . getDraft ( var )	TLRPC . DraftMessage var = DataQuery . getInstance ( var ) . getDraft ( var )
MessageObject var = MessagesController . getInstance ( ) . dialogMessage . get ( var . id )	MessageObject var = MessagesController . getInstance ( var ) . dialogMessage . get ( var . id )
if ( var != var . id || var != null && var . getId ( ) != var . top_message || var != null && var . messageOwner . edit_date != var || var != var . unread_count || var != var . unread_mentions_count || var != var || var == null && var != null || var != var || var != var . pinned )	if ( var != var . id || var != null && var . getId ( ) != var . top_message || var != null && var . messageOwner . edit_date != var || var != var . unread_count || var != var . unread_mentions_count || var != var . unread_mark || var != var || var == null && var != null || var != var || var != var . pinned )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
var = MessagesController . getInstance ( ) . dialogMessage . get ( var . id )	var = MessagesController . getInstance ( var ) . dialogMessage . get ( var . id )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var )	CharSequence var = MessagesController . getInstance ( var ) . printingStrings . get ( var )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
if ( var != null && ( var != var . unread_count || var != var . unread_mentions_count ) )	if ( var != null && ( var != var . unread_count || var != var . unread_mark || var != var . unread_mentions_count ) )
var = var && MessagesController . getInstance ( ) . isDialogMuted ( var )	var = var && MessagesController . getInstance ( var ) . isDialogMuted ( var )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( var ) . getChat ( var )
var = MessagesController . getInstance ( ) . getChat ( - var )	var = MessagesController . getInstance ( var ) . getChat ( - var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . migrated_to . channel_id )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . migrated_to . channel_id )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( var ) . getUser ( var )
var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	var = MessagesController . getInstance ( var ) . getEncryptedChat ( var )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )	var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . chat_id )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . chat_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . linkPrefix + "" + var . url	var = MessagesController . getInstance ( var ) . linkPrefix + "" + var . url
addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , 0 , 20 , 0 , 0 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , 0 , 20 , 0 , 0 )
addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , 0 , 0 , 0 , 20 ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT , 0 , 0 , 0 , 20 )
ArrayList < TLRPC . RecentMeUrl > var = MessagesController . getInstance ( ) . hintDialogs	ArrayList < TLRPC . RecentMeUrl > var = MessagesController . getInstance ( var ) . hintDialogs
var . setCompoundDrawablePadding ( AndroidUtilities . dp ( 34 ) )	var . setCompoundDrawablePadding ( AndroidUtilities . dp ( 29 ) )
addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT , Gravity . LEFT | Gravity . TOP , 14 , 0 , 16 , 0 ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT , Gravity . LEFT | Gravity . TOP , 14 , 0 , 16 , 0 )	addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT , Gravity . LEFT | Gravity . TOP , 19 , 0 , 16 , 0 ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT , Gravity . LEFT | Gravity . TOP , 19 , 0 , 16 , 0 )
Drawable var = getResources . getDrawable ( var )	Drawable var = getResources . getDrawable ( var ) . mutate
super . invalidate ( )	var . onClick ( DrawerProfileCell . this )
if ( var . cover != null && var . cover . thumb != null && var . cover . thumb . location != null var . covers . isEmpty ( ) )	if ( var . cover != null && var . cover . thumb != null && var . cover . thumb . location != null var . covers . isEmpty ( ) && var . covers . get ( 0 ) . thumb != null )
if ( ! var . covers . isEmpty ( ) )	if ( ! var . covers . isEmpty ( ) && var . covers . get ( 0 ) . thumb != null )
if ( var = StickersQuery . isStickerPackInstalled ( var . var . id ) )	if ( var = DataQuery . getInstance ( var ) . isStickerPackInstalled ( var . var . id ) )
if ( var = StickersQuery . isStickerPackInstalled ( var . var . id ) )	if ( var = DataQuery . getInstance ( var ) . isStickerPackInstalled ( var . var . id ) )
if ( var = StickersQuery . isStickerPackInstalled ( var . var . id ) )	if ( var = DataQuery . getInstance ( var ) . isStickerPackInstalled ( var . var . id ) )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText2 ) . key_windowBackgroundWhiteGrayText2 )	var . setTextColor ( Theme . getColor ( Theme . key_graySectionText ) . key_graySectionText )
if ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime || MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId || var . status != null && var . status . expires > ConnectionsManager . getInstance ( var ) . getCurrentTime || MessagesController . getInstance ( var ) . onlinePrivacy . containsKey ( var . id ) )
var . setText ( LocaleController . formatUserStatus ( var ) )	var . setText ( LocaleController . formatUserStatus ( var , var ) , var )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
if ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime || MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId || var . status != null && var . status . expires > ConnectionsManager . getInstance ( var ) . getCurrentTime || MessagesController . getInstance ( var ) . onlinePrivacy . containsKey ( var . id ) )
var . setText ( LocaleController . formatUserStatus ( var ) )	var . setText ( LocaleController . formatUserStatus ( var , var ) , var )
var . setTextColor ( 0xff999999 )	var . setTextColor ( 0xffbbbbbb )
boolean var = PhotoViewer . getInstance ( ) . isShowingImage ( var . path )	boolean var = var && PhotoViewer . isShowingImage ( var . path )
if ( var != null )	if ( var != null != null )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
var = LocaleController . formatUserStatus ( var )	var = LocaleController . formatUserStatus ( var , var )
if ( var != null && ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime ) )	if ( var != null && ( var . id == UserConfig . getInstance ( var ) . getClientUserId || var . status != null && var . status . expires > ConnectionsManager . getInstance ( var ) . getCurrentTime ) )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )
if ( LocaleController . isRTL )	if ( var . getLineLeft ( 0 ) == 0 )
var = var - AndroidUtilities . dp ( 4 ) - Theme . dialogs_checkDrawable . getIntrinsicWidth ( )	var = var - AndroidUtilities . dp ( 6 ) - Theme . dialogs_verifiedDrawable . getIntrinsicWidth ( )
var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_location_sendLocationIcon ) . key_location_sendLocationIcon , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_location_sendLocationIcon ) . key_location_sendLocationIcon , PorterDuff . Mode . MULTIPLY )	var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_location_sendLiveLocationIcon ) . key_location_sendLiveLocationIcon , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_location_sendLiveLocationIcon ) . key_location_sendLiveLocationIcon , PorterDuff . Mode . MULTIPLY )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )	LocationController . SharingLocationInfo var = LocationController . getInstance ( var ) . getSharingLocationInfo ( var )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )	LocationController . SharingLocationInfo var = LocationController . getInstance ( var ) . getSharingLocationInfo ( var )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )	LocationController . SharingLocationInfo var = LocationController . getInstance ( var ) . getSharingLocationInfo ( var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime
public SessionCell ( Context var )	public SessionCell ( Context var , int var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
var = MediaController . getInstance ( var ) . generateObserverTag var	var = DownloadController . getInstance ( var ) . generateObserverTag var
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( var ) . addLoadingFileObserver ( var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , this )
MediaController . getInstance ( var ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
var . imageView . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . imageView . getImageReceiver ( ) . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime
var . setText ( Emoji . replaceEmoji ( StickersQuery . getEmojiForSticker ( var . id ) . id , var . getPaint ( ) . getFontMetricsInt , AndroidUtilities . dp ( 16 ) , false ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( ) . getFontMetricsInt , AndroidUtilities . dp ( 16 ) , false )	var . setText ( Emoji . replaceEmoji ( DataQuery . getInstance ( var ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( ) . getFontMetricsInt , AndroidUtilities . dp ( 16 ) , false ) . getInstance ( var ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( ) . getFontMetricsInt , AndroidUtilities . dp ( 16 ) , false )
public ThemeCell ( Context var )	public ThemeCell ( Context var , boolean var )
if ( var == null )	if ( var == null && var == null && var == null )
if ( var instanceof TLRPC . User )	if ( var instanceof TLRPC . User instanceof TLRPC . Chat )
if ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires > ConnectionsManager . getInstance ( ) . getCurrentTime || MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) )	if ( var . id == UserConfig . getInstance ( var ) . getClientUserId || var . status != null && var . status . expires > ConnectionsManager . getInstance ( var ) . getCurrentTime || MessagesController . getInstance ( var ) . onlinePrivacy . containsKey ( var . id ) )
var . setText ( LocaleController . formatUserStatus ( var ) )	var . setText ( LocaleController . formatUserStatus ( var , var ) , var )
var . setText ( "" + ( 70 - var . length ( ) ) )	var . setText ( String . format ( "" , ( 70 - var . length ( ) ) ) , ( 70 - var . length ( ) ) )
var . setText ( "" )	var . setText ( String . format ( "" , 70 ) , 70 )
TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )	TLRPC . TL_userFull var = MessagesController . getInstance ( currentAccount ) . getUserFull ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
final TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )	final TLRPC . TL_userFull var = MessagesController . getInstance ( currentAccount ) . getUserFull ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . userInfoDidLoaded , var . id , var )
AlertsCreator . processError ( var , ChangeBioActivity . this , var )	AlertsCreator . processError ( currentAccount , var , ChangeBioActivity . this , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var = new AvatarUpdater	var = new ImageUpdater
if ( var . uploadingAvatar != null )	if ( var . uploadingImage != null )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , null )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , null )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) ) . getClientUserId ( ) , null , true )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId ) . getInstance ( currentAccount ) . getClientUserId , null , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
MessagesController . getInstance ( ) . changeChatTitle ( var , var . getText ( ) . toString )	MessagesController . getInstance ( currentAccount ) . changeChatTitle ( var , var . getText ( ) . toString )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
var = UserConfig . getCurrentUser ( )	var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
TLRPC . User var = UserConfig . getCurrentUser ( )	TLRPC . User var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
UserConfig . saveConfig ( true )	UserConfig . getInstance ( currentAccount ) . saveConfig ( true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
if ( var == 1 == 2 && ! BuildVars . DEBUG_VERSION )	if ( var == 1 )
AlertsCreator . processError ( var , ChangePhoneActivity . this , var , var . getString ( "" ) )	AlertsCreator . processError ( currentAccount , var , ChangePhoneActivity . this , var , var . getString ( "" ) )
AlertsCreator . processError ( var , ChangePhoneActivity . this , var )	AlertsCreator . processError ( currentAccount , var , ChangePhoneActivity . this , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentSmsCode , var ) , R . string . SentSmsCode , var )	var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentSmsCode , LocaleController . addNbsp ( var ) ) , R . string . SentSmsCode , LocaleController . addNbsp ( var ) )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallCode , var ) , R . string . SentCallCode , var )	var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallCode , LocaleController . addNbsp ( var ) ) , R . string . SentCallCode , LocaleController . addNbsp ( var ) )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallOnly , var ) , R . string . SentCallOnly , var )	var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallOnly , LocaleController . addNbsp ( var ) ) , R . string . SentCallOnly , LocaleController . addNbsp ( var ) )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
UserConfig . setCurrentUser ( var )	UserConfig . getInstance ( currentAccount ) . setCurrentUser ( var )
UserConfig . saveConfig ( true )	UserConfig . getInstance ( currentAccount ) . saveConfig ( true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var , null , true , true )
MessagesController . getInstance ( ) . putUser ( var , false )	MessagesController . getInstance ( currentAccount ) . putUser ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )
AlertsCreator . processError ( var , ChangePhoneActivity . this , var )	AlertsCreator . processError ( currentAccount , var , ChangePhoneActivity . this , var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
TLRPC . User var = UserConfig . getCurrentUser ( )	TLRPC . User var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 )	var . setTextColor ( Theme . getColor ( Theme . key_changephoneinfo_changeText ) . key_changephoneinfo_changeText )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
var = UserConfig . getCurrentUser ( )	var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
String var = "" + MessagesController . getInstance ( ) . linkPrefix + "" + var . getText ( )	String var = "" + MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . getText ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
String var = UserConfig . getCurrentUser ( ) . username	String var = UserConfig . getInstance ( currentAccount ) . getCurrentUser . username
TLRPC . User var = UserConfig . getCurrentUser ( )	TLRPC . User var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
MessagesController . getInstance ( ) . putUsers ( var , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var , null , false , true )
UserConfig . saveConfig ( true )	UserConfig . getInstance ( currentAccount ) . saveConfig ( true )
AlertsCreator . processError ( var , ChangeUsernameActivity . this , var )	AlertsCreator . processError ( currentAccount , var , ChangeUsernameActivity . this , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var . thumb = var . getBitmap ( var )	var . thumb = var . getBitmapSafe ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )
var . var . add ( MessagesController . getInputUser ( var . getValue ( ) ) . getValue ( ) )	var . var . add ( MessagesController . getInstance ( currentAccount ) . getInputUser ( var . valueAt ( var ) ) . valueAt ( var ) )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( currentAccount ) . putChats ( var . chats , false )
if ( var . containsKey ( var . id ) )	if ( var . indexOfKey ( var . id ) >= 0 )
MessageObject var = new MessageObject ( var , var , var , var , var )	MessageObject var = new MessageObject ( currentAccount , var , var , var , var , var )
var . updateButtonState ( false )	var . updateButtonState ( false , false )
var . updateButtonState ( false )	var . updateButtonState ( false , false )
if ( var != null && var . isRoundVideo ( ) && var . getDialogId ( ) == var )	if ( var != null && var . isRoundVideo ( ) && var . eventId != 0 && var . getDialogId ( ) == - var . id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . media . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . messageOwner . media . user_id )
if ( var != null && var . id != UserConfig . getClientUserId ( ) && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) == null )	if ( var != null && var . id != UserConfig . getInstance ( currentAccount ) . getClientUserId && ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) == null )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . messageOwner . from_id )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var . messageOwner . from_id )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var . messageOwner . from_id )
if ( var . messageOwner . media != null && var . messageOwner . media . caption != null )	if ( var . messageOwner . media != null && var . messageOwner . message != null )
var += var . messageOwner . media . caption	var += var . messageOwner . message
if ( var . getName ( ) . endsWith ( "" ) )	if ( var . getName ( ) . toLowerCase . endsWith ( "" ) )
if ( LocaleController . getInstance ( ) . applyLanguageFile ( var ) )	if ( LocaleController . getInstance ( ) . applyLanguageFile ( var , currentAccount ) )
MessagesController . getInstance ( ) . saveGif ( var )	MessagesController . getInstance ( currentAccount ) . saveGif ( var )
if ( ! StickersQuery . isStickerPackInstalled ( var . id ) )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . id ) )
if ( ! StickersQuery . isStickerPackInstalled ( var . short_name ) )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . short_name ) )
if ( var . getDocumentName ( ) . endsWith ( "" ) . endsWith ( "" ) . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )	if ( var . getDocumentName ( ) . toLowerCase . endsWith ( "" ) . endsWith ( "" ) . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
NotificationCenter . getInstance ( ) . setAllowedNotificationsDutingAnimation ( new int )	NotificationCenter . getInstance ( currentAccount ) . setAllowedNotificationsDutingAnimation ( new int )
NotificationCenter . getInstance ( ) . setAnimationInProgress ( true )	NotificationCenter . getInstance ( currentAccount ) . setAnimationInProgress ( true )
if ( MessagesController . checkCanOpenChat ( var , ChannelAdminLogActivity . this ) )	if ( MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ChannelAdminLogActivity . this ) )
if ( var != null && var . id != UserConfig . getClientUserId ( ) )	if ( var != null && var . id != UserConfig . getInstance ( currentAccount ) . getClientUserId )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( Utilities . parseInt ( ( ( URLSpanUserMention ) var ) . getURL ) ( URLSpanUserMention ) var ) . getURL )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( Utilities . parseInt ( ( ( URLSpanUserMention ) var ) . getURL ) ( URLSpanUserMention ) var ) . getURL )
MessagesController . openByUserName ( var . substring ( 1 ) , ChannelAdminLogActivity . this , 0 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( var . substring ( 1 ) , ChannelAdminLogActivity . this , 0 )
if ( var . getDocumentName ( ) . endsWith ( "" ) )	if ( var . getDocumentName ( ) . toLowerCase . endsWith ( "" ) )
if ( var < 0 != UserConfig . getClientUserId ( ) )	if ( var < 0 != UserConfig . getInstance ( currentAccount ) . getClientUserId )
if ( MessagesController . checkCanOpenChat ( var , ChannelAdminLogActivity . this ) )	if ( MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ChannelAdminLogActivity . this ) )
if ( var != UserConfig . getClientUserId ( ) )	if ( var != UserConfig . getInstance ( currentAccount ) . getClientUserId )
MessagesController . openByUserName ( var . substring ( 1 ) , ChannelAdminLogActivity . this , 0 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( var . substring ( 1 ) , ChannelAdminLogActivity . this , 0 )
if ( var instanceof ChatMessageCell && MediaController . getInstance ( ) . canDownloadMedia ( var ) )	if ( var instanceof ChatMessageCell && DownloadController . getInstance ( currentAccount ) . canDownloadMedia ( var ) )
var = new AvatarUpdater	var = new ImageUpdater
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidCreated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatDidFailCreate )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidCreated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatDidFailCreate )
if ( var . uploadingAvatar != null )	if ( var . uploadingImage != null )
final int var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , new ArrayList < Integer > ( ) , var . getText ( ) . toString , ChatObject . CHAT_TYPE_CHANNEL , ChannelCreateActivity . this )	final int var = MessagesController . getInstance ( currentAccount ) . createChat ( var . getText ( ) . toString , new ArrayList < Integer > ( ) , var . getText ( ) . toString , ChatObject . CHAT_TYPE_CHANNEL , ChannelCreateActivity . this )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
MessagesController . getInstance ( ) . updateChannelUserName ( var , var )	MessagesController . getInstance ( currentAccount ) . updateChannelUserName ( var , var )
var . setText ( MessagesController . getInstance ( ) . linkPrefix + "" )	var . setText ( MessagesController . getInstance ( currentAccount ) . linkPrefix + "" )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , var )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )	var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )	var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var = MessagesStorage . getInstance ( ) . getChat ( var )	var = MessagesStorage . getInstance ( currentAccount ) . getChat ( var )
var . release ( )	var . countDown ( )
var . acquire ( )	var . await ( )
MessagesController . getInstance ( ) . putChat ( var , true )	MessagesController . getInstance ( currentAccount ) . putChat ( var , true )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
var . setLayoutManager ( new LinearLayoutManager ( var , LinearLayoutManager . VERTICAL , false ) , LinearLayoutManager . VERTICAL , false )	var . setLayoutManager ( var = new LinearLayoutManager ( var , LinearLayoutManager . VERTICAL , false ) , LinearLayoutManager . VERTICAL , false )
if ( var == NotificationCenter . chatInfoDidLoaded )	if ( var == NotificationCenter . chatInfoDidLoaded == NotificationCenter . closeChats )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
if ( var . users . size ( ) != 200 = true )	if ( var . users . size ( ) < 200 = true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , null , true , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var . users , null , true , true )
MessagesStorage . getInstance ( ) . updateChannelUsers ( var , var . participants )	MessagesStorage . getInstance ( currentAccount ) . updateChannelUsers ( var , var . participants )
if ( ! var . containsKey ( var . user_id ) )	if ( var . indexOfKey ( var . user_id ) < 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( currentAccount ) . getClientUserId
if ( var . user_id == UserConfig . getClientUserId ( ) )	if ( var . user_id == UserConfig . getInstance ( currentAccount ) . getClientUserId )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( var ) , var )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , MessagesController . getInstance ( currentAccount ) . getUser ( var ) , var )
var . var . inviter_id = UserConfig . getClientUserId ( )	var . var . inviter_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )
var = new SearchAdapterHelper	var = new SearchAdapterHelper ( true )
var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . ChannelParticipant ) var ) . user_id )	var = MessagesController . getInstance ( currentAccount ) . getUser ( ( ( TLRPC . ChannelParticipant ) var ) . user_id )
var . setData ( MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id , null , null )	var . setData ( MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id ) . user_id , null , null )
var = new AvatarUpdater	var = new ImageUpdater
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var = MessagesStorage . getInstance ( ) . getChat ( var )	var = MessagesStorage . getInstance ( currentAccount ) . getChat ( var )
var . release ( )	var . countDown ( )
var . acquire ( )	var . await ( )
MessagesController . getInstance ( ) . putChat ( var , true )	MessagesController . getInstance ( currentAccount ) . putChat ( var , true )
MessagesStorage . getInstance ( ) . loadChatInfo ( var , var , false , false )	MessagesStorage . getInstance ( currentAccount ) . loadChatInfo ( var , var , false , false )
var . acquire ( )	var . await ( )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
if ( var . uploadingAvatar != null )	if ( var . uploadingImage != null )
MessagesController . getInstance ( ) . updateChannelUserName ( var , var )	MessagesController . getInstance ( currentAccount ) . updateChannelUserName ( var , var )
MessagesController . getInstance ( ) . changeChatTitle ( var , var . getText ( ) . toString )	MessagesController . getInstance ( currentAccount ) . changeChatTitle ( var , var . getText ( ) . toString )
MessagesController . getInstance ( ) . updateChannelAbout ( var , var . getText ( ) . toString , var )	MessagesController . getInstance ( currentAccount ) . updateChannelAbout ( var , var . getText ( ) . toString , var )
MessagesController . getInstance ( ) . toogleChannelInvitesHistory ( var , var )	MessagesController . getInstance ( currentAccount ) . toogleChannelInvitesHistory ( var , var )
MessagesController . getInstance ( ) . toogleChannelSignatures ( var , var )	MessagesController . getInstance ( currentAccount ) . toogleChannelSignatures ( var , var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , null )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , null )
var . setText ( MessagesController . getInstance ( ) . linkPrefix + "" )	var . setText ( MessagesController . getInstance ( currentAccount ) . linkPrefix + "" )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) ) . getClientUserId ( ) , var , true )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId ) . getInstance ( currentAccount ) . getClientUserId , var , true )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )	var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlert , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( ) . linkPrefix + "" + var . username , var . title )	var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) . formatString ( "" , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title ) , R . string . RevokeLinkAlertChannel , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username , var . title )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
MessagesController . getInstance ( ) . toogleChannelInvitesHistory ( var , var )	MessagesController . getInstance ( currentAccount ) . toogleChannelInvitesHistory ( var , var )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
MessagesController . setUserAdminRole ( var , var , var , var , getFragmentForAlert ( 1 ) )	MessagesController . getInstance ( currentAccount ) . setUserAdminRole ( var , var , var , var , getFragmentForAlert ( 1 ) )
MessagesController . setUserBannedRole ( var , var , var , var , getFragmentForAlert ( 1 ) )	MessagesController . getInstance ( currentAccount ) . setUserBannedRole ( var , var , var , var , getFragmentForAlert ( 1 ) )
MessagesController . setUserAdminRole ( var , var , new TLRPC . TL_channelAdminRights ( ) , var , getFragmentForAlert ( 0 ) )	MessagesController . getInstance ( currentAccount ) . setUserAdminRole ( var , var , new TLRPC . TL_channelAdminRights ( ) , var , getFragmentForAlert ( 0 ) )
MessagesController . setUserBannedRole ( var , var , var , var , getFragmentForAlert ( 0 ) )	MessagesController . getInstance ( currentAccount ) . setUserBannedRole ( var , var , var , var , getFragmentForAlert ( 0 ) )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
MessagesController . getInstance ( ) . toogleChannelInvites ( var , var . democracy )	MessagesController . getInstance ( currentAccount ) . toogleChannelInvites ( var , var . democracy )
MessagesController . getInstance ( ) . putUser ( var , false )	MessagesController . getInstance ( currentAccount ) . putUser ( var , false )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , var , null )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , var , null )
var = var . creator || var	var = var != UserConfig . getInstance ( currentAccount ) . getClientUserId && ( var . creator || var )
if ( var . user_id == UserConfig . getClientUserId ( ) )	if ( var . user_id == UserConfig . getInstance ( currentAccount ) . getClientUserId )
final TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	final TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
MessagesController . getInstance ( ) . deleteUserFromChat ( var , var , null )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , var , null )
var . inviter_id = UserConfig . getClientUserId ( )	var . inviter_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
var . user_id = MessagesController . getInputUser ( var . user_id )	var . user_id = MessagesController . getInstance ( currentAccount ) . getInputUser ( var . user_id )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( currentAccount ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . loadFullChat ( var . id , 0 , true )	MessagesController . getInstance ( currentAccount ) . loadFullChat ( var . id , 0 , true )
MessagesController . setUserAdminRole ( var , MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id , new TLRPC . TL_channelAdminRights ( ) , var . megagroup , ChannelUsersActivity . this )	MessagesController . getInstance ( currentAccount ) . setUserAdminRole ( var , MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id ) . user_id , new TLRPC . TL_channelAdminRights ( ) , var . megagroup , ChannelUsersActivity . this )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( currentAccount ) . getClientUserId
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
if ( var . id == UserConfig . getClientUserId ( ) )	if ( var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId )
var = ConnectionsManager . getInstance ( ) . getCurrentTime + 50000	var = ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime + 50000
if ( var . id == UserConfig . getClientUserId ( ) )	if ( var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId )
var = ConnectionsManager . getInstance ( ) . getCurrentTime + 50000	var = ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime + 50000
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
var = new SearchAdapterHelper	var = new SearchAdapterHelper ( true )
final ArrayList < TLRPC . TL_contact > var = new ArrayList	final ArrayList < TLRPC . TL_contact > var = new ArrayList ( ContactsController . getInstance ( currentAccount ) . contacts )
var . addAll ( ContactsController . getInstance ( ) . contacts )	final ArrayList < TLRPC . TL_contact > var = new ArrayList ( ContactsController . getInstance ( currentAccount ) . contacts )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
if ( var . id == UserConfig . getClientUserId ( var ) )	if ( var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId var )
var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . ChannelParticipant ) var ) . user_id )	var = MessagesController . getInstance ( currentAccount ) . getUser ( ( ( TLRPC . ChannelParticipant ) var ) . user_id )
( ( SpannableStringBuilder ) var ) . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , var , var + var , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . kicked_by )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . kicked_by )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . promoted_by )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . promoted_by )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
var . thumb = var . getBitmap ( var )	var . thumb = var . getBitmapSafe ( var )
var . thumb = var . getBitmap ( var )	var . thumb = var . getBitmapSafe ( var )
if ( ! actionBar . isActionModeShowed ( var ) )	if ( ! actionBar . isActionModeShowed ( var ) var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
MessagesController . getInstance ( var ) . putChat ( var , true )	MessagesController . getInstance ( currentAccount ) . putChat ( var , true )
MessagesController . getInstance ( var ) . startShortPoll ( var , false )	MessagesController . getInstance ( currentAccount ) . startShortPoll ( var , false )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
MessagesController . getInstance ( var ) . putUser ( var , true )	MessagesController . getInstance ( currentAccount ) . putUser ( var , true )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )	MessagesController . getInstance ( currentAccount ) . sendBotStart ( var , var )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
MessagesController . getInstance ( var ) . putEncryptedChat ( var , true )	MessagesController . getInstance ( currentAccount ) . putEncryptedChat ( var , true )
var = MessagesStorage . getInstance ( var ) . getUser ( var . user_id )	var = var . getUser ( var . user_id )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
MessagesController . getInstance ( var ) . putUser ( var , true )	MessagesController . getInstance ( currentAccount ) . putUser ( var , true )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesRead )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesRead )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . historyCleared )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . historyCleared )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageReceivedByServer )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageReceivedByAck )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageSendError )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesReadEncrypted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesReadEncrypted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . removeAllMessagesFromDialog )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . removeAllMessagesFromDialog )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . screenshotTook )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . screenshotTook )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . FileNewChunkAvailable )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . FileNewChunkAvailable )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didCreatedNewDeleteTask )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didCreatedNewDeleteTask )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateMessageMedia )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateMessageMedia )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . replaceMessagesObjects )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedWebpages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedWebpages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedWebpagesInUpdates )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedWebpagesInUpdates )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesReadContent )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesReadContent )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . botInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . botKeyboardDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . botKeyboardDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatSearchResultsAvailable )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatSearchResultsAvailable )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatSearchResultsLoading )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatSearchResultsLoading )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didUpdatedMessagesViews )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didUpdatedMessagesViews )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatInfoCantLoad )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoCantLoad )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didLoadedPinnedMessage )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didLoadedPinnedMessage )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . peerSettingsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . peerSettingsDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . newDraftReceived )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . newDraftReceived )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . channelRightsUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . channelRightsUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateMentionsCount )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateMentionsCount )
BotQuery . loadBotKeyboard ( var )	DataQuery . getInstance ( currentAccount ) . loadBotKeyboard ( var )
MessagesController . getInstance ( var ) . loadPeerSettings ( var , var )	MessagesController . getInstance ( currentAccount ) . loadPeerSettings ( var , var )
MessagesController . getInstance ( var ) . setLastCreatedDialogId ( var , true )	MessagesController . getInstance ( currentAccount ) . setLastCreatedDialogId ( var , true )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
Semaphore var = null	CountDownLatch var = null
var = new Semaphore ( 0 )	var = var . getPointerId ( 0 )
MessagesController . getInstance ( var ) . loadChatInfo ( var . id , var , ChatObject . isChannel ( var ) )	MessagesController . getInstance ( currentAccount ) . loadChatInfo ( var . id , var , ChatObject . isChannel ( var ) )
var . acquire ( var )	var . await ( var )
BotQuery . loadBotInfo ( var , true , classGuid )	DataQuery . getInstance ( currentAccount ) . loadBotInfo ( var , true , classGuid )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
BotQuery . loadBotInfo ( var . id , true , classGuid )	DataQuery . getInstance ( currentAccount ) . loadBotInfo ( var . id , true , classGuid )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var . id )	var = MessagesController . getInstance ( currentAccount ) . blockedUsers . contains ( var . id )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . openedChatChanged , var , false )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . openedChatChanged , var , false )
SecretChatHelper . getInstance ( var ) . sendNotifyLayerMessage ( var , null )	SecretChatHelper . getInstance ( currentAccount ) . sendNotifyLayerMessage ( var , null )
MessagesController . getInstance ( var ) . setLastCreatedDialogId ( var , false )	MessagesController . getInstance ( currentAccount ) . setLastCreatedDialogId ( var , false )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesRead )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesRead )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . historyCleared )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . historyCleared )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageReceivedByAck )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageSendError )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesReadEncrypted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesReadEncrypted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . removeAllMessagesFromDialog )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . removeAllMessagesFromDialog )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . screenshotTook )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . screenshotTook )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . FileNewChunkAvailable )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . FileNewChunkAvailable )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didCreatedNewDeleteTask )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didCreatedNewDeleteTask )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateMessageMedia )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateMessageMedia )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . replaceMessagesObjects )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedWebpages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedWebpages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedWebpagesInUpdates )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedWebpagesInUpdates )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesReadContent )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesReadContent )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . botInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . botKeyboardDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . botKeyboardDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatSearchResultsAvailable )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatSearchResultsAvailable )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatSearchResultsLoading )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatSearchResultsLoading )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didUpdatedMessagesViews )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didUpdatedMessagesViews )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatInfoCantLoad )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoCantLoad )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didLoadedPinnedMessage )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didLoadedPinnedMessage )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . peerSettingsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . peerSettingsDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . newDraftReceived )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . newDraftReceived )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . channelRightsUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . channelRightsUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateMentionsCount )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateMentionsCount )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . openedChatChanged , var , true )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . openedChatChanged , var , true )
if ( Build . VERSION . SDK_INT >= 23 && ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture ) )	if ( Build . VERSION . SDK_INT >= 23 && ( SharedConfig . passcodeHash . length ( var ) == 0 || SharedConfig . allowScreenCapture ) )
getParentActivity var . getWindow var . clearFlags ( WindowManager . LayoutParams . FLAG_SECURE )	MediaController . getInstance ( var ) . setFlagSecure ( this , false )
MessagesController . getInstance ( var ) . cancelLoadFullUser ( var . id )	MessagesController . getInstance ( currentAccount ) . cancelLoadFullUser ( var . id )
MessagesController . getInstance ( var ) . startShortPoll ( var . id , true )	MessagesController . getInstance ( currentAccount ) . startShortPoll ( var . id , true )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( var ) . deleteUserFromChat ( ( int ) - var , MessagesController . getInstance ( var ) . getUser ( UserConfig . getClientUserId ( var ) ) . getClientUserId ( var ) , null )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( ( int ) - var , MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId var ) . getInstance ( currentAccount ) . getClientUserId var , null )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
MessagesController . getInstance ( var ) . deleteDialog ( var , 1 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 1 )
AndroidUtilities . installShortcut ( var . var )	DataQuery . getInstance ( currentAccount ) . installShortcut ( var . var )
showReplyPanel ( true , var , null , null , false )	showFieldPanelForReply ( true , var )
MessageObject var = var . getValue ( var )	MessageObject var = var [ var ] . valueAt ( var )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , ! var )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , ! var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( "" , var , null , null , false , null , null , null )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( "" , var , null , null , false , null , null , null )
MessagesSearchQuery . searchMessagesInChat ( var . getText ( var ) . toString var , var , var , classGuid , 0 , var )	DataQuery . getInstance ( currentAccount ) . searchMessagesInChat ( var . getText ( var ) . toString var , var , var , classGuid , 0 , var )
int var = var - var	int var
var = ( var - var . getTextHeight ( var ) ) / 2	var . setSpan ( new TypefaceSpan ( AndroidUtilities . getTypeface ( "" ) ) . getTypeface ( "" ) , 0 , var . length ( var ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( var . getVisibility ( var ) != GONE )	var . addSubItem ( var , var )
var . layout ( 0 , var , var . getMeasuredWidth ( var ) , var + var . getTextHeight ( var ) )	var . setSpan ( new TypefaceSpan ( Typeface . MONOSPACE ) . MONOSPACE , 0 , var . length ( var ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setTextSize ( 18 )	var . setAlpha ( 0.0f )
var . setTypeface ( AndroidUtilities . getTypeface ( "" ) )	var . setAlpha ( 0.0f )
var . setText ( LocaleController . getString ( "" , R . string . Edit ) , R . string . Edit )	var . setVisibility ( View . INVISIBLE )
var . setGravity ( Gravity . LEFT )	TLRPC . TL_inputStickerSetID var = new TLRPC . TL_inputStickerSetID ( var )
var . setTextColor ( Theme . getColor ( Theme . key_actionBarActionModeDefaultIcon ) . key_actionBarActionModeDefaultIcon )	var . access_hash = var . access_hash
if ( var . admin_id == UserConfig . getClientUserId ( var ) var )	if ( var . admin_id == UserConfig . getInstance ( currentAccount ) . getClientUserId var var )
var = ( ( ChatMessageCell ) var ) . getBackgroundDrawableLeft var	var = var . getBackgroundDrawableLeft ( var )
var . clipRect ( var , var . getTop ( var ) , var . getRight ( var ) , var . getBottom ( var ) )	var . clipRect ( var + var . getTranslationX ( var ) , var . getTop ( var ) , var . getRight ( var ) + var . getTranslationX ( var ) , var . getBottom ( var ) )
var . clipRect ( var . getLeft ( var ) , var . getTop ( var ) , var . getRight ( var ) , var )	var . clipRect ( var . getLeft ( var ) + var . getTranslationX ( var ) , var . getTop ( var ) , var . getRight ( var ) + var . getTranslationX ( var ) , var )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )	var . translate ( var . getLeft ( var ) + var . getTranslationX ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )	var . translate ( var . getLeft ( var ) + var . getTranslationX ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )	var . translate ( var . getLeft ( var ) + var . getTranslationX ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )	var . translate ( var . getLeft ( var ) + var . getTranslationX ( var ) , var . getTop ( var ) )
var . translate ( var . getLeft ( var ) , var . getTop ( var ) )	var . translate ( var . getLeft ( var ) + var . getTranslationX ( var ) , var . getTop ( var ) )
if ( var . hasCaptionLayout ( var ) && ( var . flags & MessageObject . POSITION_FLAG_BOTTOM ) != 0 && ( var . flags & MessageObject . POSITION_FLAG_LEFT ) != 0 )	if ( var . hasCaptionLayout ( var ) && ( var . flags & MessageObject . POSITION_FLAG_BOTTOM ) != 0 )
if ( var . hasCaptionLayout ( var ) && ( var . flags & MessageObject . POSITION_FLAG_BOTTOM ) != 0 && ( var . flags & MessageObject . POSITION_FLAG_LEFT ) != 0 )	if ( var . hasCaptionLayout ( var ) && ( var . flags & MessageObject . POSITION_FLAG_BOTTOM ) != 0 )
var += ( var . maxY - var . minY ) * AndroidUtilities . dp ( 11 )	var = - AndroidUtilities . dp ( 11 )
MessagesController . getInstance ( var ) . pinChannelMessage ( var , 0 , false )	MessagesController . getInstance ( currentAccount ) . pinChannelMessage ( var , 0 , false )
MessagesController . getInstance ( var ) . blockUser ( var . id )	MessagesController . getInstance ( currentAccount ) . blockUser ( var . id )
MessagesController . getInstance ( var ) . reportSpam ( var , var , var , var )	MessagesController . getInstance ( currentAccount ) . reportSpam ( var , var , var , var )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( var ) . deleteUserFromChat ( ( int ) - var , MessagesController . getInstance ( var ) . getUser ( UserConfig . getClientUserId ( var ) ) . getClientUserId ( var ) , null )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( ( int ) - var , MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId var ) . getInstance ( currentAccount ) . getClientUserId var , null )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( var ) . hideReportSpam ( var , var , var )	MessagesController . getInstance ( currentAccount ) . hideReportSpam ( var , var , var )
var . addView ( var , LayoutHelper . createFrame ( 46 , 59 , Gravity . RIGHT | Gravity . BOTTOM , 0 , 0 , 7 , 5 ) , 59 , Gravity . RIGHT | Gravity . BOTTOM , 0 , 0 , 7 , 5 )	var . addView ( var , LayoutHelper . createFrame ( 66 , 59 , Gravity . RIGHT | Gravity . BOTTOM , 0 , 0 , - 3 , 5 ) , 59 , Gravity . RIGHT | Gravity . BOTTOM , 0 , 0 , - 3 , 5 )
var . peer = MessagesController . getInputPeer ( ( int ) var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( var ) . resetMentionsCount ( var , var )	var . resetMentionsCount ( var , var )
MessagesStorage . getInstance ( var ) . markMessageAsMention ( var )	var . markMessageAsMention ( var )
var . peer = MessagesController . getInputPeer ( ( int ) var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( ( int ) var )
var . width = var . w	var . width = 0
var . height = var . h	var . height = 0
if ( getParentActivity var == null || var . content_url == null )	if ( getParentActivity var == null || var . content == null )
Browser . openUrl ( getParentActivity var , var . content_url )	Browser . openUrl ( getParentActivity var , var . content . url )
MessagesSearchQuery . searchMessagesInChat ( "" , var , var , classGuid , 0 , var )	DataQuery . getInstance ( currentAccount ) . searchMessagesInChat ( "" , var , var , classGuid , 0 , var )
var . setSpan ( new URLSpanUserMention ( "" + var . id , true ) + var . id , true , 0 , var . length ( var ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanUserMention ( "" + var . id , 1 ) + var . id , 1 , 0 , var . length ( var ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
SendMessagesHelper . getInstance ( var ) . sendMessage ( ( String ) var , var , var , null , false , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( ( String ) var , var , var , null , false , null , null , null )
if ( ( var . type . equals ( "" ) && ( var . photo != null || var . content_url != null ) || var . type . equals ( "" ) && ( var . document != null || var . content_url != null ) || var . type . equals ( "" ) && ( var . document != null ) ) var )	if ( ( var . type . equals ( "" ) && ( var . photo != null || var . content != null ) || var . type . equals ( "" ) && ( var . document != null || var . content != null ) || var . type . equals ( "" ) && ( var . document != null ) ) var )
var . addView ( var , LayoutHelper . createFrame ( 46 , 46 , Gravity . LEFT | Gravity . BOTTOM ) , 46 , Gravity . LEFT | Gravity . BOTTOM )	var . addView ( var , LayoutHelper . createFrame ( 46 , 46 , Gravity . CENTER_HORIZONTAL | Gravity . BOTTOM ) , 46 , Gravity . CENTER_HORIZONTAL | Gravity . BOTTOM )
MessagesController . getInstance ( var ) . sendTyping ( var , 0 , classGuid )	MessagesController . getInstance ( currentAccount ) . sendTyping ( var , 0 , classGuid )
var . setAllowNewMentions ( true )	updateMessagesVisisblePart ( true )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
showReplyPanel ( false , null , null , var , true )	showFieldPanel ( false , null , null , null , var , true )
boolean var = StickerPreviewViewer . getInstance ( var ) . onInterceptTouchEvent ( var , var , 0 , null )	boolean var = StickerPreviewViewer . getInstance ( var ) . onInterceptTouchEvent ( var , var , 0 , var )
return StickerPreviewViewer . getInstance ( var ) . onTouch ( var , var , 0 , var , null )	return StickerPreviewViewer . getInstance ( var ) . onTouch ( var , var , 0 , var , var )
MessagesSearchQuery . searchMessagesInChat ( null , var , var , classGuid , 1 , var )	DataQuery . getInstance ( currentAccount ) . searchMessagesInChat ( null , var , var , classGuid , 1 , var )
MessagesSearchQuery . searchMessagesInChat ( null , var , var , classGuid , 2 , var )	DataQuery . getInstance ( currentAccount ) . searchMessagesInChat ( null , var , var , classGuid , 2 , var )
MessagesController . getInstance ( var ) . loadMessages ( var , 30 , 0 , var , true , 0 , classGuid , 4 , 0 , ChatObject . isChannel ( var ) , var ++ )	MessagesController . getInstance ( currentAccount ) . loadMessages ( var , 30 , 0 , var , true , 0 , classGuid , 4 , 0 , ChatObject . isChannel ( var ) , var ++ )
MessagesController . getInstance ( var ) . unblockUser ( var . id )	MessagesController . getInstance ( currentAccount ) . unblockUser ( var . id )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )	MessagesController . getInstance ( currentAccount ) . sendBotStart ( var , var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( "" , var , null , null , false , null , null , null )
MessagesController . getInstance ( var ) . unblockUser ( var . id )	MessagesController . getInstance ( currentAccount ) . unblockUser ( var . id )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )	MessagesController . getInstance ( currentAccount ) . sendBotStart ( var , var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( "" , var , null , null , false , null , null , null )
MessagesController . getInstance ( var ) . addUserToChat ( var . id , UserConfig . getCurrentUser ( var ) , null , 0 , null , ChatActivity . this )	MessagesController . getInstance ( currentAccount ) . addUserToChat ( var . id , UserConfig . getInstance ( currentAccount ) . getCurrentUser var , null , 0 , null , ChatActivity . this )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
if ( var != null && Build . VERSION . SDK_INT >= 23 && ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture ) )	if ( var != null && Build . VERSION . SDK_INT >= 23 && ( SharedConfig . passcodeHash . length ( var ) == 0 || SharedConfig . allowScreenCapture ) )
getParentActivity var . getWindow var . setFlags ( WindowManager . LayoutParams . FLAG_SECURE , WindowManager . LayoutParams . FLAG_SECURE )	MediaController . getInstance ( var ) . setFlagSecure ( this , true )
if ( var . getParent ( var ) == null )	if ( var == null )
SearchQuery . increaseInlineRaiting ( var )	DataQuery . getInstance ( currentAccount ) . increaseInlineRaiting ( var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
MessagesController . getInstance ( var ) . loadMessages ( var , 30 , 0 , var , true , 0 , classGuid , 4 , 0 , ChatObject . isChannel ( var ) , var ++ )	MessagesController . getInstance ( currentAccount ) . loadMessages ( var , 30 , 0 , var , true , 0 , classGuid , 4 , 0 , ChatObject . isChannel ( var ) , var ++ )
MessagesController . getInstance ( var ) . sendBotStart ( var , var . start_param )	MessagesController . getInstance ( currentAccount ) . sendBotStart ( var , var . start_param )
if ( ! MessagesController . checkCanOpenChat ( var , ChatActivity . this ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ChatActivity . this ) )
SendMessagesHelper . prepareSendingMedia ( var , var , var , null , var == 4 , MediaController . getInstance ( var ) . isGroupPhotosEnabled var )	SendMessagesHelper . prepareSendingMedia ( var , var , var , null , var == 4 , SharedConfig . groupPhotosEnabled , var )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
MessagesController . getInstance ( var ) . sendBotStart ( var , var )	MessagesController . getInstance ( currentAccount ) . sendBotStart ( var , var )
SendMessagesHelper . getInstance ( var ) . sendSticker ( var , var , var )	SendMessagesHelper . getInstance ( currentAccount ) . sendSticker ( var , var , var )
var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) . formatString ( "" , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getCurrentUser ( var ) . phone ) + UserConfig . getCurrentUser ( var ) . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name )	var . setMessage ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone ) + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone ) + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) . formatString ( "" , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone ) + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name ) , R . string . AreYouSureShareMyContactInfoUser , PhoneFormat . getInstance ( var ) . format ( "" + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone ) + UserConfig . getInstance ( currentAccount ) . getCurrentUser var . phone , ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name )
if ( var . participants_count > MessagesController . getInstance ( var ) . groupBigSize var )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingDocuments ( var , var , null , null , var , var , null )	SendMessagesHelper . prepareSendingDocuments ( var , var , null , null , var , var , null , var )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingAudioDocuments ( var , var , var )	SendMessagesHelper . prepareSendingAudioDocuments ( var , var , var , var )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
var . setType ( ContactsContract . CommonDataKinds . Phone . CONTENT_TYPE )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var , var , null , null )
startActivityForResult ( var , 31 )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var , var , null , null )
FileLog . var ( var )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
if ( var != null && ( MessagesController . getInstance ( var ) . secretWebpagePreview == 0 || AndroidUtilities . getPeerLayerVersion ( var . layer ) < 46 ) )	if ( var != null && ( MessagesController . getInstance ( currentAccount ) . secretWebpagePreview == 0 || AndroidUtilities . getPeerLayerVersion ( var . layer ) < 46 ) )
showReplyPanel ( false , null , null , var , false )	showFieldPanelForWebPage ( false , var , false )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
if ( var != null && MessagesController . getInstance ( var ) . secretWebpagePreview == 2 )	if ( var != null && var . secretWebpagePreview == 2 )
MessagesController . getInstance ( var ) . secretWebpagePreview = 1	var . secretWebpagePreview = 1
MessagesController . getInstance ( var ) . secretWebpagePreview = 0	var . secretWebpagePreview = 0
showReplyPanel ( false , null , null , var , false )	showFieldPanelForWebPage ( false , var , false )
ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
AlertsCreator . showSendMediaAlert ( SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var ) , var , this )	AlertsCreator . showSendMediaAlert ( SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var ) , var , this )
SendMessagesHelper . getInstance ( var ) . processForwardFromMyName ( var , var )	SendMessagesHelper . getInstance ( currentAccount ) . processForwardFromMyName ( var , var )
if ( var == null && var == null && var == null )	if ( var == null && var == null && var == null && var == null )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . messageOwner . from_id )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . messageOwner . to_id . channel_id )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var . messageOwner . to_id . channel_id )
var = MessagesController . getInstance ( var ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var = MessagesController . getInstance ( var ) . getChat ( - var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs2 , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 80 )
if ( var == null )	if ( var != null )
var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs , 80 )	var = FileLoader . getClosestPhotoSizeWithSize ( var . photoThumbs2 , 80 )
if ( var . isRoundVideo ( var ) var )	if ( var != null && var . isRoundVideo ( var ) var )
if ( var == null && var == null && var == null )	if ( var == null && var == null && var == null && var == null )
if ( var != null && ( var != null || var != null ) )	if ( var != null && ( var != null || var != null || var != null ) )
showReplyPanel ( true , var , var , null , false )	showFieldPanel ( true , var , var , var , null , false )
MessagesController . getInstance ( var ) . markMessageAsRead ( var , var . messageOwner . random_id , var . messageOwner . ttl )	MessagesController . getInstance ( currentAccount ) . markMessageAsRead ( var , var . messageOwner . random_id , var . messageOwner . ttl )
var . messageOwner . destroyTime = var . messageOwner . ttl + ConnectionsManager . getInstance ( var ) . getCurrentTime var	var . messageOwner . destroyTime = var . messageOwner . ttl + ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var
MessagesController . getInstance ( var ) . loadMessages ( var , 30 , 0 , 0 , true , 0 , classGuid , 0 , 0 , ChatObject . isChannel ( var ) , var ++ )	MessagesController . getInstance ( currentAccount ) . loadMessages ( var , 30 , 0 , 0 , true , 0 , classGuid , 0 , 0 , ChatObject . isChannel ( var ) , var ++ )
if ( fragmentView == null )	if ( fragmentView == null || var )
var . setTranslationX ( var . getImageX ( var ) )	var . setTranslationX ( var . getImageX ( var ) + var . getTranslationX ( var ) )
if ( var . eventId == 0 )	if ( var != null && var . eventId == 0 )
MessageObject var = var . getMessageObject ( var )	var = var . getMessageObject ( var )
var . setTranslationX ( var . getImageX ( var ) )	var . setTranslationX ( var . getImageX ( var ) + var . getTranslationX ( var ) )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , var )	MessagesStorage . getInstance ( currentAccount ) . setDialogFlags ( var , var )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( currentAccount ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )	NotificationsController . getInstance ( currentAccount ) . updateServerNotificationsSettings ( var )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , 0 )	MessagesStorage . getInstance ( currentAccount ) . setDialogFlags ( var , 0 )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( currentAccount ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )	NotificationsController . getInstance ( currentAccount ) . updateServerNotificationsSettings ( var )
if ( var != null && ! MessagesStorage . getInstance ( var ) . checkMessageId ( var , var ) )	if ( var != null && ! MessagesStorage . getInstance ( currentAccount ) . checkMessageId ( var , var ) )
DraftQuery . cleanDraft ( var , false )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , false )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )	VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( currentAccount ) . getUserFull ( var . id ) . id )
if ( ! StickersQuery . isStickerPackInstalled ( var . id ) )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . id ) )
if ( ! StickersQuery . isStickerPackInstalled ( var . short_name ) )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . short_name ) )
if ( var . getDocumentName ( var ) . endsWith ( "" ) . endsWith ( "" ) . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )	if ( var . getDocumentName ( var ) . toLowerCase var . endsWith ( "" ) . endsWith ( "" ) . endsWith ( "" ) || var . endsWith ( "" ) || var . endsWith ( "" ) )
if ( ! StickersQuery . isStickerPackInstalled ( var . short_name ) )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . short_name ) )
if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )	if ( var [ var ] . indexOfKey ( var . getId ( var ) ) < 0 )
if ( var [ var ] . containsKey ( var . getId ( var ) ) var )	if ( var [ var ] . indexOfKey ( var . getId ( var ) ) >= 0 var )
if ( ! StickersQuery . isStickerInFavorites ( var . getDocument ( var ) ) )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerInFavorites ( var . getDocument ( var ) ) )
if ( ! var [ 0 ] . isEmpty var || ! var [ 1 ] . isEmpty var )	if ( var [ 0 ] . size var != 0 || var [ 1 ] . size var != 0 )
if ( ! MessagesController . isSupportId ( var . id ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( var ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( var ) . isLoadingContacts var ) )	if ( ! MessagesController . isSupportId ( var . id ) && ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( currentAccount ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( currentAccount ) . isLoadingContacts var ) )
if ( ! var . isEmpty ( var ) )	if ( var . size ( var ) != 0 )
TLRPC . BotInfo var = var . getValue ( var )	TLRPC . BotInfo var = var . valueAt ( var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . id )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var . var )
SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var , null , 0 )	SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var , null , null , 0 , var )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingDocument ( var , var , null , null , var , var , null )	SendMessagesHelper . prepareSendingDocument ( var , var , null , null , var , var , null , var )
final ArrayList < Object > var = new ArrayList var ( var )	ArrayList < Integer > var = new ArrayList var ( var )
var = 180	var = var
FileLog . var ( var )	var . setVisibility ( View . INVISIBLE )
sendMedia ( ( MediaController . PhotoEntry ) var . get ( 0 ) , null )	fillEditingMediaWithCaption ( var . get ( 0 ) . caption , var . get ( 0 ) . entities )
AndroidUtilities . addMediaToGallery ( var )	if ( var . editingMessage == null && ! TextUtils . isEmpty ( var . messageOwner . message ) )
var = null	var . editingMessage = ""
SendMessagesHelper . prepareSendingPhoto ( null , var , var , var , null , null , null , 0 )	SendMessagesHelper . prepareSendingPhoto ( null , var , var , var , null , null , null , null , 0 , var )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
FileLog . d ( "" + var )	var . onActivityResultFragment ( var , var , var )
Uri var = var . getData ( var )	View var = var . getChildAt ( var )
var = AndroidUtilities . getPath ( var )	var = var . getMessageObject ( var )
FileLog . d ( "" + var )	var . forceResetMessageObject ( var )
AndroidUtilities . addMediaToGallery ( var )	super . setInPreviewMode ( var )
var = null	if ( var != null )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
Uri var = var . getData ( var )	View var = var . getChildAt ( var )
Cursor var = null	MessageObject var = null
while ( var . moveToNext ( var ) )	if ( ! var . isVoice ( var ) && ! var . isRoundVideo ( var ) )
var . phone = var	var . setContentIsRead ( var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var , var , null , null )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
if ( var != null && ! var . isClosed ( var ) )	return var != null && var . getEditingMessageObject ( var ) != null
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int var )	NotificationCenter . getInstance ( currentAccount ) . setAllowedNotificationsDutingAnimation ( new int var )
int var = UserConfig . getClientUserId ( var )	int var = UserConfig . getInstance ( currentAccount ) . getClientUserId var
if ( var != 0 )	if ( var != 0 && ( var != 0 || var != 0 ) )
forwardEndReached [ var ] = var == 0 && var == 0	forwardEndReached [ var ] = false
MessagesQuery . loadReplyMessagesForMessages ( var , var )	DataQuery . getInstance ( currentAccount ) . loadReplyMessagesForMessages ( var , var )
HashMap < Long , MessageObject . GroupedMessages > var = null	LongSparseArray < MessageObject . GroupedMessages > var = null
HashMap < Long , MessageObject . GroupedMessages > var = null	LongSparseArray < MessageObject . GroupedMessages > var = null
if ( var [ var ] . containsKey ( var . getId ( var ) ) )	if ( var . type < 0 || var [ 0 ] . indexOfKey ( var . getId ( var ) ) >= 0 )
var . setIsRead ( var )	var . add ( var )
MessageObject . GroupedMessages var = var . get ( var . messageOwner . grouped_id )	MessageObject . GroupedMessages var = var . get ( var . getGroupIdForUse ( var ) )
if ( var . messageOwner . grouped_id != var . messageOwner . grouped_id )	if ( var . getGroupIdForUse ( var ) != var . getGroupIdForUse ( var ) )
if ( var == null || ! var . containsKey ( var . getGroupId ( var ) ) )	if ( var == null || var . indexOfKey ( var . getGroupId ( var ) ) < 0 )
var = new HashMap var ( var )	var = new LongSparseArray var ( var )
var = new HashMap var ( var )	var = new LongSparseArray var ( var )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( currentAccount , var , false )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( currentAccount , var , false )
MessageObject . GroupedMessages var = var . getValue ( var )	MessageObject . GroupedMessages var = var . valueAt ( var )
if ( var != null && var != null && var . containsKey ( var . getKey ( var ) ) )	if ( var != null && var != null && var . indexOfKey ( var . keyAt ( var ) ) >= 0 )
if ( var == 3 && var != 0 && var )	if ( var != 0 )
if ( var && var . size ( var ) > 0 )	if ( var && var . size ( var ) > 0 = false )
final int var = var . get ( 0 ) . getId var	fillEditingMediaWithCaption ( var . get ( 0 ) . caption , var . get ( 0 ) . entities )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var . id )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . id )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var . var )
int var = UserConfig . getClientUserId ( var )	int var = UserConfig . getInstance ( currentAccount ) . getClientUserId var
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var . var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var . var )
NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( var , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . loadFullChat ( var , 0 , true )	MessagesController . getInstance ( currentAccount ) . loadFullChat ( var , 0 , true )
if ( var . size ( var ) > 0 )	for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )
HashMap < Long , MessageObject . GroupedMessages > var = null	LongSparseArray < MessageObject . GroupedMessages > var = null
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
if ( var . type < 0 || var [ 0 ] . containsKey ( var . getId ( var ) ) )	if ( var [ var ] . indexOfKey ( var . getId ( var ) ) >= 0 )
var = new HashMap var ( var )	var = new LongSparseArray var ( var )
NotificationCenter . getInstance ( var ) . removeObserver ( var , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( var , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . loadFullChat ( var , 0 , true )	MessagesController . getInstance ( currentAccount ) . loadFullChat ( var , 0 , true )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( currentAccount , var , false )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( currentAccount , var , false )
MessagesController . getInstance ( var ) . reloadWebPages ( var , var )	MessagesController . getInstance ( currentAccount ) . reloadWebPages ( var , var )
MessageObject . GroupedMessages var = var . getValue ( var )	MessageObject . GroupedMessages var = var . valueAt ( var )
var . getValue ( var ) . calculate var	var . calculate ( var )
if ( var - var > 0 )	if ( var - var > 0 && var != null )
var . updateRowWithMessageObject ( var )	int var = var . indexOf ( var )
MessagesController . getInstance ( var ) . loadFullChat ( var . var , 0 , true )	MessagesController . getInstance ( currentAccount ) . loadFullChat ( var . var , 0 , true )
SparseArray < Long > var = ( SparseArray < Long > ) var [ 1 ]	SparseLongArray var = ( SparseLongArray ) var [ 1 ]
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 , var var = var . var ( var ) ; var < var ; var ++ )
MessagesStorage . getInstance ( var ) . updateChannelPinnedMessage ( var . var , 0 )	MessagesStorage . getInstance ( currentAccount ) . updateChannelPinnedMessage ( var . var , 0 )
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < var ; var ++ )
MessagesStorage . getInstance ( var ) . updateChannelPinnedMessage ( var , 0 )	MessagesStorage . getInstance ( currentAccount ) . updateChannelPinnedMessage ( var , 0 )
var = new HashMap var ( var )	var = new LongSparseArray var ( var )
MessageObject . GroupedMessages var = var . getValue ( var )	MessageObject . GroupedMessages var = var . valueAt ( var )
if ( ! var . equals ( var ) && var [ 0 ] . containsKey ( var ) )	if ( ! var . equals ( var ) && var [ 0 ] . indexOfKey ( var ) >= 0 )
MessageObject var = var [ 0 ] . remove ( var )	MessageObject var = var [ 0 ] . get ( var )
if ( var . getGroupId ( var ) != 0 && var . grouped_id != 0 )	if ( var . getGroupId ( var ) != 0 && var . var != 0 )
var . put ( var . grouped_id , var )	var . put ( var . var , var )
MessagesQuery . loadReplyMessagesForMessages ( var , var )	DataQuery . getInstance ( currentAccount ) . loadReplyMessagesForMessages ( var , var )
NotificationsController . getInstance ( var ) . playOutChatSound var	NotificationsController . getInstance ( currentAccount ) . playOutChatSound var
MessagesController . getInstance ( var ) . loadChannelParticipants ( var . var )	MessagesController . getInstance ( currentAccount ) . loadChannelParticipants ( var . var )
SendMessagesHelper . getInstance ( var ) . setCurrentChatInfo ( var )	SendMessagesHelper . getInstance ( currentAccount ) . setCurrentChatInfo ( var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
BotQuery . loadBotInfo ( var . var , true , classGuid )	DataQuery . getInstance ( currentAccount ) . loadBotInfo ( var . var , true , classGuid )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var . var )	var = MessagesController . getInstance ( currentAccount ) . blockedUsers . contains ( var . var )
if ( var != null )	if ( var != null && var . messageOwner . media . document != null )
if ( var . isRoundVideo ( var ) )	if ( var . isRoundVideo ( var ) && fragmentView != null && fragmentView . getParent ( var ) != null )
var . updateButtonState ( false )	removeUnreadPlane ( false )
var . updateButtonState ( false )	removeUnreadPlane ( false )
HashMap < Long , MessageObject . GroupedMessages > var = null	LongSparseArray < MessageObject . GroupedMessages > var = null
if ( ! var && var . messageOwner . media instanceof TLRPC . TL_messageMediaWebPage = true )	if ( ! var . isEditing ( var ) )
var = new HashMap var ( var )	var = new LongSparseArray var ( var )
var . notifyItemChanged ( var . messagesStartRow + var )	var . updateRowAtPosition ( var . messagesStartRow + var )
MessageObject . GroupedMessages var = var . getValue ( var )	MessageObject . GroupedMessages var = var . valueAt ( var )
HashMap < Long , TLRPC . WebPage > var = ( HashMap < Long , TLRPC . WebPage > ) var [ 0 ]	LongSparseArray < TLRPC . WebPage > var = ( LongSparseArray < TLRPC . WebPage > ) var [ 0 ]
showReplyPanel ( ! ( var instanceof TLRPC . TL_webPageEmpty ) , null , null , var , false )	showFieldPanelForWebPage ( ! ( var instanceof TLRPC . TL_webPageEmpty ) , var , false )
var = new MessageObject ( var , null , false )	var = new MessageObject ( currentAccount , var , false )
showReplyPanel ( true , var , null , null , false )	showFieldPanelForReply ( true , var )
DraftQuery . saveDraft ( var , var , null , null , false )	DataQuery . getInstance ( currentAccount ) . saveDraft ( var , var , null , null , false )
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int var )	NotificationCenter . getInstance ( currentAccount ) . setAllowedNotificationsDutingAnimation ( new int var )
NotificationCenter . getInstance ( var ) . setAnimationInProgress ( true )	NotificationCenter . getInstance ( currentAccount ) . setAnimationInProgress ( true )
MessagesController . getInstance ( var ) . loadFullUser ( var , classGuid , false )	MessagesController . getInstance ( currentAccount ) . loadFullUser ( var , classGuid , false )
MessagesController . getInstance ( var ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
var . add ( R . id . menu_groupbolditalic , R . id . menu_regular , 8 , LocaleController . getString ( "" , R . string . Regular ) , R . string . Regular )	var . add ( R . id . menu_groupbolditalic , R . id . menu_regular , 10 , LocaleController . getString ( "" , R . string . Regular ) , R . string . Regular )
if ( ! MessagesController . getInstance ( var ) . isDialogMuted ( var ) var )	if ( ! MessagesController . getInstance ( currentAccount ) . isDialogMuted ( var ) var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
MessagesQuery . loadPinnedMessage ( var . id , var . pinned_msg_id , true )	DataQuery . getInstance ( currentAccount ) . loadPinnedMessage ( var . id , var . pinned_msg_id , true )
var = ! ( var . admin_id == UserConfig . getClientUserId ( var ) || ContactsController . getInstance ( var ) . isLoadingContacts var ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null	var = ! ( var . admin_id == UserConfig . getInstance ( currentAccount ) . getClientUserId var || ContactsController . getInstance ( currentAccount ) . isLoadingContacts var ) && ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) == null
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . id )
if ( var != null && ! ( var instanceof TLRPC . TL_encryptedChat ) || MessagesController . isSupportId ( var . id ) || UserObject . isDeleted ( var ) || ContactsController . getInstance ( var ) . isLoadingContacts var || ( ! TextUtils . isEmpty ( var . phone ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) != null && ( ContactsController . getInstance ( var ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( var ) . isLoadingContacts var ) ) var )	if ( var != null && ! ( var instanceof TLRPC . TL_encryptedChat ) || MessagesController . isSupportId ( var . id ) || UserObject . isDeleted ( var ) || ContactsController . getInstance ( currentAccount ) . isLoadingContacts var || ( ! TextUtils . isEmpty ( var . phone ) && ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) != null && ( ContactsController . getInstance ( currentAccount ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( currentAccount ) . isLoadingContacts var ) ) var )
AndroidUtilities . cancelRunOnUIThread ( var )	MessagesController . getInstance ( currentAccount ) . markDialogAsReadNow ( var )
ArrayList < TLRPC . MessageEntity > var = MessagesQuery . getEntities ( var )	ArrayList < TLRPC . MessageEntity > var = DataQuery . getInstance ( currentAccount ) . getEntities ( var )
MessagesController . getInstance ( var ) . cancelTyping ( 0 , var )	MessagesController . getInstance ( currentAccount ) . cancelTyping ( 0 , var )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . var var	SharedPreferences . Editor var = MessagesController . getNotificationsSettings ( currentAccount ) . var var
if ( var != null )	if ( var != null && ! var )
MessagesQuery . sortEntities ( var . entities )	DataQuery . getInstance ( currentAccount ) . sortEntities ( var . entities )
var . setSpan ( new URLSpanUserMention ( "" + var , true ) + var , true , var . offset + var , var . offset + var + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanUserMention ( "" + var , 1 ) + var , 1 , var . offset + var , var . offset + var + var . length , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var = new MessageObject ( var , MessagesController . getInstance ( var ) . getUsers var , false )	var = new MessageObject ( currentAccount , var , MessagesController . getInstance ( currentAccount ) . getUsers var , false )
showReplyPanel ( true , var , null , null , false )	showFieldPanelForReply ( true , var )
MediaController . getInstance ( var ) . setLastVisibleMessageIds ( var , var , var , var , var , var )	MediaController . getInstance ( var ) . setLastVisibleMessageIds ( currentAccount , var , var , var , var , var , var )
MediaController . getInstance ( var ) . setLastVisibleMessageIds ( var . getOpenTime ( var ) , var . getCloseTime ( var ) , var , null , null , var . getId ( var ) )	MediaController . getInstance ( var ) . setLastVisibleMessageIds ( currentAccount , var . getOpenTime ( var ) , var . getCloseTime ( var ) , var , null , null , var . getId ( var ) )
var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var . messageOwner . from_id )
var = ! var . isSendError ( var ) && var . getDialogId ( var ) == var && ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && var . isOut ( var ) && ( var - var . messageOwner . date ) <= 2 * 24 * 60 * 60	var = ! var . isSendError ( var ) && var . getDialogId ( var ) == var && ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && var . isOut ( var ) && ( var - var . messageOwner . date ) <= var
MessageObject var = var . getValue ( var )	MessageObject var = var [ var ] . valueAt ( var )
var = MessagesController . getInstance ( var ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var . user_id = MessagesController . getInputUser ( var )	var . user_id = MessagesController . getInstance ( currentAccount ) . getInputUser ( var )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )	CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 )
if ( var != null && var . id != UserConfig . getClientUserId ( var ) && ! var . bot || var != null )	if ( var != null && var . id != UserConfig . getInstance ( currentAccount ) . getClientUserId var && ! var . bot || var != null )
var = ! var . isSendError ( var ) && ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && ( var . isOut ( var ) || var != null && ( var . creator || var . admin && var . admins_enabled ) ) && ( var - var . messageOwner . date ) <= 2 * 24 * 60 * 60	var = ! var . isSendError ( var ) && ( var . messageOwner . action == null || var . messageOwner . action instanceof TLRPC . TL_messageActionEmpty ) && ( var . isOut ( var ) || var || var != null && ( var . creator || var . admin && var . admins_enabled ) ) && ( var - var . messageOwner . date ) <= var
if ( var . isOut ( var ) || var != null && ( var . creator || var . admin && var . admins_enabled ) var )	if ( ( var . isOut ( var ) || var ) || var != null && ( var . creator || var . admin && var . admins_enabled ) var )
if ( ! var && ( var - var . messageOwner . date ) <= 2 * 24 * 60 * 60 = true )	if ( ! var && ( var - var . messageOwner . date ) <= var = true )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )	CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 )
MessagesController . getInstance ( var ) . deleteUserFromChat ( var . id , var , var )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var . id , var , var )
var . user_id = MessagesController . getInputUser ( var )	var . user_id = MessagesController . getInstance ( currentAccount ) . getInputUser ( var )
MessagesController . getInstance ( var ) . deleteUserChannelHistory ( var , var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteUserChannelHistory ( var , var , 0 )
if ( var || var < 2 || var == 20 || var . isSecretPhoto ( var ) || var . isLiveLocation ( var ) )	if ( var >= 0 || var == - 1 && var && ( var . isSending ( var ) || var . isEditing ( var ) ) && var == null )
if ( ! var . isSecretPhoto ( var ) )	if ( ! var . needDrawBluredPreview ( var ) )
if ( ! var . isSecretPhoto ( var ) )	if ( ! var . needDrawBluredPreview ( var ) )
if ( StickersQuery . canAddStickerToFavorites ( var ) )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerInFavorites ( var . getDocument ( var ) ) var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . media . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . messageOwner . media . user_id )
if ( var != null && var . id != UserConfig . getClientUserId ( var ) && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null )	if ( var != null && var . id != UserConfig . getInstance ( currentAccount ) . getClientUserId var && ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) == null )
if ( var == 9 )	if ( var . isMask ( var ) var )
if ( ! StickersQuery . isStickerInFavorites ( var . getDocument ( var ) ) var )	if ( ! DataQuery . getInstance ( currentAccount ) . isStickerInFavorites ( var . getDocument ( var ) ) var )
if ( ! var . isSecretPhoto ( var ) && ! var . isLiveLocation ( var ) )	if ( ! var . needDrawBluredPreview ( var ) && ! var . isLiveLocation ( var ) )
var . setOnItemLongClickListener ( null )	var . setEditingMessageObject ( null )
var . setEditingMessageObject ( var , ! var . isMediaEmpty ( var ) )	var . setOnItemLongClickListener ( ( RecyclerListView . OnItemLongClickListenerExtended ) null )
var . setAllowNewMentions ( false )	( ( ChatMessageCell ) var ) . setHighlighted ( false )
var . getItem ( var ) . setVisibility ( View . GONE )	var . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )	var . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )	var . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )	var . setVisibility ( View . GONE )
var . getItem ( var ) . setVisibility ( View . GONE )	var . setVisibility ( View . VISIBLE )
var . peer = MessagesController . getInputPeer ( ( int ) var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( ( int ) var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . messageOwner . from_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . messageOwner . from_id )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var . messageOwner . from_id )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var . messageOwner . from_id )
if ( var . messageOwner . media != null && var . messageOwner . media . caption != null )	if ( var . messageOwner . media != null && var . messageOwner . message != null )
var += var . messageOwner . media . caption	var += var . messageOwner . message
if ( ! SendMessagesHelper . getInstance ( var ) . retrySendMessage ( var . var . get ( var ) , false ) = false )	if ( ! SendMessagesHelper . getInstance ( currentAccount ) . retrySendMessage ( var . var . get ( var ) , false ) = false )
if ( SendMessagesHelper . getInstance ( var ) . retrySendMessage ( var , false ) var )	if ( SendMessagesHelper . getInstance ( currentAccount ) . retrySendMessage ( var , false ) )
if ( var . getName ( var ) . endsWith ( "" ) var )	if ( var . getName ( var ) . toLowerCase var . endsWith ( "" ) var )
if ( LocaleController . getInstance ( var ) . applyLanguageFile ( var ) var )	if ( LocaleController . getInstance ( var ) . applyLanguageFile ( var , currentAccount ) var )
showReplyPanel ( true , var , null , null , false )	showFieldPanelForReply ( true , var )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )	CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 )
MessagesController . getInstance ( var ) . pinChannelMessage ( var , 0 , false )	MessagesController . getInstance ( currentAccount ) . pinChannelMessage ( var , 0 , false )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )	VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( currentAccount ) . getUserFull ( var . id ) . id )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , true )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , true )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , var . getDocument ( var ) , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
if ( var == null && var [ 0 ] . isEmpty var && var [ 1 ] . isEmpty var )	if ( var == null && var [ 0 ] . size var == 0 && var [ 1 ] . size var == 0 )
if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( var ) || var != null var )	if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getInstance ( currentAccount ) . getClientUserId var || var != null var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var . toString ( var ) , var , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var . toString ( var ) , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , var ) )
if ( var == var || var [ var ] . containsKey ( var . getId ( var ) ) var )	if ( var == var || var [ var ] . indexOfKey ( var . getId ( var ) ) >= 0 var )
if ( var != null && var . getVisibility ( var ) == View . VISIBLE && MessagesSearchQuery . isMessageFound ( var . getId ( var ) , var . getDialogId ( var ) == var ) && MessagesSearchQuery . getLastSearchQuery ( var ) != null var )	if ( var != null && var . getVisibility ( var ) == View . VISIBLE && DataQuery . getInstance ( currentAccount ) . isMessageFound ( var . getId ( var ) , var . getDialogId ( var ) == var ) && DataQuery . getInstance ( currentAccount ) . getLastSearchQuery var != null var )
var . setHighlightedText ( MessagesSearchQuery . getLastSearchQuery ( var ) )	var . setHighlightedText ( DataQuery . getInstance ( currentAccount ) . getLastSearchQuery var )
if ( var > 5 * 60 var )	if ( var <= 5 * 60 )
MessagesSearchQuery . searchMessagesInChat ( var , var , var , classGuid , 0 , var )	DataQuery . getInstance ( currentAccount ) . searchMessagesInChat ( var , var , var , classGuid , 0 , var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var , var , null , null )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingPhoto ( var . imagePath , null , var , var , var . caption , var . stickers , null , var . ttl )	SendMessagesHelper . prepareSendingPhoto ( var . imagePath , null , var , var , var . caption , var . entities , var . stickers , null , var . ttl , var )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
SendMessagesHelper . prepareSendingPhoto ( var . path , null , var , var , var . caption , var . stickers , null , var . ttl )	SendMessagesHelper . prepareSendingPhoto ( var . path , null , var , var , var . caption , var . entities , var . stickers , null , var . ttl , var )
DraftQuery . cleanDraft ( var , true )	DataQuery . getInstance ( currentAccount ) . cleanDraft ( var , true )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . var var . putBoolean ( "" + var , false ) . commit var	MessagesController . getNotificationsSettings ( currentAccount ) . var var . putBoolean ( "" + var , false ) . commit var
if ( ! var [ var ] . containsKey ( var . var . get ( var ) . getId var ) )	if ( var [ var ] . indexOfKey ( var . var . get ( var ) . getId var ) < 0 )
if ( MessagesController . checkCanOpenChat ( var , ChatActivity . this , var . getMessageObject ( var ) ) )	if ( MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ChatActivity . this , var . getMessageObject ( var ) ) )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )	VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( currentAccount ) . getUserFull ( var . id ) . id )
if ( var != null && var . id != UserConfig . getClientUserId ( var ) )	if ( var != null && var . id != UserConfig . getInstance ( currentAccount ) . getClientUserId var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( Utilities . parseInt ( ( ( URLSpanUserMention ) var ) . getURL var ) ( URLSpanUserMention ) var ) . getURL var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( Utilities . parseInt ( ( ( URLSpanUserMention ) var ) . getURL var ) ( URLSpanUserMention ) var ) . getURL var )
MessagesController . openByUserName ( var . substring ( 1 ) , ChatActivity . this , 0 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( var . substring ( 1 ) , ChatActivity . this , 0 )
if ( var . startsWith ( "" ) )	if ( var . startsWith ( "" ) || var . startsWith ( "" ) )
if ( ! var && var . getFieldText ( var ) == null )	if ( ! var && var . getFieldText ( var ) == null var )
if ( var . getDocumentName ( var ) . endsWith ( "" ) )	if ( var . getDocumentName ( var ) . toLowerCase var . endsWith ( "" ) )
return MessagesController . getInstance ( var ) . isChannelAdmin ( var . id , var )	return MessagesController . getInstance ( currentAccount ) . isChannelAdmin ( var . id , var )
if ( var != UserConfig . getClientUserId ( var ) )	if ( var != UserConfig . getInstance ( currentAccount ) . getClientUserId var )
MessagesController . openByUserName ( var . substring ( 1 ) , ChatActivity . this , 0 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( var . substring ( 1 ) , ChatActivity . this , 0 )
if ( var . startsWith ( "" ) )	if ( var . startsWith ( "" ) || var . startsWith ( "" ) )
if ( var . getFieldText ( var ) == null )	if ( var . getFieldText ( var ) == null var )
if ( var instanceof ChatMessageCell && MediaController . getInstance ( var ) . canDownloadMedia ( var ) )	if ( var instanceof ChatMessageCell && DownloadController . getInstance ( currentAccount ) . canDownloadMedia ( var ) )
if ( var != null && var . getVisibility ( var ) == View . VISIBLE && MessagesSearchQuery . isMessageFound ( var . getId ( var ) , var . getDialogId ( var ) == var ) && MessagesSearchQuery . getLastSearchQuery ( var ) != null var )	if ( var != null && var . getVisibility ( var ) == View . VISIBLE && DataQuery . getInstance ( currentAccount ) . isMessageFound ( var . getId ( var ) , var . getDialogId ( var ) == var ) && DataQuery . getInstance ( currentAccount ) . getLastSearchQuery var != null var )
var . setHighlightedText ( MessagesSearchQuery . getLastSearchQuery ( var ) )	var . setHighlightedText ( DataQuery . getInstance ( currentAccount ) . getLastSearchQuery var )
var . setText ( LocaleController . formatPluralString ( "" , var ) , var )	var . setText ( LocaleController . getString ( "" , R . string . UnreadMessages ) , R . string . UnreadMessages )
if ( var == var || var [ var ] . containsKey ( var . getId ( var ) ) var )	if ( var == var || var [ var ] . indexOfKey ( var . getId ( var ) ) >= 0 var )
notifyItemChanged ( var + var )	updateRowAtPosition ( var + var )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( currentAccount ) . getClientUserId
MessagesController . getInstance ( ) . deleteUserFromChat ( var , MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id , var )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id ) . user_id , var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getUser ( ( ( TLRPC . ChatParticipant ) var ) . user_id )	var = MessagesController . getInstance ( currentAccount ) . getUser ( ( ( TLRPC . ChatParticipant ) var ) . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
if ( ! MessagesController . checkCanOpenChat ( var , CommonGroupsActivity . this ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , CommonGroupsActivity . this ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
var . user_id = MessagesController . getInputUser ( var )	var . user_id = MessagesController . getInstance ( currentAccount ) . getInputUser ( var )
MessagesController . getInstance ( ) . putChats ( var . var , false )	MessagesController . getInstance ( currentAccount ) . putChats ( var . var , false )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
public AdminLogFilterAlert ( Context var , TLRPC . TL_channelAdminLogEventsFilter var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )	public AdminLogFilterAlert ( Context var , TLRPC . TL_channelAdminLogEventsFilter var , SparseArray < TLRPC . User > . User var , boolean var )
var = new HashMap ( var )	var = var . clone ( )
var = new HashMap	var = new SparseArray
var = new HashMap	var = new SparseArray
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . get ( var ) . user_id )
var = new CheckBoxCell ( var , true )	var = new CheckBoxCell ( var , 1 )
var . setChecked ( var == null || var . containsKey ( var ) , false )	var . setChecked ( var == null || var . indexOfKey ( var ) >= 0 , false )
var . setUser ( MessagesController . getInstance ( ) . getUser ( var ) , var == null || var . containsKey ( var ) , var != getItemCount - 1 )	var . setUser ( MessagesController . getInstance ( currentAccount ) . getUser ( var ) , var == null || var . indexOfKey ( var ) >= 0 , var != getItemCount - 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needShowAlert , 1 )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needShowAlert , 1 )
if ( var instanceof TLRPC . TL_messages_sendMessage || var instanceof TLRPC . TL_messages_sendMedia || var instanceof TLRPC . TL_geochats_sendMessage || var instanceof TLRPC . TL_messages_sendBroadcast || var instanceof TLRPC . TL_messages_sendInlineBotResult || var instanceof TLRPC . TL_geochats_sendMedia || var instanceof TLRPC . TL_messages_forwardMessages )	if ( var instanceof TLRPC . TL_messages_sendMessage || var instanceof TLRPC . TL_messages_sendMedia || var instanceof TLRPC . TL_messages_sendBroadcast || var instanceof TLRPC . TL_messages_sendInlineBotResult || var instanceof TLRPC . TL_messages_forwardMessages )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . needShowAlert , 0 )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needShowAlert , 0 )
if ( var instanceof TLRPC . TL_account_confirmPhone )	if ( var instanceof TLRPC . TL_account_confirmPhone || var instanceof TLRPC . TL_account_verifyPhone || var instanceof TLRPC . TL_account_verifyEmail )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )	return showSimpleAlert ( var , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )	return showSimpleAlert ( var , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . FloodWait ) , R . string . FloodWait )	return showSimpleAlert ( var , LocaleController . getString ( "" , R . string . FloodWait ) , R . string . FloodWait )
showSimpleAlert ( var , var . text )	return showSimpleAlert ( var , var . text )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )	return showSimpleAlert ( var , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )
if ( var . text . contains ( "" ) )	if ( var . text . contains ( "" ) || var . text . contains ( "" ) )
showSimpleAlert ( var , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )	return showSimpleAlert ( var , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )
Toast var = Toast . makeText ( var . getParentActivity ( ) , var , Toast . LENGTH_LONG )	Toast var = Toast . makeText ( var , var , Toast . LENGTH_LONG )
AlertDialog . Builder var = new AlertDialog . Builder ( var . getParentActivity ( ) )	AlertDialog . Builder var = createSimpleAlert ( var . getParentActivity ( ) , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
NotificationsController . getInstance ( ) . removeNotificationsForDialog ( var )	NotificationsController . getInstance ( UserConfig . selectedAccount ) . removeNotificationsForDialog ( var )
MessagesStorage . getInstance ( ) . setDialogFlags ( var , var )	MessagesStorage . getInstance ( UserConfig . selectedAccount ) . setDialogFlags ( var , var )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( UserConfig . selectedAccount ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )	NotificationsController . getInstance ( UserConfig . selectedAccount ) . updateServerNotificationsSettings ( var )
MessagesController . openByUserName ( "" , var , 1 )	MessagesController . getInstance ( var . getCurrentAccount ( ) ) . openByUserName ( "" , var , 1 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
selected [ 0 ] ++	selected [ 0 ] = 2
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
if ( selected [ 0 ] == 0 var )	if ( selected [ 0 ] == 0 )
selected [ 0 ] --	if ( selected [ 0 ] == 5 )
var . setTitle ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority )	var . setTitle ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
SecretChatHelper . getInstance ( ) . sendTTLMessage ( var , null )	SecretChatHelper . getInstance ( UserConfig . selectedAccount ) . sendTTLMessage ( var , null )
MessagesStorage . getInstance ( ) . updateEncryptedChatTTL ( var )	MessagesStorage . getInstance ( UserConfig . selectedAccount ) . updateEncryptedChatTTL ( var )
var = MediaController . getInstance ( ) . generateObserverTag	var = DownloadController . getInstance ( currentAccount ) . generateObserverTag
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . musicDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . musicDidLoaded )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	TLRPC . EncryptedChat var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
MediaController . getInstance ( ) . toggleRepeatMode	SharedConfig . toggleRepeatMode ( )
if ( var == null )	if ( var == null || var == null )
if ( var . size ( ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( ) || var != null )	if ( var . size ( ) > 1 || var . get ( 0 ) == UserConfig . getInstance ( currentAccount ) . getClientUserId || var != null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
var . showReplyPanel ( true , null , var , null , false )	var . showFieldPanelForForward ( true , var )
var = MessagesController . getInstance ( var ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var = MessagesController . getInstance ( var ) . getChat ( - var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var	int var = ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var
if ( var != null && var . var != UserConfig . getClientUserId ( var ) || var != null )	if ( var != null && var . var != UserConfig . getInstance ( currentAccount ) . getClientUserId var || var != null )
CheckBoxCell var = new CheckBoxCell ( var , true )	CheckBoxCell var = new CheckBoxCell ( var , 1 )
var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var . getDialogId ( var ) >> 32 ) . getDialogId ( var ) >> 32 )	var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( int ( var . getDialogId ( var ) >> 32 ) . getDialogId ( var ) >> 32 )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . musicDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . musicDidLoaded )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( currentAccount ) . removeLoadingFileObserver ( this )
if ( MediaController . getInstance ( ) . isShuffleMusic )	if ( SharedConfig . shuffleMusic )
if ( MediaController . getInstance ( ) . isPlayOrderReversed )	if ( SharedConfig . playOrderReversed )
int var = MediaController . getInstance ( ) . getRepeatMode	int var = SharedConfig . repeatMode
if ( ! var . exists ( ) )	if ( ! var . exists ( ) && ! var )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )	DownloadController . getInstance ( currentAccount ) . addLoadingFileObserver ( var , this )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( currentAccount ) . removeLoadingFileObserver ( this )
if ( var . eventId != 0 )	if ( var . eventId != 0 || var . getId ( ) <= - 2000000000 )
TLRPC . Document var = var . getDocument ( )	int var = var . getDuration ( )
for ( int var = 0 ; var < var . attributes . size ( ) ; var ++ )	int var = var . getDuration ( )
if ( Build . VERSION . SDK_INT >= 17 )	if ( Build . VERSION . SDK_INT > 17 )
if ( Build . VERSION . SDK_INT >= 17 )	if ( Build . VERSION . SDK_INT > 17 )
if ( var != null && var && ! var && ! AndroidUtilities . usingHardwareInput && ! AndroidUtilities . isInMultiwindow )	if ( ! var && var != null && var && ! var && ! AndroidUtilities . usingHardwareInput && ! AndroidUtilities . isInMultiwindow )
var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )	MessagesController . getInstance ( var ) . saveGif ( var )
if ( var != null && var . participants_count > MessagesController . getInstance ( ) . groupBigSize = "" = "" )	MessagesController . getInstance ( var ) . saveGif ( var )
MediaController . getInstance ( ) . startRecording ( var , var )	MediaController . getInstance ( ) . startRecording ( var , var , var )
if ( var = var . getBounds ( ) . contains ( var , var ) )	return var = var . getBounds ( ) . contains ( var , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordStarted )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recordStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordStartError )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recordStartError )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordStopped )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recordStopped )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recordProgressChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . recordProgressChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . audioDidSent )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . audioDidSent )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . audioRouteChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . audioRouteChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
if ( var != null && ( var == null || var . getVisibility ( ) != VISIBLE ) && ! StickersQuery . getUnreadStickerSets ( ) . isEmpty && var != null )	if ( var != null && ( var == null || var . getVisibility ( ) != VISIBLE ) && ! DataQuery . getInstance ( var ) . getUnreadStickerSets . isEmpty && var != null )
SendMessagesHelper . prepareSendingDocument ( null , null , var . getContentUri ( ) , "" , var , var , var )	SendMessagesHelper . prepareSendingDocument ( null , null , var . getContentUri ( ) , "" , var , var , var , null )
SendMessagesHelper . prepareSendingPhoto ( null , var . getContentUri ( ) , var , var , null , null , var , 0 )	SendMessagesHelper . prepareSendingPhoto ( null , var . getContentUri ( ) , var , var , null , null , null , var , 0 , null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getMainSettings ( var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime
var = MessagesController . getInstance ( ) . getUser ( ( int ) var )	var = MessagesController . getInstance ( var ) . getUser ( ( int ) var )
if ( var != null && ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires < var && ! MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) ) )	if ( var != null && ( var . id == UserConfig . getInstance ( var ) . getClientUserId || var . status != null && var . status . expires < var && ! MessagesController . getInstance ( var ) . onlinePrivacy . containsKey ( var . id ) ) )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit . putBoolean ( "" + var , var ) . commit	MessagesController . getNotificationsSettings ( var ) . edit . putBoolean ( "" + var , var ) . commit
NotificationsController . updateServerNotificationsSettings ( var )	NotificationsController . getInstance ( var ) . updateServerNotificationsSettings ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - ( int ) var )
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , true , true , false )	DataQuery . getInstance ( var ) . loadRecents ( DataQuery . TYPE_IMAGE , true , true , false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordStarted )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recordStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordStartError )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recordStartError )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordStopped )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recordStopped )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recordProgressChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recordProgressChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . audioDidSent )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . audioDidSent )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . audioRouteChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . audioRouteChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getBoolean ( "" + var , false )	var = MessagesController . getNotificationsSettings ( var ) . getBoolean ( "" + var , false )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - ( int ) var )
CameraController . getInstance ( ) . initCamera	CameraController . getInstance ( ) . initCamera ( null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
if ( ( int ) var < 0 = "" )	if ( ( int ) var < 0 )
var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - ( int ) var )
if ( var != null && var . participants_count > MessagesController . getInstance ( ) . groupBigSize = "" = "" )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , null , null , 0 )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , null , var , var , var , null , null , null , null , 0 )
ArrayList < TLRPC . MessageEntity > var = MessagesQuery . getEntities ( var )	ArrayList < TLRPC . MessageEntity > var = DataQuery . getInstance ( var ) . getEntities ( var )
int var = ( int ) Math . ceil ( var . length ( ) / 4096.0f )	int var = ( int ) Math . ceil ( var . length ( ) / ( float ) var )
ArrayList < TLRPC . MessageEntity > var = MessagesQuery . getEntities ( var )	ArrayList < TLRPC . MessageEntity > var = DataQuery . getInstance ( var ) . getEntities ( var )
SendMessagesHelper . getInstance ( ) . sendMessage ( String . format ( Locale . US , "" , var , var . var ) . US , "" , var , var . var , var , var , null , false , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( String . format ( Locale . US , "" , var , var . var ) . US , "" , var , var . var , var , var , null , false , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , null , false , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , var , null , false , null , null , null )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( var . var != null )	var = var . var
var [ 0 ] = new InputFilter . LengthFilter ( 4096 )	var [ 0 ] = new InputFilter . LengthFilter ( MessagesController . getInstance ( var ) . maxCaptionLength )
if ( var . messageText != null )	if ( var != null )
MessagesQuery . sortEntities ( var )	DataQuery . sortEntities ( var )
var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , true ) + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , true , var . offset + var , var . offset + var . length + var , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanUserMention ( "" + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , 1 ) + ( ( TLRPC . TL_inputMessageEntityMentionName ) var ) . user_id . user_id , 1 , var . offset + var , var . offset + var . length + var , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
setFieldText ( Emoji . replaceEmoji ( var , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false ) , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false )	setFieldText ( Emoji . replaceEmoji ( new SpannableStringBuilder ( var ) , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false ) SpannableStringBuilder ( var ) , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 20 ) , false )
if ( ! var . isFocused ( ) )	if ( ! var && ! var . isFocused ( ) )
if ( var != null )	if ( var && var != null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . var , var , var , null , false , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var . var , var , var , null , false , null , null , null )
SendMessagesHelper . getInstance ( ) . sendCurrentLocation ( var , var )	SendMessagesHelper . getInstance ( var ) . sendCurrentLocation ( var , var )
SendMessagesHelper . getInstance ( ) . sendCallback ( true , var , var , var )	SendMessagesHelper . getInstance ( var ) . sendCallback ( true , var , var , var )
DraftQuery . saveDraft ( var , "" + var . username + "" + var . query , null , null , true )	DataQuery . getInstance ( var ) . saveDraft ( var , "" + var . username + "" + var . query , null , null , true )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )	if ( ! MessagesController . getInstance ( var ) . checkCanOpenChat ( var , var ) )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , false )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , false )
var . presentFragment ( new StickersActivity ( StickersQuery . TYPE_IMAGE ) . TYPE_IMAGE )	var . presentFragment ( new StickersActivity ( DataQuery . TYPE_IMAGE ) . TYPE_IMAGE )
SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var )	SendMessagesHelper . getInstance ( var ) . sendSticker ( var , var , var )
StickersQuery . addRecentGif ( var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 )	DataQuery . getInstance ( var ) . addRecentGif ( var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 )
StickersQuery . removeStickersSet ( var , var . set , 2 , var , false )	DataQuery . getInstance ( var ) . removeStickersSet ( var , var . set , 2 , var , false )
StickersQuery . removeStickersSet ( var , var . set , 0 , var , false )	DataQuery . getInstance ( var ) . removeStickersSet ( var , var . set , 0 , var , false )
( ( FrameLayout ) var ) . setForeground ( new ScrimDrawable )	var . setForeground ( new ScrimDrawable )
SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var )	SendMessagesHelper . getInstance ( var ) . sendSticker ( var , var , var )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )	var = MessagesController . getGlobalEmojiSettings ( ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )	var = MessagesController . getGlobalEmojiSettings ( ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
var = getContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getInt ( "" , 0 )	var = MessagesController . getGlobalEmojiSettings ( ) . getInt ( "" , 0 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getMainSettings ( var )
StickersQuery . addRecentGif ( var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 )	DataQuery . getInstance ( var ) . addRecentGif ( var , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 )
if ( var != var && var )	if ( var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit	MessagesController . getGlobalEmojiSettings ( ) . edit . putInt ( "" , var ) . commit
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit	MessagesController . getGlobalEmojiSettings ( ) . edit . putInt ( "" , var ) . commit
if ( ( var . width != AndroidUtilities . displaySize . x || var . var != var ) && ! var )	if ( ! var && ( var . width != AndroidUtilities . displaySize . x || var . var != var ) && ! var )
MessagesController . getInstance ( ) . sendTyping ( var , 2 , 0 )	MessagesController . getInstance ( var ) . sendTyping ( var , 2 , 0 )
var . to_id . user_id = var . from_id = UserConfig . getClientUserId ( )	var . to_id . user_id = var . from_id = UserConfig . getInstance ( var ) . getClientUserId
var = new MessageObject ( var , null , false )	var = new MessageObject ( UserConfig . selectedAccount , var , false )
SendMessagesHelper . getInstance ( ) . sendCurrentLocation ( var , var )	SendMessagesHelper . getInstance ( var ) . sendCurrentLocation ( var , var )
if ( var == null || var && ! var . areThereAnyStickers ( ) )	if ( var == null || var && ! var . areThereAnyStickers ( ) || var == var )
( ( FrameLayout ) var ) . setForeground ( new ScrimDrawable )	var . setForeground ( new ScrimDrawable )
( ( FrameLayout ) var ) . setForeground ( null )	var . setForeground ( null )
( ( FrameLayout ) var ) . setForeground ( null )	var . setForeground ( null )
var = new Paint ( Paint . ANTI_ALIAS_FLAG )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recordStarted )
var . setStyle ( Paint . Style . STROKE )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recordStartError )
var . setStrokeWidth ( AndroidUtilities . dp ( 2 ) )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . recordStopped )
var . drawPath ( var , var )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . audioDidSent )
var . thumb = var . imageReceiver . getBitmap ( var )	var . thumb = var . imageReceiver . getBitmapSafe ( var )
return var . getImageView ( var ) . getImageReceiver var . getBitmap var	return var . getImageView ( var ) . getImageReceiver var . getBitmapSafe var
if ( ( var = var . addToSelectedPhotos ( var , - 1 ) ) == - 1 var )	if ( ( var = addToSelectedPhotos ( var , - 1 ) ) == - 1 var )
var = var . selectedPhotosOrder . indexOf ( var . imageId )	return var . indexOf ( var . imageId )
MediaController . PhotoEntry var = MediaController . allMediaAlbumEntry . photos . get ( var )	MediaController . PhotoEntry var = getPhotoEntryAtPosition ( var )
var . addToSelectedPhotos ( var , - 1 )	addToSelectedPhotos ( var , - 1 )
return var . selectedPhotos . size ( var )	if ( var . isEmpty ( var ) && var != null )
return var . selectedPhotos	if ( var . isEmpty ( var ) && var != null )
return var != null && var . allowGroupPhotos ( var )	if ( var . isEmpty ( var ) && var != null )
Integer var = ( Integer ) var . getTag ( var )	MediaController . PhotoEntry var = getPhotoEntryAtPosition ( ( Integer ) var . getTag ( var ) )
MediaController . PhotoEntry var = MediaController . allMediaAlbumEntry . photos . get ( var )	MediaController . PhotoEntry var = getPhotoEntryAtPosition ( var )
var . setNum ( var . selectedPhotosOrder . indexOf ( var . imageId ) . imageId )	var . setNum ( var . indexOf ( var . imageId ) . imageId )
addView ( var , LayoutHelper . createFrame ( 64 , 64 , Gravity . CENTER_HORIZONTAL | Gravity . TOP ) , 64 , Gravity . CENTER_HORIZONTAL | Gravity . TOP )	addView ( var , LayoutHelper . createFrame ( 54 , 54 , Gravity . CENTER_HORIZONTAL | Gravity . TOP , 0 , 5 , 0 , 0 ) , 54 , Gravity . CENTER_HORIZONTAL | Gravity . TOP , 0 , 5 , 0 , 0 )
SearchQuery . removeInline ( var . id )	DataQuery . getInstance ( var ) . removeInline ( var . id )
var . didSelectBot ( MessagesController . getInstance ( var ) . getUser ( SearchQuery . inlineBots . get ( ( Integer ) getTag var ) Integer ) getTag var . peer . user_id ) . inlineBots . get ( ( Integer ) getTag var ) Integer ) getTag var . peer . user_id )	var . didSelectBot ( MessagesController . getInstance ( var ) . getUser ( DataQuery . getInstance ( var ) . inlineBots . get ( ( Integer ) getTag var ) Integer ) getTag var . peer . user_id ) . getInstance ( var ) . inlineBots . get ( ( Integer ) getTag var ) Integer ) getTag var . peer . user_id )
public ChatAttachAlert ( Context var , final ChatActivity var )	public ChatAttachAlert ( Context var , final BaseFragment var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . var )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var . putBoolean ( "" , true ) . commit var	MessagesController . getGlobalMainSettings ( var ) . edit var . putBoolean ( "" , true ) . commit var
var . setAdapter ( var = new PhotoAttachAdapter ( var ) )	var = new TextView ( var )
PhotoViewer . getInstance ( var ) . openPhotoForSelect ( var , var , 0 , var , var )	PhotoViewer . getInstance ( var ) . openPhotoForSelect ( var , var , var , var , var )
openCamera var	openCamera ( true )
var . add ( var . createHolder ( var ) )	var . add ( createHolder var )
if ( var || var || var == null || var . getParentActivity ( var ) == null || var == null )	if ( ! ( var instanceof ChatActivity ) || var || var || var == null || var . getParentActivity ( var ) == null || var == null )
var = new ArrayList var ( var )	var = new ArrayList var ( 0 )
var . sendMedia ( ( MediaController . PhotoEntry ) var . get ( 0 ) , var )	var . setPivotX ( 0 )
closeCamera ( false )	openPhotoViewer ( var , false , false )
var = AndroidUtilities . generatePicturePath ( var )	final File var = AndroidUtilities . generatePicturePath ( var )
var . add ( new MediaController . PhotoEntry ( 0 , 0 , 0 , var . getAbsolutePath ( var ) , var , false ) , 0 , 0 , var . getAbsolutePath ( var ) , var , false )	openPhotoViewer ( new MediaController . PhotoEntry ( 0 , var -- , 0 , var . getAbsolutePath ( var ) , var , false ) , var -- , 0 , var . getAbsolutePath ( var ) , var , false , var , false )
if ( var && var != null && var != null )	if ( var && var != null )
AndroidUtilities . addMediaToGallery ( var . getAbsolutePath ( var ) )	AndroidUtilities . addMediaToGallery ( ( ( MediaController . PhotoEntry ) var . get ( var ) ) . path )
var . sendMedia ( ( MediaController . PhotoEntry ) var . get ( 0 ) , null )	var . setPivotY ( 0 )
var = null	var = false
var = new CameraView ( var . getParentActivity ( var ) , false )	var = new CameraView ( var . getParentActivity ( var ) , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( var )
int var = var . selectedPhotos . size ( var )	int var = var . size ( var )
var . imageView . setPadding ( 0 , AndroidUtilities . dp ( 4 ) , 0 , 0 )	var . setCompoundDrawablePadding ( AndroidUtilities . dp ( 4 ) )
var . imageView . setImageResource ( R . drawable . attach_send2 )	if ( var == null || ! var . hasValidGroupId ( var ) )
if ( MediaController . allMediaAlbumEntry != null )	if ( var != null )
for ( int var = 0 ; var < Math . min ( 100 , MediaController . allMediaAlbumEntry . photos . size ( var ) ) ; var ++ )	for ( int var = 0 ; var < Math . min ( 100 , var . photos . size ( var ) ) ; var ++ )
MediaController . PhotoEntry var = MediaController . allMediaAlbumEntry . photos . get ( var )	MediaController . PhotoEntry var = var . photos . get ( var )
var . clearSelectedPhotos ( var )	var . scrollToPositionWithOffset ( 0 , 1000000 )
return var . selectedPhotos	int var = var . indexOf ( var )
return var . selectedPhotosOrder	var . notifyDataSetChanged ( var )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . var )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . var )
if ( ! MediaController . getInstance ( var ) . canInAppCamera var = false )	if ( var . getParentActivity ( var ) . checkSelfPermission ( Manifest . permission . CAMERA ) != PackageManager . PERMISSION_GRANTED var )
if ( Build . VERSION . SDK_INT >= 23 var )	if ( ! SharedConfig . inappCamera = false )
if ( var . getParentActivity ( var ) . checkSelfPermission ( Manifest . permission . CAMERA ) != PackageManager . PERMISSION_GRANTED var )	if ( Build . VERSION . SDK_INT >= 23 var )
CameraController . getInstance ( var ) . initCamera var	CameraController . getInstance ( var ) . initCamera ( null )
CameraController . getInstance ( var ) . initCamera var	CameraController . getInstance ( var ) . initCamera ( null )
if ( var + var >= SearchQuery . inlineBots . size ( var ) var )	if ( var + var >= DataQuery . getInstance ( var ) . inlineBots . size ( var ) var )
var . setUser ( MessagesController . getInstance ( var ) . getUser ( SearchQuery . inlineBots . get ( var + var ) + var . peer . user_id ) . inlineBots . get ( var + var ) + var . peer . user_id )	var . setUser ( MessagesController . getInstance ( var ) . getUser ( DataQuery . getInstance ( var ) . inlineBots . get ( var + var ) + var . peer . user_id ) . getInstance ( var ) . inlineBots . get ( var + var ) + var . peer . user_id )
if ( var . containsKey ( var . imageId ) var )	var . setChecked ( - 1 , var . containsKey ( var . imageId ) . imageId , false )
var . remove ( var . imageId )	var . setNum ( var . indexOf ( var . imageId ) . imageId )
int var = 0	long var = 0
for ( int var = 0 ; var < var . size ( var ) ; var ++ )	for ( int var = 0 ; var < 2 ; var ++ )
if ( var -- )	if ( var && var -- )
var . setPhotoEntry ( var , var == MediaController . allMediaAlbumEntry . photos . size ( var ) - 1 )	var . setIsVertical ( this == var && var . getOrientation ( var ) == LinearLayoutManager . VERTICAL )
if ( var && var == 0 )	if ( var && var && var == 0 )
if ( var ++ )	if ( var && var ++ )
if ( MediaController . allMediaAlbumEntry != null )	if ( var != null )
var += MediaController . allMediaAlbumEntry . photos . size ( var )	var += var . photos . size ( var )
if ( var && var == 0 )	if ( var && var && var == 0 )
if ( ! var || var && Build . VERSION . SDK_INT >= 18 && ! AndroidUtilities . isTablet ( var ) && Build . VERSION . SDK_INT < 26 = var )	if ( ! var || var && Build . VERSION . SDK_INT >= 18 && ! AndroidUtilities . isTablet ( var ) && Build . VERSION . SDK_INT < 26 && var instanceof ChatActivity = var )
TLRPC . Chat var = var . getCurrentChat ( var )	TLRPC . Chat var = ( ( ChatActivity ) var ) . getCurrentChat var
MediaActivity var = new MediaActivity ( var )	MediaActivity var = new MediaActivity ( var , new int )
Integer var = MessagesController . getInstance ( ) . printingStringsTypes . get ( var . getDialogId ( ) )	Integer var = MessagesController . getInstance ( var ) . printingStringsTypes . get ( var . getDialogId ( ) )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var . getDialogId ( ) )	CharSequence var = MessagesController . getInstance ( var ) . printingStrings . get ( var . getDialogId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . id )
var = LocaleController . formatUserStatus ( var )	var = LocaleController . formatUserStatus ( var , var )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
if ( var != null && var . status != null && ( var . status . expires > var || var . id == UserConfig . getClientUserId ( ) ) && var . status . expires > 10000 ++ )	if ( var != null && var . status != null && ( var . status . expires > var || var . id == UserConfig . getInstance ( var ) . getClientUserId ) && var . status . expires > 10000 ++ )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )
if ( getVisibility != VISIBLE )	if ( getVisibility != VISIBLE || var == null || var == null )
if ( var != null )	if ( var != null && ! var . isRecycled ( var ) )
var . drawBitmap ( var , var , var )	var . drawBitmap ( var . bitmap , var , var )
var = new BitmapShader ( var , Shader . TileMode . CLAMP , Shader . TileMode . CLAMP )	var = new BitmapShader ( var . var , Shader . TileMode . CLAMP , Shader . TileMode . CLAMP )
var = getBounds . centerX - var / 2 + var	var = getBounds . centerX - var / 2 + var + var
var = getBounds . centerY - var / 2 + var	var = getBounds . centerY - var / 2 + var + var
if ( length == 0 && var != null && ( var || var != 0 ) )	if ( ( length == 0 || var ) && var != null && ( var || var != 0 ) )
URLSpanUserMention spansMentions = var . getSpans ( var , var , URLSpanUserMention . class )	CharacterStyle spans = var . getSpans ( var , var , CharacterStyle . class )
if ( spansMentions != null && spansMentions . length > 0 )	var . setSpan ( new URLSpanReplacement ( var . getText ( var ) . toString var ) . getText ( var ) . toString var , var , var , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
TypefaceSpan var = spans [ var ]	CharacterStyle var = spans [ var ]
var . loadDataWithBaseURL ( "" , String . format ( var , var , var ) , var , var , "" , "" , "" )	var . loadDataWithBaseURL ( "" , String . format ( Locale . US , var , var , var ) . US , var , var , var , "" , "" , "" )
int var = var . length ( )	int var = var . var ( )
if ( var > 2 && var . charAt ( var . length ( ) - 2 ) == '\u200D' > 3 && var . charAt ( var . length ( ) - 3 ) == '\u200D' )	if ( var > 2 && var . charAt ( var . var ( ) - 2 ) == '\u200D' > 3 && var . charAt ( var . var ( ) - 3 ) == '\u200D' )
if ( var > 3 && var . charAt ( var . length ( ) - 3 ) == '\u200D' )	if ( var > 3 && var . charAt ( var . var ( ) - 3 ) == '\u200D' )
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )	DataQuery . getInstance ( var ) . checkStickers ( DataQuery . TYPE_IMAGE )
StickersQuery . checkFeaturedStickers ( var )	DataQuery . getInstance ( var ) . checkFeaturedStickers var
StickersQuery . removeRecentGif ( var )	DataQuery . getInstance ( var ) . removeRecentGif ( var )
var = StickersQuery . getRecentGifs ( var )	var = DataQuery . getInstance ( var ) . getRecentGifs var
var . setClickable ( false )	var . setFocusable ( false )
var . setFocusable ( false )	var . setClickable ( false )
getContext var . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var . putInt ( "" , var ) . commit var	MessagesController . getGlobalEmojiSettings ( var ) . edit var . putInt ( "" , var ) . commit var
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE )	ArrayList < TLRPC . TL_messages_stickerSet > var = DataQuery . getInstance ( var ) . getStickerSets ( DataQuery . TYPE_IMAGE )
long var = getContext var . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . getLong ( "" + var . id , - 1 )	long var = MessagesController . getEmojiSettings ( var ) . getLong ( "" + var . id , - 1 )
TLRPC . TL_messages_stickerSet var = StickersQuery . getGroupStickerSetById ( var . stickerset )	TLRPC . TL_messages_stickerSet var = DataQuery . getInstance ( var ) . getGroupStickerSetById ( var . stickerset )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_IMAGE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
var = StickersQuery . getRecentStickers ( StickersQuery . TYPE_IMAGE )	var = DataQuery . getInstance ( var ) . getRecentStickers ( DataQuery . TYPE_IMAGE )
var = StickersQuery . getRecentGifs ( var )	var = DataQuery . getInstance ( var ) . getRecentGifs var
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , true , true , false )	DataQuery . getInstance ( var ) . loadRecents ( DataQuery . TYPE_IMAGE , true , true , false )
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , false , true , false )	DataQuery . getInstance ( var ) . loadRecents ( DataQuery . TYPE_IMAGE , false , true , false )
var = StickersQuery . getRecentGifs ( var )	var = DataQuery . getInstance ( var ) . getRecentGifs var
var = StickersQuery . getRecentStickers ( StickersQuery . TYPE_IMAGE )	var = DataQuery . getInstance ( var ) . getRecentStickers ( DataQuery . TYPE_IMAGE )
var = StickersQuery . getRecentStickers ( StickersQuery . TYPE_FAVE )	var = DataQuery . getInstance ( var ) . getRecentStickers ( DataQuery . TYPE_FAVE )
StickersQuery . markFaturedStickersByIdAsRead ( var . set . id )	boolean var = var . indexOfKey ( var . set . id ) >= 0
boolean var = var . containsKey ( var . set . id )	boolean var = var . indexOfKey ( var . set . id ) >= 0
if ( ( Integer ) var [ 0 ] == StickersQuery . TYPE_IMAGE )	if ( ( Integer ) var [ 0 ] == DataQuery . TYPE_IMAGE )
if ( var || var == StickersQuery . TYPE_IMAGE || var == StickersQuery . TYPE_FAVE )	if ( var || var == DataQuery . TYPE_IMAGE || var == DataQuery . TYPE_FAVE )
if ( var != StickersQuery . getFeaturesStickersHashWithoutUnread ( var ) = false )	if ( var != DataQuery . getInstance ( var ) . getFeaturesStickersHashWithoutUnread var = false )
StickersQuery . markFaturedStickersByIdAsRead ( var . set . id )	boolean var = var . indexOfKey ( var . set . id ) >= 0
boolean var = var . containsKey ( var . set . id )	boolean var = var . indexOfKey ( var . set . id ) >= 0
var = var / AndroidUtilities . dp ( 72 )	var = Math . max ( 1 , var / AndroidUtilities . dp ( 72 ) )
var . setSpanCount ( Math . max ( 1 , var ) , var )	var . setSpanCount ( var )
ArrayList < TLRPC . StickerSetCovered > var = StickersQuery . getFeaturedStickerSets ( var )	ArrayList < TLRPC . StickerSetCovered > var = DataQuery . getInstance ( var ) . getFeaturedStickerSets var
var = StickersQuery . getFeaturesStickersHashWithoutUnread ( var )	var = DataQuery . getInstance ( var ) . getFeaturesStickersHashWithoutUnread var
if ( var == null )	if ( var == Integer . MIN_VALUE )
if ( var == null var )	if ( var == Integer . MIN_VALUE var )
for ( int var = - 2 ; var < var . size ( var ) ; var ++ )	for ( int var = - 3 ; var < var . size ( var ) ; var ++ )
if ( var == 6 && ! StickersQuery . getUnreadStickerSets ( var ) . isEmpty var && var != null )	if ( var == 6 && ! DataQuery . getInstance ( var ) . getUnreadStickerSets var . isEmpty var && var != null )
float var = 0	int var = 0
var += ( var . width / var . height ) * var	int var = Math . min ( var , ( int ) Math . floor ( var * ( var . width / var . height * var / var ) ) * ( var . width / var . height * var / var ) )
int var = 0 , var	int var = 0
var = ( float ) Math . floor ( var / 3.0f )	int var = Math . min ( var , ( int ) Math . floor ( var * ( var . width / var . height * var / var ) ) * ( var . width / var . height * var / var ) )
var = ( float ) Math . floor ( var * 2.0f / 3.0f )	int var = var / var
int var	int var = var
var . put ( var , var )	var = Math . max ( var , var )
var += var . size ( )	var . put ( var - 1 , var )
int solution var = new int [ ( ] var - 1 ) * ( var - 1 )	var . put ( var - 1 , var )
tmpTable [ var ] = var [ 0 ]	var = var
int var = Integer . MAX_VALUE	return var . get ( var , Integer . MAX_VALUE ) != Integer . MAX_VALUE
if ( var == 0 || var < var )	if ( var < var = var )
if ( var <= 0 )	if ( var == 0 )
if ( var >= var || var == 1 )	if ( var == var - 1 )
var . add ( 0 , var )	var . put ( var , var )
if ( var == null )	if ( var == 0 )
return var . get ( var ) != null	return var . get ( var , Integer . MAX_VALUE ) != Integer . MAX_VALUE
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
LocationController . getInstance ( ) . removeSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )	LocationController . getInstance ( var . getCurrentAccount ( ) ) . removeSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )
long var	long var = 0
openSharingLocation ( LocationController . getInstance ( ) . getSharingLocationInfo ( var ) )	openSharingLocation ( LocationController . getInstance ( var ) . getSharingLocationInfo ( var ) )
if ( var == null )	if ( var == null || var . getParentActivity ( ) == null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , null )	SendMessagesHelper . getInstance ( var . messageObject . currentAccount ) . sendMessage ( var , var , null , null , null )
var = ! LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )	var = LocationController . getLocationsCount ( ) != 0
var = LocationController . getInstance ( ) . isSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )	var = LocationController . getInstance ( var . getCurrentAccount ( ) ) . isSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsCacheChanged )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsCacheChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didStartedCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didStartedCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didEndedCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didEndedCall )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsCacheChanged )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsCacheChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingPlayStateChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidStarted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didStartedCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didStartedCall )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didEndedCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didEndedCall )
var = ! LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )	var = LocationController . getLocationsCount ( ) != 0
var = LocationController . getInstance ( ) . isSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )	var = LocationController . getInstance ( var . getCurrentAccount ( ) ) . isSharingLocation ( ( ( ChatActivity ) var ) . getDialogId )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) ) , "" , - AndroidUtilities . dp2 ( 36 ) , ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )	var . playTogether ( ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) , 0 ) , "" , - AndroidUtilities . dp2 ( 36 ) , 0 , ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )	var . playTogether ( ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )
ArrayList < LocationController . SharingLocationInfo > var = LocationController . getInstance ( ) . sharingLocationsUI	ArrayList < LocationController . SharingLocationInfo > var = new ArrayList
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( var . messageObject . currentAccount ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var . messageObject . currentAccount ) . getChat ( - var )
var = LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )	var = LocaleController . formatPluralString ( "" , var . size ( ) )
ArrayList < TLRPC . Message > var = LocationController . getInstance ( ) . locationsCache . get ( var )	ArrayList < TLRPC . Message > var = LocationController . getInstance ( var ) . locationsCache . get ( var )
int var = UserConfig . getClientUserId ( )	int var = UserConfig . getInstance ( var ) . getClientUserId
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( var ) . getCurrentTime
var = MessagesController . getInstance ( ) . getUser ( var . from_id )	var = MessagesController . getInstance ( var ) . getUser ( var . from_id )
if ( LocationController . getInstance ( ) . isSharingLocation ( var ) )	if ( LocationController . getInstance ( var ) . isSharingLocation ( var ) )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) ) , "" , - AndroidUtilities . dp2 ( 36 ) , ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )	var . playTogether ( ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) , 0 ) , "" , - AndroidUtilities . dp2 ( 36 ) , 0 , ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )	var . playTogether ( ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )
if ( ! var )	if ( var == null || var . getId ( ) == 0 )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) ) , "" , - AndroidUtilities . dp2 ( 36 ) , ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )	var . playTogether ( ObjectAnimator . ofFloat ( this , "" , 0 ) , "" , 0 )
setTranslationY ( 0 )	var . setPadding ( 0 , 0 , AndroidUtilities . dp ( 44 ) , 0 )
var . playTogether ( ObjectAnimator . ofFloat ( this , "" , - AndroidUtilities . dp2 ( 36 ) , 0 ) , "" , - AndroidUtilities . dp2 ( 36 ) , 0 , ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )	var . playTogether ( ObjectAnimator . ofFloat ( this , "" , AndroidUtilities . dp2 ( 36 ) ) , "" , AndroidUtilities . dp2 ( 36 ) )
int var = var . save ( )	float var = MediaController . getInstance ( ) . getPlaybackSpeed
if ( var < 0 )	if ( var > 1 )
var . clipRect ( 0 , ( int ) - var , var . getMeasuredWidth ( ) , AndroidUtilities . dp2 ( 39 ) )	var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_inappPlayerPlayPause ) . key_inappPlayerPlayPause , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_inappPlayerPlayPause ) . key_inappPlayerPlayPause , PorterDuff . Mode . MULTIPLY )
float var = AndroidUtilities . dp ( 10 ) * var	float var = AndroidUtilities . dp ( 10 ) * var * var
float var = AndroidUtilities . dp ( 5 ) * var	float var = AndroidUtilities . dp ( 5 ) * var * var
var . setAlpha ( int ( 255 * var ) * var )	var . setAlpha ( int ( 255 * var * var ) * var * var )
var = new File ( FileLoader . getInstance ( var ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , UserConfig . lastLocalId + "" )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , SharedConfig . getLastLocalId ( var ) + "" )
UserConfig . lastLocalId --	SharedConfig . saveConfig ( var )
UserConfig . saveConfig ( false )	if ( BuildVars . LOGS_ENABLED )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
var . estimatedSize = long ( var * ( var . estimatedDuration / var ) )	var . estimatedSize = Math . max ( 1 , long ( var * ( var . estimatedDuration / var ) ) * ( var . estimatedDuration / var ) )
var . estimatedSize = var	var . estimatedSize = Math . max ( 1 , var )
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
int var = Math . min ( var , var )	float var = var / ( float ) Math . min ( var , var )
float var = var / ( float ) var	float var = var / ( float ) Math . min ( var , var )
FileLog . e ( "" )	FileLog . d ( "" )
var . startRecording ( var , var , var , EGL14 . eglGetCurrentContext ( var ) )	var . startRecording ( var , EGL14 . eglGetCurrentContext ( var ) )
FileLog . e ( "" + GLUtils . getEGLErrorString ( var . eglGetError ( var ) ) . eglGetError ( var ) )	FileLog . d ( "" + GLUtils . getEGLErrorString ( var . eglGetError ( var ) ) . eglGetError ( var ) )
long var	long var = - 1
var = System . nanoTime ( var )	var = System . nanoTime ( var ) / 1000
new Thread ( this , "" ) . start var	Thread var = new Thread ( this , "" )
FileLog . var ( "" + var )	FileLog . d ( "" + var )
var . estimatedSize = var	var . estimatedSize = Math . max ( 1 , var )
new Thread ( var ) . start var	Thread var = new Thread ( var )
var = new MP4Builder var . createMovie ( var )	var = new MP4Builder var . createMovie ( var , var )
Vibrator var = ( Vibrator ) ApplicationLoader . applicationContext . getSystemService ( Context . VIBRATOR_SERVICE )	performHapticFeedback ( HapticFeedbackConstants . KEYBOARD_TAP , HapticFeedbackConstants . FLAG_IGNORE_GLOBAL_SETTING )
FileLoader . getInstance ( var ) . uploadFile ( var . toString ( var ) , false , false , 1 , ConnectionsManager . FileTypeVideo )	FileLoader . getInstance ( var ) . uploadFile ( var . toString ( var ) , var , false , 1 , ConnectionsManager . FileTypeVideo )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( currentAccount ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( currentAccount ) . putChats ( var . chats , false )
if ( MessagesController . checkCanOpenChat ( var , var ) )	if ( MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , var ) )
AlertsCreator . processError ( var , var , var )	AlertsCreator . processError ( currentAccount , var , var , var )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
var = ( LayoutParams ) var . getLayoutParams ( )	var . setTextColor ( 0xffffffff )
var . height = LayoutHelper . WRAP_CONTENT	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 15 )
var . bottomMargin = AndroidUtilities . dp ( 62 )	var . setGravity ( Gravity . CENTER_HORIZONTAL )
if ( var . length ( ) == 4 && UserConfig . passcodeType == 0 )	if ( var . length ( ) == 4 && SharedConfig . passcodeType == 0 )
if ( var . lenght ( ) == 4 )	if ( var . length ( ) == 4 )
if ( UserConfig . passcodeType == 0 . passcodeType == 1 )	if ( SharedConfig . passcodeType == 0 . passcodeType == 1 )
if ( UserConfig . passcodeType == 1 )	if ( SharedConfig . passcodeType == 1 )
if ( ! UserConfig . checkPasscode ( var ) )	if ( ! SharedConfig . checkPasscode ( var ) )
UserConfig . appLocked = false	SharedConfig . appLocked = false
UserConfig . saveConfig ( false )	SharedConfig . saveConfig ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( UserConfig . passcodeType == 1 )	if ( SharedConfig . passcodeType == 1 )
if ( var != null )	if ( var . getVisibility ( ) != VISIBLE && var != null )
if ( Build . VERSION . SDK_INT >= 23 && var != null && UserConfig . useFingerprint && ! ApplicationLoader . mainInterfacePaused )	if ( Build . VERSION . SDK_INT >= 23 && var != null && SharedConfig . useFingerprint && ! ApplicationLoader . mainInterfacePaused )
if ( UserConfig . passcodeType == 1 )	if ( SharedConfig . passcodeType == 1 )
if ( var != null )	if ( var . getVisibility ( ) != VISIBLE && var != null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
if ( UserConfig . passcodeType == 0 . passcodeType == 1 )	if ( SharedConfig . passcodeType == 0 . passcodeType == 1 )
if ( UserConfig . passcodeType == 1 )	if ( SharedConfig . passcodeType == 1 )
if ( UserConfig . passcodeType == 1 && ( AndroidUtilities . isTablet ( ) || getContext . getResources . getConfiguration . orientation != Configuration . ORIENTATION_LANDSCAPE ) )	if ( SharedConfig . passcodeType == 1 && ( AndroidUtilities . isTablet ( ) || getContext . getResources . getConfiguration . orientation != Configuration . ORIENTATION_LANDSCAPE ) )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )	var = MessagesController . getGlobalEmojiSettings ( ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )	var = MessagesController . getGlobalEmojiSettings ( ) . getInt ( "" , AndroidUtilities . dp ( 200 ) )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit	MessagesController . getGlobalEmojiSettings ( ) . edit . putInt ( "" , var ) . commit
ApplicationLoader . applicationContext . getSharedPreferences ( "" , 0 ) . edit . putInt ( "" , var ) . commit	MessagesController . getGlobalEmojiSettings ( ) . edit . putInt ( "" , var ) . commit
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
public MiniControlsView ( Context var )	public MiniControlsView ( Context var , boolean var )
if ( var != null )	if ( var != null != null )
if ( ! NotificationCenter . getInstance ( ) . isAnimationInProgress  )	if ( ! NotificationCenter . getInstance ( var ) . isAnimationInProgress  )
var = MediaController . getInstance ( ) . generateObserverTag	var = DownloadController . getInstance ( var ) . generateObserverTag
var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )	var . setColors ( Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbar ) . key_chat_inAudioSeekbar , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarFill ) . key_chat_inAudioSeekbarFill , Theme . getColor ( Theme . key_chat_inAudioSeekbarSelected ) . key_chat_inAudioSeekbarSelected )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
MessagesController . getInstance ( ) . markMessageContentAsRead ( var )	MessagesController . getInstance ( var ) . markMessageContentAsRead ( var )
FileLoader . getInstance ( ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )
FileLoader . getInstance ( ) . cancelLoadFile ( var . getDocument ( ) )	FileLoader . getInstance ( var ) . cancelLoadFile ( var . getDocument ( ) )
FileLoader . getInstance ( ) . loadFile ( var . getDocument ( ) , true , 0 )	FileLoader . getInstance ( var ) . loadFile ( var . getDocument ( ) , true , 0 )
MediaController . getInstance ( ) . removeLoadingFileObserver ( this )	DownloadController . getInstance ( var ) . removeLoadingFileObserver ( this )
MediaController . getInstance ( ) . addLoadingFileObserver ( var , this )	DownloadController . getInstance ( var ) . addLoadingFileObserver ( var , this )
if ( ! FileLoader . getInstance ( ) . isLoadingFile ( var ) )	if ( ! FileLoader . getInstance ( var ) . isLoadingFile ( var ) )
var += var / 300.0f	var += var / 800.0f
var = new SparseArray	var = new SparseIntArray
var = new SparseArray	var = new SparseIntArray
var = new SparseArray	var = new SparseIntArray
Integer var = var . get ( var )	int var = var . get ( var , Integer . MAX_VALUE )
if ( var != null )	if ( var != Integer . MAX_VALUE )
Integer var = var . get ( var )	int var = var . get ( var , Integer . MAX_VALUE )
if ( var != null )	if ( var != Integer . MAX_VALUE )
Integer var = var . get ( var )	int var = var . get ( var , Integer . MAX_VALUE )
if ( var != null )	if ( var != Integer . MAX_VALUE )
if ( var != null )	if ( var != null != null )
if ( var != - 1 && var . onItemClick ( var , var ) )	if ( var . onItemClick ( var , var ) )
if ( var != null )	if ( var != null || var != null )
var . setProgress ( var / ( float ) var . getItemCount ( ) )	var . setProgress ( Math . min ( 1.0f , var / float ( var . getItemCount ( ) - var + 1 ) . getItemCount ( ) - var + 1 ) , var / float ( var . getItemCount ( ) - var + 1 ) . getItemCount ( ) - var + 1 )
int var = Math . abs ( var . findLastVisibleItemPosition ( ) - var ) + 1	int var = var . findLastVisibleItemPosition ( )
var . setTextColor ( 0xffffffff )	var . setTextColor ( Theme . getColor ( Theme . key_chat_emojiPanelBadgeText ) . key_chat_emojiPanelBadgeText )
if ( var - var <= var . getX ( ) && var . getX ( ) <= var + var + var && var . getY ( ) >= 0 && var . getY ( ) <= getMeasuredHeight )	if ( var . getY ( ) >= 0 && var . getY ( ) <= getMeasuredHeight )
if ( var > 0 )	if ( var > 0 && var + 1 < var . length )
var . channel = MessagesController . getInputChannel ( var . get ( 0 ) . messageOwner . to_id . channel_id )	var . channel = MessagesController . getInstance ( var ) . getInputChannel ( var . get ( 0 ) . messageOwner . to_id . channel_id )
if ( var . isEmpty ( ) && ( var || var != null ) )	if ( var . size ( ) == 0 && ( var || var != null ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . getText ( ) . toString , var . getKey ( ) , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var . getText ( ) . toString , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . getText ( ) . toString , var . getKey ( ) , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var . getText ( ) . toString , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . getKey ( ) , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , null , null , true , null , null , null )
if ( var . containsKey ( var . id ) )	if ( var . indexOfKey ( var . id ) >= 0 )
if ( ! DialogsActivity . dialogsLoaded )	if ( ! DialogsActivity . dialogsLoaded [ var ] )
MessagesController . getInstance ( ) . loadDialogs ( 0 , 100 , true )	MessagesController . getInstance ( var ) . loadDialogs ( 0 , 100 , true )
ContactsController . getInstance ( ) . checkInviteText	ContactsController . getInstance ( var ) . checkInviteText
DialogsActivity . dialogsLoaded = true	DialogsActivity . dialogsLoaded [ var ] = true
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )
if ( var . isEmpty ( ) )	if ( var . size ( ) == 0 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )
for ( int var = 0 ; var < MessagesController . getInstance ( ) . dialogsForward . size ( ) ; var ++ )	for ( int var = 0 ; var < MessagesController . getInstance ( var ) . dialogsForward . size ( ) ; var ++ )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogsForward . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogsForward . get ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( - var )
var . setDialog ( ( int ) var . id , var . containsKey ( var . id ) . id , null )	var . setDialog ( ( int ) var . id , var . indexOfKey ( var . id ) . id >= 0 , null )
HashMap < Long , DialogSearchResult > var = new HashMap var ( var )	LongSparseArray < DialogSearchResult > var = new LongSparseArray var ( var )
if ( var . containsKey ( ( long ) var ) )	if ( var . indexOfKey ( ( long ) var ) >= 0 )
MessagesController . getInstance ( ) . putUser ( var , true )	MessagesController . getInstance ( var ) . putUser ( var , true )
MessagesController . getInstance ( ) . putChat ( var , true )	MessagesController . getInstance ( var ) . putChat ( var , true )
var . setDialog ( ( int ) var . dialog . id , var . containsKey ( var . dialog . id ) . dialog . id , var . name )	var . setDialog ( ( int ) var . dialog . id , var . indexOfKey ( var . dialog . id ) . dialog . id >= 0 , var . name )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . liveLocationsChanged )
int var = AndroidUtilities . dp ( 48 + 8 ) + AndroidUtilities . dp ( 56 ) + 1 + LocationController . getInstance ( ) . sharingLocationsUI . size ( ) * AndroidUtilities . dp ( 54 )	int var = AndroidUtilities . dp ( 48 + 8 ) + AndroidUtilities . dp ( 56 ) + 1 + LocationController . getLocationsCount ( ) * AndroidUtilities . dp ( 54 )
if ( var < 0 || var >= LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )	if ( var < 0 || var >= LocationController . getLocationsCount ( ) )
var . didSelectLocation ( LocationController . getInstance ( ) . sharingLocationsUI . get ( var ) )	var . didSelectLocation ( getLocation ( var ) )
LocationController . getInstance ( ) . removeAllLocationSharings	LocationController . getInstance ( var ) . removeAllLocationSharings
if ( LocationController . getInstance ( ) . sharingLocationsUI . isEmpty ( )  )	if ( LocationController . getLocationsCount ( ) == 0 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . liveLocationsChanged )
return LocationController . getInstance ( ) . sharingLocationsUI . size ( ) + 1	return LocationController . getLocationsCount ( ) + 1
var . setDialog ( LocationController . getInstance ( ) . sharingLocationsUI . get ( var - 1 ) - 1 )	var . setDialog ( getLocation ( var - 1 ) - 1 )
var . setText ( LocaleController . formatString ( "" , R . string . SharingLiveLocationTitle , LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) ) , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) ) , R . string . SharingLiveLocationTitle , LocaleController . formatPluralString ( "" , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) ) , LocationController . getInstance ( ) . sharingLocationsUI . size ( ) )	var . setText ( LocaleController . formatString ( "" , R . string . SharingLiveLocationTitle , LocaleController . formatPluralString ( "" , LocationController . getLocationsCount ( ) ) , LocationController . getLocationsCount ( ) ) , R . string . SharingLiveLocationTitle , LocaleController . formatPluralString ( "" , LocationController . getLocationsCount ( ) ) , LocationController . getLocationsCount ( ) )
StaticLayout . Builder var = StaticLayout . Builder . obtain ( var , 0 , var . length ( ) , var , var ) . setAlignment ( var ) . setLineSpacing ( var , var ) . setIncludePad ( var ) . setEllipsize ( null ) . setEllipsizedWidth ( var ) . setBreakStrategy ( Layout . BREAK_STRATEGY_HIGH_QUALITY ) . setHyphenationFrequency ( Layout . HYPHENATION_FREQUENCY_NORMAL )	StaticLayout . Builder var = StaticLayout . Builder . obtain ( var , 0 , var . length ( ) , var , var ) . setAlignment ( var ) . setLineSpacing ( var , var ) . setIncludePad ( var ) . setEllipsize ( null ) . setEllipsizedWidth ( var ) . setBreakStrategy ( StaticLayout . BREAK_STRATEGY_HIGH_QUALITY ) . setHyphenationFrequency ( StaticLayout . HYPHENATION_FREQUENCY_NONE )
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )	DataQuery . getInstance ( var ) . checkStickers ( DataQuery . TYPE_IMAGE )
StickersQuery . checkStickers ( StickersQuery . TYPE_MASK )	DataQuery . getInstance ( var ) . checkStickers ( DataQuery . TYPE_MASK )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_MASK , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_MASK , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
if ( var == StickersQuery . TYPE_IMAGE var )	if ( var == DataQuery . TYPE_IMAGE var )
var = StickersQuery . TYPE_MASK	var = DataQuery . TYPE_MASK
var = StickersQuery . TYPE_IMAGE	var = DataQuery . TYPE_IMAGE
recentStickers [ var ] = StickersQuery . getRecentStickers ( var )	recentStickers [ var ] = DataQuery . getInstance ( var ) . getRecentStickers ( var )
if ( var == StickersQuery . TYPE_IMAGE var )	if ( var == DataQuery . TYPE_IMAGE var )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )	ArrayList < TLRPC . TL_messages_stickerSet > var = DataQuery . getInstance ( var ) . getStickerSets ( var )
StickersQuery . addRecentSticker ( var , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )	DataQuery . getInstance ( var ) . addRecentSticker ( var , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , false )
recentStickers [ var ] = StickersQuery . getRecentStickers ( var )	recentStickers [ var ] = DataQuery . getInstance ( var ) . getRecentStickers ( var )
StickersQuery . loadRecents ( StickersQuery . TYPE_IMAGE , false , true , false )	DataQuery . getInstance ( var ) . loadRecents ( DataQuery . TYPE_FAVE , false , true , false )
StickersQuery . loadRecents ( StickersQuery . TYPE_MASK , false , true , false )	DataQuery . getInstance ( var ) . loadRecents ( DataQuery . TYPE_MASK , false , true , false )
StickersQuery . loadRecents ( StickersQuery . TYPE_FAVE , false , true , false )	DataQuery . getInstance ( var ) . loadRecents ( DataQuery . TYPE_IMAGE , false , true , false )
recentStickers [ var ] = StickersQuery . getRecentStickers ( var )	recentStickers [ var ] = DataQuery . getInstance ( var ) . getRecentStickers ( var )
AlertsCreator . processError ( var , var , var )	AlertsCreator . processError ( currentAccount , var , var , var )
var = StickersQuery . getStickerSetByName ( var . short_name )	var = DataQuery . getInstance ( currentAccount ) . getStickerSetByName ( var . short_name )
var = StickersQuery . getStickerSetById ( var . id )	var = DataQuery . getInstance ( currentAccount ) . getStickerSetById ( var . id )
var . setText ( Emoji . replaceEmoji ( StickersQuery . getEmojiForSticker ( var . id ) . id , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 30 ) , false ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 30 ) , false )	var . setText ( Emoji . replaceEmoji ( DataQuery . getInstance ( currentAccount ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 30 ) , false ) . getInstance ( currentAccount ) . getEmojiForSticker ( var . id ) . id , var . getPaint ( var ) . getFontMetricsInt var , AndroidUtilities . dp ( 30 ) , false )
boolean var = StickersQuery . isStickerInFavorites ( var )	boolean var = DataQuery . getInstance ( currentAccount ) . isStickerInFavorites ( var )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , var . getTag ( var ) != null )	DataQuery . getInstance ( currentAccount ) . addRecentSticker ( DataQuery . TYPE_FAVE , var , int ( System . currentTimeMillis ( var ) / 1000 ) . currentTimeMillis ( var ) / 1000 , var . getTag ( var ) != null )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
MessagesController . openByUserName ( getURL var , var , 1 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( getURL var , var , 1 )
if ( var . set == null || ! StickersQuery . isStickerPackInstalled ( var . set . id ) var )	if ( var . set == null || ! DataQuery . getInstance ( currentAccount ) . isStickerPackInstalled ( var . set . id ) var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . needReloadArchivedStickers )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . needReloadArchivedStickers )
StickersQuery . removeStickersSet ( getContext var , var . set , 1 , var , true )	DataQuery . getInstance ( currentAccount ) . removeStickersSet ( getContext var , var . set , 1 , var , true )
StickersQuery . removeStickersSet ( getContext var , var . set , 0 , var , true )	DataQuery . getInstance ( currentAccount ) . removeStickersSet ( getContext var , var . set , 0 , var , true )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var = StickersQuery . TYPE_MASK	var = DataQuery . TYPE_MASK
var = StickersQuery . TYPE_IMAGE	var = DataQuery . TYPE_IMAGE
int var = int ( 0xff + ( 0xa0 - 0xff ) * var )	int var = int ( var + ( var - var ) * var )
int var = int ( 0xb0 + ( 0xd6 - 0xb0 ) * var )	int var = int ( var + ( var - var ) * var )
int var = int ( 0xad + ( 0xfa - 0xad ) * var )	int var = int ( var + ( var - var ) * var )
var . setColor ( 0xff000000 | ( ( var & 0xff ) << 16 ) | ( ( var & 0xff ) << 8 ) | ( var & 0xff ) )	var . setColor ( ( ( var & 0xff ) << 24 ) | ( ( var & 0xff ) << 16 ) | ( ( var & 0xff ) << 8 ) | ( var & 0xff ) )
var = int ( 0xdb + ( 0x44 - 0xdb ) * var )	var = int ( var + ( var - var ) * var )
var = int ( 0x58 + ( 0xa8 - 0x58 ) * var )	var = int ( var + ( var - var ) * var )
var = int ( 0x5c + ( 0xea - 0x5c ) * var )	var = int ( var + ( var - var ) * var )
var . setColor ( 0xff000000 | ( ( var & 0xff ) << 16 ) | ( ( var & 0xff ) << 8 ) | ( var & 0xff ) )	var . setColor ( ( ( var & 0xff ) << 24 ) | ( ( var & 0xff ) << 16 ) | ( ( var & 0xff ) << 8 ) | ( var & 0xff ) )
var . var ( var , var - AndroidUtilities . dp ( 12 ) , var - AndroidUtilities . dp ( 11 ) , null )	var . var ( var , var - AndroidUtilities . dp ( 12 ) , var - AndroidUtilities . dp ( 11 ) , var )
var . setColor ( 0xffffffff )	var . setColor ( Theme . getColor ( Theme . key_switch2Check ) . key_switch2Check )
if ( var == null )	if ( var != null )
if ( ! var . fragmentsStack . isEmpty ( ) )	if ( var != null )
if ( ! NotificationCenter . getInstance ( ) . isAnimationInProgress  )	if ( ! NotificationCenter . getInstance ( var ) . isAnimationInProgress  )
public URLSpanBotCommand ( String var , boolean var )	public URLSpanBotCommand ( String var , int var )
public URLSpanMono ( CharSequence var , int var , int var , boolean var )	public URLSpanMono ( CharSequence var , int var , int var , byte var )
var . setTextSize ( AndroidUtilities . dp ( MessagesController . getInstance ( ) . fontSize - 1 ) . getInstance ( ) . fontSize - 1 )	var . setTextSize ( AndroidUtilities . dp ( SharedConfig . fontSize - 1 ) . fontSize - 1 )
var . setTextSize ( AndroidUtilities . dp ( MessagesController . getInstance ( ) . fontSize - 1 ) . getInstance ( ) . fontSize - 1 )	var . setTextSize ( AndroidUtilities . dp ( SharedConfig . fontSize - 1 ) . fontSize - 1 )
public URLSpanUserMention ( String var , boolean var )	public URLSpanUserMention ( String var , int var )
var = ExoPlayerFactory . newSimpleInstance ( ApplicationLoader . applicationContext , var , new DefaultLoadControl , null , DefaultRenderersFactory . EXTENSION_RENDERER_MODE_OFF )	var = ExoPlayerFactory . newSimpleInstance ( ApplicationLoader . applicationContext , var , new DefaultLoadControl , null , DefaultRenderersFactory . EXTENSION_RENDERER_MODE_PREFER )
var = ExoPlayerFactory . newSimpleInstance ( ApplicationLoader . applicationContext , var , new DefaultLoadControl , null , DefaultRenderersFactory . EXTENSION_RENDERER_MODE_OFF )	var = ExoPlayerFactory . newSimpleInstance ( ApplicationLoader . applicationContext , var , new DefaultLoadControl , null , DefaultRenderersFactory . EXTENSION_RENDERER_MODE_PREFER )
var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . random . nextInt ( ) + "" )	var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , Utilities . random . nextInt ( ) + "" )
var . setBufferedProgress ( int ( var . getBufferedPosition ( ) / 1000 ) . getBufferedPosition ( ) / 1000 , var . getBufferedPercentage ( ) )	var . setBufferedProgress ( int ( var . getBufferedPosition ( ) / 1000 ) . getBufferedPosition ( ) / 1000 )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
var . release ( )	var . countDown ( )
if ( var != null isCancelled  )	if ( var [ 0 ] != null isCancelled  )
if ( var == null || ! var . checkInlinePermissons ( ) || var || var || ! var )	if ( var == null || ! var . checkInlinePermissions ( ) || var || var || ! var )
if ( var != null && ! BuildVars . DEBUG_PRIVATE_VERSION )	if ( var != null )
if ( ConnectionsManager . getInstance ( ) . getConnectionState != ConnectionsManager . ConnectionStateConnected )	if ( ConnectionsManager . getInstance ( UserConfig . selectedAccount ) . getConnectionState != ConnectionsManager . ConnectionStateConnected )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
SharedPreferences var = var . getSharedPreferences ( "" , Context . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( UserConfig . selectedAccount )
showRateAlert ( var , null , var . call_id , var )	showRateAlert ( var , null , var . call_id , var , UserConfig . selectedAccount )
final CheckBoxCell var = new CheckBoxCell ( var , true )	final CheckBoxCell var = new CheckBoxCell ( var , 1 )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
SendMessagesHelper . prepareSendingDocument ( var . getAbsolutePath ( ) , var . getAbsolutePath ( ) , null , "" , var , null , null )	SendMessagesHelper . prepareSendingDocument ( var . getAbsolutePath ( ) , var . getAbsolutePath ( ) , null , "" , var , null , null , null )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Context . MODE_PRIVATE )	SharedPreferences var = MessagesController . getMainSettings ( var )
var . remove ( "" ) . apply	var . remove ( "" ) . commit
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
ContactsController . getInstance ( ) . var ( var )	ContactsController . getInstance ( currentAccount ) . var ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_NAME )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , ( long ) var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . peerSettingsDidLoaded , ( long ) var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var . setText ( LocaleController . formatUserStatus ( var ) )	var . setText ( LocaleController . formatUserStatus ( currentAccount , var ) , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . encryptedChatCreated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
ContactsController . getInstance ( ) . checkInviteText	ContactsController . getInstance ( currentAccount ) . checkInviteText
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . encryptedChatCreated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
MessagesController . getInstance ( ) . putUsers ( var , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var , null , false , true )
if ( var != null && var . containsKey ( var . id ) )	if ( var != null && var . indexOfKey ( var . id ) >= 0 )
SecretChatHelper . getInstance ( ) . startSecretChat ( getParentActivity , var )	SecretChatHelper . getInstance ( currentAccount ) . startSecretChat ( getParentActivity , var )
if ( MessagesController . checkCanOpenChat ( var , ContactsActivity . this ) )	if ( MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ContactsActivity . this ) )
if ( ! MessagesController . isFeatureEnabled ( "" , ContactsActivity . this ) )	if ( var != null && var . indexOfKey ( var . id ) >= 0 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
if ( var != null && var . containsKey ( var . id ) )	if ( var != null && var . indexOfKey ( var . id ) >= 0 )
SecretChatHelper . getInstance ( ) . startSecretChat ( getParentActivity , var )	SecretChatHelper . getInstance ( currentAccount ) . startSecretChat ( getParentActivity , var )
if ( MessagesController . checkCanOpenChat ( var , ContactsActivity . this ) )	if ( MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ContactsActivity . this ) )
var . putExtra ( "" , ContactsController . getInstance ( ) . getInviteText ( 1 ) )	var . putExtra ( "" , ContactsController . getInstance ( currentAccount ) . getInviteText ( 1 ) )
if ( var . shouldShowRequestPermissionRationale ( Manifest . permission . READ_CONTACTS )  )	if ( var . shouldShowRequestPermissionRationale ( Manifest . permission . READ_CONTACTS ) )
var . setMessage ( LocaleController . getString ( "" , R . string . PermissionContacts ) , R . string . PermissionContacts )	MessagesController . getGlobalNotificationsSettings ( ) . edit . putBoolean ( "" , var ) . commit
if ( var == null || var . checkSelfPermission ( Manifest . permission . READ_CONTACTS ) == PackageManager . PERMISSION_GRANTED )	if ( var == null || ! UserConfig . getInstance ( currentAccount ) . syncContacts || var . checkSelfPermission ( Manifest . permission . READ_CONTACTS ) == PackageManager . PERMISSION_GRANTED )
ContactsController . getInstance ( ) . forceImportContacts	ContactsController . getInstance ( currentAccount ) . forceImportContacts
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
MessagesController . getInstance ( ) . convertToMegaGroup ( getParentActivity , var )	MessagesController . getInstance ( currentAccount ) . convertToMegaGroup ( getParentActivity , var )
if ( var == MediaController . AUTODOWNLOAD_MASK_GIF )	if ( var == DownloadController . AUTODOWNLOAD_MASK_GIF )
var = MediaController . getInstance ( ) . var [ 0 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 0 ]
var = MediaController . getInstance ( ) . var [ 1 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 1 ]
var = MediaController . getInstance ( ) . var [ 2 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 2 ]
var = MediaController . getInstance ( ) . var [ 3 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 3 ]
var = MediaController . getInstance ( ) . var [ 0 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 0 ]
var = MediaController . getInstance ( ) . var [ 1 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 1 ]
var = MediaController . getInstance ( ) . var [ 2 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 2 ]
var = MediaController . getInstance ( ) . var [ 3 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 3 ]
var = MediaController . getInstance ( ) . var [ 0 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 0 ]
var = MediaController . getInstance ( ) . var [ 1 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 1 ]
var = MediaController . getInstance ( ) . var [ 2 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 2 ]
var = MediaController . getInstance ( ) . var [ 2 ]	var = DownloadController . getInstance ( currentAccount ) . var [ 2 ]
var = MediaController . getInstance ( ) . mobileMaxFileSize [ MediaController ] . maskToIndex ( var )	var = DownloadController . getInstance ( currentAccount ) . roamingMaxFileSize [ DownloadController ] . maskToIndex ( var )
var = MediaController . getInstance ( ) . wifiMaxFileSize [ MediaController ] . maskToIndex ( var )	var = DownloadController . getInstance ( currentAccount ) . mobileMaxFileSize [ DownloadController ] . maskToIndex ( var )
var = MediaController . getInstance ( ) . roamingMaxFileSize [ MediaController ] . maskToIndex ( var )	var = DownloadController . getInstance ( currentAccount ) . wifiMaxFileSize [ DownloadController ] . maskToIndex ( var )
if ( var != MediaController . AUTODOWNLOAD_MASK_PHOTO )	if ( var != DownloadController . AUTODOWNLOAD_MASK_PHOTO )
if ( var != MediaController . AUTODOWNLOAD_MASK_PHOTO )	if ( var != DownloadController . AUTODOWNLOAD_MASK_PHOTO )
if ( var != MediaController . AUTODOWNLOAD_MASK_PHOTO )	if ( var != DownloadController . AUTODOWNLOAD_MASK_PHOTO )
if ( var == MediaController . AUTODOWNLOAD_MASK_AUDIO )	if ( var == DownloadController . AUTODOWNLOAD_MASK_AUDIO )
if ( var == MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE )	if ( var == DownloadController . AUTODOWNLOAD_MASK_VIDEOMESSAGE )
if ( var == MediaController . AUTODOWNLOAD_MASK_VIDEO )	if ( var == DownloadController . AUTODOWNLOAD_MASK_VIDEO )
if ( var == MediaController . AUTODOWNLOAD_MASK_DOCUMENT )	if ( var == DownloadController . AUTODOWNLOAD_MASK_DOCUMENT )
if ( var == MediaController . AUTODOWNLOAD_MASK_MUSIC )	if ( var == DownloadController . AUTODOWNLOAD_MASK_MUSIC )
if ( var == MediaController . AUTODOWNLOAD_MASK_GIF )	if ( var == DownloadController . AUTODOWNLOAD_MASK_GIF )
MediaController . getInstance ( ) . var [ 0 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 0 ] = var
MediaController . getInstance ( ) . var [ 1 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 1 ] = var
MediaController . getInstance ( ) . var [ 2 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 2 ] = var
MediaController . getInstance ( ) . var [ 3 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 3 ] = var
MediaController . getInstance ( ) . var [ 0 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 0 ] = var
MediaController . getInstance ( ) . var [ 1 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 1 ] = var
MediaController . getInstance ( ) . var [ 2 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 2 ] = var
MediaController . getInstance ( ) . var [ 3 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 3 ] = var
MediaController . getInstance ( ) . var [ 0 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 0 ] = var
MediaController . getInstance ( ) . var [ 1 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 1 ] = var
MediaController . getInstance ( ) . var [ 2 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 2 ] = var
MediaController . getInstance ( ) . var [ 3 ] = var	DownloadController . getInstance ( currentAccount ) . var [ 3 ] = var
MediaController . getInstance ( ) . wifiMaxFileSize [ MediaController ] . maskToIndex ( var ) = var	DownloadController . getInstance ( currentAccount ) . wifiMaxFileSize [ DownloadController ] . maskToIndex ( var ) = var
MediaController . getInstance ( ) . roamingMaxFileSize [ MediaController ] . maskToIndex ( var ) = var	DownloadController . getInstance ( currentAccount ) . mobileMaxFileSize [ DownloadController ] . maskToIndex ( var ) = var
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit	SharedPreferences . Editor var = MessagesController . getMainSettings ( currentAccount ) . edit
var . putInt ( "" + MediaController . maskToIndex ( var ) , var )	var . putInt ( "" + DownloadController . maskToIndex ( var ) , var )
var . putInt ( "" + MediaController . maskToIndex ( var ) , var )	var . putInt ( "" + DownloadController . maskToIndex ( var ) , var )
MediaController . getInstance ( ) . checkAutodownloadSettings	DownloadController . getInstance ( currentAccount ) . checkAutodownloadSettings
if ( ! MediaController . getInstance ( ) . globalAutodownloadEnabled )	if ( ! DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_PHOTO ) . AUTODOWNLOAD_MASK_PHOTO )	presentFragment ( new DataAutoDownloadActivity ( DownloadController . AUTODOWNLOAD_MASK_PHOTO ) . AUTODOWNLOAD_MASK_PHOTO )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_AUDIO ) . AUTODOWNLOAD_MASK_AUDIO )	presentFragment ( new DataAutoDownloadActivity ( DownloadController . AUTODOWNLOAD_MASK_AUDIO ) . AUTODOWNLOAD_MASK_AUDIO )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE ) . AUTODOWNLOAD_MASK_VIDEOMESSAGE )	presentFragment ( new DataAutoDownloadActivity ( DownloadController . AUTODOWNLOAD_MASK_VIDEOMESSAGE ) . AUTODOWNLOAD_MASK_VIDEOMESSAGE )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_VIDEO ) . AUTODOWNLOAD_MASK_VIDEO )	presentFragment ( new DataAutoDownloadActivity ( DownloadController . AUTODOWNLOAD_MASK_VIDEO ) . AUTODOWNLOAD_MASK_VIDEO )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_DOCUMENT ) . AUTODOWNLOAD_MASK_DOCUMENT )	presentFragment ( new DataAutoDownloadActivity ( DownloadController . AUTODOWNLOAD_MASK_DOCUMENT ) . AUTODOWNLOAD_MASK_DOCUMENT )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_MUSIC ) . AUTODOWNLOAD_MASK_MUSIC )	presentFragment ( new DataAutoDownloadActivity ( DownloadController . AUTODOWNLOAD_MASK_MUSIC ) . AUTODOWNLOAD_MASK_MUSIC )
presentFragment ( new DataAutoDownloadActivity ( MediaController . AUTODOWNLOAD_MASK_GIF ) . AUTODOWNLOAD_MASK_GIF )	presentFragment ( new DataAutoDownloadActivity ( DownloadController . AUTODOWNLOAD_MASK_GIF ) . AUTODOWNLOAD_MASK_GIF )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit	SharedPreferences . Editor var = MessagesController . getMainSettings ( currentAccount ) . edit
MediaController var = MediaController . getInstance ( )	DownloadController var = DownloadController . getInstance ( currentAccount )
var . mobileDataDownloadMask [ var ] = MediaController . AUTODOWNLOAD_MASK_PHOTO | MediaController . AUTODOWNLOAD_MASK_AUDIO | MediaController . AUTODOWNLOAD_MASK_MUSIC | MediaController . AUTODOWNLOAD_MASK_GIF | MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE	var . mobileDataDownloadMask [ var ] = DownloadController . AUTODOWNLOAD_MASK_PHOTO | DownloadController . AUTODOWNLOAD_MASK_AUDIO | DownloadController . AUTODOWNLOAD_MASK_MUSIC | DownloadController . AUTODOWNLOAD_MASK_GIF | DownloadController . AUTODOWNLOAD_MASK_VIDEOMESSAGE
var . wifiDownloadMask [ var ] = MediaController . AUTODOWNLOAD_MASK_PHOTO | MediaController . AUTODOWNLOAD_MASK_AUDIO | MediaController . AUTODOWNLOAD_MASK_MUSIC | MediaController . AUTODOWNLOAD_MASK_GIF | MediaController . AUTODOWNLOAD_MASK_VIDEOMESSAGE	var . wifiDownloadMask [ var ] = DownloadController . AUTODOWNLOAD_MASK_PHOTO | DownloadController . AUTODOWNLOAD_MASK_AUDIO | DownloadController . AUTODOWNLOAD_MASK_MUSIC | DownloadController . AUTODOWNLOAD_MASK_GIF | DownloadController . AUTODOWNLOAD_MASK_VIDEOMESSAGE
var . roamingDownloadMask [ var ] = 0	var . mobileMaxFileSize [ var ] = var
if ( ! MediaController . getInstance ( ) . globalAutodownloadEnabled )	if ( ! DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled )
MediaController . getInstance ( ) . globalAutodownloadEnabled = true	DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled = true
var . putBoolean ( "" , MediaController . getInstance ( ) . globalAutodownloadEnabled )	var . putBoolean ( "" , DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled )
MediaController . getInstance ( ) . checkAutodownloadSettings	DownloadController . getInstance ( currentAccount ) . checkAutodownloadSettings
MediaController . getInstance ( ) . globalAutodownloadEnabled = ! MediaController . getInstance ( ) . globalAutodownloadEnabled	DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled = ! DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled
var . edit ( ) . putBoolean ( "" , MediaController . getInstance ( ) . globalAutodownloadEnabled ) . commit	var . edit ( ) . putBoolean ( "" , DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled ) . commit
var . setChecked ( MediaController . getInstance ( ) . globalAutodownloadEnabled )	var . setChecked ( DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled )
presentFragment ( new ProxySettingsActivity )	presentFragment ( new ProxyListActivity )
MediaController . getInstance ( ) . checkAutodownloadSettings	DownloadController . getInstance ( currentAccount ) . checkAutodownloadSettings
var . setEnabled ( MediaController . getInstance ( ) . globalAutodownloadEnabled , var )	var . setEnabled ( DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . VoipUseLessData ) , R . string . VoipUseLessData , var , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . VoipUseLessData ) , R . string . VoipUseLessData , var , true )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . AutoDownloadMedia ) , R . string . AutoDownloadMedia , MediaController . getInstance ( ) . globalAutodownloadEnabled , true )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . AutoDownloadMedia ) , R . string . AutoDownloadMedia , DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled , true )
var . setEnabled ( MediaController . getInstance ( ) . globalAutodownloadEnabled , null )	var . setEnabled ( DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled , null )
var . setChecked ( MediaController . getInstance ( ) . globalAutodownloadEnabled )	var . setChecked ( DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled )
return MediaController . getInstance ( ) . globalAutodownloadEnabled	return DownloadController . getInstance ( currentAccount ) . globalAutodownloadEnabled
return var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var	return var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var
if ( var == var || var == var || var == var || var == var == var || var == var || var == var || var == var == var )	if ( var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var == var )
if ( var == var || var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var || var == var )
StatsController . getInstance ( ) . resetStats ( var )	StatsController . getInstance ( currentAccount ) . resetStats ( var )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . OutgoingCalls ) , R . string . OutgoingCalls , String . format ( "" , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var , true )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . OutgoingCalls ) , R . string . OutgoingCalls , String . format ( "" , StatsController . getInstance ( currentAccount ) . getSentItemsCount ( var , var ) , var ) , StatsController . getInstance ( currentAccount ) . getSentItemsCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . IncomingCalls ) , R . string . IncomingCalls , String . format ( "" , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var , true )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . IncomingCalls ) , R . string . IncomingCalls , String . format ( "" , StatsController . getInstance ( currentAccount ) . getRecivedItemsCount ( var , var ) , var ) , StatsController . getInstance ( currentAccount ) . getRecivedItemsCount ( var , var ) , var , true )
int var = StatsController . getInstance ( ) . getCallsTotalTime ( var )	int var = StatsController . getInstance ( currentAccount ) . getCallsTotalTime ( var )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . CountSent ) , R . string . CountSent , String . format ( "" , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getSentItemsCount ( var , var ) , var , true )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . CountSent ) , R . string . CountSent , String . format ( "" , StatsController . getInstance ( currentAccount ) . getSentItemsCount ( var , var ) , var ) , StatsController . getInstance ( currentAccount ) . getSentItemsCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . CountReceived ) , R . string . CountReceived , String . format ( "" , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var ) , StatsController . getInstance ( ) . getRecivedItemsCount ( var , var ) , var , true )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . CountReceived ) , R . string . CountReceived , String . format ( "" , StatsController . getInstance ( currentAccount ) . getRecivedItemsCount ( var , var ) , var ) , StatsController . getInstance ( currentAccount ) . getRecivedItemsCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . BytesSent ) , R . string . BytesSent , AndroidUtilities . formatFileSize ( StatsController . getInstance ( ) . getSentBytesCount ( var , var ) , var ) . getInstance ( ) . getSentBytesCount ( var , var ) , var , true )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . BytesSent ) , R . string . BytesSent , AndroidUtilities . formatFileSize ( StatsController . getInstance ( currentAccount ) . getSentBytesCount ( var , var ) , var ) . getInstance ( currentAccount ) . getSentBytesCount ( var , var ) , var , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . BytesReceived ) , R . string . BytesReceived , AndroidUtilities . formatFileSize ( StatsController . getInstance ( ) . getReceivedBytesCount ( var , var ) , var ) . getInstance ( ) . getReceivedBytesCount ( var , var ) , var , var != var )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . BytesReceived ) , R . string . BytesReceived , AndroidUtilities . formatFileSize ( StatsController . getInstance ( currentAccount ) . getReceivedBytesCount ( var , var ) , var ) . getInstance ( currentAccount ) . getReceivedBytesCount ( var , var ) , var , var != var )
var . setText ( LocaleController . formatString ( "" , R . string . NetworkUsageSince , LocaleController . getInstance ( ) . formatterStats . format ( StatsController . getInstance ( ) . getResetStatsDate ( var ) ) . getInstance ( ) . getResetStatsDate ( var ) ) , R . string . NetworkUsageSince , LocaleController . getInstance ( ) . formatterStats . format ( StatsController . getInstance ( ) . getResetStatsDate ( var ) ) . getInstance ( ) . getResetStatsDate ( var ) )	var . setText ( LocaleController . formatString ( "" , R . string . NetworkUsageSince , LocaleController . getInstance ( ) . formatterStats . format ( StatsController . getInstance ( currentAccount ) . getResetStatsDate ( var ) ) . getInstance ( currentAccount ) . getResetStatsDate ( var ) ) , R . string . NetworkUsageSince , LocaleController . getInstance ( ) . formatterStats . format ( StatsController . getInstance ( currentAccount ) . getResetStatsDate ( var ) ) . getInstance ( currentAccount ) . getResetStatsDate ( var ) )
if ( getArguments != null )	if ( getArguments var != null )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . openedChatChanged )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . openedChatChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageReceivedByAck )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageReceivedByServer )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messageSendError )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . needReloadRecentDialogsSearch )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . needReloadRecentDialogsSearch )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . reloadHints )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . reloadHints )
if ( ! var )	if ( ! dialogsLoaded [ currentAccount ] )
MessagesController . getInstance ( ) . loadDialogs ( 0 , 100 , true )	MessagesController . getInstance ( currentAccount ) . loadDialogs ( 0 , 100 , true )
ContactsController . getInstance ( ) . checkInviteText	ContactsController . getInstance ( currentAccount ) . checkInviteText var
MessagesController . getInstance ( ) . loadPinnedDialogs ( 0 , null )	MessagesController . getInstance ( currentAccount ) . loadPinnedDialogs ( 0 , null )
StickersQuery . loadRecents ( StickersQuery . TYPE_FAVE , false , true , false )	DataQuery . getInstance ( currentAccount ) . loadRecents ( DataQuery . TYPE_FAVE , false , true , false )
StickersQuery . checkFeaturedStickers ( )	DataQuery . getInstance ( currentAccount ) . checkFeaturedStickers var
var = true	dialogsLoaded [ currentAccount ] = true
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . dialogsNeedReload )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . openedChatChanged )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . openedChatChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageReceivedByAck )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messageReceivedByAck )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messageSendError )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messageSendError )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . needReloadRecentDialogsSearch )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . needReloadRecentDialogsSearch )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didLoadedReplyMessages )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . reloadHints )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . reloadHints )
ActionBarMenu var = actionBar . createMenu ( )	ActionBarMenu var = actionBar . createMenu ( var )
var . setEmptyView ( null )	var . setTag ( null )
if ( var . getAdapter ( ) != var )	if ( var . getAdapter ( var ) != var )
var . notifyDataSetChanged ( )	var . notifyDataSetChanged ( var )
String var = var . getText ( ) . toString	String var = var . getText ( var ) . toString var
if ( var . length ( ) != 0 || var != null && var . hasRecentRearch ( ) )	if ( var . length ( var ) != 0 || var != null && var . hasRecentRearch ( var ) )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . DEBUG_VERSION var )
UserConfig . appLocked = ! UserConfig . appLocked	SharedConfig . appLocked = ! SharedConfig . appLocked
UserConfig . saveConfig ( false )	updateProxyButton ( false )
int var = getKeyboardHeight	int var = getKeyboardHeight var
ArrayList < TLRPC . User > var = new ArrayList	var = ( ( TLRPC . User ) var ) . id
if ( var . isGlobalSearch ( var ) )	var = var . var ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
if ( MessagesController . checkCanOpenChat ( var , DialogsActivity . this ) )	if ( var != null var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
final TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	final TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
if ( MessagesController . getInstance ( var ) . pinDialog ( var , ! var , null , 0 ) && ! var )	if ( MessagesController . getInstance ( currentAccount ) . pinDialog ( var , ! var , null , 0 ) && ! var )
MessagesController . getInstance ( var ) . deleteDialog ( var , 1 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 1 )
MessagesController . getInstance ( var ) . deleteDialog ( var , 2 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 2 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats , var )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
if ( MessagesController . getInstance ( ) . pinDialog ( var , ! var , null , 0 ) && ! var )	if ( MessagesController . getInstance ( currentAccount ) . pinDialog ( var , ! var , null , 0 ) && ! var )
if ( var != 1 )	if ( var != 1 var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( ( int ) - var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( ( int ) - var )
if ( var != null && ChatObject . isNotInChat ( var ) )	if ( var != null && ChatObject . isNotInChat ( var ) var )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 0 )
MessagesController . getInstance ( ) . blockUser ( ( int ) var )	MessagesController . getInstance ( currentAccount ) . blockUser ( ( int ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats , var )
MessagesController . getInstance ( ) . deleteDialog ( var , 1 )	MessagesController . getInstance ( currentAccount ) . deleteDialog ( var , 1 )
int var = Math . abs ( var . findLastVisibleItemPosition ( ) - var ) + 1	int var = Math . abs ( var . findLastVisibleItemPosition ( var ) - var ) + 1
if ( var > 0 && var . findLastVisibleItemPosition ( ) == var - 1 && ! var . isMessagesSearchEndReached ( ) )	if ( var > 0 && var . findLastVisibleItemPosition ( var ) == var - 1 && ! var . isMessagesSearchEndReached ( var ) )
if ( var . findLastVisibleItemPosition ( ) >= getDialogsArray . size - 10 )	if ( var . findLastVisibleItemPosition ( var ) >= getDialogsArray var . size var - 10 )
if ( var || ! MessagesController . getInstance ( ) . serverDialogsEndReached )	if ( var || ! MessagesController . getInstance ( currentAccount ) . serverDialogsEndReached )
MessagesController . getInstance ( ) . loadDialogs ( - 1 , 100 , var )	MessagesController . getInstance ( currentAccount ) . loadDialogs ( - 1 , 100 , var )
var = var . getTop ( )	var = var . getTop ( var )
if ( var && var )	if ( var && var && ( var || ! var && var ) )
Bundle var = new Bundle	Bundle var = new Bundle var
if ( var != null )	if ( var != null var )
if ( MessagesController . checkCanOpenChat ( var , DialogsActivity . this ) )	if ( MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , DialogsActivity . this ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
SearchQuery . removePeer ( var )	DataQuery . getInstance ( currentAccount ) . removePeer ( var )
var . setVisibility ( View . GONE )	var . setColorFilter ( new PorterDuffColorFilter ( 0xff000000 , PorterDuff . Mode . MULTIPLY ) , PorterDuff . Mode . MULTIPLY )
var . setEmptyView ( var )	var . setIconSize ( AndroidUtilities . dp ( 56 ) , AndroidUtilities . dp ( 56 ) )
var . addView ( var = new FragmentContextView ( var , this , true ) , this , true , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )
var . addView ( var = new FragmentContextView ( var , this , false ) , this , false , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )
AnimatorSet var = new AnimatorSet	AnimatorSet var = new AnimatorSet var
if ( var . checkSelfPermission ( Manifest . permission . READ_CONTACTS ) != PackageManager . PERMISSION_GRANTED )	if ( UserConfig . getInstance ( currentAccount ) . syncContacts && var && var . checkSelfPermission ( Manifest . permission . READ_CONTACTS ) != PackageManager . PERMISSION_GRANTED )
if ( var != null && var == var && getParentActivity != null )	if ( var != null && var == var && getParentActivity var != null )
ContactsController . getInstance ( ) . forceImportContacts	ContactsController . getInstance ( currentAccount ) . forceImportContacts var
if ( var . isDataSetChanged ( ) )	if ( var . isDataSetChanged ( var ) || var . length > 0 var )
if ( MessagesController . getInstance ( ) . loadingDialogs && MessagesController . getInstance ( ) . dialogs . isEmpty ( ) )	if ( var . getAdapter ( var ) == var var )
if ( var == NotificationCenter . appDidLogout = false )	if ( var == NotificationCenter . appDidLogout )
var = false	dialogsLoaded [ currentAccount ] = false
if ( var == NotificationCenter . contactsDidLoaded )	if ( var != var )
return MessagesController . getInstance ( ) . dialogsGroupsOnly	if ( var || ! MessagesController . getInstance ( currentAccount ) . serverDialogsEndReached )
return MessagesController . getInstance ( ) . dialogsForward	boolean var = ! MessagesController . getInstance ( currentAccount ) . dialogsEndReached
if ( UserConfig . passcodeHash . length ( ) != 0 && ! var )	if ( SharedConfig . passcodeHash . length ( var ) != 0 && ! var var )
if ( UserConfig . appLocked )	if ( SharedConfig . appLocked var )
var . start ( )	var . start ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - ( int ) var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - ( int ) var )
if ( ChatObject . isChannel ( var ) && ! var . megagroup && ( var || ! ChatObject . isCanWriteToChannel ( - ( int ) var ) ) )	if ( ChatObject . isChannel ( var ) && ! var . megagroup && ( var || ! ChatObject . isCanWriteToChannel ( - ( int ) var , currentAccount ) ) )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
if ( var != null )	if ( var != null var )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	TLRPC . EncryptedChat var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
var = var . getChildCount ( )	int var = var . getChildCount ( var )
return new ThemeDescription	return new ThemeDescription var
ArrayList < String > var = new ArrayList	ArrayList < String > var = new ArrayList ( var . keySet ( ) )
var . addAll ( var . keySet ( ) )	ArrayList < String > var = new ArrayList ( var . keySet ( ) )
FileLog . e ( var )	FileLog . d ( var )
StickersQuery . checkFeaturedStickers ( )	DataQuery . getInstance ( currentAccount ) . checkFeaturedStickers
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . stickersDidLoaded )
ArrayList < Long > var = StickersQuery . getUnreadStickerSets ( )	ArrayList < Long > var = DataQuery . getInstance ( currentAccount ) . getUnreadStickerSets
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )
final TLRPC . StickerSetCovered var = StickersQuery . getFeaturedStickerSets ( ) . get ( var )	final TLRPC . StickerSetCovered var = DataQuery . getInstance ( currentAccount ) . getFeaturedStickerSets . get ( var )
var = StickersQuery . getUnreadStickerSets ( )	var = DataQuery . getInstance ( currentAccount ) . getUnreadStickerSets
ArrayList < TLRPC . StickerSetCovered > var = StickersQuery . getFeaturedStickerSets ( )	ArrayList < TLRPC . StickerSetCovered > var = DataQuery . getInstance ( currentAccount ) . getFeaturedStickerSets
StickersQuery . markFaturedStickersAsRead ( true )	DataQuery . getInstance ( currentAccount ) . markFaturedStickersAsRead ( true )
ArrayList < TLRPC . StickerSetCovered > var = StickersQuery . getFeaturedStickerSets ( )	ArrayList < TLRPC . StickerSetCovered > var = DataQuery . getInstance ( currentAccount ) . getFeaturedStickerSets
boolean var = var . containsKey ( var . set . id )	boolean var = var . indexOfKey ( var . set . id ) >= 0
if ( var . containsKey ( var . set . id ) )	if ( var . indexOfKey ( var . set . id ) >= 0 )
StickersQuery . removeStickersSet ( getParentActivity , var . set , 2 , FeaturedStickersActivity . this , false )	DataQuery . getInstance ( currentAccount ) . removeStickersSet ( getParentActivity , var . set , 2 , FeaturedStickersActivity . this , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidCreated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidCreated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatDidCreated )
if ( ContactsController . getInstance ( ) . isLoadingContacts )	if ( ContactsController . getInstance ( currentAccount ) . isLoadingContacts )
if ( var = var . containsKey ( var . id ) )	if ( var = var . indexOfKey ( var . id ) >= 0 )
if ( var == ChatObject . CHAT_TYPE_CHAT && var . size ( ) == MessagesController . getInstance ( ) . maxGroupCount )	if ( var == ChatObject . CHAT_TYPE_CHAT && var . size ( ) == MessagesController . getInstance ( currentAccount ) . maxGroupCount )
MessagesController . getInstance ( ) . putUser ( var , ! var )	MessagesController . getInstance ( currentAccount ) . putUser ( var , ! var )
var . setChecked ( var . containsKey ( var . id ) . id , true )	var . setChecked ( var . indexOfKey ( var . id ) . id >= 0 , true )
TLRPC . InputUser var = MessagesController . getInputUser ( MessagesController . getInstance ( ) . getUser ( var ) )	TLRPC . InputUser var = MessagesController . getInstance ( currentAccount ) . getInputUser ( MessagesController . getInstance ( currentAccount ) . getUser ( var . keyAt ( var ) ) . keyAt ( var ) )
MessagesController . getInstance ( ) . addUsersToChannel ( var , var , null )	MessagesController . getInstance ( currentAccount ) . addUsersToChannel ( var , var , null )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
if ( ! var || var . isEmpty ( ) )	if ( ! var || var . size ( ) == 0 )
var . addAll ( var . keySet ( ) )	var . add ( var . keyAt ( var ) )
if ( var . isEmpty ( ) )	if ( var . size ( ) == 0 )
ArrayList < TLRPC . TL_contact > var = ContactsController . getInstance ( ) . var	ArrayList < TLRPC . TL_contact > var = ContactsController . getInstance ( currentAccount ) . var
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . get ( var ) . user_id )
var = new SearchAdapterHelper	var = new SearchAdapterHelper ( true )
( ( SpannableStringBuilder ) var ) . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , 0 , var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new ForegroundColorSpan ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 ) . getColor ( Theme . key_windowBackgroundWhiteBlueText4 ) . key_windowBackgroundWhiteBlueText4 , var , var + var , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setChecked ( var . containsKey ( var . id ) . id , false )	var . setChecked ( var . indexOfKey ( var . id ) . id >= 0 , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidCreated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatDidFailCreate )
if ( MessagesController . getInstance ( ) . getUser ( var ) == null )	if ( MessagesController . getInstance ( currentAccount ) . getUser ( var ) == null )
final Semaphore var = new Semaphore ( 0 )	final CountDownLatch var = new CountDownLatch ( 1 )
var . addAll ( MessagesStorage . getInstance ( ) . getUsers ( var ) )	var . addAll ( MessagesStorage . getInstance ( currentAccount ) . getUsers ( var ) )
var . release ( )	var . countDown ( )
var . acquire ( )	var . await ( )
MessagesController . getInstance ( ) . putUser ( var , true )	MessagesController . getInstance ( currentAccount ) . putUser ( var , true )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidCreated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatDidCreated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatDidFailCreate )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatDidFailCreate )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
if ( var . uploadingAvatar != null = true )	if ( var . uploadingImage != null = true )
var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , null , var , GroupCreateFinalActivity . this )	var = MessagesController . getInstance ( currentAccount ) . createChat ( var . getText ( ) . toString , var , null , var , GroupCreateFinalActivity . this )
MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , null , var , GroupCreateFinalActivity . this )	MessagesController . getInstance ( currentAccount ) . createChat ( var . getText ( ) . toString , var , null , var , GroupCreateFinalActivity . this )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . changeChatAvatar ( var , var )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var - 1 ) - 1 )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . get ( var - 1 ) - 1 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
MessagesController . getInstance ( ) . loadFullChat ( var , classGuid , true )	MessagesController . getInstance ( currentAccount ) . loadFullChat ( var , classGuid , true )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
var = MessagesController . getInstance ( ) . getExportedInvite ( var )	var = MessagesController . getInstance ( currentAccount ) . getExportedInvite ( var )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var , currentAccount ) )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
StickersQuery . checkStickers ( StickersQuery . TYPE_IMAGE )	DataQuery . getInstance ( currentAccount ) . checkStickers ( DataQuery . TYPE_IMAGE )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . groupStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . groupStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . groupStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . groupStickersDidLoaded )
var . setText ( MessagesController . getInstance ( ) . linkPrefix + "" )	var . setText ( MessagesController . getInstance ( currentAccount ) . linkPrefix + "" )
var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE ) . get ( var - var )	var = DataQuery . getInstance ( currentAccount ) . getStickerSets ( DataQuery . TYPE_IMAGE ) . get ( var - var )
if ( ( Integer ) var [ 0 ] == StickersQuery . TYPE_IMAGE )	if ( ( Integer ) var [ 0 ] == DataQuery . TYPE_IMAGE )
var = StickersQuery . getGroupStickerSetById ( var . stickerset )	var = DataQuery . getInstance ( currentAccount ) . getGroupStickerSetById ( var . stickerset )
var = StickersQuery . getGroupStickerSetById ( var . stickerset )	var = DataQuery . getInstance ( currentAccount ) . getGroupStickerSetById ( var . stickerset )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
TLRPC . TL_messages_stickerSet var = StickersQuery . getStickerSetByName ( var )	TLRPC . TL_messages_stickerSet var = DataQuery . getInstance ( currentAccount ) . getStickerSetByName ( var )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit . remove ( "" + var . id ) . commit	MessagesController . getEmojiSettings ( currentAccount ) . edit . remove ( "" + var . id ) . commit
StickersQuery . putGroupStickerSet ( var )	DataQuery . getInstance ( currentAccount ) . putGroupStickerSet ( var )
MessagesStorage . getInstance ( ) . updateChatInfo ( var , false )	MessagesStorage . getInstance ( currentAccount ) . updateChatInfo ( var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , true , null )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE )	ArrayList < TLRPC . TL_messages_stickerSet > var = DataQuery . getInstance ( currentAccount ) . getStickerSets ( DataQuery . TYPE_IMAGE )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( StickersQuery . TYPE_IMAGE )	ArrayList < TLRPC . TL_messages_stickerSet > var = DataQuery . getInstance ( currentAccount ) . getStickerSets ( DataQuery . TYPE_IMAGE )
MessagesController . openByUserName ( "" , GroupStickersActivity . this , 1 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( "" , GroupStickersActivity . this , 1 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( var )	TLRPC . EncryptedChat var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
ConnectionsManager . getInstance ( ) . switchBackend	ConnectionsManager . getInstance ( var ) . switchBackend
LocaleController . getInstance ( ) . applyLanguage ( var , true , false )	LocaleController . getInstance ( ) . applyLanguage ( var , true , false , var )
LocaleController . getInstance ( ) . loadRemoteLanguages	LocaleController . getInstance ( ) . loadRemoteLanguages ( var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( false , false )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( true , false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsImported )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsImported )
if ( ! UserConfig . contactsReimported )	if ( ! UserConfig . getInstance ( currentAccount ) . contactsReimported )
ContactsController . getInstance ( ) . forceImportContacts	ContactsController . getInstance ( currentAccount ) . forceImportContacts
UserConfig . contactsReimported = true	UserConfig . getInstance ( currentAccount ) . contactsReimported = true
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsImported )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsImported )
if ( ContactsController . getInstance ( ) . isLoadingContacts )	if ( ContactsController . getInstance ( currentAccount ) . isLoadingContacts )
String var = ContactsController . getInstance ( ) . getInviteText ( 0 )	String var = ContactsController . getInstance ( currentAccount ) . getInviteText ( 0 )
var . putExtra ( "" , ContactsController . getInstance ( ) . getInviteText ( var ) )	var . putExtra ( "" , ContactsController . getInstance ( currentAccount ) . getInviteText ( var ) )
var . setBackgroundDrawable ( Theme . createRoundRectDrawable ( AndroidUtilities . dp ( 10 ) , 0xffffffff ) . dp ( 10 ) , 0xffffffff )	var . setBackgroundDrawable ( Theme . createRoundRectDrawable ( AndroidUtilities . dp ( 10 ) , Theme . getColor ( Theme . key_contacts_inviteText ) . key_contacts_inviteText ) . dp ( 10 ) , Theme . getColor ( Theme . key_contacts_inviteText ) . key_contacts_inviteText )
var = new ArrayList ( ContactsController . getInstance ( ) . var )	var = new ArrayList ( ContactsController . getInstance ( currentAccount ) . var )
LocaleController . getInstance ( ) . loadRemoteLanguages	LocaleController . getInstance ( ) . loadRemoteLanguages ( currentAccount )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )
LocaleController . getInstance ( ) . applyLanguage ( var , true , false , false , true )	LocaleController . getInstance ( ) . applyLanguage ( var , true , false , false , true , currentAccount )
if ( LocaleController . getInstance ( ) . deleteLanguage ( var ) )	if ( LocaleController . getInstance ( ) . deleteLanguage ( var , currentAccount ) )
NativeCrashManager . handleDumpFiles ( this )	var = new TermsOfServiceView ( this )
if ( ! UserConfig . isClientActivated ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated )
if ( Math . abs ( var - System . currentTimeMillis ( ) ) >= 60 * 2 * 1000 && var != null && ! var )	if ( ! var && Math . abs ( var - System . currentTimeMillis ( ) ) >= 60 * 2 * 1000 && var != null && ! var )
if ( UserConfig . passcodeHash . length ( ) > 0 && ! UserConfig . allowScreenCapture )	if ( SharedConfig . passcodeHash . length ( ) > 0 && ! SharedConfig . allowScreenCapture )
if ( UserConfig . passcodeHash . length ( ) != 0 && UserConfig . appLocked )	if ( SharedConfig . passcodeHash . length ( ) != 0 && SharedConfig . appLocked )
UserConfig . lastPauseTime = ConnectionsManager . getInstance ( ) . getCurrentTime	SharedConfig . lastPauseTime = ConnectionsManager . getInstance ( var ) . getCurrentTime
if ( ! MessagesController . isFeatureEnabled ( "" , var . fragmentsStack . get ( var . fragmentsStack . size ( ) - 1 ) . fragmentsStack . size ( ) - 1 ) )	if ( var == UserConfig . selectedAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
var . putInt ( "" , UserConfig . getClientUserId ( ) )	var . putInt ( "" , UserConfig . getInstance ( var ) . getClientUserId )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeOtherAppActivities , this )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . closeOtherAppActivities , this )
var = ConnectionsManager . getInstance ( ) . getConnectionState	var = ConnectionsManager . getInstance ( var ) . getConnectionState
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeOtherAppActivities )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . closeOtherAppActivities )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didUpdatedConnectionState )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . needShowAlert )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . needShowAlert )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . wasUnableToFindCurrentLocation )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . wasUnableToFindCurrentLocation )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . reloadInterface )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . reloadInterface )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . suggestedLangpack )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . openArticle )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . openArticle )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . hasNewContactsToImport )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . hasNewContactsToImport )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetNewTheme )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didSetNewTheme )
if ( ! UserConfig . isClientActivated ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated )
FileLog . var ( "" + AndroidUtilities . displaySize . y )	FileLog . d ( "" + AndroidUtilities . displaySize . y )
UserConfig . appLocked = true	SharedConfig . appLocked = true
if ( PhotoViewer . getInstance ( ) . isVisible )	if ( PhotoViewer . hasInstance ( ) && PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )	if ( ArticleViewer . hasInstance ( ) && ArticleViewer . getInstance ( ) . isVisible )
UserConfig . isWaitingForPasscodeEnter = true	SharedConfig . isWaitingForPasscodeEnter = true
UserConfig . isWaitingForPasscodeEnter = false	SharedConfig . isWaitingForPasscodeEnter = false
if ( ! var && ( AndroidUtilities . needShowPasscode ( true ) || UserConfig . isWaitingForPasscodeEnter ) )	if ( ! var && ( AndroidUtilities . needShowPasscode ( true ) || SharedConfig . isWaitingForPasscodeEnter ) var )
UserConfig . saveConfig ( false )	UserConfig . getInstance ( 0 ) . saveConfig ( false )
if ( UserConfig . isClientActivated ( ) && ( var & Intent . FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY ) == 0 )	if ( UserConfig . getInstance ( var ) . isClientActivated var && ( var & Intent . FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY ) == 0 )
if ( var != null && var . getAction ( ) != null && ! var )	if ( var != null && var . getAction ( var ) != null && ! var )
if ( var != null && var . equals ( ContactsContract . Contacts . CONTENT_VCARD_TYPE ) )	if ( var != null && var . equals ( ContactsContract . Contacts . CONTENT_VCARD_TYPE ) var )
VcardData var = null	Cursor var = null
while ( ( var = var . readLine ( ) ) != null )	var = AndroidUtilities . loadVCardFromStream ( var , var , false , null , null )
String var = null	HashMap < String , String > var = null
var . name = var . name . substring ( 0 , var . name . length ( ) - 1 )	var . removeFragmentFromStack ( 0 )
byte var = AndroidUtilities . decodeQuotedPrintable ( var . name . getBytes ( ) )	var = AndroidUtilities . loadVCardFromStream ( var , var , false , null , null )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < UserConfig . MAX_ACCOUNT_COUNT ; var ++ )
VcardData var = var . get ( var )	if ( UserConfig . getInstance ( var ) . isClientActivated )
if ( var . name != null && ! var . phones . isEmpty ( ) )	var = AndroidUtilities . loadVCardFromStream ( var , var , false , null , null )
var = new ArrayList	var = var
String var = var . phones . get ( var )	String var = null
TLRPC . User var = new TLRPC . TL_userContact_old2 ( )	TLRPC . User var = var . get ( var )
if ( var != null && var . length ( ) > 0 = var )	if ( var != null && var . length ( var ) > 0 = var )
if ( var . getAction ( ) . equals ( Intent . ACTION_SEND_MULTIPLE ) )	if ( Intent . ACTION_SEND_MULTIPLE . equals ( var . getAction ( var ) ) )
String var = var . getType ( )	String var = var . getType ( var )
SendMessagesHelper . SendingMediaInfo var = new SendMessagesHelper . SendingMediaInfo ( )	SendMessagesHelper . SendingMediaInfo var = new SendMessagesHelper . SendingMediaInfo ( var )
if ( var != null || var != null || var != null || var != null || var != null || instantView != null )	if ( var != null || var != null || var != null || var != null || var != null || instantView != null || var != null || var != null )
if ( var . isEmpty ( ) || MessagesController . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )	if ( var . isEmpty ( ) || MessagesController . getInstance ( var ) . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )
if ( ! AndroidUtilities . isTablet ( ) )	if ( ! AndroidUtilities . isTablet ( var ) )
if ( var == 0 )	if ( var == 0 var )
if ( var != null )	if ( var != null var )
if ( PhotoViewer . getInstance ( ) . isVisible )	if ( PhotoViewer . hasInstance ( ) && PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )	if ( ArticleViewer . hasInstance ( ) && ArticleViewer . getInstance ( ) . isVisible )
var . presentFragment ( new SettingsActivity , false , true , true )	var . presentFragment ( new SettingsActivity var , false , true , true , false )
var . presentFragment ( new ContactsActivity ( var ) , false , true , true )	var . presentFragment ( new ContactsActivity ( var ) , false , true , true , false )
if ( ! UserConfig . isClientActivated ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated var var )
var . addFragmentToStack ( new LoginActivity )	var . addFragmentToStack ( new LoginActivity var )
if ( ! UserConfig . isClientActivated ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated var var )
var . showLastFragment ( )	var . showLastFragment ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , false , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , var . chats , false , true )
var . id . bot_id = MessagesController . getInputUser ( var . users . get ( 0 ) )	var . id . bot_id = MessagesController . getInstance ( var ) . getInputUser ( var . users . get ( 0 ) )
SendMessagesHelper . getInstance ( ) . sendGame ( MessagesController . getInputPeer ( ( int ) var ) int ) var , var , 0 , 0 )	SendMessagesHelper . getInstance ( var ) . sendGame ( MessagesController . getInstance ( var ) . getInputPeer ( ( int ) var ) int ) var , var , 0 , 0 )
var . presentFragment ( var , var , true , true )	var . presentFragment ( var , var , true , true , false )
SecretMediaViewer . getInstance ( ) . closePhoto ( false , false )	SecretMediaViewer . getInstance ( var ) . closePhoto ( false , false )
if ( PhotoViewer . getInstance ( ) . isVisible )	if ( PhotoViewer . hasInstance ( var ) && PhotoViewer . getInstance ( var ) . isVisible var )
if ( ArticleViewer . getInstance ( ) . isVisible )	if ( ArticleViewer . hasInstance ( var ) && ArticleViewer . getInstance ( var ) . isVisible var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . addUserToChat ( - ( int ) var , var , null , 0 , var , null )	MessagesController . getInstance ( var ) . addUserToChat ( - ( int ) var , var , null , 0 , var , null )
var . presentFragment ( new ChatActivity ( var ) , true , false , true )	var . presentFragment ( new ChatActivity ( var ) , true , false , true , false )
if ( var == null || MessagesController . checkCanOpenChat ( var , var ) )	if ( var == null || MessagesController . getInstance ( var ) . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( ) . putChat ( var . chat , false )	MessagesController . getInstance ( var ) . putChat ( var . chat , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( null , var , false , true )	MessagesStorage . getInstance ( var ) . putUsersAndChats ( null , var , false , true )
if ( var . isEmpty ( ) || MessagesController . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )	if ( var . isEmpty ( ) || MessagesController . getInstance ( var ) . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
runLinkRequest ( var , var , var , var , var , var , var , var , var , var , 1 )	runLinkRequest ( var , var , var , var , var , var , var , var , var , var , var , var , var , 1 )
MessagesController . getInstance ( ) . processUpdates ( var , false )	MessagesController . getInstance ( var ) . processUpdates ( var , false )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( var ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( var ) . putChats ( var . chats , false )
if ( var . isEmpty ( ) || MessagesController . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )	if ( var . isEmpty ( ) || MessagesController . getInstance ( var ) . checkCanOpenChat ( var , var . get ( var . size ( ) - 1 ) . size ( ) - 1 ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
if ( MessagesController . checkCanOpenChat ( var , var ) )	if ( MessagesController . getInstance ( var ) . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
DraftQuery . saveDraft ( var , var , null , null , true )	DataQuery . getInstance ( var ) . saveDraft ( var , var , null , null , false )
var . presentFragment ( new ChatActivity ( var ) , true , false , true )	var . presentFragment ( new ChatActivity ( var ) , true , false , true , false )
if ( var != 0 )	if ( var [ 0 ] != 0 )
final int var = var	final int var = Utilities . parseInt ( var . get ( "" ) )
if ( var != null && var == var )	if ( var != null )
FileLog . var ( "" , var )	FileLog . var ( var )
long var = var . get ( 0 )	final long var = var . get ( 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )	if ( ! MessagesController . getInstance ( var ) . checkCanOpenChat ( var , var ) )
ChatActivity var = new ChatActivity ( var )	final ChatActivity var = new ChatActivity ( var )
SendMessagesHelper . prepareSendingMedia ( var , var , null , null , false , false )	SendMessagesHelper . prepareSendingMedia ( var , var , null , null , false , false , null )
SendMessagesHelper . prepareSendingDocuments ( var , var , var , var , var , null , null )	SendMessagesHelper . prepareSendingDocuments ( var , var , var , var , var , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , null , null , null )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . mainUserInfoChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeOtherAppActivities )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . closeOtherAppActivities )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didUpdatedConnectionState )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . needShowAlert )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . needShowAlert )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . wasUnableToFindCurrentLocation )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . wasUnableToFindCurrentLocation )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewWallpapper )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . reloadInterface )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . reloadInterface )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . suggestedLangpack )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . openArticle )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . openArticle )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . hasNewContactsToImport )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . hasNewContactsToImport )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewTheme )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didSetNewTheme )
if ( UserConfig . passcodeHash . length ( ) != 0 && UserConfig . lastPauseTime != 0 )	if ( SharedConfig . passcodeHash . length ( ) != 0 && SharedConfig . lastPauseTime != 0 )
UserConfig . lastPauseTime = 0	SharedConfig . lastPauseTime = 0
UserConfig . saveConfig ( false )	UserConfig . getInstance ( 0 ) . saveConfig ( false )
if ( var == 3 || var == 4 || var == 5 || var == 19 || var == 20 == 2 )	if ( var == 3 || var == 4 || var == 5 || var == 19 || var == 20 || var == 22 == 2 )
if ( MediaController . getInstance ( ) . canInAppCamera )	if ( SharedConfig . inappCamera )
CameraController . getInstance ( ) . initCamera	CameraController . getInstance ( ) . initCamera ( null )
if ( var == 19 || var == 20 = false )	if ( var == 19 || var == 20 || var == 22 = false )
if ( var == 19 || var == 20 )	if ( var == 19 || var == 20 || var == 22 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . locationPermissionGranted )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . locationPermissionGranted )
UserConfig . lastAppPauseTime = System . currentTimeMillis ( )	SharedConfig . lastAppPauseTime = System . currentTimeMillis ( )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( true , false )
if ( PhotoViewer . getInstance ( ) . isVisible )	if ( PhotoViewer . hasInstance ( ) && PhotoViewer . getInstance ( ) . isVisible )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( false , false )
if ( PhotoViewer . getInstance ( ) . isVisible )	if ( PhotoViewer . hasInstance ( ) && PhotoViewer . getInstance ( ) . isVisible )
if ( var != 2 )	if ( var != 2 && var != 3 )
MessagesController . openByUserName ( "" , var . get ( var . size ( ) - 1 ) . size ( ) - 1 , 1 )	MessagesController . getInstance ( var ) . openByUserName ( "" , var . get ( var . size ( ) - 1 ) . size ( ) - 1 , 1 )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . getDialogId ( ) , var , null , null )	SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var . getDialogId ( ) , var , null , null )
if ( UserConfig . passcodeHash . length ( ) > 0 && ! UserConfig . allowScreenCapture )	if ( SharedConfig . passcodeHash . length ( ) > 0 && ! SharedConfig . allowScreenCapture )
rebuildAllFragments ( true )	rebuildAllFragments ( false )
ContactsController . getInstance ( ) . syncPhoneBookByAlert ( var , var , var , false )	ContactsController . getInstance ( var ) . syncPhoneBookByAlert ( var , var , var , false )
ContactsController . getInstance ( ) . syncPhoneBookByAlert ( var , var , var , true )	ContactsController . getInstance ( var ) . syncPhoneBookByAlert ( var , var , var , true )
ContactsController . getInstance ( ) . syncPhoneBookByAlert ( var , var , var , true )	ContactsController . getInstance ( var ) . syncPhoneBookByAlert ( var , var , var , true )
if ( ! UserConfig . isClientActivated ( ) )	if ( ! UserConfig . getInstance ( var ) . isClientActivated )
File var = FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE )	File var = FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE )
if ( UserConfig . passcodeHash . length ( ) != 0 )	if ( SharedConfig . passcodeHash . length ( ) != 0 )
UserConfig . lastPauseTime = ConnectionsManager . getInstance ( ) . getCurrentTime	SharedConfig . lastPauseTime = ConnectionsManager . getInstance ( var ) . getCurrentTime
FileLog . e ( "" )	FileLog . d ( "" )
FileLog . e ( "" )	FileLog . d ( "" )
if ( UserConfig . appLocked . autoLockIn != 0 )	if ( SharedConfig . appLocked . autoLockIn != 0 )
if ( UserConfig . autoLockIn != 0 )	if ( SharedConfig . autoLockIn != 0 )
AndroidUtilities . runOnUIThread ( var , ( long ) UserConfig . autoLockIn * 1000 + 1000 )	AndroidUtilities . runOnUIThread ( var , ( long ) SharedConfig . autoLockIn * 1000 + 1000 )
UserConfig . lastPauseTime = 0	SharedConfig . lastPauseTime = 0
UserConfig . saveConfig ( false )	checkAppUpdate ( false )
if ( UserConfig . lastPauseTime != 0 )	if ( SharedConfig . lastPauseTime != 0 )
UserConfig . lastPauseTime = 0	SharedConfig . lastPauseTime = 0
UserConfig . saveConfig ( false )	SharedConfig . saveConfig ( )
String var = null	BaseFragment var = null
if ( var == ConnectionsManager . ConnectionStateConnecting )	if ( var == ConnectionsManager . ConnectionStateConnecting || var == ConnectionsManager . ConnectionStateConnectingToProxy )
if ( ! var . isEmpty ( ) && var . get ( var . size ( ) - 1 ) instanceof ProxySettingsActivity )	if ( ! var . isEmpty ( ) )
if ( ! var . isEmpty ( ) && var . get ( var . size ( ) - 1 ) instanceof ProxySettingsActivity )	if ( ! var . isEmpty ( ) )
presentFragment ( new ProxySettingsActivity )	presentFragment ( new ProxyListActivity )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . proxySettingsChanged )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . proxySettingsChanged )
var . showDialog ( var . create ( ) )	var = ConnectionsManager . getInstance ( var ) . getConnectionState
var . setTitleOverlayText ( var , var , var )	var . setTitleOverlayText ( var , null , var )
if ( PhotoViewer . getInstance ( ) . isVisible )	if ( PhotoViewer . hasInstance ( ) && PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )	if ( ArticleViewer . hasInstance ( ) && ArticleViewer . getInstance ( ) . isVisible )
if ( PhotoViewer . getInstance ( ) . isVisible )	if ( PhotoViewer . hasInstance ( ) && PhotoViewer . getInstance ( ) . isVisible )
if ( ArticleViewer . getInstance ( ) . isVisible )	if ( ArticleViewer . hasInstance ( ) && ArticleViewer . getInstance ( ) . isVisible )
if ( var == KeyEvent . KEYCODE_MENU && ! UserConfig . isWaitingForPasscodeEnter )	if ( var == KeyEvent . KEYCODE_MENU && ! SharedConfig . isWaitingForPasscodeEnter )
if ( ArticleViewer . getInstance ( ) . isVisible )	if ( ArticleViewer . hasInstance ( ) && ArticleViewer . getInstance ( ) . isVisible )
var . presentFragment ( var , var , var , false )	var . presentFragment ( var , var , var , false , false )
var . presentFragment ( var , var , true , false )	var . presentFragment ( var , var , true , false , false )
var . presentFragment ( var , var , var , false )	var . presentFragment ( var , var , var , false , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . locationPermissionGranted )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . locationPermissionGranted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . replaceMessagesObjects )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . replaceMessagesObjects )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . locationPermissionGranted )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . locationPermissionGranted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . replaceMessagesObjects )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . replaceMessagesObjects )
var . searchGooglePlacesWithQuery ( null , var )	var . searchPlacesWithQuery ( null , var , true )
var . geo . lat = var . getLatitude ( )	var . geo . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( ) )
var . geo . _long = var . getLongitude ( )	var . geo . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( ) )
if ( LocationController . getInstance ( ) . isSharingLocation ( var ) )	if ( LocationController . getInstance ( currentAccount ) . isSharingLocation ( var ) )
var = MessagesController . getInstance ( ) . getUser ( ( int ) var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( ( int ) var )
var . geo . lat = var . getLatitude ( )	var . geo . lat = AndroidUtilities . fixLocationCoord ( var . getLatitude ( ) )
var . geo . _long = var . getLongitude ( )	var . geo . _long = AndroidUtilities . fixLocationCoord ( var . getLongitude ( ) )
MapsInitializer . initialize ( getParentActivity )	AndroidUtilities . requestAdjustResize ( getParentActivity , classGuid )
var . setPadding ( 0 , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )	var . setPadding ( AndroidUtilities . dp ( 70 ) , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )
var . user = MessagesController . getInstance ( ) . getUser ( var . object . from_id )	var . user = MessagesController . getInstance ( currentAccount ) . getUser ( var . object . from_id )
var . user = MessagesController . getInstance ( ) . getUser ( var )	var . user = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var . chat = MessagesController . getInstance ( ) . getChat ( - var )	var . chat = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
var . id = - var	var . id = var
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )	LocationController . SharingLocationInfo var = LocationController . getInstance ( currentAccount ) . getSharingLocationInfo ( var )
if ( var . id == UserConfig . getClientUserId ( ) && var != null && var . object . id == var . mid && var != null )	if ( var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId && var != null && var . object . id == var . mid && var != null )
LocationController . getInstance ( ) . setGoogleMapLocation ( var , var )	LocationController . getInstance ( currentAccount ) . setGoogleMapLocation ( var , var )
var . setPadding ( 0 , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )	var . setPadding ( AndroidUtilities . dp ( 70 ) , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )
var . setPadding ( 0 , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )	var . setPadding ( AndroidUtilities . dp ( 70 ) , 0 , AndroidUtilities . dp ( 70 ) , AndroidUtilities . dp ( 10 ) )
LiveLocation var = var . get ( UserConfig . getClientUserId ( ) )	LiveLocation var = var . get ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )	LocationController . SharingLocationInfo var = LocationController . getInstance ( currentAccount ) . getSharingLocationInfo ( var )
var . searchGooglePlacesWithQuery ( null , var )	var . searchPlacesWithQuery ( null , var , true )
int var = ConnectionsManager . getInstance ( ) . getCurrentTime	int var = ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime
ArrayList < TLRPC . Message > var = LocationController . getInstance ( ) . locationsCache . get ( var . getDialogId ( ) )	ArrayList < TLRPC . Message > var = LocationController . getInstance ( currentAccount ) . locationsCache . get ( var . getDialogId ( ) )
var . peer = MessagesController . getInputPeer ( ( int ) var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( ( int ) var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , true , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var . users , var . chats , true , true )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
MessagesController . getInstance ( ) . putChats ( var . chats , false )	MessagesController . getInstance ( currentAccount ) . putChats ( var . chats , false )
LocationController . getInstance ( ) . locationsCache . put ( var , var . var )	LocationController . getInstance ( currentAccount ) . locationsCache . put ( var , var . var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . liveLocationsCacheChanged , var )
LocationController . SharingLocationInfo var = LocationController . getInstance ( ) . getSharingLocationInfo ( var )	LocationController . SharingLocationInfo var = LocationController . getInstance ( currentAccount ) . getSharingLocationInfo ( var )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
selectCountry ( var )	selectCountry ( var , var )
var . setText ( var )	var . replace ( 0 , var . length ( ) , var )
if ( var == 1 == 2 && ! BuildVars . DEBUG_VERSION && ! var . getText ( ) . toString . equals ( "" ) )	if ( var == 1 == 2 && ! BuildVars . DEBUG_VERSION )
if ( var == 2 && ! BuildVars . DEBUG_VERSION && ! var . getText ( ) . toString . equals ( "" ) )	if ( var == 2 && ! BuildVars . DEBUG_VERSION )
if ( var || var )	if ( ! var && ( var || var ) )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didReceiveCall )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentSmsCode , var ) , R . string . SentSmsCode , var )	var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentSmsCode , LocaleController . addNbsp ( var ) ) , R . string . SentSmsCode , LocaleController . addNbsp ( var ) )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallCode , var ) , R . string . SentCallCode , var )	var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallCode , LocaleController . addNbsp ( var ) ) , R . string . SentCallCode , LocaleController . addNbsp ( var ) )
var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallOnly , var ) , R . string . SentCallOnly , var )	var = AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . SentCallOnly , LocaleController . addNbsp ( var ) ) , R . string . SentCallOnly , LocaleController . addNbsp ( var ) )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
if ( var == 3 )	if ( var == 2 == 3 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )	ConnectionsManager . getInstance ( currentAccount ) . setUserId ( var . user . id )
MessagesController . getInstance ( ) . cleanup	MessagesController . getInstance ( currentAccount ) . checkProxyInfo ( true )
UserConfig . setCurrentUser ( var . user )	UserConfig . getInstance ( currentAccount ) . setCurrentUser ( var . user )
UserConfig . saveConfig ( true )	MessagesController . getInstance ( currentAccount ) . checkProxyInfo ( true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var , null , true , true )
MessagesController . getInstance ( ) . putUser ( var . user , false )	MessagesController . getInstance ( currentAccount ) . putUser ( var . user , false )
ContactsController . getInstance ( ) . checkAppAccount	ContactsController . getInstance ( currentAccount ) . checkAppAccount
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . addObserver ( LoginActivitySmsView . this , NotificationCenter . didReceiveCall )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
if ( var == 2 == 3 )	if ( var == 3 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveSmsCode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didReceiveCall )
if ( var != null && var != 3 )	if ( var != null )
var . putInt ( "" , ConnectionsManager . getInstance ( ) . getCurrentTime )	var . putInt ( "" , ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime )
TLRPC . TL_auth_authorization var = ( TLRPC . TL_auth_authorization ) var	onAuthSuccess ( ( TLRPC . TL_auth_authorization ) var )
MessagesController . getInstance ( ) . cleanup	MessagesController . getInstance ( currentAccount ) . cleanup
UserConfig . saveConfig ( true )	UserConfig . getInstance ( currentAccount ) . saveConfig ( true )
ConnectionsManager . getInstance ( ) . updateDcSettings	var . putInt ( "" , ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime )
if ( Math . abs ( ConnectionsManager . getInstance ( ) . getCurrentTime - var ) < var )	if ( Math . abs ( ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime - var ) < var )
int var = Math . max ( 0 , var - ( ConnectionsManager . getInstance ( ) . getCurrentTime - var ) )	int var = Math . max ( 0 , var - ( ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime - var ) )
var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) . formatString ( "" , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) , R . string . ResetAccountInfo , PhoneFormat . getInstance ( ) . format ( "" + var ) + var )	var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . ResetAccountInfo , LocaleController . addNbsp ( PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) . getInstance ( ) . format ( "" + var ) + var ) , R . string . ResetAccountInfo , LocaleController . addNbsp ( PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) . getInstance ( ) . format ( "" + var ) + var ) . formatString ( "" , R . string . ResetAccountInfo , LocaleController . addNbsp ( PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) . getInstance ( ) . format ( "" + var ) + var ) , R . string . ResetAccountInfo , LocaleController . addNbsp ( PhoneFormat . getInstance ( ) . format ( "" + var ) + var ) . getInstance ( ) . format ( "" + var ) + var )
TLRPC . TL_auth_authorization var = ( TLRPC . TL_auth_authorization ) var	onAuthSuccess ( ( TLRPC . TL_auth_authorization ) var )
var . setGravity ( Gravity . BOTTOM | Gravity . CENTER_VERTICAL )	var . setLinkTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteLinkText ) . key_windowBackgroundWhiteLinkText )
final TLRPC . TL_auth_authorization var = ( TLRPC . TL_auth_authorization ) var	onAuthSuccess ( ( TLRPC . TL_auth_authorization ) var )
UserConfig . saveConfig ( true )	showTermsOfService ( true )
if ( var == null || var == null || var != 0 )	if ( var == null || var [ 0 ] . selectedType != 0 )
int var = var . getChildCount ( )	int var = var [ 0 ] . listView . getChildCount ( )
View var = var . getChildAt ( var )	View var = var [ 0 ] . listView . getChildAt ( var )
var . parentView = var	var . parentView = var [ 0 ] . listView
var . thumb = var . imageReceiver . getBitmap ( var )	var . thumb = var . imageReceiver . getBitmapSafe ( var )
if ( var [ var ] . containsKey ( var . getId ( var ) ) )	if ( var [ var ] . indexOfKey ( var . getId ( var ) ) >= 0 )
public MediaActivity ( Bundle var )	public MediaActivity ( Bundle var , int var var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . mediaDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . mediaDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messageReceivedByServer )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . messageReceivedByServer )
SharedMediaQuery . loadMedia ( var , 50 , 0 , SharedMediaQuery . MEDIA_PHOTOVIDEO , true , classGuid )	DataQuery . getInstance ( currentAccount ) . loadMedia ( var , 50 , 0 , DataQuery . MEDIA_PHOTOVIDEO , true , classGuid )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . mediaDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . mediaDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . messageReceivedByServer )
int var = var . getChildCount ( var )	int var = var [ 0 ] . listView . getChildCount ( var )
View var = var . getChildAt ( var )	View var = var [ 0 ] . listView . getChildAt ( var )
var = MessagesController . getInstance ( var ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var = MessagesController . getInstance ( var ) . getChat ( - var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var	int var = ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var
if ( var != null && var . var != UserConfig . getClientUserId ( var ) || var != null )	if ( var != null && var . var != UserConfig . getInstance ( currentAccount ) . getClientUserId var || var != null )
MessageObject var = var . getValue ( var )	MessageObject var = var [ var ] . valueAt ( var )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )	CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 )
var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )	var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
MessageObject var = var . getValue ( var )	MessageObject var = var [ var ] . valueAt ( var )
if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( var ) || var != null var )	if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getInstance ( currentAccount ) . getClientUserId var || var != null var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var . toString ( var ) , var , null , null , true , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var . toString ( var ) , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
var . showReplyPanel ( true , null , var , null , false )	var . showFieldPanelForForward ( true , var )
var . setVisibility ( View . VISIBLE )	var [ 1 ] . setVisibility ( View . VISIBLE )
if ( var == 3 )	if ( var [ 0 ] . selectedType == 3 )
if ( var == 4 )	if ( var [ 0 ] . selectedType == 4 )
var = new ActionBarMenuItem ( var , var , 0 , 0 )	var = new ScrollSlidingTextTabStrip ( var )
var . setSubMenuOpenSide ( 1 )	var . setBackgroundColor ( Theme . getColor ( Theme . key_actionBarDefault ) . key_actionBarDefault )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . DocumentsTitle ) , R . string . DocumentsTitle )	var . setBackgroundColor ( Theme . getColor ( Theme . key_actionBarDefault ) . key_actionBarDefault )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . LinksTitle ) , R . string . LinksTitle )	actionBar . setItemsColor ( Theme . getColor ( Theme . key_actionBarDefaultIcon ) . key_actionBarDefaultIcon , true )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . AudioTitle ) , R . string . AudioTitle )	actionBar . setItemsBackgroundColor ( Theme . getColor ( Theme . key_actionBarDefaultSelector ) . key_actionBarDefaultSelector , true )
TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )	TLRPC . EncryptedChat var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
var . toggleSubMenu ( var )	var . clear ( var )
var . setSingleLine ( true )	switchToCurrentSelectedMode ( true )
var . setLines ( 1 )	if ( ! var . hasTab ( 1 ) )
var . setMaxLines ( 1 )	if ( ! var . hasTab ( 1 ) = true )
var = var . getResources ( var ) . getDrawable ( R . drawable . ic_arrow_drop_down ) . mutate var	var . setInterpolator ( CubicBezierInterpolator . EASE_OUT_QUINT )
var . setCompoundDrawablePadding ( AndroidUtilities . dp ( 4 ) )	actionBar . setExtraHeight ( AndroidUtilities . dp ( 44 ) )
final ActionBarMenu var = actionBar . createActionMode ( var )	final ActionBarMenu var = actionBar . createActionMode ( false )
if ( var != null )	if ( var [ var ] != null && var [ var ] . layoutManager != null )
var = var . findFirstVisibleItemPosition ( var )	var = var [ var ] . layoutManager . findFirstVisibleItemPosition ( var )
if ( var != var . getItemCount ( var ) - 1 var )	if ( var != var [ var ] . layoutManager . getItemCount ( var ) - 1 var )
RecyclerListView . Holder var = ( RecyclerListView . Holder ) var . findViewHolderForAdapterPosition ( var )	RecyclerListView . Holder var = ( RecyclerListView . Holder ) var [ var ] . listView . findViewHolderForAdapterPosition ( var )
var = new RecyclerListView ( var )	var [ var ] . listView = new RecyclerListView ( var )
var . setClipToPadding ( false )	var [ var ] . listView . setClipToPadding ( false )
var . setSectionsType ( 2 )	var [ var ] . listView . setSectionsType ( 2 )
if ( var == 3 && var instanceof SharedLinkCell )	if ( ( var . selectedType == 2 || var . selectedType == 4 ) && var instanceof SharedAudioCell )
if ( var != 0 && var + var > var - 2 && ! sharedMediaData [ var ] . loading )	if ( var != 0 && var + var > var - 2 && ! sharedMediaData [ var ] . selectedType . loading )
var = SharedMediaQuery . MEDIA_PHOTOVIDEO	var = DataQuery . MEDIA_PHOTOVIDEO
if ( var == 1 )	if ( var . selectedType == 1 )
var = SharedMediaQuery . MEDIA_FILE	var = DataQuery . MEDIA_FILE
if ( var == 2 )	if ( var . selectedType == 2 )
var = SharedMediaQuery . MEDIA_AUDIO	var = DataQuery . MEDIA_AUDIO
if ( var == 4 )	if ( var . selectedType == 4 )
var = SharedMediaQuery . MEDIA_MUSIC	var = DataQuery . MEDIA_MUSIC
var = SharedMediaQuery . MEDIA_URL	var = DataQuery . MEDIA_URL
sharedMediaData [ var ] . loading = true	sharedMediaData [ var ] . selectedType . loading = true
if ( var != 0 && ! sharedMediaData [ var ] . endReached [ 1 ] )	if ( var != 0 && ! sharedMediaData [ var ] . selectedType . endReached [ 1 ] )
sharedMediaData [ var ] . loading = true	sharedMediaData [ var ] . selectedType . loading = true
SharedDocumentCell var = ( SharedDocumentCell ) var	return MediaActivity . this . onItemLongClick ( ( ( SharedLinkCell ) var ) . getMessage var , var , 0 )
if ( var == 3 && var instanceof SharedLinkCell )	if ( ( var . selectedType == 2 || var . selectedType == 4 ) && var instanceof SharedAudioCell )
SharedLinkCell var = ( SharedLinkCell ) var	return MediaActivity . this . onItemLongClick ( ( ( SharedAudioCell ) var ) . getMessage var , var , 0 )
if ( var != - 1 )	if ( var == 0 && var != - 1 )
var = new LinearLayout ( var )	var [ var ] . progressView = new LinearLayout ( var )
var . setOrientation ( LinearLayout . VERTICAL )	var [ var ] . emptyView . setOrientation ( LinearLayout . VERTICAL )
var . setGravity ( Gravity . CENTER )	var [ var ] . emptyView . setGravity ( Gravity . CENTER )
var . setVisibility ( View . GONE )	var [ var ] . emptyView . setVisibility ( View . GONE )
var . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )	var [ var ] . emptyView . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )
var = new ImageView ( var )	var [ var ] . emptyImageView = new ImageView ( var )
var = new TextView ( var )	var [ var ] . emptyTextView = new TextView ( var )
var . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText2 ) . key_windowBackgroundWhiteGrayText2 )	var [ var ] . emptyTextView . setTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteGrayText2 ) . key_windowBackgroundWhiteGrayText2 )
var . setGravity ( Gravity . CENTER )	var [ var ] . emptyTextView . setGravity ( Gravity . CENTER )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 17 )	var [ var ] . emptyTextView . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 17 )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )	var [ var ] . emptyTextView . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )
var = new LinearLayout ( var )	var [ var ] . emptyView = new LinearLayout ( var )
var . setGravity ( Gravity . CENTER )	var [ var ] . progressView . setGravity ( Gravity . CENTER )
var . setOrientation ( LinearLayout . VERTICAL )	var [ var ] . progressView . setOrientation ( LinearLayout . VERTICAL )
var . setVisibility ( View . GONE )	var [ var ] . progressView . setVisibility ( View . GONE )
var . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )	var [ var ] . progressView . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )
var = new RadialProgressView ( var )	var [ var ] . progressBar = new RadialProgressView ( var )
var . addView ( var = new FragmentContextView ( var , this , false ) , this , false , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , - 36 , 0 , 0 )	var . addView ( var = new FragmentContextView ( var , this , false ) , this , false , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , 8 , 0 , 0 ) . MATCH_PARENT , 39 , Gravity . TOP | Gravity . LEFT , 0 , 8 , 0 , 0 )
var . setVisibility ( View . GONE )	var [ var ] . progressView . setVisibility ( View . GONE )
if ( var . getEmptyView ( var ) == null )	if ( var [ var ] . listView . getEmptyView ( var ) == null )
if ( var == 1 && var == 1 )	if ( var [ var ] . selectedType == 1 && var == 1 )
if ( var == 3 && var == 3 )	if ( var [ var ] . selectedType == 3 && var == 3 )
if ( var == 4 && var == 4 )	if ( var [ var ] . selectedType == 4 && var == 4 )
if ( var == 1 || var == 3 || var == 4 )	if ( var [ var ] . selectedType == var && var [ var ] . listView != null )
var = MessagesController . getInstance ( var ) . getChat ( - ( int ) var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( - ( int ) var )
if ( var . messageOwner . media == null || var . isSecretPhoto ( var ) )	if ( var . messageOwner . media == null || var . needDrawBluredPreview ( var ) )
int var = SharedMediaQuery . getMediaType ( var . messageOwner )	int var = DataQuery . getMediaType ( var . messageOwner )
if ( sharedMediaData [ var ] . addMessage ( var , true , var ) = true )	if ( sharedMediaData [ var ] . addMessage ( var , true , var ) )
super . onPause ( var )	for ( int var = 0 ; var < var . length ; var ++ )
if ( var != null )	for ( int var = 0 ; var < var . length ; var ++ )
if ( var != null )	if ( var [ var ] . listView != null )
ViewTreeObserver var = var . getViewTreeObserver ( var )	ViewTreeObserver var = var [ var ] . listView . getViewTreeObserver ( var )
if ( var != null )	if ( var == null )
var . setAdapter ( var )	var [ var ] . listView . setAdapter ( var )
var . setAdapter ( var )	var [ var ] . listView . setAdapter ( var )
var . setAdapter ( var )	var [ var ] . listView . setAdapter ( var )
if ( var != null )	if ( var != 2 && var [ var ] . emptyTextView != null )
var . setText ( LocaleController . getString ( "" , R . string . NoResult ) , R . string . NoResult )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoResult ) , R . string . NoResult )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 20 )	var [ var ] . emptyTextView . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 20 )
var . setVisibility ( View . GONE )	var [ var ] . emptyImageView . setVisibility ( View . GONE )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 17 )	var [ var ] . emptyTextView . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 17 )
var . setVisibility ( View . VISIBLE )	var [ var ] . emptyImageView . setVisibility ( View . VISIBLE )
var . setAdapter ( var )	var [ var ] . listView . setAdapter ( var )
var . setText ( LocaleController . getString ( "" , R . string . SharedMediaTitle ) , R . string . SharedMediaTitle )	var . addTextTab ( 1 , LocaleController . getString ( "" , R . string . SharedFilesTab ) , R . string . SharedFilesTab )
var . setImageResource ( R . drawable . tip1 )	var [ var ] . emptyImageView . setImageResource ( R . drawable . tip1 )
var . setText ( LocaleController . getString ( "" , R . string . NoMediaSecret ) , R . string . NoMediaSecret )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoMediaSecret ) , R . string . NoMediaSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoMedia ) , R . string . NoMedia )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoMedia ) , R . string . NoMedia )
var . setVisibility ( View . VISIBLE )	if ( var != null && AndroidUtilities . getPeerLayerVersion ( var . layer ) >= 46 )
var . setVisibility ( View . GONE )	var [ var ] . emptyView . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )	var [ var ] . progressView . setVisibility ( View . GONE )
var . setPadding ( 0 , 0 , 0 , AndroidUtilities . dp ( 4 ) )	actionBar . setExtraHeight ( AndroidUtilities . dp ( 44 ) )
if ( var == 1 || var == 4 )	if ( var [ var ] . selectedType == 0 || var [ var ] . selectedType == 2 var )
var . setAdapter ( var )	var [ var ] . listView . setAdapter ( var )
var . setImageResource ( R . drawable . tip2 )	var [ var ] . emptyImageView . setImageResource ( R . drawable . tip2 )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedFilesSecret ) , R . string . NoSharedFilesSecret )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoSharedFilesSecret ) , R . string . NoSharedFilesSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedFiles ) , R . string . NoSharedFiles )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoSharedFiles ) , R . string . NoSharedFiles )
if ( var == 4 )	if ( var [ var ] . selectedType == 4 )
var . setAdapter ( var )	var [ var ] . listView . setAdapter ( var )
var . setImageResource ( R . drawable . tip4 )	var [ var ] . emptyImageView . setImageResource ( R . drawable . tip4 )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedAudioSecret ) , R . string . NoSharedAudioSecret )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoSharedAudioSecret ) , R . string . NoSharedAudioSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedAudio ) , R . string . NoSharedAudio )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoSharedAudio ) , R . string . NoSharedAudio )
sharedMediaData [ var ] . loading = true	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoResult ) , R . string . NoResult )
var . setVisibility ( View . VISIBLE )	var [ var ] . emptyImageView . setVisibility ( View . GONE )
var . setVisibility ( View . VISIBLE )	var [ var ] . progressView . setVisibility ( View . VISIBLE )
var . setEmptyView ( null )	var [ var ] . listView . setEmptyView ( null )
var . setVisibility ( View . GONE )	var [ var ] . emptyView . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )	var [ var ] . progressView . setVisibility ( View . GONE )
if ( var == 3 )	if ( ( int ) var == 0 var )
var . setAdapter ( var )	var [ var ] . listView . setAdapter ( var )
var . setText ( LocaleController . getString ( "" , R . string . LinksTitle ) , R . string . LinksTitle )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoSharedVoiceSecret ) , R . string . NoSharedVoiceSecret )
var . setImageResource ( R . drawable . tip3 )	var [ var ] . emptyImageView . setImageResource ( R . drawable . tip3 )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedLinksSecret ) , R . string . NoSharedLinksSecret )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoSharedLinksSecret ) , R . string . NoSharedLinksSecret )
var . setText ( LocaleController . getString ( "" , R . string . NoSharedLinks ) , R . string . NoSharedLinks )	var [ var ] . emptyTextView . setText ( LocaleController . getString ( "" , R . string . NoSharedLinks ) , R . string . NoSharedLinks )
if ( ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached [ 0 ] && sharedMediaData [ var ] . messages . isEmpty ( var ) )	if ( ! sharedMediaData [ var ] [ var ] . selectedType . loading && ! sharedMediaData [ var ] [ var ] . selectedType . endReached [ 0 ] && sharedMediaData [ var ] [ var ] . selectedType . messages . isEmpty ( var ) )
sharedMediaData [ var ] . loading = true	sharedMediaData [ var ] [ var ] . selectedType . loading = true
var . setVisibility ( View . VISIBLE )	var [ var ] . listView . setVisibility ( View . VISIBLE )
if ( sharedMediaData [ var ] . loading && sharedMediaData [ var ] . messages . isEmpty ( var ) var )	if ( sharedMediaData [ var ] [ var ] . selectedType . loading && sharedMediaData [ var ] [ var ] . selectedType . messages . isEmpty ( var ) var )
var . setVisibility ( View . VISIBLE )	var [ var ] . progressView . setVisibility ( View . VISIBLE )
var . setEmptyView ( null )	var [ var ] . listView . setEmptyView ( null )
var . setVisibility ( View . GONE )	var [ var ] . emptyView . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )	var [ var ] . progressView . setVisibility ( View . GONE )
var . setEmptyView ( var )	var . setVisibility ( View . GONE )
var . setPadding ( 0 , 0 , 0 , AndroidUtilities . dp ( 4 ) )	var [ var ] . listView . setPadding ( 0 , 0 , 0 , AndroidUtilities . dp ( 4 ) )
if ( var [ var ] . containsKey ( var . getId ( var ) ) var )	if ( var [ var ] . indexOfKey ( var . getId ( var ) ) >= 0 var )
if ( var [ 0 ] . isEmpty var && var [ 1 ] . isEmpty var var )	if ( var [ 0 ] . size var == 0 && var [ 1 ] . size var == 0 var )
if ( var . getName ( var ) . endsWith ( "" ) var )	if ( var . getName ( var ) . toLowerCase var . endsWith ( "" ) var )
FileLoader . getInstance ( var ) . loadFile ( var . getMessage ( var ) . getDocument var , false , 0 )	FileLoader . getInstance ( currentAccount ) . loadFile ( var . getMessage ( var ) . getDocument var , false , 0 )
FileLoader . getInstance ( var ) . cancelLoadFile ( var . getMessage ( var ) . getDocument var )	FileLoader . getInstance ( currentAccount ) . cancelLoadFile ( var . getMessage ( var ) . getDocument var )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )	var [ var ] . emptyTextView . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , 0 )	var [ var ] . emptyTextView . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , 0 )
var . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )	var [ var ] . emptyTextView . setPadding ( AndroidUtilities . dp ( 40 ) , 0 , AndroidUtilities . dp ( 40 ) , AndroidUtilities . dp ( 128 ) )
ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var . peer = MessagesController . getInputPeer ( var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( var )
var . add ( new MessageObject ( var , null , false ) , null , false )	var . add ( new MessageObject ( currentAccount , var , false ) , var , false )
ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
final ArrayList < MessageObject > var = new ArrayList var ( var )	ArrayList < ThemeDescription > var = new ArrayList var ( var )
int var = var . getChildCount ( var )	int var = var [ var ] . listView . getChildCount ( var )
View var = var . getChildAt ( var )	View var = var [ var ] . listView . getChildAt ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
var . putExtra ( "" , ContactsController . getInstance ( ) . getInviteText ( 1 ) )	var . putExtra ( "" , ContactsController . getInstance ( currentAccount ) . getInviteText ( 1 ) )
AlertsCreator . processError ( var , NewContactActivity . this , var )	AlertsCreator . processError ( currentAccount , var , NewContactActivity . this , var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
MessagesController . getInstance ( ) . enableJoined = true	MessagesController . getInstance ( currentAccount ) . enableJoined = true
NotificationsController . getInstance ( ) . setInChatSoundEnabled ( ! var )	NotificationsController . getInstance ( currentAccount ) . setInChatSoundEnabled ( ! var )
MessagesController . getInstance ( ) . enableJoined = ! var	MessagesController . getInstance ( currentAccount ) . enableJoined = ! var
var . putBoolean ( "" , ! var )	var . putBoolean ( "" , NotificationsController . getInstance ( currentAccount ) . showBadgeNumber )
NotificationsController . getInstance ( ) . setBadgeEnabled ( ! var )	NotificationsController . getInstance ( currentAccount ) . setBadgeEnabled ( ! var )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , var . getBoolean ( "" , false ) , false , false )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , var . getBoolean ( "" , false ) , false , false )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . BadgeNumber ) , R . string . BadgeNumber , var . getBoolean ( "" , true ) , true , true )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . BadgeNumber ) , R . string . BadgeNumber , NotificationsController . getInstance ( currentAccount ) . showBadgeNumber , true )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityDefault ) , R . string . NotificationsPriorityDefault , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , LocaleController . getString ( "" , R . string . NotificationsPriorityUrgent ) , R . string . NotificationsPriorityUrgent , false )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityHigh ) , R . string . NotificationsPriorityHigh , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , LocaleController . getString ( "" , R . string . NotificationsPriorityHigh ) , R . string . NotificationsPriorityHigh , false )
if ( var == 2 )	if ( var == 5 )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityMax ) , R . string . NotificationsPriorityMax , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , LocaleController . getString ( "" , R . string . NotificationsPriorityMedium ) , R . string . NotificationsPriorityMedium , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . didSetPasscode )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . didSetPasscode )
if ( UserConfig . passcodeHash . length ( ) != 0 )	if ( SharedConfig . passcodeHash . length ( ) != 0 )
if ( var == 2 && UserConfig . passcodeType == 0 == 1 && var == 0 )	if ( var == 2 && SharedConfig . passcodeType == 0 == 1 && var == 0 )
if ( UserConfig . passcodeHash . length ( ) != 0 )	if ( SharedConfig . passcodeHash . length ( ) != 0 )
UserConfig . passcodeHash = ""	SharedConfig . passcodeHash = ""
UserConfig . appLocked = false	SharedConfig . appLocked = false
UserConfig . saveConfig ( false )	SharedConfig . saveConfig ( )
var . setChecked ( UserConfig . passcodeHash . length ( ) != 0 )	var . setChecked ( SharedConfig . passcodeHash . length ( ) != 0 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( UserConfig . autoLockIn == 60 )	if ( SharedConfig . autoLockIn == 60 )
if ( UserConfig . autoLockIn == 60 * 5 )	if ( SharedConfig . autoLockIn == 60 * 5 )
if ( UserConfig . autoLockIn == 60 * 60 )	if ( SharedConfig . autoLockIn == 60 * 60 )
if ( UserConfig . autoLockIn == 60 * 60 * 5 )	if ( SharedConfig . autoLockIn == 60 * 60 * 5 )
UserConfig . autoLockIn = 0	SharedConfig . autoLockIn = 0
UserConfig . autoLockIn = 60	SharedConfig . autoLockIn = 60
UserConfig . autoLockIn = 60 * 5	SharedConfig . autoLockIn = 60 * 5
UserConfig . autoLockIn = 60 * 60	SharedConfig . autoLockIn = 60 * 60
UserConfig . autoLockIn = 60 * 60 * 5	SharedConfig . autoLockIn = 60 * 60 * 5
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
UserConfig . useFingerprint = ! UserConfig . useFingerprint	SharedConfig . useFingerprint = ! SharedConfig . useFingerprint
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
( ( TextCheckCell ) var ) . setChecked ( UserConfig . useFingerprint )	( ( TextCheckCell ) var ) . setChecked ( SharedConfig . useFingerprint )
UserConfig . allowScreenCapture = ! UserConfig . allowScreenCapture	SharedConfig . allowScreenCapture = ! SharedConfig . allowScreenCapture
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
( ( TextCheckCell ) var ) . setChecked ( UserConfig . allowScreenCapture )	( ( TextCheckCell ) var ) . setChecked ( SharedConfig . allowScreenCapture )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( UserConfig . passcodeHash . length ( ) > 0 )	if ( SharedConfig . passcodeHash . length ( ) > 0 )
if ( var == 1 && var == 0 || var == 2 && UserConfig . passcodeType == 0 == 1 && var == 1 || var == 2 && UserConfig . passcodeType == 1 )	if ( var == 1 && var == 0 || var == 2 && SharedConfig . passcodeType == 0 == 1 && var == 1 || var == 2 && SharedConfig . passcodeType == 1 )
if ( var == 1 && var == 1 || var == 2 && UserConfig . passcodeType == 1 )	if ( var == 1 && var == 1 || var == 2 && SharedConfig . passcodeType == 1 )
UserConfig . passcodeSalt = new byte [ 16 ]	SharedConfig . passcodeSalt = new byte [ 16 ]
Utilities . random . nextBytes ( UserConfig . passcodeSalt )	Utilities . random . nextBytes ( SharedConfig . passcodeSalt )
System . arraycopy ( UserConfig . passcodeSalt , 0 , var , 0 , 16 )	System . arraycopy ( SharedConfig . passcodeSalt , 0 , var , 0 , 16 )
System . arraycopy ( UserConfig . passcodeSalt , 0 , var , var . length + 16 , 16 )	System . arraycopy ( SharedConfig . passcodeSalt , 0 , var , var . length + 16 , 16 )
UserConfig . passcodeHash = Utilities . bytesToHex ( Utilities . computeSHA256 ( var , 0 , var . length ) , 0 , var . length )	SharedConfig . passcodeHash = Utilities . bytesToHex ( Utilities . computeSHA256 ( var , 0 , var . length ) , 0 , var . length )
UserConfig . passcodeType = var	SharedConfig . passcodeType = var
UserConfig . saveConfig ( false )	SharedConfig . saveConfig ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . didSetPasscode )
if ( ! UserConfig . checkPasscode ( var . getText ( ) . toString ) )	if ( ! SharedConfig . checkPasscode ( var . getText ( ) . toString ) )
return var == var || var == var || var == var || var == var || UserConfig . passcodeHash . length ( ) != 0 && var == var	return var == var || var == var || var == var || var == var || SharedConfig . passcodeHash . length ( ) != 0 && var == var
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . Passcode ) , R . string . Passcode , UserConfig . passcodeHash . length ( ) > 0 , true )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . Passcode ) , R . string . Passcode , SharedConfig . passcodeHash . length ( ) > 0 , true )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . UnlockFingerprint ) , R . string . UnlockFingerprint , UserConfig . useFingerprint , true )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . UnlockFingerprint ) , R . string . UnlockFingerprint , SharedConfig . useFingerprint , true )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . ScreenCapture ) , R . string . ScreenCapture , UserConfig . allowScreenCapture , false )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . ScreenCapture ) , R . string . ScreenCapture , SharedConfig . allowScreenCapture , false )
if ( UserConfig . passcodeHash . length ( ) == 0 )	if ( SharedConfig . passcodeHash . length ( ) == 0 )
if ( UserConfig . autoLockIn < 60 * 60 )	if ( SharedConfig . autoLockIn < 60 * 60 )
var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , UserConfig . autoLockIn / 60 ) , UserConfig . autoLockIn / 60 )	var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , SharedConfig . autoLockIn / 60 ) , SharedConfig . autoLockIn / 60 )
if ( UserConfig . autoLockIn < 60 * 60 * 24 )	if ( SharedConfig . autoLockIn < 60 * 60 * 24 )
var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 ) . autoLockIn / 60.0f / 60 ) , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 ) . autoLockIn / 60.0f / 60 )	var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , ( int ) Math . ceil ( SharedConfig . autoLockIn / 60.0f / 60 ) . autoLockIn / 60.0f / 60 ) , ( int ) Math . ceil ( SharedConfig . autoLockIn / 60.0f / 60 ) . autoLockIn / 60.0f / 60 )
var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 / 24 ) . autoLockIn / 60.0f / 60 / 24 ) , ( int ) Math . ceil ( UserConfig . autoLockIn / 60.0f / 60 / 24 ) . autoLockIn / 60.0f / 60 / 24 )	var = LocaleController . formatString ( "" , R . string . AutoLockInTime , LocaleController . formatPluralString ( "" , ( int ) Math . ceil ( SharedConfig . autoLockIn / 60.0f / 60 / 24 ) . autoLockIn / 60.0f / 60 / 24 ) , ( int ) Math . ceil ( SharedConfig . autoLockIn / 60.0f / 60 / 24 ) . autoLockIn / 60.0f / 60 / 24 )
var = MessagesController . getInstance ( var ) . getUser ( var . bot_id )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var . bot_id )
if ( UserConfig . tmpPassword != null )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword . valid_until < ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null	UserConfig . getInstance ( currentAccount ) . tmpPassword = null
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
if ( UserConfig . tmpPassword != null = 4 = 3 )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null = 4 = 3 )
var = MessagesController . getInstance ( var ) . getUser ( var . bot_id )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var . bot_id )
if ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture )	if ( SharedConfig . passcodeHash . length ( var ) == 0 || SharedConfig . allowScreenCapture )
bottomCell [ 1 ] . setText ( LocaleController . formatString ( "" , R . string . PaymentPhoneEmailToProvider , var ) , R . string . PaymentPhoneEmailToProvider , var )	bottomCell [ 1 ] . setText ( LocaleController . formatString ( "" , R . string . PaymentEmailToProvider , var ) , R . string . PaymentEmailToProvider , var )
bottomCell [ 1 ] . setText ( LocaleController . formatString ( "" , R . string . PaymentPhoneEmailToProvider , var ) , R . string . PaymentPhoneEmailToProvider , var )	bottomCell [ 1 ] . setText ( LocaleController . formatString ( "" , R . string . PaymentPhoneToProvider , var ) , R . string . PaymentPhoneToProvider , var )
var . addAll ( var . invoice . prices )	ArrayList < TLRPC . TL_labeledPrice > var = new ArrayList var ( var . invoice . prices )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
if ( Build . VERSION . SDK_INT < 19 )	if ( Build . VERSION . SDK_INT >= 0 )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didSetTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didSetTwoStepPassword )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didRemovedTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didRemovedTwoStepPassword )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . paymentFinished )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . paymentFinished )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didSetTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didSetTwoStepPassword )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didRemovedTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didRemovedTwoStepPassword )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . paymentFinished )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . paymentFinished )
if ( ( var == 2 || var == 6 ) && Build . VERSION . SDK_INT >= 23 && ( UserConfig . passcodeHash . length ( var ) == 0 || UserConfig . allowScreenCapture ) )	if ( ( var == 2 || var == 6 ) && Build . VERSION . SDK_INT >= 23 && ( SharedConfig . passcodeHash . length ( var ) == 0 || SharedConfig . allowScreenCapture ) )
var . addAll ( var . invoice . prices )	ArrayList < TLRPC . TL_labeledPrice > var = new ArrayList var ( var . invoice . prices )
var . addAll ( var . invoice . prices )	ArrayList < TLRPC . TL_labeledPrice > var = new ArrayList var ( var . invoice . prices )
if ( UserConfig . tmpPassword != null )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword . valid_until < ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null	UserConfig . getInstance ( currentAccount ) . tmpPassword = null
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
if ( UserConfig . tmpPassword != null = 4 = 3 )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null = 4 = 3 )
if ( UserConfig . tmpPassword != null )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword . valid_until < ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null	UserConfig . getInstance ( currentAccount ) . tmpPassword = null
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
if ( UserConfig . tmpPassword != null = 4 = 3 )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null = 4 = 3 )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . paymentFinished )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . paymentFinished )
bottomCell [ 0 ] . getTextView var . setMovementMethod ( new LinkMovementMethodMy var )	bottomCell [ 0 ] . getTextView var . setMovementMethod ( new AndroidUtilities . LinkMovementMethodMy ( var ) )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )	AlertsCreator . processError ( currentAccount , var , PaymentFormActivity . this , var )
var . credentials . tmp_password = UserConfig . tmpPassword . tmp_password	var . credentials . tmp_password = UserConfig . getInstance ( currentAccount ) . tmpPassword . tmp_password
MessagesController . getInstance ( var ) . processUpdates ( ( ( TLRPC . TL_payments_paymentResult ) var ) . updates , false )	MessagesController . getInstance ( currentAccount ) . processUpdates ( ( ( TLRPC . TL_payments_paymentResult ) var ) . updates , false )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . paymentFinished )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . paymentFinished )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )	AlertsCreator . processError ( currentAccount , var , PaymentFormActivity . this , var )
if ( UserConfig . tmpPassword != null )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null )
if ( UserConfig . tmpPassword . valid_until < ConnectionsManager . getInstance ( var ) . getCurrentTime var + 60 )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword . valid_until < ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var + 60 )
UserConfig . tmpPassword = null	UserConfig . getInstance ( currentAccount ) . tmpPassword = null
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
if ( UserConfig . tmpPassword != null )	if ( UserConfig . getInstance ( currentAccount ) . tmpPassword != null )
UserConfig . tmpPassword = ( TLRPC . TL_account_tmpPassword ) var	UserConfig . getInstance ( currentAccount ) . tmpPassword = ( TLRPC . TL_account_tmpPassword ) var
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )	AlertsCreator . processError ( currentAccount , var , PaymentFormActivity . this , var )
AlertsCreator . processError ( var , PaymentFormActivity . this , var )	AlertsCreator . processError ( currentAccount , var , PaymentFormActivity . this , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . albumsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . albumsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . albumsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . albumsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recentImagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . recentImagesDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
if ( var )	if ( var || ! var )
FileLog . var ( "" , var )	FileLog . var ( var )
var . thumb = var . imageReceiver . getBitmap ( var )	var . thumb = var . imageReceiver . getBitmapSafe ( var )
return var . photoImage . getImageReceiver ( ) . getBitmap	return var . photoImage . getImageReceiver ( ) . getBitmapSafe
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . recentImagesDidLoaded )
MessagesStorage . getInstance ( ) . loadWebRecent ( var )	MessagesStorage . getInstance ( currentAccount ) . loadWebRecent ( var )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . recentImagesDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . recentImagesDidLoaded )
if ( var != null )	if ( var != 0 )
var . cancel ( true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var = null	var = 0
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
if ( var != null )	if ( var != 0 )
var . cancel ( true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var = null	var = 0
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
searchBingImages ( var . getText ( ) . toString , 0 , 53 )	searchImages ( var . getText ( ) . toString , "" , true )
MessagesStorage . getInstance ( ) . clearWebRecent ( var )	MessagesStorage . getInstance ( currentAccount ) . clearWebRecent ( var )
MediaController . getInstance ( ) . toggleGroupPhotosEnabled	SharedConfig . toggleGroupPhotosEnabled ( )
showHint ( false , MediaController . getInstance ( ) . isGroupPhotosEnabled )	showHint ( false , SharedConfig . groupPhotosEnabled )
var = ( var != null || var == 0 )	var = ( var != null || var == 0 ) && var <= 0
if ( var == null )	if ( ! var )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
if ( var != null )	if ( var != 0 )
var . cancel ( true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var = null	var = 0
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var = null	if ( var != null )
String var = UserConfig . getCurrentUser ( ) . var	TLRPC . TL_contacts_resolvedPeer var = ( TLRPC . TL_contacts_resolvedPeer ) var
InputStream var = null	Object var = null
var . addRequestProperty ( "" , BuildVars . BING_SEARCH_KEY )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
var . addRequestProperty ( "" , "" )	ConnectionsManager . getInstance ( currentAccount ) . cancelRequest ( var , true )
if ( var instanceof HttpURLConnection )	if ( ! ( var instanceof TLRPC . User ) )
HttpURLConnection var = ( HttpURLConnection ) var	TLRPC . User var = ( TLRPC . User ) var
int var = var . getResponseCode ( )	TLRPC . TL_messages_getInlineBotResults var = new TLRPC . TL_messages_getInlineBotResults ( )
String var = var . getHeaderField ( "" )	long var = var . getDialogId ( )
var . setRequestProperty ( "" , var )	var . peer = MessagesController . getInstance ( currentAccount ) . getInputPeer ( var )
var . addRequestProperty ( "" , "" )	var . peer = new TLRPC . TL_inputPeerEmpty ( )
var . addRequestProperty ( "" , "" )	var . peer = new TLRPC . TL_inputPeerEmpty ( )
if ( var . getMessage ( ) != null && var . getMessage ( ) . contains ( "" ) = false )	TLRPC . messages_BotResults var = ( TLRPC . messages_BotResults ) var
var = false	var = var . next_offset
FileLog . var ( var )	var = var . next_offset
if ( var != HttpURLConnection . HTTP_OK && var != HttpURLConnection . HTTP_ACCEPTED && var != HttpURLConnection . HTTP_NOT_MODIFIED )	if ( ! "" . equals ( var . var ) )
FileLog . var ( var )	if ( var . containsKey ( var . id ) )
if ( var == - 1 )	if ( var == null )
FileLog . var ( var )	var . width = var . w
FileLog . var ( var )	var . height = var . h
var . close ( )	var . height = var . h
FileLog . var ( var )	var . photoSize = var
FileLog . var ( var )	var . thumbPhotoSize = var
JSONArray var = var . getJSONArray ( "" )	if ( var . content == null )
String var = Utilities . MD5 ( var . getString ( "" ) )	TLRPC . DocumentAttribute var = var . content . attributes . get ( var )
var . var = var	var . put ( var . id , var )
var . put ( var , var )	var . put ( var . id , var )
var = ! var	var . imageUrl = var . content . url
FileLog . var ( var )	var . size = var . content . size
FileLog . var ( var )	var . var = 0
var = true	var . var = 0
var . notifyItemRemoved ( var . size ( ) - 1 )	var . localUrl = ""
if ( var && var . isEmpty ( ) || var && var == null )	var = ! var || var == null
var = PhotoViewer . getInstance ( ) . isShowingImage ( var . path )	var = PhotoViewer . isShowingImage ( var . path )
AndroidUtilities . runOnUIThread ( var )	AndroidUtilities . runOnUIThread ( var , 17 )
if ( var . messageOwner . grouped_id != var var )	if ( var . getGroupIdForUse ( var ) != var var )
var = var . messageOwner . grouped_id	var = var . getGroupIdForUse ( var )
if ( var != 0 || var . messageOwner . grouped_id == var ++ )	if ( var != 0 || var . getGroupIdForUse ( var ) == var ++ )
if ( var != 0 || var . messageOwner . grouped_id == var ++ )	if ( var != 0 || var . getGroupIdForUse ( var ) == var ++ )
setImageIndex ( var , false )	setImageIndex ( var , true )
setImageIndex ( var , false )	setImageIndex ( var , true )
setImageIndex ( var , false )	setImageIndex ( var , true )
if ( var == var )	if ( var == var || var == var )
var -= var . getMeasuredHeight ( var )	var += var . getMeasuredHeight ( var )
if ( Build . VERSION . SDK_INT >= 21 && AndroidUtilities . statusBarHeight != 0 )	if ( Build . VERSION . SDK_INT >= 21 && AndroidUtilities . statusBarHeight != 0 && var != null )
if ( var == var || var == var || var . getVisibility ( var ) == VISIBLE && var == var )	if ( var == var || var == var || var == var || var == var || var . getVisibility ( var ) == VISIBLE && var == var )
if ( var == 0 && ( var != null && var . isVideo ( var ) || var != null && ( var . type . equals ( "" ) || MessageObject . isVideoDocument ( var . document ) ) ) )	if ( var == null && var == 0 && ( var != null && var . isVideo ( var ) || var != null && ( var . type . equals ( "" ) || MessageObject . isVideoDocument ( var . document ) ) ) )
SharedMediaQuery . loadMedia ( var , 80 , 0 , SharedMediaQuery . MEDIA_PHOTOVIDEO , true , var )	DataQuery . getInstance ( var ) . loadMedia ( var , 80 , 0 , DataQuery . MEDIA_PHOTOVIDEO , true , var )
if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )	if ( var [ var ] . indexOfKey ( var . getId ( var ) ) < 0 )
if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )	if ( var [ var ] . indexOfKey ( var . getId ( var ) ) < 0 )
preparePlayer ( new File ( var ) , false , true )	preparePlayer ( Uri . fromFile ( new File ( var ) ) File ( var ) , false , true )
var = new ActionBar ( var )	var = UserConfig . selectedAccount
MediaActivity var = new MediaActivity ( var )	MediaActivity var = new MediaActivity ( var , new int var )
( ( LaunchActivity ) var ) . presentFragment ( new ChatActivity ( var ) , true , true )	var . presentFragment ( new ChatActivity ( var ) , var , true )
if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getClientUserId ( var ) || var != null var )	if ( var . size ( var ) > 1 || var . get ( 0 ) == UserConfig . getInstance ( var ) . getClientUserId var || var != null var )
var . showReplyPanel ( true , null , var , null , false )	var . showFieldPanelForForward ( true , var )
if ( var == null )	if ( var == null || var == null )
if ( var != null && var . var != UserConfig . getClientUserId ( var ) || var != null )	if ( var != null && var . var != UserConfig . getInstance ( var ) . getClientUserId var || var != null )
CheckBoxCell var = new CheckBoxCell ( var , true )	CheckBoxCell var = new CheckBoxCell ( var , 1 )
var . setLinkTextColor ( 0xffffffff )	var . setProgressColor ( 0xffffffff )
var . setTextColor ( 0xffffffff )	var . setCurrentAccount ( var )
photoProgressViews [ 2 ] = new PhotoProgressView ( var . getContext ( var ) , var )	photoProgressViews [ var ] = new PhotoProgressView ( var . getContext ( var ) , var )
photoProgressViews [ 2 ] . setBackgroundState ( 0 , false )	photoProgressViews [ var ] . setBackgroundState ( 0 , false )
var . setColors ( 0x66ffffff , 0xffffffff , 0xffffffff )	var . setColors ( 0x66ffffff , 0x66ffffff , 0xffd5d0d7 , 0xffffffff , 0xffffffff )
return super . onTouchEvent ( var )	boolean var = super . onTouchEvent ( var , var , var )
var . addView ( var , LayoutHelper . createFrame ( 48 , 48 , Gravity . LEFT | Gravity . TOP ) , 48 , Gravity . LEFT | Gravity . TOP )	var . addView ( var , LayoutHelper . createFrame ( 48 , 48 , Gravity . LEFT | Gravity . TOP , 4 , 0 , 0 , 0 ) , 48 , Gravity . LEFT | Gravity . TOP , 4 , 0 , 0 , 0 )
var = new TextView ( var . getContext ( var ) )	var = new SimpleTextView ( var . getContext ( var ) )
var . setGravity ( Gravity . CENTER_VERTICAL )	var . setScaleType ( ImageView . ScaleType . CENTER )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 13 )	var . setTextSize ( 13 )
var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . RIGHT | Gravity . TOP , 0 , 0 , 8 , 0 ) . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . RIGHT | Gravity . TOP , 0 , 0 , 8 , 0 )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . RIGHT | Gravity . TOP , 0 , 17 , 7 , 0 ) . WRAP_CONTENT , LayoutHelper . MATCH_PARENT , Gravity . RIGHT | Gravity . TOP , 0 , 17 , 7 , 0 )
var . setColorFilter ( new PorterDuffColorFilter ( Theme . getColor ( Theme . key_chats_actionIcon ) . key_chats_actionIcon , PorterDuff . Mode . MULTIPLY ) . getColor ( Theme . key_chats_actionIcon ) . key_chats_actionIcon , PorterDuff . Mode . MULTIPLY )	var . setBackgroundDrawable ( Theme . createSelectorDrawable ( Theme . ACTION_BAR_WHITE_SELECTOR_COLOR ) . ACTION_BAR_WHITE_SELECTOR_COLOR )
var = new LinearLayout ( var )	LinearLayout var = new LinearLayout ( var )
if ( var == null )	if ( var == null || var . getTag ( var ) != null )
if ( var == null || var . getSelectedPhotosOrder ( var ) == null || var . getSelectedPhotosOrder ( var ) . isEmpty var )	if ( var . getTag ( var ) != null || var == null || var . getSelectedPhotosOrder ( var ) == null || var . getSelectedPhotosOrder ( var ) . isEmpty var )
boolean var = MediaController . getInstance ( var ) . isGroupPhotosEnabled var	boolean var = SharedConfig . groupPhotosEnabled
MediaController . getInstance ( var ) . toggleGroupPhotosEnabled var	SharedConfig . toggleGroupPhotosEnabled ( var )
setImageIndex ( var , false )	setImageIndex ( var , true )
var . setAllowNewMentions ( false )	( ( DefaultItemAnimator ) var . getItemAnimator ( var ) ) . setDelayAnimations ( false )
if ( var != null )	if ( var . username != null var )
var . originalPath = var . getAbsolutePath ( var )	var . originalPath = var . getPath ( var )
if ( var != ExoPlayer . STATE_ENDED && var != ExoPlayer . STATE_IDLE var )	if ( var && ( var != ExoPlayer . STATE_ENDED && var != ExoPlayer . STATE_IDLE ) var )
if ( var == ExoPlayer . STATE_READY && var . getVisibility ( var ) != View . VISIBLE )	if ( var . getVisibility ( var ) != View . VISIBLE )
var = var . getDuration ( var )	long var = var . getDuration ( var )
if ( var == C . TIME_UNSET = 0 )	if ( var == C . TIME_UNSET = var )
var . preparePlayer ( Uri . fromFile ( var ) , "" )	var = Uri . fromFile ( var )
if ( var == null || var . length ( var ) == 0 var )	if ( TextUtils . isEmpty ( var ) var )
if ( var == 0 && var != null )	if ( ( var == 0 || var == 4 ) && var != null )
if ( var == 0 )	if ( var == 0 || var == 4 )
if ( var == 0 )	if ( var == 0 || var == 4 )
if ( var == 0 )	if ( var == 0 || var == 4 )
if ( var == 0 )	if ( var == 0 || var == 4 )
if ( var == 0 )	if ( var == 0 || var == 4 )
var . setEnabled ( var )	var . updateViewLayout ( var , var )
if ( var != null && var . equals ( var ) )	if ( var . equals ( var ) )
var . setVisibility ( View . GONE )	var . setVisibility ( View . INVISIBLE )
var . setVisibility ( View . GONE )	var . setVisibility ( View . INVISIBLE )
if ( var . getTag ( var ) != null )	boolean var = var . getTag ( var ) != null
return FileLoader . getAttachFileName ( var . document )	return var . getAttachName ( var )
if ( var . exists ( var ) var )	if ( ! var . exists ( var ) )
if ( var . content_url != null )	if ( var . content instanceof TLRPC . TL_webDocument )
var = ConnectionsManager . getInstance ( var ) . generateClassGuid var	var = ConnectionsManager . generateClassGuid ( var )
if ( var . equals ( "" ) || var . equals ( "" ) )	if ( var . equals ( "" ) || var . equals ( "" ) || "" . equals ( var . type ) )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , var , true )	DataQuery . getInstance ( var ) . getMediaCount ( var , DataQuery . MEDIA_PHOTOVIDEO , var , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , var , true )	DataQuery . getInstance ( var ) . getMediaCount ( var , DataQuery . MEDIA_PHOTOVIDEO , var , true )
boolean var = var != null && ! var . isSecretChat ( var ) && var != null && ! var . bot	boolean var = var != null && ! var . isSecretChat ( var ) && var != null && ! var . bot && ! var . isEditingMessageMedia ( var )
preparePlayer ( new File ( var . path ) . path , false , false )	preparePlayer ( Uri . fromFile ( new File ( var . path ) . path ) File ( var . path ) . path , false , false )
boolean var	boolean var = var . var ( var )
var = var != null && var . getId ( var ) == var . getId ( var )	var = var && var != null && var . getId ( var ) == var . getId ( var )
var = var . var ( var )	var = var . type . equals ( "" )
setCurrentCaption ( var . messageOwner . media . description )	var = var . messageOwner . media . description
setCurrentCaption ( var )	if ( TextUtils . isEmpty ( var ) var )
var . setTitle ( LocaleController . formatString ( "" , R . string . Of , var + 1 , var + var ) , R . string . Of , var + 1 , var + var )	var . setTitle ( LocaleController . formatString ( "" , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var ) , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var )
var . setTitle ( LocaleController . formatString ( "" , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var ) , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var )	var . setTitle ( LocaleController . formatString ( "" , R . string . Of , var + 1 , var + var ) , R . string . Of , var + 1 , var + var )
if ( var == UserConfig . getClientUserId ( var ) && ! var . isEmpty ( var ) var )	if ( var == UserConfig . getInstance ( var ) . getClientUserId var && ! var . isEmpty ( var ) var )
TLRPC . PhotoSize var = FileLoader . getClosestPhotoSizeWithSize ( var . photo . sizes , AndroidUtilities . getPhotoSize ( var ) )	var = FileLoader . getPathToAttach ( FileLoader . getClosestPhotoSizeWithSize ( var . photo . sizes , AndroidUtilities . getPhotoSize ( var ) ) . photo . sizes , AndroidUtilities . getPhotoSize ( var ) ) . getAbsolutePath var
if ( var . content_url != null )	if ( var . content instanceof TLRPC . TL_webDocument )
var = var . content_url	var = var . content . url
var . setPadding ( 0 , AndroidUtilities . dp ( 14 ) , 0 , 0 )	var . setVisibility ( View . GONE )
var . setVisibility ( View . GONE )	if ( var . getVisibility ( var ) != View . GONE )
preparePlayer ( new File ( var ) , false , false )	preparePlayer ( var , false , false )
if ( var . content_url != null )	if ( var . content instanceof TLRPC . TL_webDocument )
if ( var != null && var . exists ( var ) var )	if ( var != null && ( var || var ) var )
Bitmap var = null	Uri var = null
var = var . thumb_url	var = WebFile . createWithWebDocument ( var . thumb )
if ( var . content_url != null )	if ( var . content instanceof TLRPC . TL_webDocument )
var = var . content_url	var = WebFile . createWithWebDocument ( var . content )
Bitmap var = null	String var = null
Bitmap var = null	MessageObject var = null
return var && ! var && var != null && var != null && var . local_id == var . local_id && var . volume_id == var . volume_id && var . dc_id == var . dc_id	var = var . var && ! var . var && var != null && var . var != null && var . local_id == var . var . local_id && var . volume_id == var . var . volume_id && var . dc_id == var . var . dc_id
return var && ! var && var != null && var != null && var . id == var . id	var = var . var && ! var . var && var != null && var . var != null && var . id == var . var . id
return var && ! var && var != null && var != null && var . equals ( var )	var = var . var && ! var . var && var != null && var . var != null && var . equals ( var . var )
return openPhoto ( var . get ( var ) , null , var , null , var , var , null , var , var )	return openPhoto ( var . get ( var ) , null , var , null , null , var , var , null , var , var )
var . bottomMargin = 0	var . bottomMargin = AndroidUtilities . dp ( 19 )
if ( var == null || var || var == null && checkAnimation var || var == null && var == null && var == null && var == null )	if ( var == null || var || var == null && checkAnimation var || var == null && var == null && var == null && var == null && var == null )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
if ( var == null || ! var || checkAnimation var || var == null )	if ( var == null || ! var && ! var || checkAnimation var || var == null )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( var ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
ConnectionsManager . getInstance ( var ) . cancelRequestsForGuid ( var )	var . setScaleX ( 1.0f )
var . setImageBitmap ( var . getBitmap ( var ) )	var . setImageBitmap ( var . getBitmapSafe ( var ) )
if ( ! var . canScrollAway ( var ) )	if ( var != null && ! var . canScrollAway ( var ) )
var . setBackgroundDrawable ( Theme . createRoundRectDrawable ( AndroidUtilities . dp ( 3 ) , Theme . getColor ( Theme . key_chat_gifSaveHintBackground ) . key_chat_gifSaveHintBackground ) . dp ( 3 ) , Theme . getColor ( Theme . key_chat_gifSaveHintBackground ) . key_chat_gifSaveHintBackground )	var . setBackgroundDrawable ( Theme . createRoundRectDrawable ( AndroidUtilities . dp ( 3 ) , 0xcc111111 ) . dp ( 3 ) , 0xcc111111 )
var . setTextColor ( Theme . getColor ( Theme . key_chat_gifSaveHintText ) . key_chat_gifSaveHintText )	var . setTextColor ( 0xffffffff )
if ( var == 1 || ! var && var != 2 )	if ( var == 1 || ! var && var != 2 && ! var )
if ( var != 2 )	if ( var != 2 && ! var && ! var )
if ( ! ImageLoader . getInstance ( var ) . isLoadingHttpFile ( var . content_url ) var )	if ( ! ImageLoader . getInstance ( var ) . isLoadingHttpFile ( var . content . url ) var )
ImageLoader . getInstance ( var ) . cancelLoadHttpFile ( var . content_url )	ImageLoader . getInstance ( var ) . cancelLoadHttpFile ( var . content . url )
if ( var == 0 )	if ( var == 0 || var == 4 )
var = new MessageObject ( var , null , false )	var = new MessageObject ( UserConfig . selectedAccount , var , false )
var . var . originalPath = var . getAbsolutePath ( var )	var . var . originalPath = var . getPath ( var )
var = 432.0f	var = 426.0f
var = 848.0f	var = 854.0f
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 , AndroidUtilities . dp ( 152 ) ) , "" , 0 , AndroidUtilities . dp ( 152 ) , ObjectAnimator . ofFloat ( var , "" , - AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 104 ) ) , "" , - AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 104 ) )	var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 , AndroidUtilities . dp ( 152 ) ) , "" , 0 , AndroidUtilities . dp ( 152 ) , ObjectAnimator . ofFloat ( var , "" , 0 , AndroidUtilities . dp ( 152 ) ) , "" , 0 , AndroidUtilities . dp ( 152 ) , ObjectAnimator . ofFloat ( var , "" , - AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 104 ) ) , "" , - AndroidUtilities . dp ( 48 ) , AndroidUtilities . dp ( 104 ) )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , - AndroidUtilities . dp ( 48 ) ) , "" , - AndroidUtilities . dp ( 48 ) )	var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , - AndroidUtilities . dp ( 48 ) ) , "" , - AndroidUtilities . dp ( 48 ) )
if ( var > 1280 || var > 1280 = 5 > 848 || var > 848 = 4 > 640 || var > 640 = 3 > 480 || var > 480 = 2 = 1 )	if ( var > 1280 || var > 1280 = 5 > 854 || var > 854 = 4 > 640 || var > 640 = 3 > 480 || var > 480 = 2 = 1 )
if ( var > 848 || var > 848 = 4 )	if ( var > 854 || var > 854 = 4 )
if ( var >= 0 )	if ( var >= 0 var )
var . setChecked ( false , true )	var . closePhoto ( false , true )
var . setImage ( var . document . thumb . location , null , var . getResources ( var ) . getDrawable ( R . drawable . nophotos ) . drawable . nophotos )	return openPhoto ( null , null , null , var , null , var , var , null , 0 , 0 )
var = ConnectionsManager . getInstance ( ) . generateClassGuid	var = ConnectionsManager . generateClassGuid ( )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . pushMessagesUpdated )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . pushMessagesUpdated )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
MessagesController . getInstance ( ) . markDialogAsRead ( var . getDialogId ( ) , var . getId ( ) , Math . max ( 0 , var . getId ( ) ) , var . getId ( ) , var . messageOwner . date , true , true )	MessagesController . getInstance ( var . currentAccount ) . markDialogAsRead ( var . getDialogId ( ) , var . getId ( ) , Math . max ( 0 , var . getId ( ) ) , var . getId ( ) , var . messageOwner . date , true , 0 , true )
MessagesController . getInstance ( ) . sendTyping ( var . getDialogId ( ) , 0 , var )	MessagesController . getInstance ( var . currentAccount ) . sendTyping ( var . getDialogId ( ) , 0 , var )
int var = 0	float var = 0
var = var - var . leftMargin	var = var - var . getTranslationX ( )
var = - var - var . leftMargin	var = - var - var . getTranslationX ( )
if ( var . leftMargin != 0 )	if ( var . getTranslationX ( ) != 0 )
var = - var . leftMargin	var = - var . getTranslationX ( )
int var = int ( Math . abs ( ( float ) var / ( float ) var ) float ) var / ( float ) var * 200 )	int var = int ( Math . abs ( var / ( float ) var ) / ( float ) var * 200 )
var . startAnimation ( var )	var . playTogether ( var )
var . height = ViewGroup . LayoutParams . MATCH_PARENT	var . setTranslationX ( - var + var )
var . leftMargin = - var + var	var . setTranslationX ( - var + var )
var . gravity = Gravity . TOP | Gravity . LEFT	if ( var . width != var )
var . leftMargin = var	var . setTranslationX ( var )
var . height = ViewGroup . LayoutParams . MATCH_PARENT	var . setTranslationX ( var + var )
var . leftMargin = var + var	var . setTranslationX ( var + var )
var = new FrameLayoutAnimationListener ( this )	var = new FrameLayout ( this )
TextView var = ( TextView ) var . findViewWithTag ( 312 )	TextView var = var . findViewWithTag ( 312 )
BackupImageView var = ( BackupImageView ) var . findViewWithTag ( 311 )	BackupImageView var = var . findViewWithTag ( 311 )
if ( var || MediaController . getInstance ( ) . canDownloadMedia ( var ) )	if ( var || DownloadController . getInstance ( var . currentAccount ) . canDownloadMedia ( var ) )
var . setTextSize ( TypedValue . COMPLEX_UNIT_SP , MessagesController . getInstance ( ) . fontSize )	var . setTextSize ( TypedValue . COMPLEX_UNIT_SP , SharedConfig . fontSize )
double var = var . messageOwner . media . geo . var	TLRPC . GeoPoint var = var . messageOwner . media . geo
var = ( PopupAudioView ) var . findViewWithTag ( 300 )	PopupAudioView var = var . findViewWithTag ( 300 )
var = new FrameLayoutAnimationListener ( this )	var = new LinearLayout ( this )
if ( MediaController . getInstance ( ) . canDownloadMedia ( var ) )	if ( DownloadController . getInstance ( var . currentAccount ) . canDownloadMedia ( var ) )
var = new FrameLayoutAnimationListener ( this )	var = new FrameLayout ( this )
TextView var = ( TextView ) var . findViewWithTag ( 301 )	TextView var = var . findViewWithTag ( 301 )
var . setTextSize ( TypedValue . COMPLEX_UNIT_SP , MessagesController . getInstance ( ) . fontSize )	var . setTextSize ( TypedValue . COMPLEX_UNIT_SP , SharedConfig . fontSize )
var . leftMargin = 0	var . setTranslationX ( 0 )
var . leftMargin = - var	var . setTranslationX ( - var )
var . leftMargin = var	var . setTranslationX ( var )
int var = ( ( FrameLayout . LayoutParams ) var . getLayoutParams ( ) ) . leftMargin	float var = var . getTranslationX ( )
var . leftMargin = var	var . setTranslationX ( var )
int var = ( ( FrameLayout . LayoutParams ) var . getLayoutParams ( ) ) . leftMargin	float var = var . getTranslationX ( )
var . leftMargin = var	var . setTranslationX ( var )
var = NotificationsController . getInstance ( ) . popupReplyMessages	var . addAll ( NotificationsController . getInstance ( var ) . var )
var = NotificationsController . getInstance ( ) . var	var . addAll ( NotificationsController . getInstance ( var ) . popupReplyMessages )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 , var = var . var ( ) ; var < var ; var ++ )
var . setDialogId ( var )	var . setDialogId ( var , var . currentAccount )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( var . currentAccount ) . getUser ( var )
var = MessagesController . getInstance ( ) . getChat ( - var )	var = MessagesController . getInstance ( var . currentAccount ) . getChat ( - var )
var = MessagesController . getInstance ( ) . getUser ( var . messageOwner . from_id )	var = MessagesController . getInstance ( var . currentAccount ) . getUser ( var . messageOwner . from_id )
TLRPC . EncryptedChat var = MessagesController . getInstance ( ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )	TLRPC . EncryptedChat var = MessagesController . getInstance ( var . currentAccount ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
var = MessagesController . getInstance ( ) . getUser ( var . user_id )	var = MessagesController . getInstance ( var . currentAccount ) . getUser ( var . user_id )
if ( var == null )	if ( var == null || var == null )
if ( var . id / 1000 != 777 && var . id / 1000 != 333 && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( ) . contactsDict . size ( ) != 0 || ! ContactsController . getInstance ( ) . isLoadingContacts ) )	if ( var . id / 1000 != 777 && var . id / 1000 != 333 && ContactsController . getInstance ( var . currentAccount ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( var . currentAccount ) . contactsDict . size ( ) != 0 || ! ContactsController . getInstance ( var . currentAccount ) . isLoadingContacts ) )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var . getDialogId ( ) )	CharSequence var = MessagesController . getInstance ( var . currentAccount ) . printingStrings . get ( var . getDialogId ( ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . id )	TLRPC . User var = MessagesController . getInstance ( var . currentAccount ) . getUser ( var . id )
var . setText ( LocaleController . formatUserStatus ( var ) )	var . setText ( LocaleController . formatUserStatus ( var . currentAccount , var ) . currentAccount , var )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( var . id )	TLRPC . Chat var = MessagesController . getInstance ( var . currentAccount ) . getChat ( var . id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . id )	TLRPC . User var = MessagesController . getInstance ( var . currentAccount ) . getUser ( var . id )
Integer var = MessagesController . getInstance ( ) . printingStringsTypes . get ( var . getDialogId ( ) )	Integer var = MessagesController . getInstance ( var . currentAccount ) . printingStringsTypes . get ( var . getDialogId ( ) )
ConnectionsManager . getInstance ( ) . setAppPaused ( false , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( false , false )
ConnectionsManager . getInstance ( ) . setAppPaused ( true , false )	ConnectionsManager . getInstance ( var ) . setAppPaused ( true , false )
CharSequence var = MessagesController . getInstance ( ) . printingStrings . get ( var . getDialogId ( ) )	CharSequence var = MessagesController . getInstance ( var . currentAccount ) . printingStrings . get ( var . getDialogId ( ) )
if ( var . getMessageObject ( ) != null && var . getMessageObject ( ) . getId == var )	if ( var != null && var . currentAccount == var && var . getId ( ) == var )
PopupAudioView var = ( PopupAudioView ) var . findViewWithTag ( 300 )	PopupAudioView var = var . findViewWithTag ( 300 )
if ( var . getMessageObject ( ) != null && var . getMessageObject ( ) . getId == var )	if ( var != null && var . currentAccount == var && var . getId ( ) == var )
TextView var = ( TextView ) var . findViewWithTag ( 301 )	TextView var = var . findViewWithTag ( 301 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . appDidLogout )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . appDidLogout )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . pushMessagesUpdated )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . pushMessagesUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingProgressDidChanged )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . messagePlayingDidReset )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . privacyRulesUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . privacyRulesUpdated )
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getGlobalMainSettings ( )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . get ( var ) )
TLRPC . InputUser var = MessagesController . getInputUser ( var )	TLRPC . InputUser var = MessagesController . getInstance ( currentAccount ) . getInputUser ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . get ( var ) )
TLRPC . InputUser var = MessagesController . getInputUser ( var )	TLRPC . InputUser var = MessagesController . getInstance ( currentAccount ) . getInputUser ( var )
MessagesController . getInstance ( ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
ContactsController . getInstance ( ) . setPrivacyRules ( var . var , var )	ContactsController . getInstance ( currentAccount ) . setPrivacyRules ( var . var , var )
ArrayList < TLRPC . PrivacyRule > var = ContactsController . getInstance ( ) . getPrivacyRules ( var )	ArrayList < TLRPC . PrivacyRule > var = ContactsController . getInstance ( currentAccount ) . getPrivacyRules ( var )
ContactsController . getInstance ( var ) . loadPrivacySettings var	ContactsController . getInstance ( currentAccount ) . loadPrivacySettings var
if ( MessagesController . getInstance ( var ) . secretWebpagePreview != 1 var )	if ( UserConfig . getInstance ( currentAccount ) . hasSecureData var )
var = - 1	var = var ++
var = - 1	var = var ++
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . privacyRulesUpdated )
VoIPHelper . upgradeP2pSetting ( var )	VoIPHelper . upgradeP2pSetting ( currentAccount )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . privacyRulesUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . privacyRulesUpdated )
presentFragment ( new SessionsActivity var )	presentFragment ( new SessionsActivity ( 0 ) )
ContactsController . getInstance ( var ) . setDeleteAccountTTL ( var . ttl . days )	ContactsController . getInstance ( currentAccount ) . setDeleteAccountTTL ( var . ttl . days )
if ( UserConfig . passcodeHash . length ( var ) > 0 var )	if ( SharedConfig . passcodeHash . length ( var ) > 0 var )
MessagesController . getInstance ( var ) . secretWebpagePreview = 0	MessagesController . getGlobalMainSettings ( var ) . edit var . putInt ( "" , MessagesController . getInstance ( currentAccount ) . secretWebpagePreview ) . commit var
MessagesController . getInstance ( var ) . secretWebpagePreview = 1	MessagesController . getInstance ( currentAccount ) . secretWebpagePreview = 1
var . edit ( var ) . putInt ( "" , var ) . apply var	var . edit ( var ) . putInt ( "" , var ) . commit var
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )	AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity var , 1 )
UserConfig . tmpPassword = null	UserConfig . getInstance ( currentAccount ) . tmpPassword = null
UserConfig . saveConfig ( false )	UserConfig . getInstance ( currentAccount ) . saveConfig ( false )
ArrayList < TLRPC . PrivacyRule > var = ContactsController . getInstance ( var ) . getPrivacyRules ( var )	ArrayList < TLRPC . PrivacyRule > var = ContactsController . getInstance ( currentAccount ) . getPrivacyRules ( var )
return var == var || var == var || var == var || var == var || var == var || var == var && ! ContactsController . getInstance ( var ) . getLoadingGroupInfo var || var == var && ! ContactsController . getInstance ( var ) . getLoadingLastSeenInfo var || var == var && ! ContactsController . getInstance ( var ) . getLoadingCallsInfo var || var == var && ! ContactsController . getInstance ( var ) . getLoadingDeleteInfo var || var == var || var == var	return var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var && ! ContactsController . getInstance ( currentAccount ) . getLoadingGroupInfo var || var == var && ! ContactsController . getInstance ( currentAccount ) . getLoadingLastSeenInfo var || var == var && ! ContactsController . getInstance ( currentAccount ) . getLoadingCallsInfo var || var == var && ! ContactsController . getInstance ( currentAccount ) . getLoadingDeleteInfo var || var == var || var == var || var == var || var == var || var == var || var == var || var == var
if ( ContactsController . getInstance ( var ) . getLoadingLastSeenInfo var var )	if ( ContactsController . getInstance ( currentAccount ) . getLoadingLastSeenInfo var var )
if ( ContactsController . getInstance ( var ) . getLoadingCallsInfo var var )	if ( ContactsController . getInstance ( currentAccount ) . getLoadingCallsInfo var var )
if ( ContactsController . getInstance ( var ) . getLoadingGroupInfo var var )	if ( ContactsController . getInstance ( currentAccount ) . getLoadingGroupInfo var var )
if ( ContactsController . getInstance ( var ) . getLoadingDeleteInfo var var )	if ( ContactsController . getInstance ( currentAccount ) . getLoadingDeleteInfo var var )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . DeleteAccountIfAwayFor ) , R . string . DeleteAccountIfAwayFor , var , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . DeleteAccountIfAwayFor2 ) , R . string . DeleteAccountIfAwayFor2 , var , false )
var . setText ( LocaleController . getString ( "" , R . string . PrivacyPaymentsClear ) , R . string . PrivacyPaymentsClear , false )	var . setText ( LocaleController . getString ( "" , R . string . PrivacyPaymentsClear ) , R . string . PrivacyPaymentsClear , true )
var . setText ( LocaleController . getString ( "" , R . string . PrivacyPaymentsClearInfo ) , R . string . PrivacyPaymentsClearInfo )	var . setText ( LocaleController . getString ( "" , R . string . SuggestContactsInfo ) , R . string . SuggestContactsInfo )
var . setBackgroundDrawable ( Theme . getThemedDrawable ( var , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow ) , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow )	var . setBackgroundDrawable ( Theme . getThemedDrawable ( var , R . drawable . greydivider , Theme . key_windowBackgroundGrayShadow ) , R . drawable . greydivider , Theme . key_windowBackgroundGrayShadow )
var . setText ( LocaleController . getString ( "" , R . string . DeleteAccountTitle ) , R . string . DeleteAccountTitle )	var . setText ( LocaleController . getString ( "" , R . string . PrivacyAdvanced ) , R . string . PrivacyAdvanced )
var . setText ( LocaleController . getString ( "" , R . string . PrivacyPayments ) , R . string . PrivacyPayments )	var . setText ( LocaleController . getString ( "" , R . string . PrivacyBots ) , R . string . PrivacyBots )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . SecretWebPage ) , R . string . SecretWebPage , MessagesController . getInstance ( var ) . secretWebpagePreview == 1 , true )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . SecretWebPage ) , R . string . SecretWebPage , MessagesController . getInstance ( currentAccount ) . secretWebpagePreview == 1 , false )
if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var == var )	if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var )
if ( var == var )	if ( var == var || var == var || var == var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . get ( var ) )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
var . thumb = var . imageReceiver . getBitmap ( var )	var . thumb = var . imageReceiver . getBitmapSafe ( var )
var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )	var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . encryptedChatCreated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . botInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didReceivedNewMessages )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var )	var = MessagesController . getInstance ( currentAccount ) . blockedUsers . contains ( var )
BotQuery . loadBotInfo ( var . id , true , classGuid )	DataQuery . getInstance ( currentAccount ) . loadBotInfo ( var . id , true , classGuid )
MessagesController . getInstance ( var ) . loadFullUser ( MessagesController . getInstance ( var ) . getUser ( var ) , classGuid , true )	MessagesController . getInstance ( currentAccount ) . loadFullUser ( MessagesController . getInstance ( currentAccount ) . getUser ( var ) , classGuid , true )
var . release ( var )	var . countDown ( var )
var . acquire ( var )	var . await ( var )
MessagesController . getInstance ( var ) . putChat ( var , true )	MessagesController . getInstance ( currentAccount ) . putChat ( var , true )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
var = new AvatarUpdater var	var = new ImageUpdater var
MessagesController . getInstance ( var ) . changeChatAvatar ( var , var )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , var )
MessagesController . getInstance ( var ) . loadFullChat ( var , classGuid , true )	MessagesController . getInstance ( currentAccount ) . loadFullChat ( var , classGuid , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )	DataQuery . getInstance ( currentAccount ) . getMediaCount ( var , var , classGuid , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )	DataQuery . getInstance ( currentAccount ) . getMediaCount ( var , var , classGuid , true )
SharedMediaQuery . getMediaCount ( - var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )	DataQuery . getInstance ( currentAccount ) . getMediaCount ( - var , var , classGuid , true )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )	DataQuery . getInstance ( currentAccount ) . getMediaCount ( var , var , classGuid , true )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . mediaCountDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . mediaCountDidLoaded )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . addObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . mediaCountDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . mediaCountDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . contactsDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . encryptedChatCreated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . encryptedChatCreated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . encryptedChatUpdated )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . blockedUsersDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . botInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . botInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didReceivedNewMessages )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
MessagesController . getInstance ( var ) . unblockUser ( var )	MessagesController . getInstance ( currentAccount ) . unblockUser ( var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( "" , var , null , null , false , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( "" , var , null , null , false , null , null , null )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
ContactsController . getInstance ( var ) . deleteContact ( var )	ContactsController . getInstance ( currentAccount ) . deleteContact ( var )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	final TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . addUserToChat ( - ( int ) var , var , null , 0 , null , ProfileActivity . this )	MessagesController . getInstance ( currentAccount ) . addUserToChat ( - ( int ) var , var , null , 0 , null , ProfileActivity . this )
TLRPC . TL_userFull var = MessagesController . getInstance ( var ) . getUserFull ( var . var )	TLRPC . TL_userFull var = MessagesController . getInstance ( currentAccount ) . getUserFull ( var . var )
var . putExtra ( Intent . EXTRA_TEXT , String . format ( "" + MessagesController . getInstance ( var ) . linkPrefix + "" , var . about , var . username ) + MessagesController . getInstance ( var ) . linkPrefix + "" , var . about , var . username )	var . putExtra ( Intent . EXTRA_TEXT , String . format ( "" + MessagesController . getInstance ( currentAccount ) . linkPrefix + "" , var . about , var . username ) + MessagesController . getInstance ( currentAccount ) . linkPrefix + "" , var . about , var . username )
var . putExtra ( Intent . EXTRA_TEXT , String . format ( "" + MessagesController . getInstance ( var ) . linkPrefix + "" , var . username ) + MessagesController . getInstance ( var ) . linkPrefix + "" , var . username )	var . putExtra ( Intent . EXTRA_TEXT , String . format ( "" + MessagesController . getInstance ( currentAccount ) . linkPrefix + "" , var . username ) + MessagesController . getInstance ( currentAccount ) . linkPrefix + "" , var . username )
AndroidUtilities . installShortcut ( var )	DataQuery . getInstance ( currentAccount ) . installShortcut ( var )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . var ) . var )	VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( currentAccount ) . getUserFull ( var . var ) . var )
MediaActivity var = new MediaActivity ( var )	MediaActivity var = new MediaActivity ( var , var )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , 0 )	MessagesStorage . getInstance ( currentAccount ) . setDialogFlags ( var , 0 )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( currentAccount ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )	NotificationsController . getInstance ( currentAccount ) . updateServerNotificationsSettings ( var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var	int var = ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var
if ( var == 4 )	if ( var == 5 )
if ( var == 4 var )	if ( var == 5 var )
MessagesStorage . getInstance ( var ) . setDialogFlags ( var , var )	MessagesStorage . getInstance ( currentAccount ) . setDialogFlags ( var , var )
TLRPC . TL_dialog var = MessagesController . getInstance ( var ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( currentAccount ) . dialogs_dict . get ( var )
NotificationsController . updateServerNotificationsSettings ( var )	NotificationsController . getInstance ( currentAccount ) . updateServerNotificationsSettings ( var )
SecretChatHelper . getInstance ( var ) . startSecretChat ( getParentActivity var , MessagesController . getInstance ( var ) . getUser ( var ) )	SecretChatHelper . getInstance ( currentAccount ) . startSecretChat ( getParentActivity var , MessagesController . getInstance ( currentAccount ) . getUser ( var ) )
if ( var == UserConfig . getClientUserId ( var ) )	if ( var == UserConfig . getInstance ( currentAccount ) . getClientUserId var )
var . putExtra ( Intent . EXTRA_TEXT , var . title + "" + var . about + "" + MessagesController . getInstance ( var ) . linkPrefix + "" + var . username )	var . putExtra ( Intent . EXTRA_TEXT , var . title + "" + var . about + "" + MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username )
var . putExtra ( Intent . EXTRA_TEXT , var . title + "" + MessagesController . getInstance ( var ) . linkPrefix + "" + var . username )	var . putExtra ( Intent . EXTRA_TEXT , var . title + "" + MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username )
MessagesController . getInstance ( var ) . convertToMegaGroup ( getParentActivity var , var )	MessagesController . getInstance ( currentAccount ) . convertToMegaGroup ( getParentActivity var , var )
if ( var . var == UserConfig . getClientUserId ( var ) )	if ( var . var == UserConfig . getInstance ( currentAccount ) . getClientUserId var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . var )
if ( var . var != UserConfig . getClientUserId ( var ) )	if ( var . var != UserConfig . getInstance ( currentAccount ) . getClientUserId var )
if ( var . admin && var . admins_enabled || var . inviter_id == UserConfig . getClientUserId ( var ) = true )	if ( var . admin && var . admins_enabled || var . inviter_id == UserConfig . getInstance ( currentAccount ) . getClientUserId var = true )
var . var . inviter_id = UserConfig . getClientUserId ( var )	var . var . inviter_id = UserConfig . getInstance ( currentAccount ) . getClientUserId var
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
var . var = MessagesController . getInputUser ( var )	var . var = MessagesController . getInstance ( currentAccount ) . getInputUser ( var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
if ( ! MessagesController . checkCanOpenChat ( var , ProfileActivity . this ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ProfileActivity . this ) )
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
if ( ! MessagesController . checkCanOpenChat ( var , ProfileActivity . this ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , ProfileActivity . this ) )
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . changeChatAvatar ( var , null )	MessagesController . getInstance ( currentAccount ) . changeChatAvatar ( var , null )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	final TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
if ( ChatObject . isChannel ( var ) && ! var . megagroup var )	if ( ChatObject . isChannel ( var , currentAccount ) && ! var . megagroup var )
MessagesController . getInstance ( var ) . loadChatInfo ( var , null , false )	MessagesController . getInstance ( currentAccount ) . loadChatInfo ( var , null , false )
var . channel = MessagesController . getInputChannel ( var )	var . channel = MessagesController . getInstance ( currentAccount ) . getInputChannel ( var )
MessagesController . getInstance ( var ) . putUsers ( var . users , false )	MessagesController . getInstance ( currentAccount ) . putUsers ( var . users , false )
if ( var . users . size ( var ) != 200 = true )	if ( var . users . size ( var ) < 200 = true )
MessagesStorage . getInstance ( var ) . putUsersAndChats ( var . users , null , true , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var . users , null , true , true )
MessagesStorage . getInstance ( var ) . updateChannelUsers ( var , var . participants )	MessagesStorage . getInstance ( currentAccount ) . updateChannelUsers ( var , var . participants )
if ( ! var . containsKey ( var . var ) )	if ( var . indexOfKey ( var . var ) < 0 )
ConnectionsManager . getInstance ( var ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
HashMap < Integer , TLRPC . User > var = new HashMap var ( var )	SparseArray < TLRPC . User > var = new SparseArray var ( var )
if ( var == var || var == var )	if ( var == DataQuery . MEDIA_PHOTOVIDEO )
if ( var == var var )	if ( var == var = var = var )
var = ( Integer ) var [ 1 ]	var = var
var = ( Integer ) var [ 1 ]	int var = ( Integer ) var [ 1 ]
NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
var = MessagesController . getInstance ( var ) . blockedUsers . contains ( var )	var = MessagesController . getInstance ( currentAccount ) . blockedUsers . contains ( var )
SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , classGuid , true )	DataQuery . getInstance ( currentAccount ) . getMediaCount ( var , DataQuery . MEDIA_PHOTOVIDEO , classGuid , true )
TLRPC . Chat var = MessagesController . getInstance ( var ) . getChat ( var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( var )
NotificationCenter . getInstance ( var ) . setAllowedNotificationsDutingAnimation ( new int var )	NotificationCenter . getInstance ( currentAccount ) . setAllowedNotificationsDutingAnimation ( new int var )
int var = ConnectionsManager . getInstance ( var ) . getCurrentTime var	int var = ConnectionsManager . getInstance ( currentAccount ) . getConnectionState var
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . var )
if ( var != null && var . status != null && ( var . status . expires > var || var . id == UserConfig . getClientUserId ( var ) ) && var . status . expires > 10000 ++ )	if ( var != null && var . status != null && ( var . status . expires > var || var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId var ) && var . status . expires > 10000 ++ )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . participants . participants . get ( var ) . var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . participants . participants . get ( var ) . var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . participants . participants . get ( var ) . var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . participants . participants . get ( var ) . var )
if ( var . id == UserConfig . getClientUserId ( var ) var )	if ( var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId var var )
var = ConnectionsManager . getInstance ( var ) . getCurrentTime var + 50000	var = ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var + 50000
if ( var . id == UserConfig . getClientUserId ( var ) var )	if ( var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId var var )
MessagesController . getInstance ( var ) . deleteUserFromChat ( var , MessagesController . getInstance ( var ) . getUser ( var ) , var )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , MessagesController . getInstance ( currentAccount ) . getUser ( var ) , var )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats , - ( long ) var )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
MessagesController . getInstance ( var ) . deleteUserFromChat ( var , MessagesController . getInstance ( var ) . getUser ( UserConfig . getClientUserId ( var ) ) . getClientUserId ( var ) , var )	MessagesController . getInstance ( currentAccount ) . deleteUserFromChat ( var , MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId var ) . getInstance ( currentAccount ) . getClientUserId var , var )
TLRPC . TL_userFull var = MessagesController . getInstance ( var ) . getUserFull ( var )	TLRPC . TL_userFull var = MessagesController . getInstance ( currentAccount ) . getUserFull ( var )
if ( var != UserConfig . getClientUserId ( var ) )	if ( var != UserConfig . getInstance ( currentAccount ) . getClientUserId var )
if ( var != null && ! var && var == null && var . id != UserConfig . getClientUserId ( var ) )	if ( var != null && ! var && var == null && var . id != UserConfig . getInstance ( currentAccount ) . getClientUserId var )
if ( var == null || var . participants_count < MessagesController . getInstance ( var ) . maxMegagroupCount )	if ( var == null || var . participants_count < MessagesController . getInstance ( currentAccount ) . maxMegagroupCount )
if ( ! ( var . participants instanceof TLRPC . TL_chatParticipantsForbidden ) && var . participants . participants . size ( var ) < MessagesController . getInstance ( var ) . maxGroupCount && ( var . admin || var . creator || ! var . admins_enabled ) )	if ( ! ( var . participants instanceof TLRPC . TL_chatParticipantsForbidden ) && var . participants . participants . size ( var ) < MessagesController . getInstance ( currentAccount ) . maxGroupCount && ( var . admin || var . creator || ! var . admins_enabled ) )
if ( var . creator && var . participants . participants . size ( var ) >= MessagesController . getInstance ( var ) . minGroupConvertSize )	if ( var . creator && var . participants . participants . size ( var ) >= MessagesController . getInstance ( currentAccount ) . minGroupConvertSize )
var = LocaleController . formatUserStatus ( var )	var = LocaleController . formatUserStatus ( currentAccount , var )
if ( var == 0 && var . id != UserConfig . getClientUserId ( var ) && var . id / 1000 != 777 && var . id / 1000 != 333 && var . phone != null && var . phone . length ( var ) != 0 && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( var ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( var ) . isLoadingContacts var ) var )	if ( var == 0 && var . id != UserConfig . getInstance ( currentAccount ) . getClientUserId var && var . id / 1000 != 777 && var . id / 1000 != 333 && var . phone != null && var . phone . length ( var ) != 0 && ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var . id ) == null && ( ContactsController . getInstance ( currentAccount ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( currentAccount ) . isLoadingContacts var ) var )
var . getImageReceiver ( var ) . setVisible ( ! PhotoViewer . getInstance ( var ) . isShowingImage ( var ) , false )	var . getImageReceiver ( var ) . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
var . getImageReceiver ( var ) . setVisible ( ! PhotoViewer . getInstance ( var ) . isShowingImage ( var ) , false )	var . getImageReceiver ( var ) . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
if ( UserConfig . getClientUserId ( var ) != var var )	if ( UserConfig . getInstance ( currentAccount ) . getClientUserId var != var var )
TLRPC . TL_userFull var = MessagesController . getInstance ( var ) . getUserFull ( var )	TLRPC . TL_userFull var = MessagesController . getInstance ( currentAccount ) . getUserFull ( var )
if ( ContactsController . getInstance ( var ) . contactsDict . get ( var ) == null var )	if ( ContactsController . getInstance ( currentAccount ) . contactsDict . get ( var ) == null var )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
if ( ! MessagesController . checkCanOpenChat ( var , var ) )	if ( ! MessagesController . getInstance ( currentAccount ) . checkCanOpenChat ( var , var ) )
NotificationCenter . getInstance ( var ) . removeObserver ( this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . closeChats )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
SendMessagesHelper . getInstance ( var ) . sendMessage ( var , var , null , null , null )	SendMessagesHelper . getInstance ( currentAccount ) . sendMessage ( var , var , null , null , null )
VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( var ) . getUserFull ( var . id ) . id )	VoIPHelper . startCall ( var , getParentActivity var , MessagesController . getInstance ( currentAccount ) . getUserFull ( var . id ) . id )
var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount ) , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount ) . formatString ( "" , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount ) , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( var ) . maxMegagroupCount ) , MessagesController . getInstance ( var ) . maxMegagroupCount )	var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount ) , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount ) , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount ) , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount ) . formatString ( "" , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount ) , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount ) , R . string . ConvertGroupInfo , LocaleController . formatPluralString ( "" , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount ) , MessagesController . getInstance ( currentAccount ) . maxMegagroupCount )
MessagesController . openByUserName ( var . substring ( 1 ) , ProfileActivity . this , 0 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( var . substring ( 1 ) , ProfileActivity . this , 0 )
final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )	final TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
var . setTextAndValue ( var , MessagesController . getInstance ( var ) . linkPrefix + "" + var . username )	var . setTextAndValue ( var , MessagesController . getInstance ( currentAccount ) . linkPrefix + "" + var . username )
if ( var != 0 && UserConfig . getClientUserId ( var ) == var var )	if ( var != 0 && UserConfig . getInstance ( currentAccount ) . getClientUserId var == var var )
TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )	TLRPC . EncryptedChat var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
var -= ConnectionsManager . getInstance ( var ) . getCurrentTime var	var -= ConnectionsManager . getInstance ( currentAccount ) . getCurrentTime var
TLRPC . EncryptedChat var = MessagesController . getInstance ( var ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )	TLRPC . EncryptedChat var = MessagesController . getInstance ( currentAccount ) . getEncryptedChat ( int ( var >> 32 ) >> 32 )
TLRPC . Chat var = MessagesController . getInstance ( ) . getChat ( - var )	TLRPC . Chat var = MessagesController . getInstance ( currentAccount ) . getChat ( - var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . notificationsSettingsUpdated )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . notificationsSettingsUpdated )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . VoipSettingsRingtone ) , R . string . VoipSettingsRingtone , var , true )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . VoipSettingsRingtone ) , R . string . VoipSettingsRingtone , var , false )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityDefault ) , R . string . NotificationsPriorityDefault , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , LocaleController . getString ( "" , R . string . NotificationsPriorityUrgent ) , R . string . NotificationsPriorityUrgent , false )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityHigh ) , R . string . NotificationsPriorityHigh , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , LocaleController . getString ( "" , R . string . NotificationsPriorityHigh ) , R . string . NotificationsPriorityHigh , false )
if ( var == 2 )	if ( var == 5 )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPriorityMax ) , R . string . NotificationsPriorityMax , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , LocaleController . getString ( "" , R . string . NotificationsPriorityMedium ) , R . string . NotificationsPriorityMedium , false )
var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsPriority ) , R . string . NotificationsPriority , LocaleController . getString ( "" , R . string . NotificationsPrioritySettings ) , R . string . NotificationsPrioritySettings , false )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . NotificationsImportance ) , R . string . NotificationsImportance , LocaleController . getString ( "" , R . string . NotificationsPrioritySettings ) , R . string . NotificationsPrioritySettings , false )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getNotificationsSettings ( currentAccount )
return super . onFragmentCreate ( )	var . setMaxLines ( 1 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . proxySettingsChanged )	NotificationCenter . getGlobalInstance ( ) . postNotificationName ( NotificationCenter . proxySettingsChanged )
var . putBoolean ( "" , var )	var . putBoolean ( "" , true )
var . putString ( "" , var )	var . putString ( "" , var . password )
var . putInt ( "" , var )	var . putInt ( "" , var . port )
ConnectionsManager . native_setProxySettings ( var , var , var , var )	var . drawLine ( getPaddingLeft , getHeight - 1 , getWidth - getPaddingRight , getHeight - 1 , Theme . dividerPaint )
ConnectionsManager . native_setProxySettings ( "" , 0 , "" , "" )	var = new SharedConfig . ProxyInfo ( "" , 1080 , "" , "" , "" )
var = var . getBoolean ( "" , false )	var . username = var [ var ] . getText . toString
actionBar . setAllowOverlayTitle ( true )	actionBar . setAllowOverlayTitle ( false )
var . putExtra ( Intent . EXTRA_TEXT , "" + var . toString ( ) )	var . putExtra ( Intent . EXTRA_TEXT , var + var . toString ( ) )
var = new TextCheckCell ( var )	var = new ImageView ( var )
var . setBackgroundDrawable ( Theme . getSelectorDrawable ( true ) )	var [ var ] . setBackgroundDrawable ( Theme . getSelectorDrawable ( true ) )
var . setChecked ( var )	var . putString ( "" , var . secret )
if ( ! var )	if ( AndroidUtilities . isTablet ( ) )
var . setChecked ( false )	actionBar . setOccupyStatusBar ( false )
var = new ShadowSectionCell ( var )	var [ 0 ] = new ShadowSectionCell ( var )
for ( int var = 0 ; var < 4 ; var ++ )	for ( int var = 0 ; var < 5 ; var ++ )
var . add ( var )	var [ var ] . setSingleLine ( true )
var . setBackgroundColor ( Theme . getColor ( Theme . key_divider ) . key_divider )	var [ var ] . setHeaderHintColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteBlueHeader ) . key_windowBackgroundWhiteBlueHeader )
var [ var ] . setHintTextColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteHintText ) . key_windowBackgroundWhiteHintText )	var [ var ] . setHintColor ( Theme . getColor ( Theme . key_windowBackgroundWhiteHintText ) . key_windowBackgroundWhiteHintText )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyAddress ) , R . string . UseProxyAddress )	var [ var ] . setHintText ( LocaleController . getString ( "" , R . string . UseProxyAddress ) , R . string . UseProxyAddress )
var [ var ] . setText ( var . getString ( "" , "" ) , "" )	var [ var ] . setText ( var . address )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyPassword ) , R . string . UseProxyPassword )	var [ var ] . setHintText ( LocaleController . getString ( "" , R . string . UseProxyPassword ) , R . string . UseProxyPassword )
var [ var ] . setText ( var . getString ( "" , "" ) , "" )	var [ var ] . setText ( var . password )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyPort ) , R . string . UseProxyPort )	var [ var ] . setHintText ( LocaleController . getString ( "" , R . string . UseProxyPort ) , R . string . UseProxyPort )
var [ var ] . setText ( "" + var . getInt ( "" , 1080 ) , 1080 )	var [ var ] . setText ( "" + var . port )
var [ var ] . setHint ( LocaleController . getString ( "" , R . string . UseProxyUsername ) , R . string . UseProxyUsername )	var [ var ] . setHintText ( LocaleController . getString ( "" , R . string . UseProxyUsername ) , R . string . UseProxyUsername )
var [ var ] . setText ( var . getString ( "" , "" ) , "" )	var [ var ] . setHintText ( LocaleController . getString ( "" , R . string . UseProxySecret ) , R . string . UseProxySecret )
var [ var ] . setPadding ( 0 , 0 , 0 , AndroidUtilities . dp ( 6 ) )	var [ var ] . setPadding ( 0 , 0 , 0 , 0 )
var = new TextCheckCell ( var )	var = new TextView ( var )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . UseProxyForCalls ) , R . string . UseProxyForCalls , var , false )	var [ var ] . setValue ( LocaleController . getString ( "" , R . string . UseProxySocks5 ) , R . string . UseProxySocks5 , var == var , true )
var = ! var	var = ( Integer ) var . getTag ( )
var . setBackgroundDrawable ( Theme . getThemedDrawable ( var , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow ) , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow )	var [ 1 ] . setBackgroundDrawable ( Theme . getThemedDrawable ( var , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow ) , R . drawable . greydivider_bottom , Theme . key_windowBackgroundGrayShadow )
var . setText ( LocaleController . getString ( "" , R . string . UseProxyForCallsInfo ) , R . string . UseProxyForCallsInfo )	var . setText ( LocaleController . getString ( "" , R . string . ShareFile ) , R . string . ShareFile , false )
if ( var [ var ] == null || var [ var ] == null )	if ( var == null || var == null || var [ var ] == null || var [ var ] == null )
var . setAlpha ( 1.0f )	var . getTextView ( ) . setAlpha ( 1.0f )
var . setAlpha ( 0.5f )	var . getTextView ( ) . setAlpha ( 0.5f )
if ( var && ! var )	if ( var && ! var && var )
if ( var == null )	if ( var == 0 == 1 )
var = var . getBoolean ( "" , false )	( ( View ) var [ var ] . getParent ) . setVisibility ( View . GONE )
var . setChecked ( false )	var . setEnabled ( false )
var . setChecked ( true )	var . setEnabled ( true )
for ( int var = 0 ; var < 4 ; var ++ )	for ( int var = 0 ; var < 5 ; var ++ )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . length ; var ++ )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
long var = System . currentTimeMillis ( ) + ConnectionsManager . getInstance ( ) . getTimeDifference * 1000	long var = System . currentTimeMillis ( ) + ConnectionsManager . getInstance ( currentAccount ) . getTimeDifference * 1000
if ( var == null || var == null || ! var . isSecretPhoto ( var ) || var == null )	if ( var == null || var == null || ! var . needDrawBluredPreview ( var ) || var == null )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . newSessionReceived )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . newSessionReceived )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . newSessionReceived )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . newSessionReceived )
UserConfig . registeredForPush = false	var . registeredForPush = false
UserConfig . saveConfig ( false )	var . saveConfig ( false )
MessagesController . getInstance ( ) . registerForPush ( UserConfig . pushString )	MessagesController . getInstance ( var ) . registerForPush ( SharedConfig . pushString )
ConnectionsManager . getInstance ( ) . setUserId ( UserConfig . getClientUserId ( ) )	ConnectionsManager . getInstance ( var ) . setUserId ( var . getClientUserId ( ) )
final TLRPC . TL_authorization var = var . get ( var - var )	final TLRPC . TL_webAuthorization var = ( TLRPC . TL_webAuthorization ) var . get ( var - var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
if ( var != null )	if ( var == 1 || var != null )
var = new SessionCell ( var )	var = new SessionCell ( var , var )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . chatInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
MessagesController . getInstance ( ) . toggleUserAdmin ( var , var . user_id , ! ( var instanceof TLRPC . TL_chatParticipant ) )	MessagesController . getInstance ( currentAccount ) . toggleUserAdmin ( var , var . user_id , ! ( var instanceof TLRPC . TL_chatParticipant ) )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
MessagesController . getInstance ( ) . toggleAdminMode ( var , var . admins_enabled )	MessagesController . getInstance ( currentAccount ) . toggleAdminMode ( var , var . admins_enabled )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
var . setCheckDisabled ( var == null || ! var . admins_enabled || var . user_id == UserConfig . getClientUserId ( ) )	var . setCheckDisabled ( var == null || ! var . admins_enabled || var . user_id == UserConfig . getInstance ( currentAccount ) . getClientUserId )
TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
if ( var . id == UserConfig . getClientUserId ( var ) )	if ( var . id == UserConfig . getInstance ( currentAccount ) . getClientUserId var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( var . user_id )
var = MessagesController . getInstance ( ) . getChat ( var )	var = MessagesController . getInstance ( currentAccount ) . getChat ( var )
var . setCheckDisabled ( var == null || ! var . admins_enabled || var . user_id == UserConfig . getClientUserId ( ) )	var . setCheckDisabled ( var == null || ! var . admins_enabled || var . user_id == UserConfig . getInstance ( currentAccount ) . getClientUserId )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
var . dialogId = UserConfig . getClientUserId ( var )	var . dialogId = UserConfig . getInstance ( currentAccount ) . getClientUserId var
var . thumb = var . imageReceiver . getBitmap ( var )	var . thumb = var . imageReceiver . getBitmapSafe ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
var = UserConfig . getCurrentUser ( )	var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
MessagesController . getInstance ( ) . putUser ( var , false )	MessagesController . getInstance ( currentAccount ) . putUser ( var , false )
UserConfig . setCurrentUser ( var )	UserConfig . getInstance ( currentAccount ) . setCurrentUser ( var )
MessagesStorage . getInstance ( ) . clearUserPhotos ( var . id )	MessagesStorage . getInstance ( currentAccount ) . clearUserPhotos ( var . id )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var , null , false , true )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_ALL )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . updateInterfaces , MessagesController . UPDATE_MASK_ALL )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . mainUserInfoChanged )
UserConfig . saveConfig ( true )	UserConfig . getInstance ( currentAccount ) . saveConfig ( true )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
if ( BuildVars . DEBUG_VERSION )	if ( BuildVars . LOGS_ENABLED )
StickersQuery . checkFeaturedStickers ( )	DataQuery . getInstance ( currentAccount ) . checkFeaturedStickers
MessagesController . getInstance ( ) . loadFullUser ( UserConfig . getCurrentUser ( ) , classGuid , true )	MessagesController . getInstance ( currentAccount ) . loadFullUser ( UserConfig . getInstance ( currentAccount ) . getCurrentUser , classGuid , true )
MessagesController . getInstance ( ) . cancelLoadFullUser ( UserConfig . getClientUserId ( ) )	MessagesController . getInstance ( currentAccount ) . cancelLoadFullUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . updateInterfaces )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . updateInterfaces )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . userInfoDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var . setValue ( MessagesController . getInstance ( ) . fontSize )	var . setValue ( SharedConfig . fontSize )
MessagesController . getInstance ( ) . fontSize = var . getValue ( )	SharedConfig . fontSize = var . getValue ( )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
MediaController . getInstance ( ) . toogleRaiseToSpeak	SharedConfig . toogleRaiseToSpeak ( )
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canRaiseToSpeak )	( ( TextCheckCell ) var ) . setChecked ( SharedConfig . raiseToSpeak )
MediaController . getInstance ( ) . toggleAutoplayGifs	SharedConfig . toggleAutoplayGifs ( )
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canAutoplayGifs )	( ( TextCheckCell ) var ) . setChecked ( SharedConfig . autoplayGifs )
MediaController . getInstance ( ) . toggleSaveToGallery	SharedConfig . toggleSaveToGallery ( )
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canSaveToGallery )	( ( TextCheckCell ) var ) . setChecked ( SharedConfig . saveToGallery )
MediaController . getInstance ( ) . toggleCustomTabs	SharedConfig . toggleCustomTabs ( )
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canCustomTabs )	( ( TextCheckCell ) var ) . setChecked ( SharedConfig . customTabs )
MediaController . getInstance ( ) . toggleDirectShare	SharedConfig . toggleDirectShare ( )
( ( TextCheckCell ) var ) . setChecked ( MediaController . getInstance ( ) . canDirectShare )	( ( TextCheckCell ) var ) . setChecked ( SharedConfig . directShare )
presentFragment ( new ThemeActivity )	presentFragment ( new ThemeActivity ( ThemeActivity . THEME_TYPE_BASIC ) . THEME_TYPE_BASIC )
ConnectionsManager . getInstance ( ) . switchBackend	ConnectionsManager . getInstance ( currentAccount ) . switchBackend
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )	TLRPC . TL_userFull var = MessagesController . getInstance ( currentAccount ) . getUserFull ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
presentFragment ( new StickersActivity ( StickersQuery . TYPE_IMAGE ) . TYPE_IMAGE )	presentFragment ( new StickersActivity ( DataQuery . TYPE_IMAGE ) . TYPE_IMAGE )
CheckBoxCell var = new CheckBoxCell ( getParentActivity var , true )	CheckBoxCell var = new CheckBoxCell ( getParentActivity var , 1 )
SharedPreferences . Editor var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE ) . edit var	SharedPreferences . Editor var = MessagesController . getGlobalMainSettings ( var ) . edit var
ContactsController . getInstance ( ) . forceImportContacts	ContactsController . getInstance ( currentAccount ) . resetImportedContacts
ContactsController . getInstance ( ) . loadContacts ( false , 0 )	ContactsController . getInstance ( currentAccount ) . loadContacts ( false , 0 )
ContactsController . getInstance ( ) . resetImportedContacts	ContactsController . getInstance ( currentAccount ) . forceImportContacts
MessagesController . getInstance ( ) . forceResetDialogs	MessagesController . getInstance ( currentAccount ) . forceResetDialogs
if ( var == 4 )	if ( var == 7 )
MediaController . getInstance ( ) . toggleInappCamera	SharedConfig . toggleRoundCamera16to9 ( )
MediaController . getInstance ( ) . toggleRoundCamera16to9	( ( LaunchActivity ) getParentActivity ) . checkAppUpdate ( true )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
var = UserConfig . getCurrentUser ( )	var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
final SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	final SharedPreferences var = MessagesController . getMainSettings ( currentAccount )
var = MessagesController . getInstance ( ) . getUser ( var )	var = MessagesController . getInstance ( currentAccount ) . getUser ( var )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , true , true )	MessagesStorage . getInstance ( currentAccount ) . putUsersAndChats ( var , null , true , true )
MessagesController . getInstance ( ) . putUser ( var . user , false )	MessagesController . getInstance ( currentAccount ) . putUser ( var . user , false )
MessagesController . getInstance ( ) . putUser ( var , true )	MessagesController . getInstance ( currentAccount ) . putUser ( var , true )
if ( var == UserConfig . getClientUserId ( ) && var != null )	if ( var == UserConfig . getInstance ( currentAccount ) . getClientUserId && var != null )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )	TLRPC . User var = MessagesController . getInstance ( currentAccount ) . getUser ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . isShowingImage ( var ) , false )
int var = StickersQuery . getUnreadStickerSets ( ) . size	int var = DataQuery . getInstance ( currentAccount ) . getUnreadStickerSets . size
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . SaveToGallerySettings ) , R . string . SaveToGallerySettings , MediaController . getInstance ( ) . canSaveToGallery , false )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . SaveToGallerySettings ) , R . string . SaveToGallerySettings , SharedConfig . saveToGallery , false )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . AutoplayGifs ) , R . string . AutoplayGifs , MediaController . getInstance ( ) . canAutoplayGifs , true )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . AutoplayGifs ) , R . string . AutoplayGifs , SharedConfig . autoplayGifs , true )
var . setTextAndCheck ( LocaleController . getString ( "" , R . string . RaiseToSpeak ) , R . string . RaiseToSpeak , MediaController . getInstance ( ) . canRaiseToSpeak , true )	var . setTextAndCheck ( LocaleController . getString ( "" , R . string . RaiseToSpeak ) , R . string . RaiseToSpeak , SharedConfig . raiseToSpeak , true )
var . setTextAndValueAndCheck ( LocaleController . getString ( "" , R . string . ChromeCustomTabs ) , R . string . ChromeCustomTabs , LocaleController . getString ( "" , R . string . ChromeCustomTabsInfo ) , R . string . ChromeCustomTabsInfo , MediaController . getInstance ( ) . canCustomTabs , false , true )	var . setTextAndValueAndCheck ( LocaleController . getString ( "" , R . string . ChromeCustomTabs ) , R . string . ChromeCustomTabs , LocaleController . getString ( "" , R . string . ChromeCustomTabsInfo ) , R . string . ChromeCustomTabsInfo , SharedConfig . customTabs , false , true )
var . setTextAndValueAndCheck ( LocaleController . getString ( "" , R . string . DirectShare ) , R . string . DirectShare , LocaleController . getString ( "" , R . string . DirectShareInfo ) , R . string . DirectShareInfo , MediaController . getInstance ( ) . canDirectShare , false , true )	var . setTextAndValueAndCheck ( LocaleController . getString ( "" , R . string . DirectShare ) , R . string . DirectShare , LocaleController . getString ( "" , R . string . DirectShareInfo ) , R . string . DirectShareInfo , SharedConfig . directShare , false , true )
TLRPC . User var = UserConfig . getCurrentUser ( )	TLRPC . User var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
TLRPC . User var = UserConfig . getCurrentUser ( )	TLRPC . User var = UserConfig . getInstance ( currentAccount ) . getCurrentUser
TLRPC . TL_userFull var = MessagesController . getInstance ( ) . getUserFull ( UserConfig . getClientUserId ( ) )	TLRPC . TL_userFull var = MessagesController . getInstance ( currentAccount ) . getUserFull ( UserConfig . getInstance ( currentAccount ) . getClientUserId )
return var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var	return var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var
if ( var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var == var || var == var || var == var == var || var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var == var == var || var == var || var == var == var || var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var )
MessageObject var = new MessageObject ( var , null , false )	MessageObject var = new MessageObject ( UserConfig . selectedAccount , var , false )
final boolean var = StickersQuery . isStickerInFavorites ( currentSticker )	final boolean var = DataQuery . getInstance ( var ) . isStickerInFavorites ( currentSticker )
if ( ! MessageObject . isMaskDocument ( currentSticker ) && ( var || StickersQuery . canAddStickerToFavorites ( ) ) )	if ( ! MessageObject . isMaskDocument ( currentSticker ) && ( var || DataQuery . getInstance ( var ) . canAddStickerToFavorites ) )
var . sentSticker ( currentSticker )	var . sendSticker ( currentSticker )
StickersQuery . addRecentSticker ( StickersQuery . TYPE_FAVE , currentSticker , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , var )	DataQuery . getInstance ( var ) . addRecentSticker ( DataQuery . TYPE_FAVE , currentSticker , int ( System . currentTimeMillis ( ) / 1000 ) . currentTimeMillis ( ) / 1000 , var )
StickersQuery . checkStickers ( var )	DataQuery . getInstance ( currentAccount ) . checkStickers ( var )
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
StickersQuery . checkFeaturedStickers ( )	DataQuery . getInstance ( currentAccount ) . checkFeaturedStickers
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . archivedStickersCountDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . archivedStickersCountDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . featuredStickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . stickersDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . archivedStickersCountDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . archivedStickersCountDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . featuredStickersDidLoaded )
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
final TLRPC . TL_messages_stickerSet var = StickersQuery . getStickerSets ( var ) . get ( var - var )	final TLRPC . TL_messages_stickerSet var = DataQuery . getInstance ( currentAccount ) . getStickerSets ( var ) . get ( var - var )
presentFragment ( new StickersActivity ( StickersQuery . TYPE_MASK ) . TYPE_MASK )	presentFragment ( new StickersActivity ( DataQuery . TYPE_MASK ) . TYPE_MASK )
var . masks = var == StickersQuery . TYPE_MASK	var . masks = var == DataQuery . TYPE_MASK
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . stickersDidLoaded , var )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . stickersDidLoaded , var )
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
if ( StickersQuery . getArchivedStickersCount ( var ) != 0 )	if ( DataQuery . getInstance ( currentAccount ) . getArchivedStickersCount ( var ) != 0 )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )	ArrayList < TLRPC . TL_messages_stickerSet > var = DataQuery . getInstance ( currentAccount ) . getStickerSets ( var )
if ( var >= var && var < var == var || var == var || var == var || var == var || var == var || var == var )	if ( var >= var && var < var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var )
StickersQuery . removeStickersSet ( getParentActivity , var . set , 0 , StickersActivity . this , true )	DataQuery . getInstance ( currentAccount ) . removeStickersSet ( getParentActivity , var . set , 0 , StickersActivity . this , true )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )	ArrayList < TLRPC . TL_messages_stickerSet > var = DataQuery . getInstance ( currentAccount ) . getStickerSets ( var )
MessagesController . openByUserName ( "" , StickersActivity . this , 1 )	MessagesController . getInstance ( currentAccount ) . openByUserName ( "" , StickersActivity . this , 1 )
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
int var = StickersQuery . getUnreadStickerSets ( ) . size	int var = DataQuery . getInstance ( currentAccount ) . getUnreadStickerSets . size
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
( ( TextSettingsCell ) var . itemView ) . setText ( LocaleController . getString ( "" , R . string . Masks ) , R . string . Masks , true )	( ( TextSettingsCell ) var . itemView ) . setText ( LocaleController . getString ( "" , R . string . Masks ) , R . string . Masks , false )
if ( var == StickersQuery . TYPE_IMAGE )	if ( var == DataQuery . TYPE_IMAGE )
if ( var >= var && var < var == var || var == var || var == var == var || var == var || var == var == var )	if ( var >= var && var < var == var || var == var || var == var == var || var == var || var == var || var == var == var || var == var )
if ( var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var )
if ( var == var )	if ( var == var || var == var )
ArrayList < TLRPC . TL_messages_stickerSet > var = StickersQuery . getStickerSets ( var )	ArrayList < TLRPC . TL_messages_stickerSet > var = DataQuery . getInstance ( currentAccount ) . getStickerSets ( var )
var . notifyDataSetChanged ( )	updateRows
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
return Theme . themes . size ( ) + 3	var += Theme . themes . size ( )
return var == 0 || var == 1	return var == 0 || var == 1 || var == 4 || var == 7
var = new ThemeCell ( var )	var = new ThemeTypeCell ( var )
var . write ( var . toString ( ) . getBytes )	var . write ( AndroidUtilities . getStringBytes ( var . toString ( ) ) . toString ( ) )
FileLog . var ( "" , var )	FileLog . var ( var )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var . getName ( ) )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var . getName ( ) )
( ( TextSettingsCell ) var ) . setText ( LocaleController . getString ( "" , R . string . CreateNewTheme ) , R . string . CreateNewTheme , false )	var . setText ( LocaleController . getString ( "" , R . string . CreateNewTheme ) , R . string . CreateNewTheme , false )
( ( TextInfoPrivacyCell ) var ) . setText ( LocaleController . getString ( "" , R . string . CreateNewThemeInfo ) , R . string . CreateNewThemeInfo )	var . setText ( LocaleController . getString ( "" , R . string . CreateNewThemeInfo ) , R . string . CreateNewThemeInfo )
var -= 2	var -= var
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
MessageObject var = new MessageObject ( var , null , true )	MessageObject var = new MessageObject ( currentAccount , var , true )
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
var . add ( new MessageObject ( var , null , true ) , null , true )	var . add ( new MessageObject ( currentAccount , var , true ) , var , true )
var . to_id . user_id = UserConfig . getClientUserId ( )	var . to_id . user_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
var . add ( new MessageObject ( var , null , true ) , null , true )	var . add ( new MessageObject ( currentAccount , var , true ) , var , true )
var . to_id . user_id = UserConfig . getClientUserId ( )	var . to_id . user_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
var = new MessageObject ( var , null , true )	var = new MessageObject ( currentAccount , var , true )
var . from_id = UserConfig . getClientUserId ( )	var . from_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
var = new MessageObject ( var , null , true )	var = new MessageObject ( currentAccount , var , true )
var . media . caption = ""	var . var = ""
var . to_id . user_id = UserConfig . getClientUserId ( )	var . to_id . user_id = UserConfig . getInstance ( currentAccount ) . getClientUserId
var = new MessageObject ( var , null , true )	var = new MessageObject ( currentAccount , var , true )
var = new MessageObject ( var , null , false )	var = new MessageObject ( currentAccount , var , false )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . didSetTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . didSetTwoStepPassword )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . didSetTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . didSetTwoStepPassword )
var . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundGray ) . key_windowBackgroundGray )	var . setBackgroundColor ( Theme . getColor ( Theme . key_windowBackgroundWhite ) . key_windowBackgroundWhite )
TwoStepVerificationActivity var = new TwoStepVerificationActivity ( 1 )	TwoStepVerificationActivity var = new TwoStepVerificationActivity ( currentAccount , 1 )
showAlertWithText ( LocaleController . getString ( "" , R . string . RestorePasswordNoEmailTitle ) , R . string . RestorePasswordNoEmailTitle , LocaleController . getString ( "" , R . string . RestorePasswordNoEmailText ) , R . string . RestorePasswordNoEmailText )	var . setTitle ( LocaleController . getString ( "" , R . string . RestorePasswordNoEmailTitle ) , R . string . RestorePasswordNoEmailTitle )
TwoStepVerificationActivity var = new TwoStepVerificationActivity ( 1 )	TwoStepVerificationActivity var = new TwoStepVerificationActivity ( currentAccount , 1 )
TwoStepVerificationActivity var = new TwoStepVerificationActivity ( 1 )	TwoStepVerificationActivity var = new TwoStepVerificationActivity ( currentAccount , 1 )
if ( var != null )	if ( ! isFinishing && ! var && var != null )
var = var . getBytes ( "" )	System . arraycopy ( var , 0 , var , 0 , 32 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didRemovedTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . didRemovedTwoStepPassword )
byte var = null	byte var = new byte [ 32 ]
FileLog . var ( var )	final byte var = AndroidUtilities . getStringBytes ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didSetTwoStepPassword )	NotificationCenter . getInstance ( currentAccount ) . postNotificationName ( NotificationCenter . didSetTwoStepPassword )
if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP )	if ( Build . VERSION . SDK_INT >= Build . VERSION_CODES . LOLLIPOP . VERSION . SDK_INT >= Build . VERSION_CODES . KITKAT )
Bitmap var = var . getBitmap ( )	ImageReceiver . BitmapHolder var = var . getBitmapSafe ( )
var . setSpeakerphoneOn ( false )	var . setSingleLine ( false )
var . setBluetoothScoOn ( false )	var . setClipToPadding ( false )
var . setSpeakerphoneOn ( true )	var . setFitsSystemWindows ( true )
VoIPService . getSharedInstance ( ) . updateOutputGainControlState	if ( VoIPService . getSharedInstance ( ) != null )
if ( var . hasEarpiece ( ) )	if ( ! var . hasEarpiece ( ) && ! var . isBluetoothHeadsetConnected ( ) )
var . setBluetoothScoOn ( var )	getWindow . setBackgroundDrawable ( new ColorDrawable ( 0 ) )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . closeInCallActivity )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . closeInCallActivity )
var . addView ( var = var , LayoutHelper . createFrame ( 38 , 38 , Gravity . BOTTOM | Gravity . CENTER_HORIZONTAL , 0 , 0 , 0 , 10 ) , 38 , Gravity . BOTTOM | Gravity . CENTER_HORIZONTAL , 0 , 0 , 0 , 10 )	var . addView ( var = var , LayoutHelper . createFrame ( 38 , 38 , Gravity . CENTER_HORIZONTAL | Gravity . BOTTOM , 0 , 0 , 0 , 10 ) , 38 , Gravity . CENTER_HORIZONTAL | Gravity . BOTTOM , 0 , 0 , 0 , 10 )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . emojiDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . closeInCallActivity )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . closeInCallActivity )
var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 , 1 ) , "" , 0 , 1 , ObjectAnimator . ofFloat ( var , "" , 0 , var . getWidth ( ) / 2 - AndroidUtilities . dp ( 52 ) - var . getWidth ( ) / 2 ) , "" , 0 , var . getWidth ( ) / 2 - AndroidUtilities . dp ( 52 ) - var . getWidth ( ) / 2 , var , ObjectAnimator . ofFloat ( var , "" , 0 , - 135 ) , "" , 0 , - 135 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 )	var . playTogether ( ObjectAnimator . ofFloat ( var , "" , 0 , 1 ) , "" , 0 , 1 , ObjectAnimator . ofFloat ( var , "" , 0 , var . getWidth ( ) / 2 - AndroidUtilities . dp ( 52 ) - var . getWidth ( ) / 2 ) , "" , 0 , var . getWidth ( ) / 2 - AndroidUtilities . dp ( 52 ) - var . getWidth ( ) / 2 , var , ObjectAnimator . ofFloat ( var , "" , 0 , - 135 ) , "" , 0 , - 135 )
var . playTogether ( var , ObjectAnimator . ofFloat ( var , "" , - 135 , 0 ) , "" , - 135 , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 1 ) , "" , 1 , ObjectAnimator . ofFloat ( var , "" , 1 ) , "" , 1 , ObjectAnimator . ofFloat ( var , "" , 1 ) , "" , 1 )	var . playTogether ( var , ObjectAnimator . ofFloat ( var , "" , - 135 , 0 ) , "" , - 135 , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 , ObjectAnimator . ofFloat ( var , "" , 0 ) , "" , 0 )
int var = getSharedPreferences ( "" , MODE_PRIVATE ) . getInt ( "" , 0 )	int var = MessagesController . getGlobalMainSettings ( ) . getInt ( "" , 0 )
getSharedPreferences ( "" , MODE_PRIVATE ) . edit . putInt ( "" , var + 1 ) . apply	MessagesController . getGlobalMainSettings ( ) . edit . putInt ( "" , var + 1 ) . commit
AlertDialog var = new AlertDialog . Builder ( VoIPActivity . this ) . setTitle ( LocaleController . getString ( "" , R . string . VoipFailed ) , R . string . VoipFailed ) . setMessage ( var ) . setPositiveButton ( LocaleController . getString ( "" , R . string . OK ) , R . string . OK , null ) . show	AlertDialog var = new DarkAlertDialog . Builder ( VoIPActivity . this ) . setTitle ( LocaleController . getString ( "" , R . string . VoipFailed ) , R . string . VoipFailed ) . setMessage ( var ) . setPositiveButton ( LocaleController . getString ( "" , R . string . OK ) , R . string . OK , null ) . show
var . setChecked ( VoIPService . getSharedInstance ( ) . isMicMute )	var . setChecked ( var . isMicMute ( ) )
if ( ! VoIPService . getSharedInstance ( ) . hasEarpiece && ! VoIPService . getSharedInstance ( ) . isBluetoothHeadsetConnected )	if ( ! var . hasEarpiece ( ) && ! var . isBluetoothHeadsetConnected ( ) )
if ( VoIPService . getSharedInstance ( ) . isBluetoothHeadsetConnected )	if ( var . isBluetoothHeadsetConnected ( ) )
var . drawBitmap ( var , null , new Rect ( 0 , 0 , 150 , 150 ) , 0 , 150 , 150 , new Paint ( Paint . FILTER_BITMAP_FLAG ) . FILTER_BITMAP_FLAG )	var . drawBitmap ( var . bitmap , null , new Rect ( 0 , 0 , 150 , 150 ) , 0 , 150 , 150 , new Paint ( Paint . FILTER_BITMAP_FLAG ) . FILTER_BITMAP_FLAG )
final Palette var = Palette . from ( var ) . generate	final Palette var = Palette . from ( var . bitmap ) . generate
var . drawBitmap ( var , null , new Rect ( 0 , 0 , 50 , 50 ) , 0 , 50 , 50 , new Paint ( Paint . FILTER_BITMAP_FLAG ) . FILTER_BITMAP_FLAG )	var . drawBitmap ( var . bitmap , null , new Rect ( 0 , 0 , 50 , 50 ) , 0 , 50 , 50 , new Paint ( Paint . FILTER_BITMAP_FLAG ) . FILTER_BITMAP_FLAG )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . addObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . wallpapersDidLoaded )	NotificationCenter . getGlobalInstance ( ) . addObserver ( this , NotificationCenter . wallpapersDidLoaded )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
MessagesStorage . getInstance ( ) . getWallpapers	MessagesStorage . getInstance ( currentAccount ) . getWallpapers
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( currentAccount ) . removeObserver ( this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . removeObserver ( this , NotificationCenter . wallpapersDidLoaded )	NotificationCenter . getGlobalInstance ( ) . removeObserver ( this , NotificationCenter . wallpapersDidLoaded )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
SharedPreferences var = ApplicationLoader . applicationContext . getSharedPreferences ( "" , Activity . MODE_PRIVATE )	SharedPreferences var = MessagesController . getGlobalMainSettings ( )
var = new RadialProgressView ( var )	RadialProgressView var = new RadialProgressView ( var )
File var = new File ( FileLoader . getInstance ( ) . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )	File var = new File ( FileLoader . getDirectory ( FileLoader . MEDIA_DIR_CACHE ) . MEDIA_DIR_CACHE , var )
FileLoader . getInstance ( var ) . loadFile ( var , null , 1 )	FileLoader . getInstance ( currentAccount ) . loadFile ( var , null , 1 )
FileLoader . getInstance ( ) . cancelLoadFile ( var )	FileLoader . getInstance ( currentAccount ) . cancelLoadFile ( var )
FileLoader . getInstance ( ) . cancelLoadFile ( var )	FileLoader . getInstance ( currentAccount ) . cancelLoadFile ( var )
MessagesStorage . getInstance ( ) . putWallpapers ( var )	MessagesStorage . getInstance ( currentAccount ) . putWallpapers ( var )
ConnectionsManager . getInstance ( ) . bindRequestToGuid ( var , classGuid )	ConnectionsManager . getInstance ( currentAccount ) . bindRequestToGuid ( var , classGuid )
FileLog . e ( var )	FileLog . d ( var )
MessagesController . getInstance ( ) . sendTyping ( var . getDialogId ( ) , 6 , 0 )	MessagesController . getInstance ( currentAccount ) . sendTyping ( var . getDialogId ( ) , 6 , 0 )
if ( var . length ( ) < 100 )	if ( var . length ( ) < 200 )
var = var . replaceFirst ( "" , "" ) . replaceFirst ( "" , "" )	var . replace ( var , var + 3 , "" )
TypefaceSpan var = new TypefaceSpan ( AndroidUtilities . getTypeface ( "" ) )	var . setSpan ( new TypefaceSpan ( AndroidUtilities . getTypeface ( "" ) ) . getTypeface ( "" ) , var . get ( var * 2 ) * 2 , var . get ( var * 2 + 1 ) * 2 + 1 , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var . setSpan ( var , var . get ( var * 2 ) * 2 , var . get ( var * 2 + 1 ) * 2 + 1 , Spanned . SPAN_INCLUSIVE_INCLUSIVE )	var . setSpan ( new TypefaceSpan ( AndroidUtilities . getTypeface ( "" ) ) . getTypeface ( "" ) , var . get ( var * 2 ) * 2 , var . get ( var * 2 + 1 ) * 2 + 1 , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
var = MediaStore . Images . Thumbnails . getThumbnail ( ApplicationLoader . applicationContext . getContentResolver ( ) , var , MediaStore . Images . Thumbnails . MINI_KIND , null )	var = MediaStore . Images . Thumbnails . getThumbnail ( ApplicationLoader . applicationContext . getContentResolver ( ) , var , MediaStore . Images . Thumbnails . MINI_KIND , var )
if ( var == null || var == null || var == var || var )	if ( var == null || var == null || var == var )
var = var . values [ 0 ] < var . getMaximumRange ( ) / 10	boolean var = var . values [ 0 ] < var . getMaximumRange ( ) / 10
if ( var . media != null && var . media instanceof TLRPC . TL_messageMediaPhoto )	if ( var . media instanceof TLRPC . TL_messageMediaPhoto )
if ( var . media != null && var . media instanceof TLRPC . TL_messageMediaGeo )	if ( var . media instanceof TLRPC . TL_messageMediaGeo )
if ( var . media != null && var . media instanceof TLRPC . TL_messageMediaVideo )	if ( var . media instanceof TLRPC . TL_messageMediaVideo )
if ( var . media != null && var . media instanceof TLRPC . TL_messageMediaContact )	if ( var . media instanceof TLRPC . TL_messageMediaContact )
if ( var . media != null && var . media instanceof TLRPC . TL_messageMediaUnsupported )	if ( var . media instanceof TLRPC . TL_messageMediaUnsupported )
if ( var . media != null && var . media instanceof TLRPC . TL_messageMediaDocument )	if ( var . media instanceof TLRPC . TL_messageMediaDocument )
if ( var . media != null && var . media instanceof TLRPC . TL_messageMediaAudio )	if ( var . media instanceof TLRPC . TL_messageMediaAudio )
var . put ( var , Html . fromHtml ( String . format ( "" , var , LocaleController . formatPluralString ( "" , var . size ( ) - 2 ) , var . size ( ) - 2 ) , var , LocaleController . formatPluralString ( "" , var . size ( ) - 2 ) , var . size ( ) - 2 ) . format ( "" , var , LocaleController . formatPluralString ( "" , var . size ( ) - 2 ) , var . size ( ) - 2 ) , var , LocaleController . formatPluralString ( "" , var . size ( ) - 2 ) , var . size ( ) - 2 )	var . put ( var , String . format ( "" , var , LocaleController . formatPluralString ( "" , var . size ( ) - 2 ) , var . size ( ) - 2 ) , var , LocaleController . formatPluralString ( "" , var . size ( ) - 2 ) , var . size ( ) - 2 )
var . put ( var , Html . fromHtml ( String . format ( "" , var , LocaleController . getString ( "" , R . string . AreTyping ) , R . string . AreTyping ) , var , LocaleController . getString ( "" , R . string . AreTyping ) , R . string . AreTyping ) . format ( "" , var , LocaleController . getString ( "" , R . string . AreTyping ) , R . string . AreTyping ) , var , LocaleController . getString ( "" , R . string . AreTyping ) , R . string . AreTyping )	var . put ( var , String . format ( "" , var , LocaleController . getString ( "" , R . string . AreTyping ) , R . string . AreTyping ) , var , LocaleController . getString ( "" , R . string . AreTyping ) , R . string . AreTyping )
var . put ( var , Html . fromHtml ( String . format ( "" , var , LocaleController . getString ( "" , R . string . IsTyping ) , R . string . IsTyping ) , var , LocaleController . getString ( "" , R . string . IsTyping ) , R . string . IsTyping ) . format ( "" , var , LocaleController . getString ( "" , R . string . IsTyping ) , R . string . IsTyping ) , var , LocaleController . getString ( "" , R . string . IsTyping ) , R . string . IsTyping )	var . put ( var , String . format ( "" , var , LocaleController . getString ( "" , R . string . IsTyping ) , R . string . IsTyping ) , var , LocaleController . getString ( "" , R . string . IsTyping ) , R . string . IsTyping )
if ( var && var . media instanceof TLRPC . TL_messageMediaUnsupported )	if ( var . media instanceof TLRPC . TL_messageMediaUnsupported . media instanceof TLRPC . TL_messageMediaWebPage )
final TLRPC . messages_StatedMessage var = ( TLRPC . messages_StatedMessage ) var	final TLRPC . Updates var = ( TLRPC . Updates ) var
putChats ( var . var , false )	putUsers ( var . var , false )
final ArrayList < MessageObject > var = new ArrayList	var = new ArrayList
var . add ( new MessageObject ( var . message , var , true ) . message , var , true )	putChats ( var . var , false )
updateInterfaceWithMessages ( - var . id , var )	if ( var . var != null && ! var . var . isEmpty ( ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
if ( var != null )	if ( var . var != null && ! var . var . isEmpty ( ) )
var . add ( var . message )	if ( var . var != null && ! var . var . isEmpty ( ) )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , var . message . date , var . pts_count )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidCreated , var . var . get ( 0 ) . id )
MessagesController . getInstance ( ) . processNewDifferenceParams ( var . seq , var . pts , var . message . date , var . pts_count )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatDidFailCreate )
putUsers ( var . var , false )	processUpdates ( ( TLRPC . Updates ) var , false )
putChats ( var . var , false )	processUpdates ( var , false )
TLRPC . Chat var = var . var . get ( 0 )	processUpdates ( ( TLRPC . Updates ) var , false )
var . participants . add ( 0 , var )	MessagesController . getInstance ( ) . deleteDialog ( - var , 0 , false )
MessagesStorage . getInstance ( ) . putMessages ( var , true , true , false , 0 )	MessagesController . getInstance ( ) . deleteDialog ( - var , 0 , false )
MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , var . message . date , var . pts_count )	MessagesController . getInstance ( ) . deleteDialog ( - var , 0 , false )
final TLRPC . messages_StatedMessage var = ( TLRPC . messages_StatedMessage ) var	final TLRPC . Updates var = ( TLRPC . Updates ) var
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )	processUpdates ( var , false )
putUsers ( var . var , false )	processUpdates ( ( TLRPC . Updates ) var , false )
putChats ( var . var , false )	processUpdates ( ( TLRPC . Updates ) var , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var . var , var )	MessagesController . getInstance ( ) . deleteDialog ( - var , 0 , false )
MessagesStorage . getInstance ( ) . putMessages ( var , true , true , false , 0 )	putChat ( var , true )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )	var = MessagesStorage . getInstance ( ) . getChatSync ( var . chat_id )
putUsers ( var . var , false )	putChats ( var . var , false )
TLRPC . Chat var = var . var . get ( 0 )	processUpdates ( ( TLRPC . Updates ) var , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var . var , var . var , true , true )	var = MessagesStorage . getInstance ( ) . getUserSync ( var . user_id )
putUsers ( var . var , false )	processUpdates ( ( TLRPC . Updates ) var , false )
var . add ( new MessageObject ( var . message , var , true ) . message , var , true )	processUpdates ( ( TLRPC . Updates ) var , false )
TLRPC . Chat var = var . var . get ( 0 )	TLRPC . Chat var = getChat ( var . chat_id )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogsNeedReload )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . didReceivedWebpagesInUpdates , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . newSessionReceived )
var = getChat ( var . chat_id ) == null || var == null || var && var == null	TLRPC . Chat var = getChat ( var . chat_id )
if ( var < 15 )	if ( var < 16 )
if ( ( var & MediaController . AUTODOWNLOAD_MASK_AUDIO ) != 0 )	if ( ( var & MediaController . AUTODOWNLOAD_MASK_AUDIO ) != 0 && var . media . audio . size < 1024 * 1024 * 5 )
if ( var != null && var . media instanceof TLRPC . TL_messageMediaUnsupported && var . media . bytes != null )	if ( var . media instanceof TLRPC . TL_messageMediaUnsupported_old . media instanceof TLRPC . TL_messageMediaUnsupported )
var . setAudioStreamType ( AudioManager . STREAM_NOTIFICATION )	var . setAudioStreamType ( AudioManager . STREAM_SYSTEM )
var . setAudioStreamType ( AudioManager . STREAM_NOTIFICATION )	var . setAudioStreamType ( AudioManager . STREAM_SYSTEM )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var . id , var . id , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var . id , var . id , var , false )
var [ var ] = byte ( Utilities . random . nextDouble ( ) * 256 )	Utilities . random . nextBytes ( var )
var [ var ] = byte ( Utilities . random . nextDouble ( ) * 256 )	Utilities . random . nextBytes ( var )
sendMessage ( var . messageOwner . message , var , var . replyMessageObject )	sendMessage ( var . messageOwner . message , var , var . replyMessageObject , var , true )
sendMessage ( null , null , null , null , null , null , var , null , null , null , var , false , null , var )	sendMessage ( null , null , null , null , null , null , var , null , null , null , var , false , null , var , null , true )
if ( var == null )	if ( var instanceof TLRPC . TL_updateNewMessage )
if ( var instanceof TLRPC . TL_messages_statedMessages instanceof TLRPC . TL_messages_statedMessagesLinks )	TLRPC . Message var = ( ( TLRPC . TL_updateNewMessage ) var ) . var
if ( var instanceof TLRPC . TL_messages_statedMessagesLinks )	TLRPC . Message var = ( ( TLRPC . TL_updateNewMessage ) var ) . var
MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . random_id , var , var . id , 0 , false )	MessagesStorage . getInstance ( ) . updateMessageStateAndId ( var . var , var , var . id , 0 , false )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var , var . id , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messageReceivedByServer , var , var . id , var , false )
sendMessage ( null , null , null , null , null , var , null , null , null , null , var . getDialogId ( ) , true , var . messageOwner . attachPath , null )	sendMessage ( null , null , null , null , null , var , null , null , null , null , var . getDialogId ( ) , true , var . messageOwner . attachPath , null , null , true )
sendMessage ( null , null , null , null , null , var , null , null , null , null , var , false , var . messageOwner . attachPath , null )	sendMessage ( var , null , null , null , null , null , null , null , null , null , var , false , null , var , var , var )
sendMessage ( null , null , null , null , null , null , null , var , null , var , var , false , var , var )	sendMessage ( null , null , null , null , null , null , null , var , null , var , var , false , var , var , null , true )
sendMessage ( var , null , null , null , null , null , null , null , null , null , var , false , null , var )	sendMessage ( null , null , null , null , null , var , null , null , null , null , var , false , var . messageOwner . attachPath , null , null , true )
sendMessage ( null , var , var , null , null , null , null , null , null , null , var , false , null , var )	sendMessage ( null , var , var , null , null , null , null , null , null , null , var , false , null , var , null , true )
sendMessage ( null , null , null , var , null , null , null , null , null , var , var , false , var , var )	sendMessage ( null , null , null , var , null , null , null , null , null , var , var , false , var , var , null , true )
sendMessage ( null , null , null , null , var , null , null , null , null , var , var , false , var , var )	sendMessage ( null , null , null , null , var , null , null , null , null , var , var , false , var , var , null , true )
sendMessage ( null , null , null , null , null , null , null , null , var , null , var , false , var , var )	sendMessage ( null , null , null , null , null , null , null , null , var , null , var , false , var , var , null , true )
if ( var == null )	if ( var == null = true )
var . id = var . id	var . local_id = var . id = var . id
if ( var instanceof TLRPC . messages_StatedMessage )	final boolean var = var instanceof TLRPC . messages_SentMessage && ! ( ( ( TLRPC . messages_SentMessage ) var ) . media instanceof TLRPC . TL_messageMediaEmpty )
TLRPC . messages_StatedMessage var = ( TLRPC . messages_StatedMessage ) var	final boolean var = var instanceof TLRPC . messages_SentMessage && ! ( ( ( TLRPC . messages_SentMessage ) var ) . media instanceof TLRPC . TL_messageMediaEmpty )
if ( var instanceof TLRPC . messages_StatedMessages )	if ( var instanceof TLRPC . TL_updateNewMessage )
TLRPC . messages_StatedMessages var = ( TLRPC . messages_StatedMessages ) var	var = ( TLRPC . TL_updateNewMessage ) var
var . addAll ( var . messages )	var . add ( var . message )
var . id = var . id	var . id = var . message . id
MessagesController . getInstance ( ) . processNewDifferenceParams ( var . seq , var . pts , - 1 , var . pts_count )	MessagesController . getInstance ( ) . processNewDifferenceParams ( - 1 , var . pts , - 1 , var . pts_count )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true )
ArrayList < Long > var = new ArrayList < Long > ( )	ArrayList < Long > var = new ArrayList
var . put ( TLRPC . TL_messages_statedMessagesLinks . constructor , TLRPC . TL_messages_statedMessagesLinks . class )	var . put ( TLRPC . TL_updateWebPage . constructor , TLRPC . TL_updateWebPage . class )
var . put ( TLRPC . TL_messages_statedMessages . constructor , TLRPC . TL_messages_statedMessages . class )	var . put ( TLRPC . TL_webPage . constructor , TLRPC . TL_webPage . class )
var . put ( TLRPC . TL_messages_statedMessageLink . constructor , TLRPC . TL_messages_statedMessageLink . class )	var . put ( TLRPC . TL_messageMediaWebPage . constructor , TLRPC . TL_messageMediaWebPage . class )
var . put ( TLRPC . TL_messages_statedMessage . constructor , TLRPC . TL_messages_statedMessage . class )	var . put ( TLRPC . TL_messages_getWebPagePreview . constructor , TLRPC . TL_messages_getWebPagePreview . class )
messages . add ( ( Message ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) ) , var . readInt32 ( ) )	webpage = ( WebPage ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )
var . readInt32 ( )	var . writeInt32 ( var )
var = var . readInt32 ( )	var . writeString ( var )
pts = var . readInt32 ( )	var = var . readInt32 ( )
pts_count = var . readInt32 ( )	var = var . readString ( )
var . readInt32 ( )	var = var . readString ( )
var = var . readInt32 ( )	var = var . readString ( )
seq = var . readInt32 ( )	var = var . readInt32 ( )
var . writeInt32 ( 0x1cb5c415 )	var = var . readInt32 ( )
var . writeInt32 ( var )	var = var . readString ( )
var . writeInt32 ( 0x1cb5c415 )	var . writeInt32 ( var )
var = chats . size ( )	var . writeInt64 ( var )
chats . get ( var ) . serializeToStream ( var )	var . writeString ( var )
var . writeInt32 ( 0x1cb5c415 )	var . writeString ( var )
var = users . size ( )	var . writeString ( var )
users . get ( var ) . serializeToStream ( var )	var . writeString ( var )
var . writeInt32 ( pts )	var . writeString ( var )
var . writeInt32 ( pts_count )	var . writeInt32 ( var )
var . writeInt32 ( 0x1cb5c415 )	var . writeInt32 ( var )
var . writeInt32 ( var )	var . writeString ( var )
links . get ( var ) . serializeToStream ( var )	var . writeString ( var )
var . writeInt32 ( seq )	var . writeString ( var )
messages . add ( ( Message ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) ) , var . readInt32 ( ) )	media = ( MessageMedia ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )
chats . add ( ( Chat ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) ) , var . readInt32 ( ) )	media = ( MessageMedia ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )
users . add ( ( User ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) ) , var . readInt32 ( ) )	photo = ( Photo ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )
var = chats . size ( )	id = var . readInt64 ( )
chats . get ( var ) . serializeToStream ( var )	var . writeInt64 ( var . get ( var ) )
var . writeInt32 ( 0x1cb5c415 )	date = var . readInt32 ( )
var = users . size ( )	var . writeInt64 ( id )
var . writeInt32 ( var )	var . writeInt32 ( date )
var . writeInt32 ( pts )	var . writeInt32 ( var )
var . writeInt32 ( pts_count )	var . writeInt64 ( id )
message = ( Message ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )	webpage = ( WebPage ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )
var . readInt32 ( )	flags = var . readInt32 ( )
int var = var . readInt32 ( )	id = var . readInt64 ( )
var . readInt32 ( )	title = var . readString ( )
var = var . readInt32 ( )	description = var . readString ( )
pts = var . readInt32 ( )	embed_width = var . readInt32 ( )
pts_count = var . readInt32 ( )	embed_height = var . readInt32 ( )
var . readInt32 ( )	duration = var . readInt32 ( )
var = var . readInt32 ( )	author = var . readString ( )
seq = var . readInt32 ( )	var . writeString ( display_url )
message . serializeToStream ( var )	webpage . serializeToStream ( var )
var . writeInt32 ( 0x1cb5c415 )	var . writeString ( type )
var . writeInt32 ( var )	var . writeString ( title )
chats . get ( var ) . serializeToStream ( var )	var . get ( var ) . serializeToStream ( var )
var . writeInt32 ( 0x1cb5c415 )	var . writeString ( description )
var = users . size ( )	var . writeString ( embed_url )
var . writeInt32 ( var )	var . writeString ( embed_type )
var . writeInt32 ( pts )	var . writeInt32 ( embed_width )
var . writeInt32 ( pts_count )	var . writeInt32 ( embed_height )
var . writeInt32 ( 0x1cb5c415 )	var . writeInt32 ( duration )
var . writeInt32 ( var )	var . writeString ( author )
var . writeInt32 ( seq )	var . writeInt32 ( var )
message = ( Message ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )	var = ( TL_account_passwordInputSettings ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) )
var . readInt32 ( )	var . writeInt32 ( var )
var . readInt32 ( )	var . writeInt32 ( var )
var = var . readInt32 ( )	var . writeInt64 ( var )
users . add ( ( User ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) ) , var . readInt32 ( ) )	var . add ( ( TL_authorization ) TLClassStore . Instance ( ) . TLdeserialize ( var , var . readInt32 ( ) ) , var . readInt32 ( ) )
pts_count = var . readInt32 ( )	var = var . readString ( )
message . serializeToStream ( var )	photo . serializeToStream ( var )
var . writeInt32 ( 0x1cb5c415 )	var . writeString ( var )
int var = chats . size ( )	int var = var . size ( )
chats . get ( var ) . serializeToStream ( var )	var . get ( var ) . serializeToStream ( var )
var . writeInt32 ( pts_count )	var . writeInt32 ( var )
return messages_StatedMessage . class	return TL_auth_authorization . class
return messages_StatedMessages . class	return Updates . class
return messages_StatedMessage . class	return Updates . class
return messages_StatedMessage . class	return Updates . class
return messages_StatedMessage . class	return Updates . class
return messages_StatedMessage . class	return Updates . class
return messages_StatedMessage . class	return Updates . class
var . serializeToStream ( var )	webpage . serializeToStream ( var )
return messages_StatedMessage . class	return Updates . class
return messages_StatedMessages . class	return Updates . class
var . append ( Html . fromHtml ( "" + var + "" ) + var + "" )	var . append ( AndroidUtilities . replaceTags ( "" + var + "" ) + var + "" )
if ( var != null )	if ( var != null && var . getVisibility ( ) == VISIBLE )
if ( var == null )	if ( var == null = true )
if ( var == null )	if ( var == null = true )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( View . GONE )	var . setVisibility ( View . INVISIBLE )
if ( var . getBackground ( ) == null )	if ( ! var . hasOwnBackground && var . getBackground ( ) == null )
if ( var && ! var && var >= AndroidUtilities . dp ( 10 ) && Math . abs ( var ) / 3 > var )	if ( var && ! var && var >= AndroidUtilities . getPixelsInCM ( 0.3f , true ) && Math . abs ( var ) / 3 > var )
var . setVisibility ( View . GONE )	var . setVisibility ( View . INVISIBLE )
if ( var . getBackground ( ) == null )	if ( ! var . hasOwnBackground && var . getBackground ( ) == null )
var . setVisibility ( View . GONE )	var . setVisibility ( View . INVISIBLE )
if ( var . getBackground ( ) == null )	if ( ! var . hasOwnBackground && var . getBackground ( ) == null )
setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
setVisibility ( GONE )	setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
if ( var . getBackground ( ) == null )	if ( ! var . hasOwnBackground && var . getBackground ( ) == null )
if ( var && ! var && ( var > 0 && var / 3.0f > Math . abs ( var ) || var < 0 && Math . abs ( var ) >= Math . abs ( var ) && Math . abs ( var ) >= AndroidUtilities . dp ( 10 ) ) )	if ( var && ! var && ( var > 0 && var / 3.0f > Math . abs ( var ) && Math . abs ( var ) >= AndroidUtilities . getPixelsInCM ( 0.2f , true ) || var < 0 && Math . abs ( var ) >= Math . abs ( var ) && Math . abs ( var ) >= AndroidUtilities . getPixelsInCM ( 0.3f , true ) ) )
ArrayList < Country > var = new ArrayList < Country > ( )	ArrayList < Country > var = new ArrayList
var . var = Html . fromHtml ( "" + ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name + "" )	var . var = AndroidUtilities . replaceTags ( "" + ContactsController . formatName ( var . first_name , var . last_name ) . first_name , var . last_name + "" )
var = Html . fromHtml ( String . format ( "" , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) ) , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) )	var = AndroidUtilities . replaceTags ( String . format ( "" , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) ) , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) )
var = Html . fromHtml ( String . format ( "" , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) ) , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) )	var = AndroidUtilities . replaceTags ( String . format ( "" , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) ) , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) )
if ( fragmentView == null )	if ( var != null && var . getEmptyView ( ) == null )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
ProgressBar var = new ProgressBar ( getParentActivity )	ProgressBar var = new ProgressBar ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var . setAdapter ( var = new ListAdapter ( getParentActivity )  )	var . setAdapter ( var = new ListAdapter ( var ) )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	TLRPC . User var = MessagesController . getInstance ( ) . getUser ( MessagesController . getInstance ( ) . blockedUsers . get ( var ) )
var = Html . fromHtml ( String . format ( "" , LocaleController . getString ( "" , R . string . ForwardedMessage ) , R . string . ForwardedMessage , LocaleController . getString ( "" , R . string . From ) , R . string . From , var ) , LocaleController . getString ( "" , R . string . ForwardedMessage ) , R . string . ForwardedMessage , LocaleController . getString ( "" , R . string . From ) , R . string . From , var )	var = AndroidUtilities . replaceTags ( String . format ( "" , LocaleController . getString ( "" , R . string . ForwardedMessage ) , R . string . ForwardedMessage , LocaleController . getString ( "" , R . string . From ) , R . string . From , var ) , LocaleController . getString ( "" , R . string . ForwardedMessage ) , R . string . ForwardedMessage , LocaleController . getString ( "" , R . string . From ) , R . string . From , var )
if ( currentMessageObject != null && currentMessageObject . textLayoutBlocks != null && ! currentMessageObject . textLayoutBlocks . isEmpty ( ) && currentMessageObject . messageText instanceof Spannable && ! isPressed = null )	if ( currentMessageObject != null && currentMessageObject . textLayoutBlocks != null && ! currentMessageObject . textLayoutBlocks . isEmpty ( ) && currentMessageObject . messageText instanceof Spannable && ! isPressed )
if ( var . getAction ( ) == MotionEvent . ACTION_DOWN || var != null && var . getAction ( ) == MotionEvent . ACTION_UP )	if ( var . getAction ( ) == MotionEvent . ACTION_DOWN || ( var || var != null ) && var . getAction ( ) == MotionEvent . ACTION_UP . getAction ( ) == MotionEvent . ACTION_CANCEL )
if ( var <= var && var + var . textLayout . getLineWidth ( var ) >= var = null )	if ( var <= var && var + var . textLayout . getLineWidth ( var ) >= var )
if ( var . length != 0 = null )	if ( var . length != 0 )
return super . onTouchEvent ( var )	return var || super . onTouchEvent ( var )
if ( var - var . lastLineWidth < var )	if ( var || var - var . lastLineWidth < var )
if ( currentMessageObject == null || currentMessageObject . textLayoutBlocks == null || currentMessageObject . textLayoutBlocks . isEmpty ( ) || var < 0 )	if ( currentMessageObject == null || currentMessageObject . textLayoutBlocks == null || currentMessageObject . textLayoutBlocks . isEmpty ( ) )
if ( var . messageOwner . media != null && ! ( var . messageOwner . media instanceof TLRPC . TL_messageMediaEmpty ) )	if ( var . messageOwner . media != null && ! var . isMediaEmpty ( ) )
var = Emoji . replaceEmoji ( Html . fromHtml ( String . format ( "" , var , var . messageText ) , var , var . messageText ) . format ( "" , var , var . messageText ) , var , var . messageText , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) )	var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var , var . messageText ) , var , var . messageText ) . format ( "" , var , var . messageText ) , var , var . messageText , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) )
var = Emoji . replaceEmoji ( Html . fromHtml ( String . format ( "" , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" ) , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" ) . format ( "" , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" ) , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) )	var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" ) , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" ) . format ( "" , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" ) , var , var . replace ( "" , "" ) , "" . replace ( "" , "" ) , "" , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) )
if ( var . messageOwner . media != null && ! ( var . messageOwner . media instanceof TLRPC . TL_messageMediaEmpty ) = var )	if ( var . messageOwner . media != null && ! var . isMediaEmpty ( ) = var )
if ( var . isOut ( ) && var . isOut ( ) )	if ( var . isOut ( ) )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 32 ) )	var . getImageReceiver ( ) . setRoundRadius ( AndroidUtilities . dp ( 32 ) )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 14 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 14 ) )
var [ var ] . setVisibility ( GONE )	var [ var ] . setVisibility ( INVISIBLE )
var [ var ] . setVisibility ( GONE )	var [ var ] . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . imageReceiver . setNeedsQualityThumb ( true )	var . getImageReceiver ( ) . setNeedsQualityThumb ( true )
var . imageReceiver . setShouldGenerateQualityThumb ( true )	var . getImageReceiver ( ) . setShouldGenerateQualityThumb ( true )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var [ var ] . setVisibility ( GONE )	var [ var ] . setVisibility ( INVISIBLE )
var . imageView . imageReceiver . setParentMessageObject ( var )	var . imageView . getImageReceiver ( ) . setParentMessageObject ( var )
var . imageView . imageReceiver . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . imageView . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
var . videoInfoContainer . setVisibility ( GONE )	var . videoInfoContainer . setVisibility ( INVISIBLE )
var . videoInfoContainer . setVisibility ( GONE )	var . videoInfoContainer . setVisibility ( INVISIBLE )
var [ var ] . setVisibility ( GONE )	var [ var ] . setVisibility ( INVISIBLE )
var . imageReceiver . setAspectFit ( true )	var . setAspectFit ( true )
if ( var . imageReceiver . getPressed ( ) != var )	if ( var . getImageReceiver ( ) . getPressed != var )
var . imageReceiver . setPressed ( var )	var . getImageReceiver ( ) . setPressed ( var )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setTextColor ( 0xffa3a3a3 )	var . setTextColor ( 0xff808080 )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 13 )	var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 14 )
var . setPadding ( 0 , AndroidUtilities . dp ( 6 ) , 0 , AndroidUtilities . dp ( 16 ) )	var . setPadding ( 0 , AndroidUtilities . dp ( 10 ) , 0 , AndroidUtilities . dp ( 17 ) )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 24 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 24 ) )
var . setVisibility ( GONE )	var . setVisibility ( INVISIBLE )
fragmentView = new LinearLayout ( getParentActivity )	fragmentView = new LinearLayout ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	boolean var = var . getBoolean ( "" , true )
if ( var != null )	if ( ! var )
var . removeView ( fragmentView )	AndroidUtilities . showKeyboard ( var )
if ( fragmentView == null )	if ( var == null || var . getText ( ) == null || var . getText ( ) == null )
fragmentView = new LinearLayout ( getParentActivity )	fragmentView = new LinearLayout ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	TLRPC . User var = MessagesController . getInstance ( ) . getUser ( UserConfig . getClientUserId ( ) )
var . removeView ( fragmentView )	AndroidUtilities . showKeyboard ( var )
fragmentView = new ScrollView ( getParentActivity )	fragmentView = new ScrollView ( var )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
var [ 0 ] = new PhoneView ( getParentActivity )	var [ 0 ] = new PhoneView ( var )
var [ 1 ] = new LoginActivitySmsView ( getParentActivity )	var [ 1 ] = new LoginActivitySmsView ( var )
fragmentView = new RelativeLayout ( getParentActivity )	fragmentView = new RelativeLayout ( var )
ScrollView var = new ScrollView ( getParentActivity )	ScrollView var = new ScrollView ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
ImageView var = new ImageView ( getParentActivity )	ImageView var = new ImageView ( var )
TextView var = new TextView ( getParentActivity )	TextView var = new TextView ( var )
var . setText ( AndroidUtilities . replaceBold ( LocaleController . getString ( "" , R . string . PhoneNumberHelp ) , R . string . PhoneNumberHelp ) . getString ( "" , R . string . PhoneNumberHelp ) , R . string . PhoneNumberHelp )	var . setText ( AndroidUtilities . replaceTags ( LocaleController . getString ( "" , R . string . PhoneNumberHelp ) , R . string . PhoneNumberHelp ) . getString ( "" , R . string . PhoneNumberHelp ) , R . string . PhoneNumberHelp )
var = new TextView ( getParentActivity )	var = new TextView ( var )
if ( fragmentView == null )	if ( var == null = "" )
fragmentView = new LinearLayout ( getParentActivity )	fragmentView = new LinearLayout ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
TextView var = new TextView ( getParentActivity )	TextView var = new TextView ( var )
var . setText ( Html . fromHtml ( LocaleController . getString ( "" , R . string . UsernameHelp ) , R . string . UsernameHelp ) . getString ( "" , R . string . UsernameHelp ) , R . string . UsernameHelp )	var . setText ( AndroidUtilities . replaceTags ( LocaleController . getString ( "" , R . string . UsernameHelp ) , R . string . UsernameHelp ) . getString ( "" , R . string . UsernameHelp ) , R . string . UsernameHelp )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	TLRPC . TL_account_checkUsername var = new TLRPC . TL_account_checkUsername ( )
if ( var != null )	if ( var != null && var . equals ( var ) )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 , var == var )	MessagesController . getInstance ( ) . deleteDialog ( var , 0 , false )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( true , var , null , true )	showReplyPanel ( true , var , null , null , false , true )
var = new FrameLayoutFixed ( getParentActivity )	var = new FrameLayoutFixed ( var )
var = new BackupImageView ( getParentActivity )	var = new BackupImageView ( var )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 21 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 21 ) )
var = new ImageView ( getParentActivity )	var = new ImageView ( var )
var = new TimerDrawable ( getParentActivity )	var = new TimerDrawable ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
fragmentView = new SizeNotifierRelativeLayout ( getParentActivity )	fragmentView = new SizeNotifierRelativeLayout ( var )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
TextView var = new TextView ( getParentActivity )	TextView var = new TextView ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
TextView var = new TextView ( getParentActivity )	TextView var = new TextView ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
ImageView var = new ImageView ( getParentActivity )	ImageView var = new ImageView ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new LayoutListView ( getParentActivity )	var = new LayoutListView ( var )
var . setAdapter ( var = new ChatAdapter ( getParentActivity )  )	var . setAdapter ( var = new ChatAdapter ( var ) )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
ProgressBar var = new ProgressBar ( getParentActivity )	ProgressBar var = new ProgressBar ( var )
var . setIndeterminateDrawable ( getParentActivity . getResources . getDrawable ( R . drawable . loading_animation ) . drawable . loading_animation )	var . setIndeterminateDrawable ( var . getResources ( ) . getDrawable ( R . drawable . loading_animation ) . drawable . loading_animation )
var = new ListView ( getParentActivity )	var = new ListView ( var )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
View var = new View ( getParentActivity )	View var = new View ( var )
var = new ImageView ( getParentActivity )	var = new ImageView ( var )
ImageView var = new ImageView ( getParentActivity )	ImageView var = new ImageView ( var )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , var , true , true )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new BackupImageView ( getParentActivity )	var = new BackupImageView ( var )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
var = new RecyclerListView ( getParentActivity )	var = new RecyclerListView ( var )
LinearLayoutManager var = new LinearLayoutManager ( getParentActivity )	LinearLayoutManager var = new LinearLayoutManager ( var )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
var = new ImageView ( getParentActivity )	var = new ImageView ( var )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new ImageView ( getParentActivity )	var = new ImageView ( var )
if ( var == null && var == null )	if ( var == null && var == null && var == null )
if ( var == null || var . type == 13 )	if ( var == null || var != null && var . type == 13 )
var . setImage ( var . location , "" , ( Drawable ) null )	var . setImage ( var , "" , ( Drawable ) null )
if ( var == null && var == null )	if ( var == null && var == null && var == null )
var . setText ( Html . fromHtml ( LocaleController . formatString ( "" , R . string . AwaitingEncryption , "" + var . first_name + "" ) , R . string . AwaitingEncryption , "" + var . first_name + "" ) . formatString ( "" , R . string . AwaitingEncryption , "" + var . first_name + "" ) , R . string . AwaitingEncryption , "" + var . first_name + "" )	var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . AwaitingEncryption , "" + var . first_name + "" ) , R . string . AwaitingEncryption , "" + var . first_name + "" ) . formatString ( "" , R . string . AwaitingEncryption , "" + var . first_name + "" ) , R . string . AwaitingEncryption , "" + var . first_name + "" )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( false , null , null , true )	showReplyPanel ( false , null , null , null , false , true )
showReplyForMessageObjectOrForward ( true , var , null , true )	showReplyPanel ( true , var , null , null , false , true )
var . showReplyForMessageObjectOrForward ( true , null , var , false )	var . showReplyPanel ( true , null , var , null , false , false )
showReplyForMessageObjectOrForward ( true , null , var , AndroidUtilities . isTablet ( ) )	showReplyPanel ( true , null , var , null , false , AndroidUtilities . isTablet ( ) )
var . onTextChanged ( var )	var . onTextChanged ( var , var > var || var > 1 )
if ( var == null )	if ( var == null || var )
var . playTogether ( ObjectAnimatorProxy . ofFloat ( ChatActivityEnterView . this , "" , 0.0f , 1.0f ) . this , "" , 0.0f , 1.0f )	var . playTogether ( ObjectAnimatorProxy . ofFloat ( ChatActivityEnterView . this , "" , 1.0f ) . this , "" , 1.0f )
if ( var == null )	if ( var == null || ! var )
AnimatorSetProxy var = new AnimatorSetProxy	var = new AnimatorSetProxy
var . playTogether ( ObjectAnimatorProxy . ofFloat ( ChatActivityEnterView . this , "" , 1.0f , 0.0f ) . this , "" , 1.0f , 0.0f )	var . playTogether ( ObjectAnimatorProxy . ofFloat ( ChatActivityEnterView . this , "" , var , 0.0f ) . this , "" , var , 0.0f )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var )
var . onTextChanged ( var . getText ( ) )	var . onTextChanged ( var . getText ( ) , true )
ArrayList < Long > var = new ArrayList < Long > ( )	ArrayList < Long > var = new ArrayList
ArrayList < Long > var = new ArrayList < Long > ( )	ArrayList < Long > var = new ArrayList
setMeasuredDimension ( resolveSizeAndStateFixed ( var , var , var ) , var , var , resolveSizeAndStateFixed ( var , var , var << MEASURED_HEIGHT_STATE_SHIFT ) , var , var << MEASURED_HEIGHT_STATE_SHIFT )	setMeasuredDimension ( resolveSizeAndStateFixed ( var , var , var ) , var , var , resolveSizeAndStateFixed ( var , var , var << 16 ) , var , var << 16 )
if ( fragmentView == null )	if ( var == null )
fragmentView = new ScrollView ( getParentActivity )	fragmentView = new ScrollView ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
var = new BackupImageView ( getParentActivity )	var = new BackupImageView ( var )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 30 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 30 ) )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )
if ( var != null )	if ( var . var != null )
var . removeView ( fragmentView )	AndroidUtilities . showKeyboard ( var )
if ( fragmentView == null )	if ( getParentActivity == null )
var = new SearchAdapter ( getParentActivity , var , var )	var = new SearchAdapter ( var , var , var )
var = new ContactsAdapter ( getParentActivity , var , var , var )	var = new ContactsAdapter ( var , var , var , var )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
var = new LetterSectionsListView ( getParentActivity )	var = new LetterSectionsListView ( var )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	ViewGroup . MarginLayoutParams var = ( ViewGroup . MarginLayoutParams ) var . getLayoutParams ( )
var . removeView ( fragmentView )	var . setLayoutParams ( var )
var = new CountryAdapter ( getParentActivity )	var = new CountryAdapter ( var )
var = new CountrySearchAdapter ( getParentActivity , var . getCountries ( ) )	var = new CountrySearchAdapter ( var , var . getCountries ( ) )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
var = new LetterSectionsListView ( getParentActivity )	var = new LetterSectionsListView ( var )
var . removeView ( fragmentView )	var . notifyDataSetChanged ( )
if ( fragmentView == null )	if ( var == null )
var = new ListAdapter ( getParentActivity )	var = new ListAdapter ( var )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	long var = ( long ) var . getBlockCount ( ) * ( long ) var . getBlockSize ( )
if ( var != null )	if ( var . file != null && actionBar . isActionModeShowed ( ) )
var . removeView ( fragmentView )	var . setChecked ( var . containsKey ( var . file . toString ( ) ) . file . toString ( ) , ! var )
if ( fragmentView == null )	if ( var != null )
var = new SearchAdapter ( getParentActivity , null , false )	var = new SearchAdapter ( var , null , false )
var = new ContactsAdapter ( getParentActivity , true , false , null )	var = new ContactsAdapter ( var , true , false , null )
fragmentView = new LinearLayout ( getParentActivity )	fragmentView = new LinearLayout ( var )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
var = new LetterSectionsListView ( getParentActivity )	var = new LetterSectionsListView ( var )
var . removeView ( fragmentView )	var = PhoneFormat . getInstance ( ) . format ( "" + var . phone )
if ( fragmentView == null )	if ( var != null )
MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , var , var )	MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , var )
final long var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , var , var )	final long var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , var )
fragmentView = new LinearLayout ( getParentActivity )	fragmentView = new LinearLayout ( var )
FrameLayout var = new FrameLayoutFixed ( getParentActivity )	FrameLayout var = new FrameLayoutFixed ( var )
var = new BackupImageView ( getParentActivity )	var = new BackupImageView ( var )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 32 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 32 ) )
var = new EditText ( getParentActivity )	var = new EditText ( var )
GreySectionCell var = new GreySectionCell ( getParentActivity )	GreySectionCell var = new GreySectionCell ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var . setAdapter ( var = new ListAdapter ( getParentActivity )  )	var . setAdapter ( var = new ListAdapter ( var ) )
var . removeView ( fragmentView )	MessagesController . getInstance ( ) . changeChatAvatar ( var , var )
if ( fragmentView == null )	if ( getParentActivity == null || fragmentView == null )
var . setText ( Html . fromHtml ( LocaleController . formatString ( "" , R . string . EncryptionKeyDescription , var . first_name , var . first_name ) , R . string . EncryptionKeyDescription , var . first_name , var . first_name ) . formatString ( "" , R . string . EncryptionKeyDescription , var . first_name , var . first_name ) , R . string . EncryptionKeyDescription , var . first_name , var . first_name )	var . setText ( AndroidUtilities . replaceTags ( LocaleController . formatString ( "" , R . string . EncryptionKeyDescription , var . first_name , var . first_name ) , R . string . EncryptionKeyDescription , var . first_name , var . first_name ) . formatString ( "" , R . string . EncryptionKeyDescription , var . first_name , var . first_name ) , R . string . EncryptionKeyDescription , var . first_name , var . first_name )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	WindowManager var = ( WindowManager ) ApplicationLoader . applicationContext . getSystemService ( Context . WINDOW_SERVICE )
var . removeView ( fragmentView )	var . setOrientation ( LinearLayout . HORIZONTAL )
if ( fragmentView == null )	if ( var == null = null )
var = new ListAdapter ( getParentActivity )	var = new ListAdapter ( var )
var = new SearchAdapter ( getParentActivity )	var = new SearchAdapter ( var )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
LinearLayout var = new LinearLayout ( getParentActivity )	LinearLayout var = new LinearLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
FrameLayout var = new FrameLayout ( getParentActivity )	FrameLayout var = new FrameLayout ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
if ( var != null )	if ( LocaleController . getInstance ( ) . sortedLanguages == null )
var . removeView ( fragmentView )	LocaleController . LocaleInfo var = LocaleController . getInstance ( ) . sortedLanguages . get ( var )
var = new ListAdapter ( getParentActivity )	var = new ListAdapter ( var )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
ListView var = new ListView ( getParentActivity )	ListView var = new ListView ( var )
if ( fragmentView == null )	if ( var == null )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
TextView var = new TextView ( getParentActivity )	TextView var = new TextView ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var . setAdapter ( var = new ListAdapter ( getParentActivity )  )	var . setAdapter ( var = new ListAdapter ( var ) )
if ( var != null )	if ( var == null )
if ( ! UserConfig . isClientActivated ( ) && ! UserConfig . isWaitingForPasswordEnter ( ) )	if ( ! UserConfig . isClientActivated ( ) )
if ( ! UserConfig . isClientActivated ( ) && ! UserConfig . isWaitingForPasswordEnter ( ) )	if ( ! UserConfig . isClientActivated ( ) )
if ( UserConfig . isWaitingForPasswordEnter ( ) )	if ( ! UserConfig . isClientActivated ( ) )
if ( var . fragmentsStack . size ( ) == 1 && ( var . fragmentsStack . get ( 0 ) instanceof LoginActivity || var . fragmentsStack . get ( 0 ) instanceof AccountPasswordActivity ) = false )	if ( var . fragmentsStack . size ( ) == 1 && var . fragmentsStack . get ( 0 ) instanceof LoginActivity = false )
if ( UserConfig . isClientActivated ( ) && ! UserConfig . isWaitingForPasswordEnter ( ) && ( var & Intent . FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY ) == 0 )	if ( UserConfig . isClientActivated ( ) && ( var & Intent . FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY ) == 0 )
if ( AndroidUtilities . isTablet ( ) )	if ( ! var && ! var )
if ( ! UserConfig . isClientActivated ( ) && ! UserConfig . isWaitingForPasswordEnter ( ) )	if ( AndroidUtilities . isTablet ( ) )
if ( UserConfig . isWaitingForPasswordEnter ( ) )	if ( ! UserConfig . isClientActivated ( ) )
var . addFragmentToStack ( new AccountPasswordActivity ( 1 ) )	var . setAllowOpenDrawer ( false , false )
var . addFragmentToStack ( new AccountPasswordActivity ( 1 ) )	var . addFragmentToStack ( new MessagesActivity ( null ) )
var . presentFragment ( new AccountPasswordActivity ( 1 ) , false , true , true )	var . setAllowOpenDrawer ( true , false )
var . presentFragment ( new AccountPasswordActivity ( 1 ) , true )	var . setAllowOpenDrawer ( ! ( var instanceof LoginActivity ) && var . getVisibility ( ) != View . VISIBLE , true )
var . setAllowOpenDrawer ( false , false )	var . setAllowOpenDrawer ( ! ( var instanceof LoginActivity ) && var . getVisibility ( ) != View . VISIBLE , true )
if ( var instanceof LoginActivity || var instanceof AccountPasswordActivity )	if ( var instanceof LoginActivity )
if ( var instanceof LoginActivity || var instanceof AccountPasswordActivity )	if ( var instanceof LoginActivity )
if ( fragmentView == null )	if ( var == null )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 32 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 32 ) )
MapsInitializer . initialize ( getParentActivity )	MapsInitializer . initialize ( var )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	LatLng var = new LatLng ( var . getLatitude ( ) , var . getLongitude ( ) )
var . removeView ( fragmentView )	FileLog . var ( "" , var )
if ( var == var )	if ( var == var == - 1 )
fragmentView = new ScrollView ( getParentActivity )	fragmentView = new ScrollView ( var )
var [ 0 ] . setVisibility ( View . VISIBLE )	var [ var ] . setVisibility ( View . VISIBLE )
FrameLayout . LayoutParams var = ( FrameLayout . LayoutParams ) var [ 0 ] . getLayoutParams	FrameLayout . LayoutParams var = ( FrameLayout . LayoutParams ) var [ var ] . getLayoutParams
var . leftMargin = AndroidUtilities . dp ( 16 )	var [ 1 ] = new LoginActivitySmsView ( var )
var [ 1 ] . setLayoutParams ( var )	var [ var ] . setLayoutParams ( var )
var [ 2 ] . setVisibility ( View . GONE )	var [ var ] . setVisibility ( View . GONE )
var [ var ] = ( SlideView ) var . getChildAt ( var )	var [ var ] . onShow
var . restoreStateParams ( var )	var [ var ] . restoreStateParams ( var )
if ( var != 1 && var != 2 )	if ( var == 3 )
var . leftMargin = AndroidUtilities . dp ( 20 )	var . leftMargin = AndroidUtilities . dp ( 4 )
var . rightMargin = AndroidUtilities . dp ( 20 )	var . rightMargin = AndroidUtilities . dp ( 4 )
needShowAlert ( LocaleController . getString ( "" , R . string . ChooseCountry ) , R . string . ChooseCountry )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . ChooseCountry ) , R . string . ChooseCountry )
needShowAlert ( LocaleController . getString ( "" , R . string . WrongCountry ) , R . string . WrongCountry )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . WrongCountry ) , R . string . WrongCountry )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )
needShowAlert ( LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )
needShowAlert ( LocaleController . getString ( "" , R . string . FloodWait ) , R . string . FloodWait )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . FloodWait ) , R . string . FloodWait )
needShowAlert ( var . text )	int var = Utilities . parseInt ( var . text )
needShowAlert ( LocaleController . getString ( "" , R . string . NoMailInstalled ) , R . string . NoMailInstalled )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . NoMailInstalled ) , R . string . NoMailInstalled )
var . rightMargin = AndroidUtilities . dp ( 24 )	var . setPadding ( 0 , AndroidUtilities . dp ( 14 ) , 0 , 0 )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )
needShowAlert ( LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )
needShowAlert ( LocaleController . getString ( "" , R . string . FloodWait ) , R . string . FloodWait )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . FloodWait ) , R . string . FloodWait )
needShowAlert ( var . text )	int var = Utilities . parseInt ( var . text )
public RegisterView ( Context var )	public LoginActivityRegisterView ( Context var )
var . leftMargin = AndroidUtilities . dp ( 24 )	var . setLineSpacing ( AndroidUtilities . dp ( 2 ) , 1.0f )
var . rightMargin = AndroidUtilities . dp ( 24 )	var . topMargin = AndroidUtilities . dp ( 7 )
var . leftMargin = AndroidUtilities . dp ( 24 )	var . setLineSpacing ( AndroidUtilities . dp ( 2 ) , 1.0f )
var . rightMargin = AndroidUtilities . dp ( 24 )	var . topMargin = AndroidUtilities . dp ( 34 )
var . leftMargin = AndroidUtilities . dp ( 24 )	var . setPadding ( 0 , AndroidUtilities . dp ( 14 ) , 0 , 0 )
var . rightMargin = AndroidUtilities . dp ( 24 )	var . setLineSpacing ( AndroidUtilities . dp ( 2 ) , 1.0f )
var . leftMargin = AndroidUtilities . dp ( 24 )	var . setPadding ( 0 , AndroidUtilities . dp ( 14 ) , 0 , 0 )
var . rightMargin = AndroidUtilities . dp ( 24 )	var . setLineSpacing ( AndroidUtilities . dp ( 2 ) , 1.0f )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidPhoneNumber ) , R . string . InvalidPhoneNumber )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidCode ) , R . string . InvalidCode )
needShowAlert ( LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . CodeExpired ) , R . string . CodeExpired )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidFirstName ) , R . string . InvalidFirstName )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidFirstName ) , R . string . InvalidFirstName )
needShowAlert ( LocaleController . getString ( "" , R . string . InvalidLastName ) , R . string . InvalidLastName )	needShowAlert ( LocaleController . getString ( "" , R . string . AppName ) , R . string . AppName , LocaleController . getString ( "" , R . string . InvalidLastName ) , R . string . InvalidLastName )
needShowAlert ( var . text )	int var = Utilities . parseInt ( var . text )
var . showReplyForMessageObjectOrForward ( true , null , var , false )	var . showReplyPanel ( true , null , var , null , false , false )
var = new ActionBarMenuItem ( getParentActivity var , var , R . drawable . bar_selector )	var = new ActionBarMenuItem ( var , var , R . drawable . bar_selector )
var = new TextView ( getParentActivity var )	var = new TextView ( var )
var = new SharedPhotoVideoAdapter ( getParentActivity var )	var = new SharedPhotoVideoAdapter ( var )
var = new SharedDocumentsAdapter ( getParentActivity var )	var = new SharedDocumentsAdapter ( var )
var = new DocumentsSearchAdapter ( getParentActivity var )	var = new DocumentsSearchAdapter ( var )
fragmentView = var = new FrameLayout ( getParentActivity var )	fragmentView = var = new FrameLayout ( var )
var = new SectionsListView ( getParentActivity var )	var = new SectionsListView ( var )
var . add ( new SharedPhotoVideoCell ( getParentActivity var ) var )	var . add ( new SharedPhotoVideoCell ( var ) )
var = new LinearLayout ( getParentActivity var )	var = new LinearLayout ( var )
var = new ImageView ( getParentActivity var )	var = new ImageView ( var )
var = new TextView ( getParentActivity var )	var = new TextView ( var )
var = new LinearLayout ( getParentActivity var )	var = new LinearLayout ( var )
ProgressBar var = new ProgressBar ( getParentActivity var )	ProgressBar var = new ProgressBar ( var )
var . imageReceiver = var . imageReceiver	var . imageReceiver = var . getImageReceiver ( var )
if ( fragmentView == null )	if ( getParentActivity == null )
var = new DialogsAdapter ( getParentActivity , var )	var = new DialogsAdapter ( var , var )
var = new DialogsSearchAdapter ( getParentActivity , var )	var = new DialogsSearchAdapter ( var , var )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 , var == 0 )	MessagesController . getInstance ( ) . deleteDialog ( var , 0 , false )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	ViewGroup . MarginLayoutParams var = ( ViewGroup . MarginLayoutParams ) var . getLayoutParams ( )
var . removeView ( fragmentView )	var . setLayoutParams ( var )
if ( fragmentView == null )	if ( var != null )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var . setAdapter ( new ListAdapter ( getParentActivity )  )	var . setAdapter ( new ListAdapter ( var ) )
if ( var != null )	if ( var == null )
var = LocaleController . getString ( "" , R . string . Default )	var = LocaleController . getString ( "" , R . string . SoundDefault )
var = var . getString ( "" , LocaleController . getString ( "" , R . string . Default ) , R . string . Default )	var = var . getString ( "" , LocaleController . getString ( "" , R . string . SoundDefault ) , R . string . SoundDefault )
var = var . getString ( "" , LocaleController . getString ( "" , R . string . Default ) , R . string . Default )	var = var . getString ( "" , LocaleController . getString ( "" , R . string . SoundDefault ) , R . string . SoundDefault )
if ( fragmentView == null )	if ( getParentActivity == null )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new EditText ( getParentActivity )	var = new EditText ( var )
var = new ActionBarMenuItem ( getParentActivity , var , R . drawable . bar_selector )	var = new ActionBarMenuItem ( var , var , R . drawable . bar_selector )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var . setAdapter ( var = new ListAdapter ( getParentActivity )  )	var . setAdapter ( var = new ListAdapter ( var ) )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	FrameLayout . LayoutParams var = ( FrameLayout . LayoutParams ) var . getLayoutParams ( )
if ( var != null )	if ( var == null )
shakeTextView ( 2 , 0 )	AndroidUtilities . shakeTextView ( var , 2 , 0 )
shakeTextView ( 2 , 0 )	AndroidUtilities . shakeTextView ( var , 2 , 0 )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var . setAdapter ( var = new ListAdapter ( getParentActivity )  )	var . setAdapter ( var = new ListAdapter ( var ) )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
ProgressBar var = new ProgressBar ( getParentActivity )	ProgressBar var = new ProgressBar ( var )
var = new PhotoPickerBottomLayout ( getParentActivity )	var = new PhotoPickerBottomLayout ( var )
fragmentView = var = new PhotoCropView ( getParentActivity )	fragmentView = var = new PhotoCropView ( var )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new GridView ( getParentActivity )	var = new GridView ( var )
var . setAdapter ( var = new ListAdapter ( getParentActivity )  )	var . setAdapter ( var = new ListAdapter ( var ) )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new FrameLayout ( getParentActivity )	var = new FrameLayout ( var )
ProgressBar var = new ProgressBar ( getParentActivity )	ProgressBar var = new ProgressBar ( var )
var = new PhotoPickerBottomLayout ( getParentActivity )	var = new PhotoPickerBottomLayout ( var )
var . imageReceiver = var . photoImage . imageReceiver	var . imageReceiver = var . photoImage . getImageReceiver ( var )
return var . photoImage . imageReceiver . getBitmap ( )	return var . photoImage . getImageReceiver ( ) . getBitmap
var . imageReceiver . setVisible ( ! var , false )	var . getImageReceiver ( ) . setVisible ( ! var , false )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 21 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 21 ) )
var . imageReceiver . setAspectFit ( true )	var . setAspectFit ( true )
var = - 1	var = var ++
var = new ListAdapter ( getParentActivity )	var = new ListAdapter ( var )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
ListView var = new ListView ( getParentActivity )	ListView var = new ListView ( var )
if ( getParentActivity == null )	presentFragment ( new SessionsActivity )
presentFragment ( new AccountPasswordActivity ( 0 ) )	presentFragment ( new TwoStepVerificationActivity ( 0 ) )
var . setText ( LocaleController . getString ( "" , R . string . TerminateAllSessions ) , R . string . TerminateAllSessions , false )	var . setText ( LocaleController . getString ( "" , R . string . SessionsTitle ) , R . string . SessionsTitle , false )
var . setText ( LocaleController . getString ( "" , R . string . Password ) , R . string . Password , true )	var . setText ( LocaleController . getString ( "" , R . string . TwoStepVerification ) , R . string . TwoStepVerification , true )
( ( TextInfoPrivacyCell ) var ) . setText ( LocaleController . getString ( "" , R . string . ClearOtherSessionsHelp ) , R . string . ClearOtherSessionsHelp )	( ( TextInfoPrivacyCell ) var ) . setText ( LocaleController . getString ( "" , R . string . SessionsInfo ) , R . string . SessionsInfo )
if ( fragmentView == null )	if ( var != null )
var = new ListAdapter ( getParentActivity )	var = new ListAdapter ( var )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new BackupImageView ( getParentActivity )	var = new BackupImageView ( var )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 30 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 30 ) )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var = new ImageView ( getParentActivity )	var = new ImageView ( var )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	float var = actionBar . getExtraHeight ( ) / ( float ) AndroidUtilities . dp ( 88 )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( var / 2 ) / 2 )	var . setRoundRadius ( AndroidUtilities . dp ( var / 2 ) / 2 )
var . imageReceiver = var . imageReceiver	var . imageReceiver = var . getImageReceiver ( var )
var . radius = var . imageReceiver . getRoundRadius ( var )	var . radius = var . getImageReceiver ( var ) . getRoundRadius var
var . imageReceiver . setVisible ( true , true )	var . getImageReceiver ( ) . setVisible ( true , true )
var . imageReceiver . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
var . setText ( Html . fromHtml ( String . format ( "" , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var ) , var ) , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var ) , var ) . format ( "" , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var ) , var ) , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var ) , var )	var . setText ( String . format ( "" , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var ) , var ) , LocaleController . formatPluralString ( "" , var ) , var , LocaleController . formatPluralString ( "" , var ) , var )
var . imageReceiver . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
if ( fragmentView == null )	if ( var == null )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var . setAdapter ( new ListAdapter ( getParentActivity )  )	var . setAdapter ( new ListAdapter ( var ) )
ViewGroup var = ( ViewGroup ) fragmentView . getParent ( )	int var = var . getInt ( "" + var , 0 ) - ConnectionsManager . getInstance ( ) . getCurrentTime
var . removeView ( fragmentView )	var . setTextAndValue ( LocaleController . getString ( "" , R . string . Notifications ) , R . string . Notifications , var , true )
var = LocaleController . getString ( "" , R . string . Default )	var = LocaleController . getString ( "" , R . string . SoundDefault )
String var = var . getString ( "" + var , LocaleController . getString ( "" , R . string . Default ) , R . string . Default )	String var = var . getString ( "" + var , LocaleController . getString ( "" , R . string . SoundDefault ) , R . string . SoundDefault )
var = new ListAdapter ( getParentActivity )	var = new ListAdapter ( var )
fragmentView = new FrameLayout ( getParentActivity )	fragmentView = new FrameLayout ( var )
var = new BackupImageView ( getParentActivity )	var = new BackupImageView ( var )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( 30 ) )	var . setRoundRadius ( AndroidUtilities . dp ( 30 ) )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new TextView ( getParentActivity )	var = new TextView ( var )
var = new ListView ( getParentActivity )	var = new ListView ( var )
var = new ImageView ( getParentActivity )	var = new ImageView ( var )
var . removeView ( fragmentView )	var = LocaleController . getString ( "" , R . string . UsernameEmpty )
var . imageReceiver = var . imageReceiver	var . imageReceiver = var . getImageReceiver ( var )
var . radius = var . imageReceiver . getRoundRadius ( var )	var . radius = var . getImageReceiver ( var ) . getRoundRadius var
var . imageReceiver . setVisible ( true , true )	var . getImageReceiver ( ) . setVisible ( true , true )
var . imageReceiver . setRoundRadius ( AndroidUtilities . dp ( var / 2 ) / 2 )	var . setRoundRadius ( AndroidUtilities . dp ( var / 2 ) / 2 )
var . imageReceiver . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
var . imageReceiver . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )	var . getImageReceiver ( ) . setVisible ( ! PhotoViewer . getInstance ( ) . isShowingImage ( var ) , false )
var = new ListAdapter ( getParentActivity )	var = new ListAdapter ( var )
var = GoogleCloudMessaging . getInstance ( this )	var = GoogleCloudMessaging . getInstance ( ApplicationLoader . this )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , 0 , true , false )	MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , 0 , true , false )	MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )
return var == null || var instanceof TLRPC . TL_chatForbidden || var instanceof TLRPC . TL_channelForbidden || ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0	return var == null || var instanceof TLRPC . TL_chatEmpty || var instanceof TLRPC . TL_chatForbidden || var instanceof TLRPC . TL_channelForbidden || var . left || var . deactivated
return var == null || var instanceof TLRPC . TL_chatForbidden || var instanceof TLRPC . TL_channelForbidden || ( var . flags & TLRPC . CHAT_FLAG_USER_KICKED ) != 0	return var == null || var instanceof TLRPC . TL_chatEmpty || var instanceof TLRPC . TL_chatForbidden || var instanceof TLRPC . TL_channelForbidden || var . kicked || var . deactivated
return var == null || var instanceof TLRPC . TL_chatForbidden || var instanceof TLRPC . TL_channelForbidden || ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 || ( var . flags & TLRPC . CHAT_FLAG_USER_KICKED ) != 0	return var == null || var instanceof TLRPC . TL_chatEmpty || var instanceof TLRPC . TL_chatForbidden || var instanceof TLRPC . TL_channelForbidden || var . left || var . kicked || var . deactivated
return var != null && ( ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 || ( var . flags & TLRPC . CHAT_FLAG_USER_IS_EDITOR ) != 0 )	return var != null && ( var . creator || var . editor || var . megagroup )
return ! isChannel ( var ) || ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 || ( var . flags & TLRPC . CHAT_FLAG_USER_IS_EDITOR ) != 0 || ( var . flags & TLRPC . CHAT_FLAG_IS_BROADCAST ) == 0	return ! isChannel ( var ) || var . creator || var . editor || ! var . broadcast
if ( ! var . name . equals ( UserConfig . getCurrentUser ( ) . phone ) = true = var )	if ( ! var . name . equals ( "" + UserConfig . getClientUserId ( ) ) = true = var )
var = new Account ( UserConfig . getCurrentUser ( ) . phone , "" )	var = new Account ( "" + UserConfig . getClientUserId ( ) , "" )
if ( ( var . flags & TLRPC . USER_FLAG_MUTUAL_CONTACT ) != 0 )	if ( var . mutual_contact )
var . printStackTrace ( )	FileLog . var ( "" , var )
var . printStackTrace ( )	FileLog . var ( "" , var )
var . printStackTrace ( )	FileLog . var ( "" , var )
var . notify ( )	var . countDown ( )
FileLog . var ( "" , "" + var + "" + var . id + "" + var . access_hash + "" + var . local_id + "" + var . secret )	FileLog . var ( "" , "" + var + "" + var . id + "" + var . local_id + "" + var . access_hash + "" + var . volume_id + "" + var . secret )
FileLoader . getInstance ( ) . setMediaDirs ( createMediaPaths )	FileLoader . getInstance ( ) . setMediaDirs ( var )
return var . format ( var * 1000 )	return getInstance . var . format ( var * 1000 )
return var . format ( var * 1000 )	return getInstance . var . format ( var * 1000 )
return var . format ( new Date ( var * 1000 ) * 1000 )	return getInstance . var . format ( new Date ( var * 1000 ) * 1000 )
return var . format ( new Date ( var * 1000 ) * 1000 )	return getInstance . var . format ( new Date ( var * 1000 ) * 1000 )
return var . format ( new Date ( var * 1000 ) * 1000 )	return getInstance . var . format ( new Date ( var * 1000 ) * 1000 )
return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , var . format ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )	return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . TodayAt ) , R . string . TodayAt , getInstance . var . format ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )
return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , var . format ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )	return String . format ( "" , LocaleController . getString ( "" , R . string . LastSeen ) , R . string . LastSeen , LocaleController . getString ( "" , R . string . YesterdayAt ) , R . string . YesterdayAt , getInstance . var . format ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )
String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 , var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )	String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , getInstance . var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 , getInstance . var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )
String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 , var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )	String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , getInstance . var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 , getInstance . var . var ( new Date ( var * 1000 ) * 1000 ) Date ( var * 1000 ) * 1000 )
return var . format ( new Date ( var * 1000 ) * 1000 )	return getInstance . var . format ( new Date ( var * 1000 ) * 1000 )
return var . format ( new Date ( var * 1000 ) * 1000 )	return getInstance . var . format ( new Date ( var * 1000 ) * 1000 )
return var . format ( new Date ( var * 1000 ) * 1000 )	return getInstance . var . format ( new Date ( var * 1000 ) * 1000 )
return var . format ( new Date ( var * 1000 ) * 1000 )	return getInstance . var . format ( new Date ( var * 1000 ) * 1000 )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidFailedLoad )	NotificationCenter . getInstance ( ) . addObserver ( MediaController . this , NotificationCenter . FileDidFailedLoad )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileDidLoaded )	NotificationCenter . getInstance ( ) . addObserver ( MediaController . this , NotificationCenter . FileDidLoaded )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileLoadProgressChanged )	NotificationCenter . getInstance ( ) . addObserver ( MediaController . this , NotificationCenter . FileLoadProgressChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . FileUploadProgressChanged )	NotificationCenter . getInstance ( ) . addObserver ( MediaController . this , NotificationCenter . FileUploadProgressChanged )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . messagesDeleted )	NotificationCenter . getInstance ( ) . addObserver ( MediaController . this , NotificationCenter . messagesDeleted )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . removeAllMessagesFromDialog )	NotificationCenter . getInstance ( ) . addObserver ( MediaController . this , NotificationCenter . removeAllMessagesFromDialog )
NotificationCenter . getInstance ( ) . addObserver ( this , NotificationCenter . musicDidLoaded )	NotificationCenter . getInstance ( ) . addObserver ( MediaController . this , NotificationCenter . musicDidLoaded )
var = MediaStore . Images . Media . query ( ApplicationLoader . applicationContext . getContentResolver ( ) , MediaStore . Images . Media . EXTERNAL_CONTENT_URI , var , "" , null , MediaStore . Images . Media . DATE_TAKEN + "" )	var = MediaStore . Images . Media . query ( ApplicationLoader . applicationContext . getContentResolver ( ) , MediaStore . Images . Media . EXTERNAL_CONTENT_URI , var , null , null , MediaStore . Images . Media . DATE_TAKEN + "" )
var = MediaStore . Images . Media . query ( ApplicationLoader . applicationContext . getContentResolver ( ) , MediaStore . Video . Media . EXTERNAL_CONTENT_URI , var , "" , null , MediaStore . Video . Media . DATE_TAKEN + "" )	var = MediaStore . Images . Media . query ( ApplicationLoader . applicationContext . getContentResolver ( ) , MediaStore . Video . Media . EXTERNAL_CONTENT_URI , var , null , null , MediaStore . Video . Media . DATE_TAKEN + "" )
public MessageObject ( TLRPC . Message var , AbstractMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )	public MessageObject ( TLRPC . Message var , AbstractMap < Integer , TLRPC . User > , TLRPC . User var , AbstractMap < Integer , TLRPC . Chat > , TLRPC . Chat var , boolean var )
var = new MessageObject ( var . replyMessage , var , false )	var = new MessageObject ( var . replyMessage , var , var , false )
var = var . get ( var . action . user_id )	var = var . get ( var )
var = MessagesController . getInstance ( ) . getUser ( var . action . user_id )	var = MessagesController . getInstance ( ) . getUser ( var )
if ( var . to_id . channel_id != 0 )	if ( var . to_id . channel_id != 0 && ! isMegagroup )
if ( var . action . user_id == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getClientUserId ( ) )
if ( var . to_id . channel_id != 0 )	if ( var . to_id . channel_id != 0 && ! isMegagroup )
if ( var . to_id . channel_id != 0 )	if ( var . to_id . channel_id != 0 && ! isMegagroup )
if ( var . to_id . channel_id != 0 )	if ( var . to_id . channel_id != 0 && ! isMegagroup )
if ( var . length ( ) == 0 = "" )	if ( var == null || var . length ( ) == 0 = "" )
if ( var == 1 || var == 2 || var == 0 || var == 8 )	if ( var == 1 || var == 2 || var == 0 || var == 8 == 9 )
var . setSpan ( var , var , var + var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )	var . setSpan ( new URLSpanNoUnderlineBold ( "" + var . id ) + var . id , var , var + var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
addUsernamesAndHashtags ( var )	addUsernamesAndHashtags ( var , true )
URLSpanNoUnderline var	URLSpanNoUnderline var = null
if ( var instanceof TLRPC . TL_messageEntityCode )	if ( var instanceof TLRPC . TL_messageEntityCode || var instanceof TLRPC . TL_messageEntityPre )
var . flags &= ~ TLRPC . MESSAGE_FLAG_UNREAD	var = ( ( TLRPC . Chat ) var ) . title
if ( ( var . var & TLRPC . MESSAGE_FLAG_UNREAD ) == 0 |= 1 )	if ( ! var . unread |= 1 )
if ( ( var . var & TLRPC . MESSAGE_FLAG_CONTENT_UNREAD ) == 0 |= 2 )	if ( ! var . media_unread |= 2 )
var . flags &= ~ TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var = - ( ( TLRPC . Chat ) var ) . var
return var instanceof TLRPC . TL_message_secret && var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl != 0 && var . ttl <= 60	return var instanceof TLRPC . TL_message_secret && var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl > 0 && var . ttl <= 60
return var instanceof TLRPC . TL_message_secret && ( var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl != 0 && var . ttl <= 60 || var . media instanceof TLRPC . TL_messageMediaAudio || var . media instanceof TLRPC . TL_messageMediaVideo )	return var instanceof TLRPC . TL_message_secret && ( var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl > 0 && var . ttl <= 60 || var . media instanceof TLRPC . TL_messageMediaAudio || var . media instanceof TLRPC . TL_messageMediaVideo )
var . flags |= TLRPC . MESSAGE_FLAG_UNREAD	var . setSpan ( new URLSpanNoUnderlineBold ( "" + var ) + var , var , var + var . length ( ) , Spanned . SPAN_EXCLUSIVE_EXCLUSIVE )
if ( ( var & 2 ) == 0 )	return var . out && var . from_id > 0
var . flags &= ~ TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var . unread = false
return var . to_id . channel_id != 0 && ( var . from_id <= 0 || ( var . flags & TLRPC . MESSAGE_FLAG_MENTION ) != 0 || ( var . flags & TLRPC . MESSAGE_FLAG_OUT ) != 0 || ( var . flags & TLRPC . MESSAGE_FLAG_HAS_FROM_ID ) == 0 )	return var . to_id . channel_id != 0 && ( var . from_id <= 0 || var . mentioned || var . out || ( var . flags & TLRPC . MESSAGE_FLAG_HAS_FROM_ID ) == 0 )
return ( var . flags & TLRPC . MESSAGE_FLAG_OUT ) != 0	return ( var . flags & TLRPC . MESSAGE_FLAG_MEGAGROUP ) != 0
if ( var . dialog_id == 0 )	if ( var . dialog_id == 0 && var . to_id != null )
if ( ( var . flags & TLRPC . CHAT_FLAG_USER_IS_EDITOR ) != 0 )	if ( var . editor )
if ( ( var . flags & TLRPC . CHAT_FLAG_USER_IS_MODERATOR ) != 0 )	if ( var . moderator )
var = var . getInt ( "" , 100 )	var = var . getInt ( "" , 1000 )
var = var . broadcast_size_max	var = var . megagroup_size_max
TLRPC . Chat var = getChat ( var )	final TLRPC . Chat var = getChat ( var )
if ( ! var . equals ( var . var . first_name + var . var . last_name + var . var . username ) )	if ( var != null && ! var . equals ( var . var . first_name + var . var . last_name + var . var . username ) )
TLRPC . Chat var = ChatObject . getChatByDialog ( var )	final TLRPC . Chat var = ChatObject . getChatByDialog ( var )
var . add ( new MessageObject ( var , var , true ) , var , true )	var . add ( new MessageObject ( var , var , var , true ) , var , var , true )
if ( var || var == null || var + 1500 > System . currentTimeMillis ( ) )	if ( var || var == null || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )
if ( var != null )	if ( var )
if ( ! var )	if ( var != null )
if ( var instanceof TLRPC . TL_dialog -- instanceof TLRPC . TL_dialogChannel )	if ( var . remove ( var ) )
NotificationsController . getInstance ( ) . processDialogsUpdateRead ( var )	NotificationsController . getInstance ( ) . removeNotificationsForDialog ( var )
if ( var . var > 0 )	if ( var . offset > 0 )
if ( var && var > 0 )	if ( var && var > 0 && ! var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , var )
if ( ConnectionsManager . getInstance ( ) . getPauseTime == 0 && ApplicationLoader . isScreenOn && ! ApplicationLoader . mainInterfacePaused != 2 && ! var && ConnectionsManager . getInstance ( ) . getPauseTime <= System . currentTimeMillis ( ) - 2000 )	if ( ConnectionsManager . getInstance ( ) . getPauseTime == 0 && ApplicationLoader . isScreenOn && ! ApplicationLoader . mainInterfacePaused != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( ) . getPauseTime ) >= 2000 )
if ( var != 1 && ( var == 0 || var <= System . currentTimeMillis ( ) - 55000 || var ) )	if ( var != 1 && ( var == 0 || Math . abs ( System . currentTimeMillis ( ) - var ) >= 55000 || var ) )
if ( var != 2 && ! var && ConnectionsManager . getInstance ( ) . getPauseTime <= System . currentTimeMillis ( ) - 2000 )	if ( var != 2 && ! var && Math . abs ( System . currentTimeMillis ( ) - ConnectionsManager . getInstance ( ) . getPauseTime ) >= 2000 )
if ( ( var . size ( ) != 0 || var . size ( ) != 0 ) && var <= System . currentTimeMillis ( ) - 5000 )	if ( ( var . size ( ) != 0 || var . size ( ) != 0 ) && Math . abs ( System . currentTimeMillis ( ) - var ) >= 5000 )
if ( var . indexOfKey ( var ) > 0 )	if ( var . indexOfKey ( var ) >= 0 )
MessagesStorage . getInstance ( ) . getMessages ( var , var , var , var , var , var , var )	MessagesStorage . getInstance ( ) . getMessages ( var , var , var , var , var , var , var , var )
processLoadedMessages ( var , var , var , var , false , var , 0 , var , 0 , 0 , var , var , false )	processLoadedMessages ( var , var , var , var , false , var , 0 , var , 0 , 0 , var , var , false , var )
loadMessages ( var , var , var , false , 0 , var , var , var , var )	loadMessages ( var , var , var , false , 0 , var , var , var , var , var )
if ( ! var && var . from_id <= 0 && ( var . flags & TLRPC . MESSAGE_FLAG_OUT ) == 0 )	if ( ! var && var . from_id <= 0 && ! var . out )
var . flags |= TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var . flags |= TLRPC . MESSAGE_FLAG_MEGAGROUP
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var . bot )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var . collapsed , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var . collapsed , var , var , var )
FileLog . e ( "" , "" + var + "" + var + "" + var + "" + var )	FileLog . e ( "" , "" + var + "" + var + "" + var )
var . var = var	var . offset_id = var
if ( ! UserConfig . channelsLoaded && ! var )	if ( var . to_id . channel_id != 0 . to_id . chat_id != 0 )
TLRPC . TL_channels_getDialogs var = new TLRPC . TL_channels_getDialogs ( )	TLRPC . Chat var = var . get ( var . to_id . channel_id )
UserConfig . channelsLoaded = true	var . flags |= TLRPC . MESSAGE_FLAG_MEGAGROUP
processLoadedDialogs ( var , null , 0 , 0 , 0 , 100 , false , false , true )	processLoadedDialogs ( var , null , 0 , var , false , false , false )
if ( var . to_id . channel_id != 0 )	if ( var . to_id . channel_id != 0 . to_id . chat_id != 0 )
if ( var != null && ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 )	if ( var != null && var . left && ! var . megagroup )
if ( ! var && var . from_id <= 0 && ( var . flags & TLRPC . MESSAGE_FLAG_OUT ) == 0 )	if ( ! var && var . from_id <= 0 && ! var . out )
var . flags |= TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var . media_unread = true
if ( var == null || var . isImportant ( ) )	if ( var == null || var . isMegagroup ( ) || var . isImportant ( ) )
if ( var instanceof TLRPC . TL_dialogChannel )	if ( var instanceof TLRPC . TL_dialogChannel int ) var . id < 0 )
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var . bot )
if ( var . id < 0 )	if ( var != null && var . migrated_to != null )
var . add ( var )	var . remove ( var )
if ( var . to_id . channel_id != 0 )	if ( var . to_id . channel_id != 0 . to_id . chat_id != 0 )
MessageObject var = new MessageObject ( var , var , false )	MessageObject var = new MessageObject ( var , var , var , false )
if ( var instanceof TLRPC . TL_dialogChannel )	if ( ( int ) var . id < 0 )
if ( var != null && ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 )	if ( var != null && var . migrated_to != null )
if ( var instanceof TLRPC . TL_messages_affectedHistory )	if ( var instanceof TLRPC . TL_messages_affectedMessages )
TLRPC . TL_messages_affectedHistory var = ( TLRPC . TL_messages_affectedHistory ) var	TLRPC . TL_messages_affectedMessages var = ( TLRPC . TL_messages_affectedMessages ) var
if ( var == ChatObject . CHAT_TYPE_CHANNEL )	if ( var == ChatObject . CHAT_TYPE_CHANNEL || var == ChatObject . CHAT_TYPE_MEGAGROUP )
TLRPC . User var = getUser ( var )	TLRPC . User var = var . var . get ( var )
var . flags = 1	var . broadcast = true
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false )
var . chat_id = 0	var . peer = getInputPeer ( var . id )
if ( var == null )	if ( var == null || var && ! var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false )
if ( ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 )	if ( var . creator )
TLRPC . TL_chatParticipant var = var . participants . participants . get ( var )	TLRPC . ChatParticipant var = var . participants . participants . get ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false )
if ( var != null && ( var || var + 1500 > System . currentTimeMillis ( ) ) )	if ( var != null && ( var || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 ) )
if ( getUpdatesStartTime ( var ) != 0 && ( var || getUpdatesStartTime ( var ) + 1500 > System . currentTimeMillis ( ) ) )	if ( getUpdatesStartTime ( var ) != 0 && ( var || Math . abs ( System . currentTimeMillis ( ) - getUpdatesStartTime ( var ) ) <= 1500 ) )
var . put ( var . id , var )	var . peer = getInputPeer ( var . id )
var . flags |= TLRPC . MESSAGE_FLAG_UNREAD	var . media_unread = true
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )	var . flags |= TLRPC . MESSAGE_FLAG_MEGAGROUP
TLRPC . User var = var . get ( var . action . user_id )	Integer var = var . get ( var )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var == null )
var . reply_markup = new TLRPC . TL_replyKeyboardHide ( )	var = MessagesStorage . getInstance ( ) . getChannelReadInboxMax ( var )
TLRPC . Dialog var = var . get ( ( long ) - var )	var = MessagesStorage . getInstance ( ) . getChannelReadInboxMax ( var )
if ( var != null && ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 || var != null && var . read_inbox_max_id >= var . getId ( ) )	if ( var != null && var . left || var >= var . getId ( ) )
var . messages . get ( var ) . dialog_id = - var	TLRPC . Message var = var . messages . get ( var )
MessagesStorage . getInstance ( ) . overwriteChannel ( var , ( TLRPC . TL_updates_channelDifferenceTooLong ) var )	MessagesStorage . getInstance ( ) . overwriteChannel ( var , ( TLRPC . TL_updates_channelDifferenceTooLong ) var , var )
if ( ( var . flags & 1 ) == 0 )	if ( ! var . isFinal )
var . put ( var . id , var )	applyDialogNotificationsSettings ( var . id , var . notify_settings )
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var . bot )
MessageObject var = new MessageObject ( var , var , true )	MessageObject var = new MessageObject ( var , var , var , true )
if ( var == null || ! ChatObject . isChannel ( var ) )	if ( var == null || ! ChatObject . isChannel ( var ) || var . creator )
TLRPC . Chat var = getChat ( var )	final TLRPC . Chat var = getChat ( var )
if ( var == null || ! ChatObject . isChannel ( var ) || ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 )	if ( var == null || ! ChatObject . isChannel ( var ) || var . megagroup )
var . flags = TLRPC . MESSAGE_FLAG_UNREAD | TLRPC . MESSAGE_FLAG_HAS_FROM_ID | TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var . flags = TLRPC . MESSAGE_FLAG_HAS_FROM_ID
if ( ( var . flags & TLRPC . MESSAGE_FLAG_OUT ) != 0 )	if ( var . out )
final boolean var = ( var . flags & TLRPC . MESSAGE_FLAG_OUT ) == 0 && updatePrintingUsersWithNewMessages ( var . var , var )	final boolean var = ! var . out && updatePrintingUsersWithNewMessages ( var . var , var )
if ( var || var == null || var + 1500 > System . currentTimeMillis ( ) )	if ( var || var == null || Math . abs ( System . currentTimeMillis ( ) - var ) <= 1500 )
var . flags |= TLRPC . MESSAGE_FLAG_UNREAD	var . flags |= TLRPC . MESSAGE_FLAG_MEGAGROUP
if ( var . from_id <= 0 )	var . from_id = var . participant . inviter_id
var . flags |= TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var . flags |= TLRPC . MESSAGE_FLAG_MEGAGROUP
if ( var . to_id . channel_id != 0 )	if ( var != 0 )
TLRPC . Chat var = var . get ( var . to_id . channel_id )	TLRPC . Chat var = var . get ( var )
var . setIsRead ( )	Integer var = var . get ( var )
var . setContentIsRead ( )	var = MessagesStorage . getInstance ( ) . getChannelReadInboxMax ( var . channel_id )
if ( var && ( ! var . isOut ( ) && ( var . isUnread ( ) && var . to_id . channel_id == 0 || var . isContentUnread ( ) ) ) )	if ( ! var . isOut ( ) && ( var . isUnread ( ) && var . to_id . channel_id == 0 || var . isContentUnread ( ) ) )
var . flags = TLRPC . MESSAGE_FLAG_UNREAD | TLRPC . MESSAGE_FLAG_HAS_FROM_ID	var . unread = false
var . flags = TLRPC . MESSAGE_FLAG_UNREAD | TLRPC . MESSAGE_FLAG_HAS_FROM_ID	var . flags = TLRPC . MESSAGE_FLAG_HAS_FROM_ID
MessageObject var = new MessageObject ( var , var , true )	MessageObject var = new MessageObject ( var , var , var , true )
MessageObject var = new MessageObject ( var , var , true )	MessageObject var = new MessageObject ( var , var , var , true )
MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , false , var . inviter_id , var . version )	MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , 0 , var . inviter_id , var . version )
MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , true , 0 , var . version )	MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , 1 , 0 , var . version )
var . flags = TLRPC . MESSAGE_FLAG_UNREAD | TLRPC . MESSAGE_FLAG_HAS_FROM_ID	var . unread = true
MessageObject var = new MessageObject ( var , var , true )	MessageObject var = new MessageObject ( var , var , var , true )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . var . size ( ) ; var ++ )
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var . bot . action . user_id == UserConfig . getClientUserId ( ) )
MessagesStorage . getInstance ( ) . applyNewChannelsGroups ( var )	MessagesStorage . getInstance ( ) . updateChatInfo ( var . chat_id , var . user_id , 1 , 0 , var . version )
if ( var == null && var instanceof TLRPC . TL_channel && ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) == 0 )	if ( var == null && var instanceof TLRPC . TL_channel && ! var . left . left && var != null )
if ( var . messageOwner . to_id . channel_id == 0 || var . isImportant ( ) = var )	if ( var . messageOwner . to_id . channel_id == 0 || var . isMegagroup ( ) || var . isImportant ( ) = var )
if ( var != null && ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 )	if ( var != null && var . left )
if ( var instanceof TLRPC . TL_dialog instanceof TLRPC . TL_dialogChannel ++ )	if ( var instanceof TLRPC . TL_dialog instanceof TLRPC . TL_dialogChannel )
if ( var < 25 )	if ( var < 27 )
var . add ( - var )	if ( ! var . contains ( - var ) )
var . add ( var )	if ( ! var . contains ( var ) )
getUsersInternal ( TextUtils . join ( "" , var ) , var , var )	getChatsInternal ( TextUtils . join ( "" , var ) , var , var )
getChatsInternal ( TextUtils . join ( "" , var ) , var , var )	getUsersInternal ( TextUtils . join ( "" , var ) , var , var )
if ( var != null && ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 )	if ( var != null && ( var . left || var . migrated_to != null ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false )
TLRPC . TL_chatParticipant var = var . participants . participants . get ( var )	TLRPC . ChatParticipant var = var . participants . participants . get ( var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatInfoDidLoaded , var , 0 , false )
if ( var instanceof TLRPC . TL_chatFull )	if ( var instanceof TLRPC . TL_chatFull instanceof TLRPC . TL_channelFull )
TLRPC . TL_chatParticipant var = var . participants . participants . get ( var )	TLRPC . ChatParticipant var = var . participants . participants . get ( var )
MessagesController . getInstance ( ) . processChatInfo ( var , var , var , true , var )	MessagesController . getInstance ( ) . processChatInfo ( var , var , var , true , var , var )
var . bindLong ( 2 , var )	var . bindLong ( 3 , var )
var . add ( - var )	if ( ! var . contains ( - var ) )
var . add ( var )	if ( ! var . contains ( var ) )
if ( var . action != null && var . action . user_id != 0 && ! var . contains ( var . action . user_id ) )	var . ttl = var . intValue ( 9 )
if ( var . media != null && var . media . audio != null && var . media . audio . user_id != 0 && ! var . contains ( var . media . audio . user_id ) )	if ( var . media . audio != null && var . media . audio . user_id != 0 && ! var . contains ( var . media . audio . user_id ) )
if ( var . media != null && var . media . user_id != 0 )	if ( var . media . user_id != 0 && ! var . contains ( var . media . user_id ) )
if ( var . media != null && var . media . audio != null && var . media . audio . user_id != 0 )	if ( var . media . audio != null && var . media . audio . user_id != 0 && ! var . contains ( var . media . audio . user_id ) )
var . add ( var . fwd_from_id . channel_id )	var . add ( - var )
var . add ( var . replyMessage . action . user_id )	addUsersAndChatsFromMessage ( var . replyMessage , var , var )
var . add ( var . replyMessage . fwd_from_id . channel_id )	var . add ( - var )
var . add ( var . from_id )	if ( var . from_id != 0 )
var . add ( var . action . user_id )	if ( var . action . user_id != 0 && ! var . contains ( var . action . user_id ) )
var . add ( var . media . user_id )	if ( var . media . user_id != 0 && ! var . contains ( var . media . user_id ) )
if ( var . media != null && var . media . audio != null && var . media . audio . user_id != 0 )	if ( var . media != null )
var . add ( var . media . audio . user_id )	if ( var . media . audio != null && var . media . audio . user_id != 0 && ! var . contains ( var . media . audio . user_id ) )
var . add ( var . fwd_from_id . channel_id )	var . add ( var . action . channel_id )
var . append ( var )	var . add ( var )
if ( var . length ( ) != 0 )	if ( ! var . isEmpty ( ) )
getUsersInternal ( var . toString ( ) , var . users )	getUsersInternal ( TextUtils . join ( "" , var ) , var , var . users )
MessagesController . getInstance ( ) . processLoadedMessages ( var , var , var , var , true , var , var , var , var , var , var , var , var )	MessagesController . getInstance ( ) . processLoadedMessages ( var , var , var , var , true , var , var , var , var , var , var , var , var , var )
if ( var instanceof TLRPC . TL_message_secret && ( var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl != 0 && var . ttl <= 60 || var . media instanceof TLRPC . TL_messageMediaAudio || var . media instanceof TLRPC . TL_messageMediaVideo ) . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaVideo )	if ( var instanceof TLRPC . TL_message_secret && ( var . media instanceof TLRPC . TL_messageMediaPhoto && var . ttl > 0 && var . ttl <= 60 || var . media instanceof TLRPC . TL_messageMediaAudio || var . media instanceof TLRPC . TL_messageMediaVideo ) . media instanceof TLRPC . TL_messageMediaPhoto || var . media instanceof TLRPC . TL_messageMediaVideo )
if ( var . to_id . channel_id == 0 || MessageObject . isImportant ( var ) . to_id . channel_id != 0 )	if ( var . to_id . channel_id == 0 || MessageObject . isMegagroup ( var ) || MessageObject . isImportant ( var ) . to_id . channel_id != 0 )
if ( var . reply_markup != null && ( ( var . reply_markup . flags & 4 ) == 0 || ( var . flags & 16 ) != 0 ) )	if ( var . reply_markup != null && ( ! var . reply_markup . selective || var . mentioned ) )
if ( ( var . to_id . channel_id == 0 || MessageObject . isImportant ( var ) ) && var . date >= ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 * 24 && var != 0 )	if ( ( var . to_id . channel_id == 0 || MessageObject . isImportant ( var ) ) && var . date >= ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 && var != 0 )
var . bindInteger ( 5 , 0 )	var . bindInteger ( 5 , var )
long var = var . get ( var )	var . add ( ( long ) - var )
var |= ( ( long ) var ) << 32	var . add ( ( long ) - var )
var . append ( ',' )	var = var . executeFast ( "" )
var = var . toString ( )	var = TextUtils . join ( "" , var )
var = TextUtils . join ( "" , var )	var = var . executeFast ( "" )
if ( var == 0 && var . reply_markup != null && ( ( var . reply_markup . flags & 4 ) == 0 || ( var . flags & 16 ) != 0 ) )	if ( var == 0 && var . reply_markup != null && ( ! var . reply_markup . selective || var . mentioned ) )
if ( ! var . contains ( var . action . user_id ) )	if ( var . action . user_id != 0 && ! var . contains ( var . action . user_id ) )
MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , var , var , var , var , true , false , false )	MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , var , var , true , false , false )
if ( MessageObject . isImportant ( var ) || var . to_id . channel_id == 0 )	if ( var . to_id . channel_id == 0 || MessageObject . isMegagroup ( var ) || MessageObject . isImportant ( var ) . to_id . channel_id != 0 )
var = var . date	var = Math . max ( var . date , var )
var = var . date	var = Math . max ( var . date , var )
if ( var . reply_markup != null && ( ( var . reply_markup . flags & 4 ) == 0 || ( var . flags & 16 ) != 0 ) )	if ( var . reply_markup != null && ( ! var . reply_markup . selective || var . mentioned ) )
var = var . id	var = Math . max ( var . id , var )
var = var . id	var = Math . max ( var . id , var )
if ( var != 0 && var == 0 )	if ( var . size ( ) == 1 . size ( ) == 2 )
if ( var < var )	if ( var != 0 && var < var )
DefaultHttpClient var = new DefaultHttpClient	SimpleMultipartEntity var = new SimpleMultipartEntity
HttpPost var = new HttpPost ( "" + var + "" )	HttpURLConnection var = ( HttpURLConnection ) new URL ( "" + var + "" ) . openConnection
File var = new File ( Constants . FILES_PATH , var )	Uri var = Uri . fromFile ( new File ( Constants . FILES_PATH , var ) . FILES_PATH , var )
var . addPart ( "" , new FileBody ( var ) )	var . addPart ( "" , var . getLastPathSegment ( ) , var , false )
var . addPart ( "" , new FileBody ( var ) )	var . addPart ( "" , var . getLastPathSegment ( ) , var , false )
var . setEntity ( var )	var . setRequestProperty ( "" , var . getContentType ( ) )
FileLog . var ( "" , var )	var . printStackTrace ( )
if ( ( var . messageOwner . flags & TLRPC . MESSAGE_FLAG_MENTION ) != 0 )	if ( var . messageOwner . mentioned )
if ( ( var . messageOwner . flags & TLRPC . MESSAGE_FLAG_MENTION ) != 0 )	if ( var . messageOwner . mentioned )
String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . formatterYear . format ( ( ( long ) var . messageOwner . var ) * 1000 ) ( long ) var . messageOwner . var ) * 1000 , LocaleController . formatterDay . format ( ( ( long ) var . messageOwner . var ) * 1000 ) ( long ) var . messageOwner . var ) * 1000 )	String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . getInstance ( ) . formatterYear . format ( ( ( long ) var . messageOwner . var ) * 1000 ) ( long ) var . messageOwner . var ) * 1000 , LocaleController . getInstance ( ) . formatterDay . format ( ( ( long ) var . messageOwner . var ) * 1000 ) ( long ) var . messageOwner . var ) * 1000 )
if ( var . messageOwner . to_id . channel_id != 0 )	if ( var . messageOwner . to_id . channel_id != 0 && ! var . isMegagroup ( ) )
if ( var . messageOwner . action . user_id == UserConfig . getClientUserId ( ) )	if ( var == UserConfig . getClientUserId ( ) )
if ( var . messageOwner . to_id . channel_id != 0 )	if ( var . messageOwner . to_id . channel_id != 0 && ! var . isMegagroup ( ) )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) && ! var . megagroup )
if ( var > System . currentTimeMillis ( ) - 500 )	if ( Math . abs ( System . currentTimeMillis ( ) - var ) <= 500 )
if ( ( var . messageOwner . flags & TLRPC . MESSAGE_FLAG_MENTION ) != 0 )	if ( var . messageOwner . mentioned )
if ( ! ChatObject . isChannel ( var ) )	if ( ! ChatObject . isChannel ( var ) && ! AndroidUtilities . needShowPasscode ( false ) && ! UserConfig . isWaitingForPasscodeEnter )
if ( var > System . currentTimeMillis ( ) - 100 )	if ( Math . abs ( System . currentTimeMillis ( ) - var ) <= 100 )
var . flags = TLRPC . MESSAGE_FLAG_UNREAD | TLRPC . MESSAGE_FLAG_OUT | TLRPC . MESSAGE_FLAG_HAS_FROM_ID	var . flags = TLRPC . MESSAGE_FLAG_HAS_FROM_ID
var . flags = TLRPC . MESSAGE_FLAG_UNREAD | TLRPC . MESSAGE_FLAG_HAS_MEDIA | TLRPC . MESSAGE_FLAG_HAS_FROM_ID	var . flags = TLRPC . MESSAGE_FLAG_HAS_MEDIA | TLRPC . MESSAGE_FLAG_HAS_FROM_ID
var . flags = TLRPC . MESSAGE_FLAG_UNREAD | TLRPC . MESSAGE_FLAG_HAS_FROM_ID	var . flags = TLRPC . MESSAGE_FLAG_HAS_FROM_ID
sendMessage ( null , null , null , null , null , null , var , null , null , null , var , false , null , var , null , true , var )	sendMessage ( null , null , null , null , null , var , null , null , null , var , null , var , null , true , var , null )
TLRPC . InputPeer var = MessagesController . getInputPeer ( ( int ) var )	TLRPC . InputPeer var = MessagesController . getInputPeer ( var )
var . flags |= TLRPC . MESSAGE_FLAG_OUT	var . flags |= TLRPC . MESSAGE_FLAG_MEGAGROUP
if ( var && var . channel_id != 0 )	if ( var && var . channel_id != 0 && ! var )
var . flags |= TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var . ttl = - var . messageOwner . var . channel_id
var . flags |= TLRPC . MESSAGE_FLAG_UNREAD	var . unread = true
if ( var . size ( ) == 100 || var == var . size ( ) - 1 )	if ( var . size ( ) == 100 || var == var . size ( ) - 1 || var != var . size ( ) - 1 && var . get ( var + 1 ) . getDialogId != var . getDialogId ( ) )
if ( var && var . to_peer . channel_id != 0 )	if ( var && var . to_peer . channel_id != 0 && ! var )
var . flags |= 16	var . broadcast = true
sendMessage ( null , null , null , null , null , var , null , null , null , null , var . getDialogId ( ) , true , var . messageOwner . attachPath , null , null , true , var )	sendMessage ( null , null , null , null , null , null , null , null , null , var . getDialogId ( ) , var . messageOwner . attachPath , null , null , true , var , var )
sendMessage ( null , null , null , null , null , null , null , var , null , var , var , false , var , var , null , true , var )	sendMessage ( null , null , null , null , null , null , var , null , var , var , var , var , null , true , var , null )
sendMessage ( var , null , null , null , null , null , null , null , null , null , var , false , null , var , var , var , var )	sendMessage ( var , null , null , null , null , null , null , null , null , var , null , var , var , var , var , null )
sendMessage ( null , var , null , null , null , null , null , null , null , null , var , false , null , var , null , true , var )	sendMessage ( null , var , null , null , null , null , null , null , null , var , null , var , null , true , var , null )
sendMessage ( null , null , var , null , null , null , null , null , null , var , var , false , var , var , null , true , var )	sendMessage ( null , null , var , null , null , null , null , null , var , var , var , var , null , true , var , null )
sendMessage ( null , null , null , var , var , null , null , null , null , var , var , false , var , var , null , true , var )	sendMessage ( null , null , null , var , var , null , null , null , var , var , var , var , null , true , var , null )
sendMessage ( null , null , null , null , null , null , null , null , var , null , var , false , var , var , null , true , var )	sendMessage ( null , null , null , null , null , null , null , var , null , var , var , var , null , true , var , null )
if ( var . isForwarded ( ) = 4 )	if ( var . var == 1 )
if ( var . isForwarded ( ) = 4 )	if ( var . var == 3 )
var . flags |= TLRPC . MESSAGE_FLAG_OUT	var . out = true
var . flags |= TLRPC . MESSAGE_FLAG_CONTENT_UNREAD	var . media_unread = true
var . flags |= TLRPC . MESSAGE_FLAG_UNREAD	var . unread = true
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot )
var . flags &= ~ TLRPC . MESSAGE_FLAG_UNREAD	var . unread = false
var . flags |= 16	var . broadcast = true
var . flags |= 2	var . no_webpage = true
var . flags |= 16	var . broadcast = true
TLRPC . TL_messages_forwardMessage var = new TLRPC . TL_messages_forwardMessage ( )	TLRPC . TL_messages_forwardMessages var = new TLRPC . TL_messages_forwardMessages ( )
var . var = var	var . to_peer = var
var . random_id = var . random_id	var . random_id . add ( var . random_id )
var . id = var . getId ( )	var . id . add ( var . getId ( ) )
var . id = var . messageOwner . fwd_msg_id	var . id . add ( var . messageOwner . fwd_msg_id )
SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , 0 , 20 ) . US , "" , 0 , 20 )	SQLiteCursor var = MessagesStorage . getInstance ( ) . getDatabase . queryFinalized ( String . format ( Locale . US , "" , 0 , 30 ) . US , "" , 0 , 30 )
var . putBoolean ( "" , var )	var . putInt ( "" , var )
var = var . getBoolean ( "" , false )	var = var . getInt ( "" , 0 )
var = false	var = - 1
return var == null || var instanceof TLRPC . TL_userDeleted_old2 || var instanceof TLRPC . TL_userEmpty || ( var . flags & TLRPC . USER_FLAG_DELETED ) != 0	return var == null || var instanceof TLRPC . TL_userDeleted_old2 || var instanceof TLRPC . TL_userEmpty || var . deleted
return var instanceof TLRPC . TL_userContact_old2 || ( var . flags & TLRPC . USER_FLAG_CONTACT ) != 0 || ( var . flags & TLRPC . USER_FLAG_MUTUAL_CONTACT ) != 0	return var instanceof TLRPC . TL_userContact_old2 || var . contact || var . mutual_contact
return var instanceof TLRPC . TL_userSelf_old3 || ( var . flags & TLRPC . USER_FLAG_SELF ) != 0	return var instanceof TLRPC . TL_userSelf_old3 || var . self
MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , 0 , true , false )	MessagesController . getInstance ( ) . markDialogAsRead ( var , var , var , 0 , true , false )
if ( var < var . size ( ) - 1 |= 1 )	if ( var < var . size ( var ) - 1 || ! messagesSearchEndReached [ 0 ] || ! messagesSearchEndReached [ 1 ] |= 1 )
if ( var == null || var . length ( ) == 0 )	if ( var == null || var . length ( var ) == 0 )
if ( var < var . size ( ) )	if ( var < var . size ( var ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , var . get ( var ) . getId , getMask )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , var . getId ( var ) , getMask var , var . getDialogId ( var ) )
var = var . get ( var . size ( ) - 1 ) . getId	MessageObject var = var . get ( var . size ( var ) - 1 )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , var . get ( var ) . getId , getMask )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , var . getId ( var ) , getMask var , var . getDialogId ( var ) )
if ( var . var == 0 )	if ( var . var == 0 && var == var )
if ( var . isEmpty ( ) )	if ( var . isEmpty ( var ) var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , 0 , getMask )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , var . getId ( var ) , getMask var , var . getDialogId ( var ) )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , var . get ( var ) . getId , getMask )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , 0 , getMask var , ( long ) 0 )
if ( var . media != null && var . media . audio != null && var . media . audio . user_id != 0 )	MessagesStorage . addUsersAndChatsFromMessage ( var , var , var )
if ( ! var . contains ( var . media . audio . user_id ) )	MessagesStorage . addUsersAndChatsFromMessage ( var , var , var )
MessageObject var = new MessageObject ( var , var , false )	MessageObject var = new MessageObject ( var , var , var , false )
if ( var != null && ( var . set . flags & 2 ) != 0 )	if ( var != null && var . set . disabled )
var . set . flags = var . flags	var . set . disabled = var . disabled
if ( var != null )	if ( var != null var )
if ( ( var . set . flags & 2 ) == 0 )	if ( ! var . set . disabled )
var . flags &= ~ 2	var . disabled = var == 1
final int var = var ++	final int var = var . getAndIncrement ( )
FileLog . d ( "" , "" + var )	FileLog . d ( "" , "" + var + "" + var )
self_participant = TL_chatParticipant . TLdeserialize ( var , var . readInt32 ( var ) , var )	ChatParticipant var = ChatParticipant . TLdeserialize ( var , var . readInt32 ( var ) , var )
TL_chatParticipant var = TL_chatParticipant . TLdeserialize ( var , var . readInt32 ( var ) , var )	self_participant = ChatParticipant . TLdeserialize ( var , var . readInt32 ( var ) , var )
if ( var )	if ( var == null && var )
TL_chatParticipant var = new TL_chatParticipant	var = new TL_chatParticipant
var . readParams ( var , var )	return TL_messages_affectedMessages . TLdeserialize ( var , var , var )
if ( ( flags & 512 ) != 0 )	if ( ( flags & 64 ) != 0 )
media = MessageMedia . TLdeserialize ( var , var . readInt32 ( var ) , var )	migrated_to = InputChannel . TLdeserialize ( var , var . readInt32 ( var ) , var )
media = new TL_messageMediaEmpty	flags = var . readInt32 ( var )
return TL_messages_affectedHistory . TLdeserialize ( var , var , var )	return Updates . TLdeserialize ( var , var , var )
var . get ( var ) . serializeToStream ( var )	var . writeString ( var )
var . writeBool ( ( flags & var ) != 0 )	unread = ( flags & 1 ) != 0
var . writeBool ( ( flags & var ) != 0 )	out = ( flags & 2 ) != 0
var . writeBool ( ( flags & var ) != 0 )	var . writeBool ( out )
removeFragmentFromStack ( var . get ( var ) )	removeFragmentFromStackInternal ( var . get ( var ) )
public BottomSheet ( Context var )	public BottomSheet ( Context var , boolean var )
if ( Build . VERSION . SDK_INT >= 21 )	if ( Build . VERSION . SDK_INT >= 21 && ! var )
var = new BottomSheet ( var )	var = new BottomSheet ( var , false )
var = new UserCell ( var , 58 )	var = new UserCell ( var , 58 , 1 )
return var != getItemCount	return var != getItemCount || var == 1
final TLRPC . TL_messages_search var = new TLRPC . TL_messages_search ( )	final TLRPC . TL_messages_searchGlobal var = new TLRPC . TL_messages_searchGlobal ( )
var . peer = new TLRPC . TL_inputPeerEmpty ( )	var . offset_peer = new TLRPC . TL_inputPeerEmpty ( )
var . max_id = var . get ( var . size ( ) - 1 ) . getId	MessageObject var = var . get ( var . size ( ) - 1 )
var . filter = new TLRPC . TL_inputMessagesFilterEmpty ( )	var . offset_peer = MessagesController . getInputPeer ( var )
if ( var . max_id == 0 )	if ( var . offset_id == 0 )
return var . get ( var - 1 ) . object	TLObject var = var . get ( var - 1 ) . var
if ( var instanceof TLRPC . TL_chatFull )	if ( var . participants != null )
var . add ( MessagesController . getInstance ( ) . getUser ( var . getValue ( ) . user_id ) . getValue ( ) . user_id )	var . add ( MessagesController . getInstance ( ) . getUser ( var . user_id ) . user_id )
if ( var != null && var != 1 )	if ( var . get ( var ) != null )
public SearchAdapter ( Context var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var , boolean var , boolean var )	public SearchAdapter ( Context var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var , boolean var , boolean var , boolean var )
queryServerSearch ( null , var )	queryServerSearch ( null , var , var )
queryServerSearch ( var , var )	queryServerSearch ( var , var , var )
if ( var . id == UserConfig . getClientUserId ( var ) || var && ( var . flags & TLRPC . USER_FLAG_MUTUAL_CONTACT ) == 0 )	if ( var . id == UserConfig . getClientUserId ( var ) || var && ! var . mutual_contact )
var = new UserCell ( var , 1 )	var = new UserCell ( var , 1 , 1 )
var . flags = TLRPC . MESSAGE_FLAG_OUT	var . out = true
var = new UserCell ( var , 1 )	var = new UserCell ( var , 1 , 0 )
var = LocaleController . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )	var = LocaleController . getInstance ( ) . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )
var = LocaleController . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )	var = LocaleController . getInstance ( ) . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )
if ( var . getLineCount ( ) > 0 = 0 )	if ( var != null && var . getLineCount ( ) > 0 = 0 )
if ( var >= var && var <= var + Math . max ( var , var ) && var >= var && var <= var + AndroidUtilities . dp ( 35 ) )	if ( var . isReply ( ) && var >= var && var <= var + Math . max ( var , var ) && var >= var && var <= var + AndroidUtilities . dp ( 35 ) )
if ( var . getLineCount ( ) > 0 = var )	if ( var != null && var . getLineCount ( ) > 0 = var )
if ( var . getLineCount ( ) > 0 )	if ( var != null && var . getLineCount ( ) > 0 )
if ( var == 0 && var == 0 )	if ( var == 0 )
var = new TextPaint ( TextPaint . ANTI_ALIAS_FLAG )	var = getResources . getDrawable ( R . drawable . bot_list )
var . setTextSize ( AndroidUtilities . dp ( 17 ) )	var = AndroidUtilities . dp ( 16.5f )
var . setColor ( 0xff4d83b3 )	var = getResources . getDrawable ( R . drawable . bot_list )
var . setTypeface ( AndroidUtilities . getTypeface ( "" ) )	var = getResources . getDrawable ( R . drawable . bot_list )
if ( var . id < 0 || var instanceof TLRPC . TL_channel || var instanceof TLRPC . TL_channelForbidden )	if ( var . id < 0 || ChatObject . isChannel ( var ) && ! var . megagroup )
var = ( var . flags & TLRPC . CHAT_FLAG_IS_VERIFIED ) != 0	var = var . verified
var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var , var ) , var , var , AndroidUtilities . FLAG_TAG_COLOR ) . format ( "" , var , var ) , var , var , AndroidUtilities . FLAG_TAG_COLOR , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )	var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var . replace ( "" , "" ) , "" , var ) , var . replace ( "" , "" ) , "" , var , AndroidUtilities . FLAG_TAG_COLOR ) . format ( "" , var . replace ( "" , "" ) , "" , var ) , var . replace ( "" , "" ) , "" , var , AndroidUtilities . FLAG_TAG_COLOR , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )
var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var , var . messageText ) , var , var . messageText , AndroidUtilities . FLAG_TAG_COLOR ) . format ( "" , var , var . messageText ) , var , var . messageText , AndroidUtilities . FLAG_TAG_COLOR , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )	var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var . replace ( "" , "" ) , "" , var . messageText ) , var . replace ( "" , "" ) , "" , var . messageText , AndroidUtilities . FLAG_TAG_COLOR ) . format ( "" , var . replace ( "" , "" ) , "" , var . messageText ) , var . replace ( "" , "" ) , "" , var . messageText , AndroidUtilities . FLAG_TAG_COLOR , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )
var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var , var ) , var , var , AndroidUtilities . FLAG_TAG_COLOR ) . format ( "" , var , var ) , var , var , AndroidUtilities . FLAG_TAG_COLOR , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )	var = Emoji . replaceEmoji ( AndroidUtilities . replaceTags ( String . format ( "" , var . replace ( "" , "" ) , "" , var ) , var . replace ( "" , "" ) , "" , var , AndroidUtilities . FLAG_TAG_COLOR ) . format ( "" , var . replace ( "" , "" ) , "" , var ) , var . replace ( "" , "" ) , "" , var , AndroidUtilities . FLAG_TAG_COLOR , var . getFontMetricsInt ( ) , AndroidUtilities . dp ( 20 ) , false )
if ( var != var . id || var != null && var . getId ( ) != var . top_message || var != var . unread_count )	if ( var != var . id || var != null && var . getId ( ) != var . top_message || var != var . unread_count || var == null && MessagesController . getInstance ( ) . dialogMessage . get ( var . id ) != null )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) && ! var . megagroup )
var = ( var . flags & TLRPC . CHAT_FLAG_IS_VERIFIED ) != 0	var = var . verified
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot )
if ( var != null )	if ( var != null && ! var )
var . setText ( String . format ( "" , AndroidUtilities . formatFileSize ( var . messageOwner . media . var . size ) . messageOwner . media . var . size , LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . formatterDay . format ( new Date ( var ) ) Date ( var ) ) , R . string . formatDateAtTime , LocaleController . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . formatterDay . format ( new Date ( var ) ) Date ( var ) ) , AndroidUtilities . formatFileSize ( var . messageOwner . media . var . size ) . messageOwner . media . var . size , LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . formatterDay . format ( new Date ( var ) ) Date ( var ) ) , R . string . formatDateAtTime , LocaleController . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . formatterDay . format ( new Date ( var ) ) Date ( var ) )	var . setText ( String . format ( "" , AndroidUtilities . formatFileSize ( var . messageOwner . media . var . size ) . messageOwner . media . var . size , LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . getInstance ( var ) . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . getInstance ( var ) . formatterDay . format ( new Date ( var ) ) Date ( var ) ) , R . string . formatDateAtTime , LocaleController . getInstance ( var ) . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . getInstance ( var ) . formatterDay . format ( new Date ( var ) ) Date ( var ) ) , AndroidUtilities . formatFileSize ( var . messageOwner . media . var . size ) . messageOwner . media . var . size , LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . getInstance ( var ) . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . getInstance ( var ) . formatterDay . format ( new Date ( var ) ) Date ( var ) ) , R . string . formatDateAtTime , LocaleController . getInstance ( var ) . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . getInstance ( var ) . formatterDay . format ( new Date ( var ) ) Date ( var ) )
if ( ( var . var . flags & 2 ) != 0 )	if ( var . var . disabled )
public UserCell ( Context var , int var )	public UserCell ( Context var , int var , int var )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot )
if ( ( var . flags & TLRPC . USER_FLAG_BOT_READING_HISTORY ) != 0 )	if ( var . bot_chat_history )
var . width = LayoutHelper . MATCH_PARENT	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 20 , 0 , 20 , 14 ) . MATCH_PARENT , 36 , 20 , 0 , 20 , 14 )
var . height = AndroidUtilities . dp ( 36 )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 1 , 24 , - 17.5f , 24 , 0 ) . MATCH_PARENT , 1 , 24 , - 17.5f , 24 , 0 )
var . rightMargin = AndroidUtilities . dp ( 20 )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , 0 , 20 , 0 , 0 ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , 0 , 20 , 0 , 0 )
var . leftMargin = AndroidUtilities . dp ( 24 )	var . addView ( var , LayoutHelper . createLinear ( 55 , 36 , - 9 , 0 , 16 , 0 ) , 36 , - 9 , 0 , 16 , 0 )
var . rightMargin = AndroidUtilities . dp ( 24 )	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 0 , 24 , 0 ) . MATCH_PARENT , 36 , 0 , 0 , 24 , 0 )
var . width = LayoutHelper . MATCH_PARENT	if ( var . charAt ( var ) == ' ' && var > 0 = 2 )
var . topMargin = AndroidUtilities . dp ( 20 )	var = var - 1
var . setLayoutParams ( var )	int var = var . getSelectionStart ( )
var [ 0 ] = new InputFilter . LengthFilter ( 4 )	var [ 0 ] = new InputFilter . LengthFilter ( 5 )
var = ( LayoutParams ) var . getLayoutParams ( )	String var = var . getText ( ) . toString
var . setLayoutParams ( var )	for ( int var = 0 ; var < var . length ( ) ; var ++ )
if ( var != null )	if ( var != - 1 )
if ( var != - 1 )	if ( var != null )
var = new EditText ( var )	var = new HintEditText ( var )
var . rightMargin = AndroidUtilities . dp ( 24 )	for ( int var = 0 ; var < var . length ( ) ; var ++ )
var . setLayoutParams ( var )	for ( int var = 0 ; var < var . length ( ) ; var ++ )
if ( var == 1 && var == 0 && var . length ( ) > 1 )	if ( var < var . length ( ) )
String var = var . toString ( )	String var = var . substring ( var , var + 1 )
if ( ! var . contains ( var ) )	if ( var . charAt ( var ) == ' ' )
StringBuilder var = new StringBuilder ( var )	StringBuilder var = new StringBuilder ( var . length ( ) )
var = var . substring ( var , var + 1 )	String var = var . substring ( var , var + 1 )
var . delete ( Math . max ( 0 , var - var ) , var - var , var + 1 )	var . insert ( var , ' ' )
var . setText ( "" )	var . setText ( var )
var = ( LayoutParams ) var . getLayoutParams ( )	var . insert ( var , ' ' )
var . topMargin = AndroidUtilities . dp ( 28 )	var . onTextChange ( )
if ( ! var . equals ( var ) )	if ( var . length ( ) != 0 )
var = PhoneFormat . getInstance ( ) . format ( var . getText ( ) . toString ) . trim	String var = var . getText ( ) . toString
var . setText ( var . substring ( var ) . trim )	AndroidUtilities . showKeyboard ( var )
MessagesController . getInstance ( ) . addUsersToChannel ( var , var )	MessagesController . getInstance ( ) . addUsersToChannel ( var , var , null )
var = new SearchAdapter ( var , null , false , false , false )	var = new SearchAdapter ( var , null , false , false , false , false )
MessagesStorage . getInstance ( ) . loadChatInfo ( var , var , false )	MessagesStorage . getInstance ( ) . loadChatInfo ( var , var , false , false )
var = ( var . flags & TLRPC . CHAT_FLAG_IS_BROADCAST ) == 0	var = ! var . broadcast
boolean var = ( var . flags & TLRPC . CHAT_FLAG_IS_BROADCAST ) == 0	boolean var = ! var . broadcast
if ( var != null && ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 )	if ( var . creator )
if ( var != null )	if ( var == null )
AlertsCreator . showAddUserAlert ( var . text , ChannelUsersActivity . this )	AlertsCreator . showAddUserAlert ( var . text , ChannelUsersActivity . this , ! var )
if ( var != null )	if ( var != null && ! var )
if ( var . isEmpty ( ) && var == 0 || var )	if ( var . isEmpty ( ) && var == 0 || var && ! var )
var = new UserCell ( var , 1 )	var = new UserCell ( var , 1 , 0 )
( ( TextInfoPrivacyCell ) var ) . setText ( LocaleController . getString ( "" , R . string . UnblockText ) , R . string . UnblockText )	( ( TextInfoPrivacyCell ) var ) . setText ( String . format ( "" , LocaleController . getString ( "" , R . string . NoBlockedGroup ) , R . string . NoBlockedGroup , LocaleController . getString ( "" , R . string . UnblockText ) , R . string . UnblockText ) , LocaleController . getString ( "" , R . string . NoBlockedGroup ) , R . string . NoBlockedGroup , LocaleController . getString ( "" , R . string . UnblockText ) , R . string . UnblockText )
var = Integer . MIN_VALUE	maxMessageId [ 0 ] = maxMessageId [ 1 ] = Integer . MIN_VALUE
var = Integer . MAX_VALUE	minMessageId [ 0 ] = minMessageId [ 1 ] = Integer . MAX_VALUE
if ( var != 0 )	if ( var != 0 var )
for ( int var = 0 ; var < var . participants . participants . size ( ) ; var ++ )	for ( int var = 0 ; var < var . participants . participants . size ( var ) ; var ++ )
TLRPC . TL_chatParticipant var = var . participants . participants . get ( var )	TLRPC . ChatParticipant var = var . participants . participants . get ( var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var . user_id )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var . bot )
var . clear ( )	var [ var ] . clear var
var . clear ( )	var [ var ] . clear var
MessageObject var = var . get ( var )	MessageObject var = var [ var ] . get ( var )
var . clear ( )	var [ var ] . clear var
var . clear ( )	var [ var ] . clear var
if ( getParentActivity == null )	if ( getParentActivity var == null )
AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity )	AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity var )
if ( ! var . isEmpty ( ) )	if ( ! var . isEmpty ( var ) )
MessageObject var = var . get ( var . get ( 0 ) )	MessageObject var = var [ var ] . get ( var . get ( 0 ) )
showDialog ( var . create ( ) )	showDialog ( var . create ( var ) )
showDialog ( AndroidUtilities . buildTTLAlert ( getParentActivity , var )  , var . create )	showDialog ( AndroidUtilities . buildTTLAlert ( getParentActivity var , var ) var , var . create var )
if ( var != var )	if ( var var )
if ( ChatObject . isNotInChat ( var ) )	if ( ChatObject . isNotInChat ( var ) var )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 , false )	MessagesController . getInstance ( var ) . deleteDialog ( var , true )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 , false )	MessagesController . getInstance ( var ) . deleteDialog ( var , false )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 , true )	MessagesController . getInstance ( var ) . deleteDialog ( var , false )
if ( var . size ( ) == 1 )	if ( var == null && var [ var ] . size var == 1 )
var . clear ( )	var [ var ] . clear var
var . clear ( )	var [ var ] . clear var
MessagesSearchQuery . searchMessagesInChat ( null , var , classGuid , 1 )	MessagesSearchQuery . searchMessagesInChat ( null , var , var , classGuid , 2 )
MessagesSearchQuery . searchMessagesInChat ( null , var , classGuid , 2 )	MessagesSearchQuery . searchMessagesInChat ( null , var , var , classGuid , 1 )
if ( var == 0 || ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 || var instanceof TLRPC . TL_chatForbidden || var != null && var . participants instanceof TLRPC . TL_chatParticipantsForbidden )	if ( var == 0 || var . deactivated || var . left || var instanceof TLRPC . TL_chatForbidden || var != null && var . participants instanceof TLRPC . TL_chatParticipantsForbidden )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) && ! var . megagroup && ! ( var instanceof TLRPC . TL_channelForbidden ) var )
MessagesSearchQuery . searchMessagesInChat ( var . getText ( ) . toString , var , classGuid , 0 )	MessagesSearchQuery . searchMessagesInChat ( var . getText ( var ) . toString var , var , var , classGuid , 0 )
if ( var != 0 )	if ( var != 0 && ! var . megagroup )
if ( var != null && var == null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var == null && var . bot )
var . measure ( MeasureSpec . makeMeasureSpec ( var , MeasureSpec . EXACTLY ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( var . getLayoutParams ( ) . height , MeasureSpec . EXACTLY ) . getLayoutParams ( ) . height , MeasureSpec . EXACTLY )	var . measure ( MeasureSpec . makeMeasureSpec ( var , MeasureSpec . EXACTLY ) , MeasureSpec . EXACTLY , MeasureSpec . makeMeasureSpec ( var . getLayoutParams ( var ) . height , MeasureSpec . EXACTLY ) . getLayoutParams ( var ) . height , MeasureSpec . EXACTLY )
if ( var . size ( ) != 0 )	if ( var . size ( var ) != 0 var )
if ( var + var == var && var )	if ( var + var == var && forwardEndReached [ 0 ] )
var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT , 0.5f , Gravity . LEFT | Gravity . TOP , 0 , 0 , 0 , AndroidUtilities . dp ( 1 ) ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT , 0.5f , Gravity . LEFT | Gravity . TOP , 0 , 0 , 0 , AndroidUtilities . dp ( 1 ) )	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT , 0.5f , Gravity . LEFT | Gravity . TOP ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT , 0.5f , Gravity . LEFT | Gravity . TOP )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot var )
if ( var != null && var != null )	if ( var != null && var . bot && var != null )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) && ! var . megagroup && ! ( var instanceof TLRPC . TL_channelForbidden ) var )
if ( var && var . isEmpty ( ) )	if ( var && var . isEmpty ( var ) var )
var . setButtons ( var )	var . setButtons ( var , false )
int var = var . length ( )	int var = var . findFirstVisibleItemPosition ( var )
for ( int var = 0 ; var < var ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var = 0	var = true
if ( var instanceof String )	if ( var instanceof String var )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var . append ( LocaleController . formatPluralString ( "" , var . size ( ) - 1 ) , var . size ( ) - 1 )	var . append ( LocaleController . formatPluralString ( "" , var . size ( var ) - 1 ) , var . size ( var ) - 1 )
if ( var == - 1 || var == 0 )	if ( var == - 1 || var == 0 || var == 10 || var == 11 var )
var . showTopView ( var )	var . showTopView ( var , var )
var . clear ( )	var . clear ( var )
var = Integer . MIN_VALUE	var [ var ] . clear var
var = 0	minDate [ var ] = 0
var = true	endReached [ var ] = false
var = false	cacheEndReached [ var ] = false
var = false	forwardEndReached [ var ] = true
if ( var && var == 0 && var == 0 )	if ( forwardEndReached [ 0 ] && var == 0 && var == 0 var )
MessageObject var = var . get ( var )	MessageObject var = var [ var ] . get ( var )
var . scrollToPositionWithOffset ( var . size ( ) - var . indexOf ( var ) , - var . getPaddingTop ( ) - AndroidUtilities . dp ( 7 ) + var )	var . scrollToPositionWithOffset ( var . messagesStartRow + var . size ( var ) - var . indexOf ( var ) - 1 , - var . getPaddingTop ( var ) - AndroidUtilities . dp ( 7 ) + var )
var . clear ( )	clearChatData var
var . clear ( )	var . add ( var )
if ( var == null )	if ( var == null var )
var = Integer . MAX_VALUE	minMessageId [ var ] = Integer . MAX_VALUE
var = Integer . MIN_VALUE	maxDate [ var ] = Integer . MIN_VALUE
var = Integer . MIN_VALUE	maxMessageId [ var ] = Integer . MIN_VALUE
var = Integer . MAX_VALUE	maxMessageId [ var ] = Integer . MAX_VALUE
var = Integer . MIN_VALUE	minMessageId [ var ] = Integer . MIN_VALUE
if ( var . containsKey ( var . getId ( ) ) )	if ( var [ var ] . containsKey ( var . getId ( var ) ) var )
var . remove ( var . getId ( ) )	var [ var ] . remove ( var . getId ( var ) )
var . remove ( var . getId ( ) )	if ( var [ var ] . containsKey ( var . getId ( var ) ) var )
var . put ( var . getId ( ) , var )	var [ var ] . put ( var . getId ( var ) , var )
var . put ( var . getId ( ) , var )	var [ var ] . put ( var . getId ( var ) , var )
if ( actionBar . isActionModeShowed ( ) )	if ( actionBar . isActionModeShowed ( var ) )
if ( var . isEmpty ( ) )	if ( var [ 0 ] . isEmpty var && var [ 1 ] . isEmpty var var )
if ( var || var != null && ( ChatObject . isNotInChat ( var ) || ChatObject . isChannel ( var ) && ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) == 0 && ( var . flags & TLRPC . CHAT_FLAG_USER_IS_EDITOR ) == 0 ) = false )	if ( var || var != null && ( ChatObject . isNotInChat ( var ) || ChatObject . isChannel ( var ) && ! var . creator && ! var . editor && ! var . megagroup ) = false )
if ( ! var . isEmpty ( ) )	if ( ! var [ 0 ] . isEmpty var || ! var [ 1 ] . isEmpty var )
if ( var == null || var == null || var != null || ( var . flags & TLRPC . USER_FLAG_BOT ) == 0 )	if ( var == null || var == null || var != null || ! var . bot )
if ( var == null || var . length ( ) == 0 || ChatObject . isChannel ( var ) )	if ( var == null || var . length ( var ) == 0 || ChatObject . isChannel ( var ) && ! var . megagroup var )
if ( ( var . flags & TLRPC . CHAT_FLAG_IS_BROADCAST ) == 0 )	if ( ! var . broadcast && ! var . megagroup && ! ( var instanceof TLRPC . TL_channelForbidden ) var )
if ( var . getVisibility ( ) != View . VISIBLE )	if ( var != null && var . getVisibility ( var ) != View . VISIBLE )
if ( var != null && var . participants_count != 0 )	if ( var != null && var . participants_count != 0 var )
if ( ( var . flags & TLRPC . CHAT_FLAG_IS_PUBLIC ) != 0 )	if ( ( var . flags & TLRPC . CHAT_FLAG_IS_PUBLIC ) != 0 var )
var . setText ( LocaleController . getString ( "" , R . string . ChannelPublic ) , R . string . ChannelPublic . toLowerCase )	var . setText ( LocaleController . getString ( "" , R . string . ChannelPublic ) , R . string . ChannelPublic . toLowerCase var )
if ( var . getVisibility ( ) != View . GONE )	if ( var != null && var . getVisibility ( var ) != View . GONE )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot )
if ( var == var )	if ( var == classGuid )
var = var == 0 && var == 0	forwardEndReached [ var ] = var == 0 && var == 0
if ( ! var )	if ( ! forwardEndReached [ var ] )
var . clear ( )	var [ var ] . clear var
if ( var == null )	if ( var == null var )
var = Integer . MAX_VALUE	minMessageId [ var ] = Integer . MAX_VALUE
var = Integer . MIN_VALUE	maxDate [ var ] = Integer . MIN_VALUE
var = Integer . MIN_VALUE	maxMessageId [ var ] = Integer . MIN_VALUE
var = Integer . MAX_VALUE	maxMessageId [ var ] = Integer . MAX_VALUE
var = Integer . MIN_VALUE	minMessageId [ var ] = Integer . MIN_VALUE
var = 0	minDate [ var ] = 0
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
if ( var . containsKey ( var . getId ( ) ) )	if ( var [ 0 ] . containsKey ( var . getId ( var ) ) )
if ( var == 0 || var . messageOwner . date < var )	if ( minDate [ 0 ] == 0 || var . messageOwner . date < minDate [ 0 ] )
var = var . messageOwner . date	minDate [ 0 ] = var . messageOwner . date
var . put ( var . getId ( ) , var )	var [ 0 ] . put ( var . getId ( var ) , var )
if ( var . getId ( ) == var = true )	if ( var . getId ( var ) == var )
var = true	forwardEndReached [ var ] = true
if ( var . size ( ) != var && ! var )	if ( var . size ( var ) != var && ! var )
if ( var = true )	if ( var var )
if ( var != null || var = true )	if ( var != null || var )
var = true	endReached [ var ] = true
var = true	cacheEndReached [ var ] = true
var = true	endReached [ var ] = true
int var = var . findLastVisibleItemPosition ( )	int var = var . findLastVisibleItemPosition ( var )
if ( var && var . size ( ) > 0 )	if ( var && var . size ( var ) > 0 )
if ( var != 0 )	if ( var != 0 var )
if ( var . isEmpty ( ) && var == null && var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && var == null )	if ( var . isEmpty ( var ) && var == null && var != null && var . bot && var == null )
if ( var == 0 && var != null && ! var )	if ( var == 0 && var != null && ! endReached [ 0 ] var )
var . setEmptyView ( null )	if ( var != null )
if ( ( var & MessagesController . UPDATE_MASK_NAME ) != 0 || ( var & MessagesController . UPDATE_MASK_CHAT_NAME ) != 0 )	if ( ( var & MessagesController . UPDATE_MASK_NAME ) != 0 || ( var & MessagesController . UPDATE_MASK_CHAT_NAME ) != 0 var )
if ( var != updateOnlineCount = true )	if ( var != updateOnlineCount var = true )
if ( ! var )	if ( ! forwardEndReached [ 0 ] var )
if ( var . containsKey ( var . getId ( ) ) )	if ( var [ var ] . containsKey ( var . getId ( var ) ) )
var = Math . max ( var . getId ( ) , var )	var = Math . max ( var . getId ( var ) , var )
if ( var . containsKey ( var . getId ( ) ) )	if ( var [ 0 ] . containsKey ( var . getId ( var ) ) )
if ( var == 0 || var . messageOwner . date < var )	if ( minDate [ var ] == 0 || var . messageOwner . date < minDate [ var ] )
var = var . messageOwner . date	minDate [ var ] = var . messageOwner . date
var . put ( var . getId ( ) , var )	var [ var ] . put ( var . getId ( var ) , var )
if ( var ++ )	if ( endReached [ 0 ] ++ )
if ( var == var || var )	if ( var >= var || var var )
var = var	var = maxDate [ 0 ]
var = var	var = minMessageId [ 0 ]
if ( var == 0 || var != var . var )	if ( var == var . var = 0 )
if ( ! var && ! var )	if ( ! endReached [ 0 ] && ! var var )
if ( var == null )	if ( var == null var )
var = Integer . MIN_VALUE	maxMessageId [ 0 ] = maxMessageId [ 1 ] = Integer . MIN_VALUE
if ( var == null && var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && var == null )	if ( var == null && var != null && var . bot && var == null )
MessageObject var = var . get ( var )	MessageObject var = var [ 0 ] . get ( var )
if ( ! var . equals ( var ) && var . containsKey ( var ) )	if ( ! var . equals ( var ) && var [ 0 ] . containsKey ( var ) )
MessageObject var = var . remove ( var )	MessageObject var = var [ 0 ] . get ( var )
var = var . media != null && var . messageOwner . media != null && ! var . media . getClass ( ) . equals ( var . messageOwner . media . getClass ( ) )	var = var . media != null && var . messageOwner . media != null && ! var . media . getClass ( var ) . equals ( var . messageOwner . media . getClass ( var ) )
var . remove ( var )	var [ 0 ] . remove ( var )
var . put ( var , var )	var [ 0 ] . put ( var , var )
MessageObject var = var . get ( var )	MessageObject var = var [ 0 ] . remove ( var )
MessageObject var = var . get ( var )	MessageObject var = var [ 0 ] . get ( var )
TLRPC . TL_chatParticipant var = var . participants . participants . get ( var )	TLRPC . ChatParticipant var = var . participants . participants . get ( var )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var . bot )
if ( var . getMessageObject ( ) != null && var . getMessageObject ( ) . getId == var )	if ( var . getMessageObject ( var ) != null && var . getMessageObject ( var ) . getId var == var )
var . clear ( )	var [ var ] . clear var
if ( var == null )	if ( var == null var )
var = Integer . MAX_VALUE	minMessageId [ var ] = Integer . MAX_VALUE
var = Integer . MIN_VALUE	maxDate [ var ] = Integer . MIN_VALUE
var = Integer . MIN_VALUE	maxMessageId [ var ] = Integer . MIN_VALUE
var = Integer . MAX_VALUE	maxMessageId [ var ] = Integer . MAX_VALUE
var = Integer . MIN_VALUE	minMessageId [ var ] = Integer . MIN_VALUE
var = 0	minDate [ var ] = 0
var . clear ( )	var [ var ] . clear var
var . clear ( )	var [ var ] . clear var
if ( var == null && var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && var == null )	if ( var == null && var != null && var . bot && var == null )
var = true	endReached [ var ] = false
var = false	cacheEndReached [ var ] = false
var = false	forwardEndReached [ var ] = true
MessageObject var = var . get ( var . getId ( ) )	MessageObject var = var [ var ] . get ( var . getId ( var ) )
MessageObject var = var . get ( var )	MessageObject var = var [ 0 ] . get ( var )
if ( var . getMessageObject ( ) != null )	if ( var . getMessageObject ( var ) != null )
MessageObject var = var . get ( var . getId ( ) )	MessageObject var = var [ 0 ] . get ( var . getId ( var ) )
if ( var == ( long ) var [ 0 ] )	if ( var == NotificationCenter . replaceMessagesObjects )
MessageObject var = var . get ( var . getId ( ) )	MessageObject var = var [ 0 ] . get ( var . getId ( var ) )
var . put ( var . getId ( ) , var )	var [ var ] . put ( var . getId ( var ) , var )
if ( ChatObject . isChannel ( var )  )	if ( ChatObject . isChannel ( var ) var )
var . messageOwner . media = new TLRPC . TL_messageMediaWebPage ( )	var . messageOwner . media = new TLRPC . TL_messageMediaWebPage ( var )
MessageObject var = var . get ( ( int ) var )	MessageObject var = var [ 0 ] . get ( ( int ) var )
var . setContentIsRead ( )	var . setContentIsRead ( var )
if ( var )	if ( var var )
if ( var != null )	if ( var != null && ! var var )
if ( var . messageOwner . reply_markup instanceof TLRPC . TL_replyKeyboardForceReply )	if ( var . messageOwner . reply_markup instanceof TLRPC . TL_replyKeyboardForceReply var )
if ( var . getInt ( "" + var , 0 ) != var . getId ( ) && ( var == null || var . getFieldText ( ) == null ) )	if ( var . getInt ( "" + var , 0 ) != var . getId ( var ) && ( var == null || var . getFieldText ( var ) == null ) )
MessageObject var = var . get ( var )	MessageObject var = var [ 0 ] . get ( var )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) && ! var . megagroup && ! ( var instanceof TLRPC . TL_channelForbidden ) var )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot var )
if ( var != null )	if ( var != null && var . bot )
if ( var != null )	if ( var != null && var . bot var )
if ( var . messageOwner . action . user_id == UserConfig . getClientUserId ( ) )	if ( var . messageOwner . action . user_id == UserConfig . getClientUserId ( var ) || var . messageOwner . action . users . contains ( UserConfig . getClientUserId ( var ) ) )
if ( var != null && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) != null = null )	if ( var != null && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) != null = null )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) == 0 && var . id / 1000 != 333 && var . id / 1000 != 777 && ! UserObject . isDeleted ( var ) && ! var && ! ContactsController . getInstance ( ) . isLoadingContacts && ( var . phone == null || var . phone . length ( ) == 0 || ContactsController . getInstance ( ) . contactsDict . get ( var . id ) == null ) )	if ( ! var . bot && var . id / 1000 != 333 && var . id / 1000 != 777 && ! UserObject . isDeleted ( var ) && ! var && ! ContactsController . getInstance ( var ) . isLoadingContacts var && ( var . phone == null || var . phone . length ( var ) == 0 || ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) == null ) )
if ( var . getVisibility ( ) != View . VISIBLE )	if ( var . getTag ( var ) != null )
if ( var . getVisibility ( ) != View . GONE )	if ( var . getVisibility ( var ) != View . GONE )
if ( var != null && ! ( var instanceof TLRPC . TL_encryptedChat ) || var . id / 1000 == 333 || var . id / 1000 == 777 || UserObject . isDeleted ( var ) || ContactsController . getInstance ( ) . isLoadingContacts || ( var . phone != null && var . phone . length ( ) != 0 && ContactsController . getInstance ( ) . contactsDict . get ( var . id ) != null && ( ContactsController . getInstance ( ) . contactsDict . size ( ) != 0 || ! ContactsController . getInstance ( ) . isLoadingContacts ) ) )	if ( var != null && ! ( var instanceof TLRPC . TL_encryptedChat ) || var . id / 1000 == 333 || var . id / 1000 == 777 || UserObject . isDeleted ( var ) || ContactsController . getInstance ( var ) . isLoadingContacts var || ( var . phone != null && var . phone . length ( var ) != 0 && ContactsController . getInstance ( var ) . contactsDict . get ( var . id ) != null && ( ContactsController . getInstance ( var ) . contactsDict . size ( var ) != 0 || ! ContactsController . getInstance ( var ) . isLoadingContacts var ) ) var )
var = Math . max ( 0 , ( var . getHeight ( ) - var . getApproximateHeight ( ) ) / 2 )	var = Math . max ( 0 , ( var . getHeight ( var ) - var . getApproximateHeight ( var ) ) / 2 )
MessagesController . getInstance ( ) . markDialogAsRead ( var , var . get ( 0 ) . getId , var , 0 , var , true , false )	MessagesController . getInstance ( var ) . markDialogAsRead ( var , var . get ( 0 ) . getId var , var , var , true , false )
var . edit ( ) . remove ( "" + var ) . commit	var . edit ( var ) . remove ( "" + var ) . commit var
ArrayList < Long > var = new ArrayList	ArrayList < Long > var = new ArrayList var ( var )
FrameLayout . LayoutParams var = ( FrameLayout . LayoutParams ) var . getLayoutParams ( )	FrameLayout . LayoutParams var = ( FrameLayout . LayoutParams ) var . getLayoutParams ( var )
if ( var != null )	if ( var != null var )
var . clear ( )	var [ var ] . clear var
var . clear ( )	var [ var ] . clear var
if ( var || var != null && ( ChatObject . isNotInChat ( var ) || ChatObject . isChannel ( var ) && ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) == 0 && ( var . flags & TLRPC . CHAT_FLAG_USER_IS_EDITOR ) == 0 ) = false )	if ( var == 1 && var . getDialogId ( var ) == var || var . getId ( var ) < 0 || var || var != null && ( ChatObject . isNotInChat ( var ) || ChatObject . isChannel ( var ) && ! var . creator && ! var . editor && ! var . megagroup ) = false )
AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity )	AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity var )
if ( var != 0 && ( var != null || ! var . isEmpty ( ) ) )	if ( var != 0 && ( var != null || ! var [ 0 ] . isEmpty var || ! var [ 1 ] . isEmpty var ) )
if ( var != null )	if ( var != null var )
MessageObject var = var . get ( var )	MessageObject var = var [ var ] . get ( var )
var . clear ( )	var [ var ] . clear var
var . clear ( )	var [ var ] . clear var
showReplyPanel ( true , null , var , null , false , AndroidUtilities . isTablet ( ) )	showReplyPanel ( true , null , var , null , false , AndroidUtilities . isTablet ( var ) )
var . clear ( )	var [ var ] . clear var
var . clear ( )	var [ var ] . clear var
if ( actionBar . isActionModeShowed ( ) )	if ( actionBar . isActionModeShowed ( var ) var )
MessagesSearchQuery . searchMessagesInChat ( var , var , classGuid , 0 )	MessagesSearchQuery . searchMessagesInChat ( var , var , var , classGuid , 0 )
var = var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0	var = var != null && var . bot
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var != null && var . bot var )
var . setCommand ( var , var , var )	var . setCommand ( var , var , var , var != null && var . megagroup )
PhotoViewer . getInstance ( ) . openPhoto ( var , ChatActivity . this )	PhotoViewer . getInstance ( var ) . openPhoto ( var , 0 , 0 , ChatActivity . this )
if ( var == null || var . length ( ) == 0 = null )	if ( var == null || var . length ( var ) == 0 = null )
getParentActivity . startActivityForResult ( var , 500 )	getParentActivity var . startActivityForResult ( var , 500 )
if ( getParentActivity == null || var . messageOwner . media . phone_number == null || var . messageOwner . media . phone_number . length ( ) == 0 )	if ( getParentActivity var == null || var . messageOwner . media . phone_number == null || var . messageOwner . media . phone_number . length ( var ) == 0 )
AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity )	AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity var )
PhotoViewer . getInstance ( ) . setParentActivity ( getParentActivity )	PhotoViewer . getInstance ( var ) . setParentActivity ( getParentActivity var )
var = ( var . flags & 1 ) == 0	var = ! var . resize
if ( ! var )	if ( ! var || var )
if ( ! var )	if ( ! var || var )
var = ChatObject . isChannel ( var ) && ( ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 || ( var . flags & TLRPC . CHAT_FLAG_USER_IS_EDITOR ) != 0 )	var = ChatObject . isChannel ( var ) && ( var . creator || var . editor ) && ! var . megagroup
var = var && ( var . flags & TLRPC . CHAT_FLAG_IS_BROADCAST ) == 0	var = var && ! var . broadcast
String var = var . trim ( )	var = var . trim ( )
if ( var != 1 && var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && ! var . contains ( "" ) )	if ( ( var != 1 || var ) && var != null && var . bot && ! var . contains ( "" ) )
if ( var != null var . messageOwner . reply_markup . flags & 2 ) != 0 )	if ( var != null . messageOwner . reply_markup . single_use )
if ( ( var . messageOwner . reply_markup . flags & 2 ) != 0 )	if ( var . messageOwner . reply_markup . single_use )
if ( var != var && ( var . flags & 2 ) != 0 )	if ( var != var && var . single_use )
if ( ( var . set . flags & 2 ) != 0 || var . documents == null || var . documents . isEmpty ( var ) )	if ( var . set . disabled || var . documents == null || var . documents . isEmpty ( var ) )
var . setDuration ( 300 )	var . setDuration ( 200 )
return ( var . bottom - var . top ) - var	int var = ( var . bottom - var . var )
var . setBackgroundColor ( 0xffcdcdcd )	var . setBackgroundResource ( R . drawable . header_shadow )
addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 1 , Gravity . TOP | Gravity . LEFT , 0 , 40 , 0 , 0 ) . MATCH_PARENT , 1 , Gravity . TOP | Gravity . LEFT , 0 , 40 , 0 , 0 )	addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 3 , Gravity . TOP | Gravity . LEFT , 0 , 40 , 0 , 0 ) . MATCH_PARENT , 3 , Gravity . TOP | Gravity . LEFT , 0 , 40 , 0 , 0 )
var = new SearchAdapter ( var , var , var , false , false )	var = new SearchAdapter ( var , var , var , false , false , var )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && ( var . flags & TLRPC . USER_FLAG_BOT_CANT_JOIN_GROUP ) != 0 )	if ( var . bot && var . bot_nochats )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) == 0 && var )	if ( ! var . bot && var )
MessagesController . getInstance ( ) . loadDialogs ( 0 , 0 , 0 , 100 , true )	MessagesController . getInstance ( ) . loadDialogs ( 0 , 100 , true )
if ( var != null )	if ( var != null && var . getAdapter ( ) != var )
if ( var == null || ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) == 0 )	if ( var == null || ! var . creator var )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 , false )	MessagesController . getInstance ( ) . deleteDialog ( var , false )
MessagesController . getInstance ( ) . deleteDialog ( var , 0 , true )	MessagesController . getInstance ( ) . deleteDialog ( var , false )
if ( var . findLastVisibleItemPosition ( ) == getDialogsArray . size )	if ( var . findLastVisibleItemPosition ( ) >= getDialogsArray . size - 10 )
MessagesController . getInstance ( ) . loadDialogs ( MessagesController . getInstance ( ) . dialogs . size ( ) , MessagesController . getInstance ( ) . currentDialogsCount , - 1 , 100 , true )	MessagesController . getInstance ( ) . loadDialogs ( - 1 , 100 , ! MessagesController . getInstance ( ) . dialogsEndReached )
var = new SearchAdapter ( var , null , false , false , false )	var = new SearchAdapter ( var , null , false , false , false , false )
var = new UserCell ( var , 1 )	var = new UserCell ( var , 1 , 0 )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) && ! var . megagroup )
var = new UserCell ( var , 1 )	var = new UserCell ( var , 1 , 0 )
if ( var == null || ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && ( var . flags & TLRPC . USER_FLAG_BOT_CANT_JOIN_GROUP ) != 0 )	if ( var == null || var . bot && var . bot_nochats )
if ( ( var . flags & 1 ) != 0 || ChatObject . isChannel ( var . chat ) )	if ( ! var . megagroup && var . channel || ChatObject . isChannel ( var . chat ) && ! var . chat . megagroup )
ScrollView . LayoutParams var = ( ScrollView . LayoutParams ) var . getLayoutParams ( )	var . addView ( var , LayoutHelper . createScroll ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT )
public PhoneView ( Context var )	public PhoneView ( final Context var )
LayoutParams var = ( LayoutParams ) var . getLayoutParams ( )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 1 , 4 , - 17.5f , 4 , 0 ) . MATCH_PARENT , 1 , 4 , - 17.5f , 4 , 0 )
var . width = LayoutHelper . MATCH_PARENT	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 0 , 0 , 14 ) . MATCH_PARENT , 36 , 0 , 0 , 0 , 14 )
var . setLayoutParams ( var )	var . addView ( var , LayoutHelper . createLinear ( 55 , 36 , - 9 , 0 , 16 , 0 ) , 36 , - 9 , 0 , 16 , 0 )
var . height = 1	var = 1
var . width = LayoutHelper . MATCH_PARENT	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 1 , 4 , - 17.5f , 4 , 0 ) . MATCH_PARENT , 1 , 4 , - 17.5f , 4 , 0 )
var . height = LayoutHelper . WRAP_CONTENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT )
var . width = LayoutHelper . WRAP_CONTENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT ) . WRAP_CONTENT , LayoutHelper . WRAP_CONTENT )
var . setLayoutParams ( var )	int var = var . getSelectionStart ( )
var [ 0 ] = new InputFilter . LengthFilter ( 4 )	var [ 0 ] = new InputFilter . LengthFilter ( 5 )
var = ( LayoutParams ) var . getLayoutParams ( )	String var = var . getText ( ) . toString
var . setLayoutParams ( var )	StringBuilder var = new StringBuilder ( var . length ( ) )
var = new EditText ( var )	var = new HintEditText ( var )
var = ( LayoutParams ) var . getLayoutParams ( )	for ( int var = 0 ; var < var . length ( ) ; var ++ )
var . width = LayoutHelper . MATCH_PARENT	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , 36 ) . MATCH_PARENT , 36 )
var . setLayoutParams ( var )	String var = var . getHintText ( )
if ( ! var . contains ( var ) )	if ( var . charAt ( var ) == ' ' )
var = var . substring ( var , var + 1 )	String var = var . substring ( var , var + 1 )
var = var . toString ( )	var . insert ( var , ' ' )
var . setText ( "" )	var . setText ( var )
var . bottomMargin = AndroidUtilities . dp ( 10 )	var . onTextChange ( )
if ( ! var . equals ( var ) )	if ( var . length ( ) != 0 )
var = PhoneFormat . getInstance ( ) . format ( var . getText ( ) . toString ) . trim	String var = var . getText ( ) . toString
var . setText ( var )	AndroidUtilities . showKeyboard ( var )
var . setText ( var . substring ( var ) . trim )	var . requestFocus ( )
var . setLayoutParams ( var )	if ( var . length ( ) == 5 )
LayoutParams var = ( LayoutParams ) var . getLayoutParams ( )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , Gravity . CENTER_HORIZONTAL , 0 , 20 , 0 , 0 ) . MATCH_PARENT , 36 , Gravity . CENTER_HORIZONTAL , 0 , 20 , 0 , 0 )
LayoutParams var = ( LayoutParams ) var . getLayoutParams ( )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , Gravity . CENTER_HORIZONTAL , 0 , 20 , 0 , 0 ) . MATCH_PARENT , 36 , Gravity . CENTER_HORIZONTAL , 0 , 20 , 0 , 0 )
var . width = LayoutHelper . MATCH_PARENT	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )
var . height = AndroidUtilities . dp ( 36 )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 10 , 0 , 0 ) . MATCH_PARENT , 36 , 0 , 10 , 0 , 0 )
var . topMargin = AndroidUtilities . dp ( 26 )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 26 , 0 , 0 ) . MATCH_PARENT , 36 , 0 , 26 , 0 , 0 )
var . width = LayoutHelper . MATCH_PARENT	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )
var . height = AndroidUtilities . dp ( 36 )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 26 , 0 , 0 ) . MATCH_PARENT , 36 , 0 , 26 , 0 , 0 )
var . topMargin = AndroidUtilities . dp ( 10 )	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 10 , 0 , 0 ) . MATCH_PARENT , 36 , 0 , 10 , 0 , 0 )
var . width = LayoutHelper . MATCH_PARENT	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 10 , 0 , 0 ) . MATCH_PARENT , 36 , 0 , 10 , 0 , 0 )
var . height = LayoutHelper . MATCH_PARENT	addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 0 , 26 , 0 , 0 ) . MATCH_PARENT , 36 , 0 , 26 , 0 , 0 )
if ( var . containsKey ( var . getId ( ) ) )	if ( var [ var ] . containsKey ( var . getId ( var ) ) )
var . put ( var . getId ( ) , var )	var [ var ] . put ( var . getId ( var ) , var )
if ( ! var )	if ( ! var var )
if ( var . getId ( ) > 0 )	if ( var . getId ( var ) > 0 )
MessageObject var = var . get ( var )	MessageObject var = var [ var ] . get ( var )
var . remove ( var . getId ( ) )	var [ var ] . remove ( var . getId ( var ) )
if ( var . isEmpty ( ) )	if ( var . isEmpty ( var ) )
var . put ( var , var )	var [ 0 ] . put ( var , var )
var . clear ( var )	var [ var ] . clear var
MessageObject var = var . get ( var . get ( 0 ) )	MessageObject var = var [ var ] . get ( var . get ( 0 ) )
var . clear ( var )	var [ var ] . clear var
var . clear ( var )	var [ var ] . clear var
var . clear ( var )	var [ var ] . clear var
if ( var != 0 && var + var > var - 2 && ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached )	if ( var != 0 && var + var > var - 2 && ! sharedMediaData [ var ] . loading )
if ( var == var && var == classGuid )	if ( var == classGuid )
sharedMediaData [ var ] . endReached = ( Boolean ) var [ 5 ]	sharedMediaData [ var ] . endReached [ var ] = ( Boolean ) var [ 5 ]
if ( var == 0 || var != var . var )	if ( var == var . var = 0 )
if ( var . deleteMessage ( var ) = true )	if ( var . deleteMessage ( var , var ) = true )
if ( ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached && sharedMediaData [ var ] . messages . isEmpty ( var ) )	if ( ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached [ 0 ] && sharedMediaData [ var ] . messages . isEmpty ( var ) )
if ( ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached && sharedMediaData [ var ] . messages . isEmpty ( var ) )	if ( ! sharedMediaData [ var ] . loading && ! sharedMediaData [ var ] . endReached [ 0 ] && sharedMediaData [ var ] . messages . isEmpty ( var ) )
if ( var . containsKey ( var . getId ( var ) ) var )	if ( var [ var ] . containsKey ( var . getId ( var ) ) var )
var . put ( var . getId ( var ) , var )	var [ var ] . put ( var . getId ( var ) , var )
if ( var . isEmpty ( var ) var )	if ( var [ 0 ] . isEmpty var && var [ 1 ] . isEmpty var var )
( ( GreySectionCell ) var ) . setText ( LocaleController . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )	( ( SharedMediaSectionCell ) var ) . setText ( LocaleController . getInstance ( var ) . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )
( ( GreySectionCell ) var ) . setText ( LocaleController . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )	( ( SharedMediaSectionCell ) var ) . setText ( LocaleController . getInstance ( var ) . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )
( ( GreySectionCell ) var ) . setText ( LocaleController . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )	( ( GreySectionCell ) var ) . setText ( LocaleController . getInstance ( var ) . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )
( ( GreySectionCell ) var ) . setText ( LocaleController . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )	( ( GreySectionCell ) var ) . setText ( LocaleController . getInstance ( var ) . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )
( ( SharedMediaSectionCell ) var ) . setText ( LocaleController . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )	( ( GreySectionCell ) var ) . setText ( LocaleController . getInstance ( var ) . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )
( ( SharedMediaSectionCell ) var ) . setText ( LocaleController . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )	( ( GreySectionCell ) var ) . setText ( LocaleController . getInstance ( var ) . formatterMonthYear . format ( ( long ) var . messageOwner . date * 1000 ) long ) var . messageOwner . date * 1000 . toUpperCase var )
queryServerSearch ( var , var . getId ( var ) )	queryServerSearch ( var , var . getId ( var ) , var . getDialogId ( var ) )
if ( var == 3 )	if ( var == 3 || var == 4 )
if ( var == 1 || var == 4 )	if ( var == 1 )
if ( var == var )	if ( var == var || var == var )
if ( ( int ) var != 0 && ( Boolean ) var [ 2 ] )	if ( ( Boolean ) var [ 2 ] )
var . setTitle ( LocaleController . formatString ( "" , R . string . Of , ( var - var . size ( var ) ) + var + 1 , var ) , R . string . Of , ( var - var . size ( var ) ) + var + 1 , var )	var . setTitle ( LocaleController . formatString ( "" , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var ) , R . string . Of , ( var + var - var . size ( var ) ) + var + 1 , var + var )
if ( var == var && var == var )	if ( ( var == var || var == var ) && var == var )
var = ( Boolean ) var [ 5 ]	endReached [ var ] = ( Boolean ) var [ 5 ]
if ( var . isEmpty ( var ) )	if ( var . isEmpty ( var ) && ( var != 0 || var == 0 ) )
if ( ! var . containsKey ( var . getId ( var ) ) )	if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )
var . put ( var . getId ( var ) , var )	var [ var ] . put ( var . getId ( var ) , var )
if ( var == 0 )	if ( var == 0 && ( var != 0 || var == 0 ) )
var . clear ( var )	var [ var ] . clear var
var . clear ( var )	var [ var ] . clear var
if ( ! var || ! var . isEmpty ( var ) && var != 0 )	if ( ! endReached [ var ] )
if ( ! var . containsKey ( var . getId ( var ) ) )	if ( ! var [ var ] . containsKey ( var . getId ( var ) ) )
var . put ( var . getId ( var ) , var )	var [ var ] . put ( var . getId ( var ) , var )
var = false	endReached [ 0 ] = false
var . clear ( var )	var [ var ] . clear var
var . clear ( var )	var [ var ] . clear var
var . put ( var . getId ( var ) , var )	var [ 0 ] . put ( var . getId ( var ) , var )
if ( var . messageOwner . dialog_id != 0 var )	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
var = var . messageOwner . dialog_id	for ( int var = 0 ; var < var . size ( var ) ; var ++ )
closePhoto ( false , false )	SharedMediaQuery . getMediaCount ( var , SharedMediaQuery . MEDIA_PHOTOVIDEO , var , false )
var = var . getDialogId ( var )	MessageObject var = var . get ( var )
String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . formatterDay . format ( new Date ( var ) ) Date ( var ) )	String var = LocaleController . formatString ( "" , R . string . formatDateAtTime , LocaleController . getInstance ( var ) . formatterYear . format ( new Date ( var ) ) Date ( var ) , LocaleController . getInstance ( var ) . formatterDay . format ( new Date ( var ) ) Date ( var ) )
openPhoto ( var , null , null , null , 0 , var , null )	openPhoto ( var , null , null , null , 0 , var , null , var , var )
openPhoto ( null , var , null , null , 0 , var , null )	openPhoto ( null , var , null , null , 0 , var , null , 0 , 0 )
openPhoto ( var . get ( var ) , null , var , null , var , var , null )	openPhoto ( var . get ( var ) , null , var , null , var , var , null , var , var )
openPhoto ( null , null , null , var , var , var , var )	openPhoto ( null , null , null , var , var , var , var , 0 , 0 )
int var = coords2 [ 1 ] - AndroidUtilities . statusBarHeight - ( var . viewY + var . top )	int var = coords2 [ 1 ] - AndroidUtilities . statusBarHeight - ( var . viewY + var . top ) + var . clipTopAddition
int var = coords2 [ 1 ] - AndroidUtilities . statusBarHeight - ( var . viewY + var . top )	int var = coords2 [ 1 ] - AndroidUtilities . statusBarHeight - ( var . viewY + var . top ) + var . clipTopAddition
MessagesController . getInstance ( ) . markDialogAsRead ( var . getDialogId ( ) , var . getId ( ) , Math . max ( 0 , var . getId ( ) ) , var . getId ( ) , 0 , var . messageOwner . date , true , true )	MessagesController . getInstance ( ) . markDialogAsRead ( var . getDialogId ( ) , var . getId ( ) , Math . max ( 0 , var . getId ( ) ) , var . getId ( ) , var . messageOwner . date , true , true )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) == 0 )	if ( ! var . bot var )
if ( ! var )	if ( ! var var )
MessagesController . getInstance ( ) . blockUser ( var )	MessagesController . getInstance ( var ) . blockUser ( var )
var . putString ( "" , LocaleController . getString ( "" , R . string . SendMessagesTo ) , R . string . SendMessagesTo )	var . putString ( "" , LocaleController . getString ( "" , R . string . SendContactTo ) , R . string . SendContactTo )
var . putString ( "" , LocaleController . getString ( "" , R . string . SendMessagesToGroup ) , R . string . SendMessagesToGroup )	var . putString ( "" , LocaleController . getString ( "" , R . string . SendContactToGroup ) , R . string . SendContactToGroup )
ContactsController . getInstance ( ) . deleteContact ( var )	ContactsController . getInstance ( var ) . deleteContact ( var )
if ( var == var )	if ( var == var var )
if ( var == var )	if ( var == var var )
if ( ChatObject . isChannel ( var ) )	var . putInt ( "" , var )
if ( ChatObject . isChannel ( var ) )	if ( var == var )
final TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var )	final TLRPC . User var = MessagesController . getInstance ( var ) . getUser ( var )
MessagesController . getInstance ( ) . addUserToChat ( - ( int ) var , var , null , 0 , null , null )	MessagesController . getInstance ( var ) . addUserToChat ( - ( int ) var , var , null , 0 , null , ProfileActivity . this )
if ( var == var )	if ( var == var var )
kickUser ( null )	DialogsActivity var = new DialogsActivity ( null )
TLRPC . TL_chatParticipant var = var . participants . participants . get ( var . get ( var - var - 1 ) - var - 1 )	TLRPC . ChatParticipant var = var . var . var . get ( var . get ( var - var - 1 ) - var - 1 )
if ( var . var == UserConfig . getClientUserId ( ) )	if ( var . var != UserConfig . getClientUserId ( var ) )
var = new TextView ( var )	onlineTextView [ var ] = new TextView ( var )
var . setTextColor ( 0xffffffff )	nameTextView [ var ] . setTextColor ( 0xffffffff )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 18 )	nameTextView [ var ] . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 18 )
var . setLines ( 1 )	onlineTextView [ var ] . setMaxLines ( 1 )
var . setMaxLines ( 1 )	onlineTextView [ var ] . setLines ( 1 )
var . setSingleLine ( true )	onlineTextView [ var ] . setSingleLine ( true )
var . setEllipsize ( TextUtils . TruncateAt . END )	onlineTextView [ var ] . setEllipsize ( TextUtils . TruncateAt . END )
var . setGravity ( Gravity . LEFT )	onlineTextView [ var ] . setGravity ( Gravity . LEFT )
var . setTypeface ( AndroidUtilities . getTypeface ( "" ) )	nameTextView [ var ] . setTypeface ( AndroidUtilities . getTypeface ( "" ) )
var . setCompoundDrawablePadding ( AndroidUtilities . dp ( 4 ) )	nameTextView [ var ] . setCompoundDrawablePadding ( AndroidUtilities . dp ( 4 ) )
var = new TextView ( var )	nameTextView [ var ] = new TextView ( var )
var . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 14 )	onlineTextView [ var ] . setTextSize ( TypedValue . COMPLEX_UNIT_DIP , 14 )
var . setLines ( 1 )	nameTextView [ var ] . setMaxLines ( 1 )
var . setMaxLines ( 1 )	nameTextView [ var ] . setLines ( 1 )
var . setSingleLine ( true )	nameTextView [ var ] . setSingleLine ( true )
var . setEllipsize ( TextUtils . TruncateAt . END )	nameTextView [ var ] . setEllipsize ( TextUtils . TruncateAt . END )
var . setGravity ( Gravity . LEFT )	nameTextView [ var ] . setGravity ( Gravity . LEFT )
if ( ChatObject . isChannel ( var ) && ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) == 0 )	if ( var && ! var . creator && ( ! var . megagroup || ! var . editor ) || ! var && ! var . admin && ! var . creator && var . admins_enabled var )
NotificationCenter . getInstance ( ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . closeChats )
AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity )	AlertDialog . Builder var = new AlertDialog . Builder ( getParentActivity var )
var . openCamera ( )	var . openCamera ( var )
MessagesController . getInstance ( ) . changeChatAvatar ( var , null )	MessagesController . getInstance ( var ) . changeChatAvatar ( var , null )
if ( ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 )	if ( var . creator )
if ( var != null )	if ( var . getAdapterPosition ( var ) == var )
NotificationCenter . getInstance ( ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )	NotificationCenter . getInstance ( var ) . removeObserver ( ProfileActivity . this , NotificationCenter . closeChats )
if ( ! AndroidUtilities . isTablet ( ) = var )	if ( ! AndroidUtilities . isTablet ( var ) && Build . VERSION . SDK_INT > 10 && var . getBoolean ( "" , true ) = var )
var . setTextColor ( Color . rgb ( 0xd7 + var , 0xe8 + var , 0xf7 + var ) + var , 0xe8 + var , 0xf7 + var )	onlineTextView [ var ] . setTextColor ( Color . rgb ( 0xd7 + var , 0xe8 + var , 0xf7 + var ) + var , 0xe8 + var , 0xf7 + var )
var = ConnectionsManager . getInstance ( ) . getCurrentTime + 50000	var = ConnectionsManager . getInstance ( var ) . getCurrentTime var + 50000
if ( var != null )	if ( var != 0 var )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var == null || ! var . bot )
if ( var != null && var . username != null && var . username . length ( ) > 0 )	if ( var != null && var . username != null && var . username . length ( var ) > 0 )
if ( var != null && ( var . flags & TLRPC . USER_FLAG_BOT ) == 0 && var == null )	if ( var != null && ! var . bot && var == null )
if ( var > 0 )	if ( var > 0 var )
if ( ChatObject . isChannel ( var ) && ( var != null && var . about != null && var . about . length ( ) > 0 || var . username != null && var . username . length ( ) > 0 ) )	if ( ChatObject . isChannel ( var ) && ( var != null && var . about != null && var . about . length ( var ) > 0 || var . username != null && var . username . length ( var ) > 0 ) )
if ( var != null && var . about != null && var . about . length ( ) > 0 )	if ( var != null && var . about != null && var . about . length ( var ) > 0 )
if ( var . username != null && var . username . length ( ) > 0 )	if ( var . username != null && var . username . length ( var ) > 0 )
if ( ! ChatObject . isChannel ( var ) )	var . putBoolean ( "" , ! ChatObject . isChannel ( var ) )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) var )
var = - 1	var = var ++
var = - 1	var = var ++
if ( ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) == 0 && ( var . flags & TLRPC . CHAT_FLAG_USER_KICKED ) == 0 )	if ( ! ( var . var instanceof TLRPC . TL_chatParticipantsForbidden ) && var . var . var . size ( var ) < MessagesController . getInstance ( var ) . maxGroupCount && ( var . admin || var . creator || ! var . admins_enabled ) )
var = - 1	var = var ++
var = - 1	if ( var != - 1 var )
var = UserObject . getUserName ( var )	String var = UserObject . getUserName ( var )
if ( ! var . getText ( ) . equals ( var ) )	if ( ! onlineTextView [ var ] . getText var . equals ( var ) )
var . setText ( var )	onlineTextView [ var ] . setText ( var )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot )
if ( ! var . getText ( ) . equals ( var ) )	if ( ! onlineTextView [ var ] . getText var . equals ( var ) )
var . setText ( var )	onlineTextView [ var ] . setText ( var )
var . setCompoundDrawablesWithIntrinsicBounds ( var , 0 , 0 , 0 )	nameTextView [ var ] . setCompoundDrawablesWithIntrinsicBounds ( var , 0 , 0 , 0 )
if ( var . title != null && ! var . getText ( ) . equals ( var . title ) )	if ( var . title != null && ! nameTextView [ var ] . getText var . equals ( var . title ) )
var . setText ( var . title )	nameTextView [ var ] . setText ( var . title )
if ( ( var . flags & TLRPC . CHAT_FLAG_IS_VERIFIED ) != 0 )	if ( var . verified var )
var . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R . drawable . check_profile_fixed , 0 )	nameTextView [ var ] . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , R . drawable . check_profile_fixed , 0 )
var . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 )	nameTextView [ var ] . setCompoundDrawablesWithIntrinsicBounds ( 0 , 0 , 0 , 0 )
if ( var == null || var . participants_count == 0 || ( ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 || ( var . flags & 8 ) != 0 ) )	if ( var == null || ! var . megagroup && ( var . participants_count == 0 || ( var . admin || var . can_view_participants ) ) var )
if ( ! var . getText ( ) . equals ( var ) )	if ( ! nameTextView [ var ] . getText var . equals ( var ) )
var . setText ( var )	nameTextView [ var ] . setText ( var )
var . setImage ( var , "" , new AvatarDrawable ( var , true ) , true )	var . setImage ( var , "" , var )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot )
if ( ( var . flags & TLRPC . USER_FLAG_BOT_CANT_JOIN_GROUP ) == 0 )	if ( ! var . bot_nochats )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 )	if ( var . bot var )
if ( var > 0 )	if ( var > 0 var )
if ( ChatObject . isChannel ( var ) )	if ( ChatObject . isChannel ( var ) var )
ActionBarMenuItem var = var . addItem ( 0 , R . drawable . ic_ab_other )	ActionBarMenuItem var = var . addItem ( 10 , R . drawable . ic_ab_other )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . AddMember ) , R . string . AddMember , 0 )	var . addSubItem ( var , LocaleController . getString ( "" , R . string . LeaveMegaMenu ) , R . string . LeaveMegaMenu , 0 )
ActionBarMenuItem var = var . addItem ( 0 , R . drawable . ic_ab_other )	ActionBarMenuItem var = var . addItem ( 10 , R . drawable . ic_ab_other )
var . addSubItem ( var , LocaleController . getString ( "" , R . string . AddRecipient ) , R . string . AddRecipient , 0 )	var . addSubItem ( var , LocaleController . getString ( "" , R . string . EditName ) , R . string . EditName , 0 )
var = new AddMemberCell ( var )	var = new TextInfoPrivacyCell ( var )
( ( AddMemberCell ) var ) . setText ( LocaleController . getString ( "" , R . string . AddMember ) , R . string . AddMember )	var . setText ( LocaleController . getString ( "" , R . string . AddMember ) , R . string . AddMember )
( ( AddMemberCell ) var ) . setText ( LocaleController . getString ( "" , R . string . AddRecipient ) , R . string . AddRecipient )	var . setText ( LocaleController . getString ( "" , R . string . AddRecipient ) , R . string . AddRecipient )
if ( var == - 1 )	if ( var == - 1 var )
var . setMultiline ( false )	getChannelParticipants ( false )
var . setMultiline ( true )	getChannelParticipants ( true )
var . setMultiline ( true )	var . setProfile ( true )
var . setTextAndIcon ( var . about , R . drawable . bot_info )	var . setTextAndIcon ( var , R . drawable . bot_info )
TLRPC . TL_chatParticipant var = var . participants . participants . get ( var . get ( var - var - 1 ) - var - 1 )	TLRPC . ChatParticipant var = var . var . var . get ( var . get ( var - var - 1 ) - var - 1 )
var = var == var || var == var || var > var && var < var || var == var || var == var || var == var || var == var || var == var || var == var || var == var	var = var == var || var == var || var == var || var > var && var < var || var == var || var == var || var == var || var == var || var == var || var == var || var == var
if ( var == var || var == var || var == var || var == var == var || var == var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var > var && var < var == var == var )	if ( var == var || var == var || var == var || var == var == var || var == var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var > var && var < var == var == var == var == var || var == var )
if ( ( var . set . flags & 4 ) == 0 )	if ( ! var . set . official )
if ( ( var . set . flags & 4 ) != 0 )	if ( var . set . official )
View var = getChildAt ( var )	View var = getChildAt ( 0 )
ConnectionsManager . getInstance ( ) . initPushConnection	ConnectionsManager . getInstance ( ) . init ( BuildVars . BUILD_VERSION , TLRPC . LAYER , BuildVars . APP_ID , var , var , var , var , var , UserConfig . getClientUserId ( ) )
ConnectionsManager . getInstance ( ) . cancelRpc ( var . requestToken , true , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var . requestToken , true )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ByteBufferDesc var = BuffersStorage . getInstance ( ) . getFreeBuffer ( var + var )	NativeByteBuffer var = new NativeByteBuffer ( var + var )
var . writeRaw ( var , 0 , var )	var . writeBytes ( var , 0 , var )
BuffersStorage . getInstance ( ) . reuseFreeBuffer ( var )	var . reuse ( )
ByteBufferDesc var = BuffersStorage . getInstance ( ) . getFreeBuffer ( var + var )	NativeByteBuffer var = new NativeByteBuffer ( var + var )
var . writeRaw ( var , 0 , var )	var . writeBytes ( var , 0 , var )
var . writeRaw ( var )	var . writeBytes ( var )
var . writeRaw ( var , var , 32 )	var . writeBytes ( var , var , 32 )
var . writeRaw ( var , 32 + var , 16 )	var . writeBytes ( var , 32 + var , 16 )
var . writeRaw ( var )	var . writeBytes ( var )
var . writeRaw ( var , 48 + var , 16 )	var . writeBytes ( var , 48 + var , 16 )
var . writeRaw ( var , 64 + var , 32 )	var . writeBytes ( var , 64 + var , 32 )
var . writeRaw ( var )	var . writeBytes ( var )
var . writeRaw ( var )	var . writeBytes ( var )
var . writeRaw ( var , 96 + var , 32 )	var . writeBytes ( var , 96 + var , 32 )
var . writeRaw ( var , 0 , 8 )	var . writeBytes ( var , 0 , 8 )
var . writeRaw ( var , 8 , 12 )	var . writeBytes ( var , 8 , 12 )
var . writeRaw ( var , 4 , 12 )	var . writeBytes ( var , 4 , 12 )
var . writeRaw ( var , 8 , 12 )	var . writeBytes ( var , 8 , 12 )
var . writeRaw ( var , 0 , 8 )	var . writeBytes ( var , 0 , 8 )
var . writeRaw ( var , 16 , 4 )	var . writeBytes ( var , 16 , 4 )
var . writeRaw ( var , 0 , 8 )	var . writeBytes ( var , 0 , 8 )
if ( ! var . isProbablePrime ( 30 ) || ! var . isProbablePrime ( 30 ) )	return ! ( ! var . isProbablePrime ( 30 ) || ! var . isProbablePrime ( 30 ) )
return new byte [ 0 ]	return new byte [ 20 ]
var . onSearchFieldVisibilityChanged ( var . toggleSearch ( ) )	var . onSearchFieldVisibilityChanged ( var . toggleSearch ( true ) )
var . onSearchFieldVisibilityChanged ( var . toggleSearch ( ) )	var . onSearchFieldVisibilityChanged ( var . toggleSearch ( false ) )
var . onSearchFieldVisibilityChanged ( var . toggleSearch ( ) )	var . onSearchFieldVisibilityChanged ( var . toggleSearch ( true ) )
var . parentActionBar . onSearchFieldVisibilityChanged ( toggleSearch )	var . parentActionBar . onSearchFieldVisibilityChanged ( toggleSearch ( var ) )
ConnectionsManager . getInstance ( ) . cancelRpcsForClassGuid ( var )	ConnectionsManager . getInstance ( ) . cancelRequestsForGuid ( var )
if ( var == null || var == null || var . animationInProgress || var . startedTracking || var . checkTransitionAnimation ( ) )	if ( var == null || var == null || var . animationInProgress || var . startedTracking || ! var && var . checkTransitionAnimation ( ) )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var = var . users	var . add ( var . users . get ( var ) )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var = var . users	var . add ( var . users . get ( var ) )
public ContactsAdapter ( Context var , boolean var , boolean var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )	public ContactsAdapter ( Context var , int var , boolean var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )
if ( var && ! var )	if ( var != 0 && ! var )
if ( var < ContactsController . getInstance ( ) . sortedUsersSectionsArray . size ( ) )	if ( var < var . size ( ) )
if ( var - 1 < ContactsController . getInstance ( ) . sortedUsersSectionsArray . size ( ) )	if ( var - 1 < var . size ( ) )
if ( var == 0 - 1 < ContactsController . getInstance ( ) . sortedUsersSectionsArray . size ( ) )	if ( var != 0 && ! var )
if ( var - 1 < ContactsController . getInstance ( ) . sortedUsersSectionsArray . size ( ) )	int var = var . size ( )
if ( var && ! var )	if ( var != 0 && ! var )
if ( var && ! var )	if ( var != 0 && ! var )
var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewBroadcastList ) , R . string . NewBroadcastList , R . drawable . menu_broadcast )	var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewChannel ) , R . string . NewChannel , R . drawable . menu_broadcast )
if ( var && ! var )	if ( var == 0 - 1 < var . size ( ) )
if ( var == 0 - 1 < ContactsController . getInstance ( ) . sortedUsersSectionsArray . size ( ) )	if ( var != 0 && ! var )
ArrayList < TLRPC . TL_dialog > var = getDialogsArray	ArrayList < TLRPC . Dialog > var = getDialogsArray
TLRPC . TL_dialog var = getItem ( var )	TLRPC . Dialog var = getItem ( var )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ByteBufferDesc var = MessagesStorage . getInstance ( var ) . getBuffersStorage var . getFreeBuffer ( var . byteArrayLength ( 0 ) )	NativeByteBuffer var = new NativeByteBuffer ( var . byteArrayLength ( 0 ) )
if ( var != null && var . byteBufferValue ( 0 , var . buffer ) != 0 )	if ( var != null && var . byteBufferValue ( 0 , var ) != 0 )
ByteBufferDesc var = MessagesStorage . getInstance ( var ) . getBuffersStorage var . getFreeBuffer ( var . byteArrayLength ( 0 ) )	NativeByteBuffer var = new NativeByteBuffer ( var . byteArrayLength ( 0 ) )
if ( var != null && var . byteBufferValue ( 0 , var . buffer ) != 0 )	if ( var != null && var . byteBufferValue ( 0 , var ) != 0 )
ByteBufferDesc var = MessagesStorage . getInstance ( var ) . getBuffersStorage var . getFreeBuffer ( var . byteArrayLength ( 0 ) )	NativeByteBuffer var = new NativeByteBuffer ( var . byteArrayLength ( 0 ) )
ByteBufferDesc var = MessagesStorage . getInstance ( var ) . getBuffersStorage var . getFreeBuffer ( var . byteArrayLength ( 6 ) )	NativeByteBuffer var = new NativeByteBuffer ( var . byteArrayLength ( 6 ) )
if ( var != null && var . byteBufferValue ( 0 , var . buffer ) != 0 && var . byteBufferValue ( 6 , var . buffer ) != 0 )	if ( var != null && var . byteBufferValue ( 0 , var ) != 0 && var . byteBufferValue ( 6 , var ) != 0 )
ByteBufferDesc var = MessagesStorage . getInstance ( var ) . getBuffersStorage var . getFreeBuffer ( var . byteArrayLength ( 0 ) )	NativeByteBuffer var = new NativeByteBuffer ( var . byteArrayLength ( 0 ) )
if ( var != null && var . byteBufferValue ( 0 , var . buffer ) != 0 )	if ( var != null && var . byteBufferValue ( 0 , var ) != 0 )
queryServerSearch ( var )	queryServerSearch ( var , true )
if ( var > var . size ( ) && var != null && var . var != null )	if ( var > var . size ( ) && var != null )
var = AndroidUtilities . replaceTags ( String . format ( "" , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) ) , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) )	var = AndroidUtilities . replaceTags ( String . format ( "" , var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . substring ( var . length ( ) ) . length ( ) ) , var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . substring ( var . length ( ) ) . length ( ) )
var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewBroadcastList ) , R . string . NewBroadcastList , R . drawable . menu_broadcast )	var . setTextAndIcon ( LocaleController . getString ( "" , R . string . NewChannel ) , R . string . NewChannel , R . drawable . menu_broadcast )
public SearchAdapter ( Context var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var )	public SearchAdapter ( Context var , HashMap < Integer , TLRPC . User > , TLRPC . User var , boolean var , boolean var , boolean var )
queryServerSearch ( null )	queryServerSearch ( null , var )
queryServerSearch ( var )	queryServerSearch ( var , var )
if ( var . id == UserConfig . getClientUserId ( var ) )	if ( var . id == UserConfig . getClientUserId ( var ) || var && ( var . flags & TLRPC . USER_FLAG_MUTUAL_CONTACT ) == 0 )
TLRPC . User var = getItem ( var )	TLObject var = getItem ( var )
if ( var != null && var != null && var . var != null && var . var . length ( ) > 0 )	if ( var != null && var != null && var . length ( ) > 0 )
if ( var . toString ( ) . startsWith ( "" + var . var ) )	if ( var . toString ( ) . startsWith ( "" + var ) )
if ( var > var . size ( ) && var . var != null )	if ( var > var . size ( ) && var != null )
var = AndroidUtilities . replaceTags ( String . format ( "" , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) ) , var . var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . var . substring ( var . length ( ) ) . length ( ) )	var = AndroidUtilities . replaceTags ( String . format ( "" , var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . substring ( var . length ( ) ) . length ( ) ) , var . substring ( 0 , var . length ( ) ) , var . length ( ) , var . substring ( var . length ( ) ) . length ( ) )
var = var . var	var = var
( ( UserCell ) var ) . setChecked ( var . containsKey ( var . id ) . id , false )	( ( UserCell ) var ) . setChecked ( var . containsKey ( var ) , false )
( ( ProfileSearchCell ) var ) . setData ( var , null , null , var , var , false )	( ( ProfileSearchCell ) var ) . setData ( var , null , var , var , false )
if ( var . containsKey ( var . id ) )	if ( var . containsKey ( var ) )
MessagesController . getInstance ( ) . markMessageContentAsRead ( currentMessageObject . getId ( ) )	MessagesController . getInstance ( ) . markMessageContentAsRead ( currentMessageObject . messageOwner )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isContentUnread ( ) )	if ( currentMessageObject . messageOwner . to_id . channel_id == 0 && currentMessageObject . isContentUnread ( ) )
if ( var == null || var == null )	if ( var == null || var == null && var == null )
if ( var && var != null && var . photo != null )	if ( var != null && var . photo != null != null && var . photo != null )
if ( var && var && var != null && ! var . isOut ( ) )	if ( var != null && var . photo != null )
var = UserObject . getUserName ( var )	var = var . photo . photo_small
var = null	if ( var != null != null )
if ( var != null && var && var . messageOwner . fwd_from_id != 0 )	if ( var != null != null )
if ( var . isOut ( ) = var = var )	if ( var . isOutOwner ( ) = var = var )
var = LocaleController . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )	String var = LocaleController . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )
if ( var && ! var . isOut ( ) )	if ( var && ! var . isOutOwner ( ) && var . messageOwner . from_id > 0 )
if ( var . isOut ( ) = var = var )	if ( var . isOutOwner ( ) = var = var )
var = LocaleController . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )	String var = LocaleController . formatterDay . format ( long ( var . messageOwner . date ) . messageOwner . date * 1000 )
if ( var && var && var != null && ! var . isOut ( ) )	if ( var && var && ! var . isOutOwner ( ) )
if ( var != null )	if ( var != null || var != null )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
var = TextUtils . ellipsize ( UserObject . getUserName ( var ) . replace ( "" , "" ) , "" , var , var - AndroidUtilities . dp ( 8 ) , TextUtils . TruncateAt . END )	var = TextUtils . ellipsize ( var . replace ( "" , "" ) , "" , var , var - AndroidUtilities . dp ( 8 ) , TextUtils . TruncateAt . END )
if ( ! var . isOut ( ) )	if ( ! var . isOutOwner ( ) )
if ( ! var . isOut ( ) )	if ( ! var . isOutOwner ( ) )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
var . translate ( var , var - AndroidUtilities . dp ( 12.0f ) - var . getHeight ( ) )	var . translate ( var + var , var - AndroidUtilities . dp ( 12.0f ) - var . getHeight ( ) )
var . translate ( var , var - AndroidUtilities . dp ( 6.5f ) - var . getHeight ( ) )	var . translate ( var + var , var - AndroidUtilities . dp ( 6.5f ) - var . getHeight ( ) )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) = var = var )	if ( currentMessageObject . isOutOwner ( ) = var = var )
if ( currentMessageObject . type == 8 && ( var == null || var != null && ! var . isRunning ( ) ) = 2 . type == 3 = 3 )	if ( currentMessageObject . type == 8 && ( var == null || ! var . isRunning ( ) ) = 2 . type == 3 = 3 )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) = 7 = 6 )	if ( currentMessageObject . isOutOwner ( ) = 7 = 6 )
if ( ! currentMessageObject . isOut ( ) && currentMessageObject . messageOwner . destroyTime != 0 )	if ( ! currentMessageObject . isOutOwner ( ) && currentMessageObject . messageOwner . destroyTime != 0 )
if ( isChat && ! var . isOut ( ) )	if ( isChat && ! var . isOutOwner ( ) && var . messageOwner . from_id > 0 )
drawName = false	drawName = var . messageOwner . to_id . channel_id != 0
if ( isChat && ! var . isOut ( ) )	if ( isChat && ! var . isOutOwner ( ) && var . messageOwner . from_id > 0 )
drawName = false	drawName = var . messageOwner . to_id . channel_id != 0
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
if ( currentMessageObject . messageOwner . to_id . chat_id != 0 && ! currentMessageObject . isOut ( ) )	if ( var . messageOwner . from_id > 0 && ( currentMessageObject . messageOwner . to_id . channel_id != 0 || currentMessageObject . messageOwner . to_id . chat_id != 0 ) && ! currentMessageObject . isOut ( ) )
if ( currentMessageObject . messageOwner . to_id . chat_id != 0 && ! currentMessageObject . isOut ( ) )	if ( var . messageOwner . from_id > 0 && ( currentMessageObject . messageOwner . to_id . channel_id != 0 || currentMessageObject . messageOwner . to_id . chat_id != 0 ) && ! currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
if ( var . isOut ( ) )	if ( var . isOutOwner ( ) )
if ( currentMessageObject . isOut ( ) )	if ( currentMessageObject . isOutOwner ( ) )
TLRPC . TL_dialog var = getDialogsArray . get ( var )	TLRPC . Dialog var = getDialogsArray . get ( var )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
var = MessagesController . getInstance ( ) . dialogMessage . get ( var . top_message )	var = MessagesController . getInstance ( ) . dialogMessage . get ( var . id )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
var = var	var = ( TLRPC . User ) var
var = var	var = ( TLRPC . Chat ) var
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
if ( var == null )	if ( var == null || var != null )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
if ( ! var && ( var & MessagesController . UPDATE_MASK_STATUS ) != 0 )	if ( var != null && ! var && ( var & MessagesController . UPDATE_MASK_STATUS ) != 0 )
if ( var != null )	if ( var != null != null )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_PAN )	AndroidUtilities . removeAdjustResize ( getParentActivity , classGuid )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_RESIZE )	AndroidUtilities . requestAdjustResize ( getParentActivity , classGuid )
( ( LinearLayout ) fragmentView ) . addView ( var )	( ( LinearLayout ) fragmentView ) . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 ) . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 )
var . topMargin = AndroidUtilities . dp ( 24 )	( ( LinearLayout ) fragmentView ) . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 ) . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 )
var . leftMargin = AndroidUtilities . dp ( 24 )	( ( LinearLayout ) fragmentView ) . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 ) . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 )
var . rightMargin = AndroidUtilities . dp ( 24 )	( ( LinearLayout ) fragmentView ) . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 ) . MATCH_PARENT , 36 , 24 , 24 , 24 , 0 )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
MessagesController . getInstance ( ) . loadChatInfo ( var . id , var )	MessagesController . getInstance ( ) . loadChatInfo ( var . id , var , ChatObject . isChannel ( var ) )
if ( var != 0 && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 != null )	if ( var != 0 && ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 instanceof TLRPC . TL_chatFull )
if ( var != null )	if ( var instanceof TLRPC . TL_chatFull )
for ( int var = 0 ; var < var . participants . size ( ) ; var ++ )	for ( int var = 0 ; var < var . participants . participants . size ( ) ; var ++ )
TLRPC . TL_chatParticipant var = var . participants . get ( var )	TLRPC . TL_chatParticipant var = var . participants . participants . get ( var )
if ( ! AndroidUtilities . isTablet ( ) && getParentActivity != null )	if ( ChatObject . isChannel ( var ) )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_PAN )	MessagesController . getInstance ( ) . startShortPoll ( var . id , true )
MessagesController . getInstance ( ) . deleteMessages ( var , var , var )	MessagesController . getInstance ( ) . deleteMessages ( var , var , var , var )
if ( var . left || var instanceof TLRPC . TL_chatForbidden )	if ( ChatObject . isNotInChat ( var ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( UserConfig . getCurrentUser ( ) , var , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( UserConfig . getCurrentUser ( ) , var , var , var == null || var . asAdmin ( ) )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
SendMessagesHelper . prepareSendingPhotos ( var , null , var , var , var )	SendMessagesHelper . prepareSendingPhotos ( var , null , var , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false , var == null || var . asAdmin ( ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false , var == null || var . asAdmin ( ) )
var . openSearch ( )	var . openSearch ( var )
if ( var != null )	if ( ! ChatObject . isChannel ( var ) )
var = var . participants . size ( )	var = var . participants . participants . size ( )
if ( var == 0 || var . left || var instanceof TLRPC . TL_chatForbidden || var != null && var instanceof TLRPC . TL_chatParticipantsForbidden )	if ( var == 0 || ( var . flags & TLRPC . CHAT_FLAG_USER_LEFT ) != 0 || var instanceof TLRPC . TL_chatForbidden || var != null && var . participants instanceof TLRPC . TL_chatParticipantsForbidden )
if ( var != RecyclerView . SCROLL_STATE_DRAGGING && var != Integer . MAX_VALUE )	if ( var == RecyclerView . SCROLL_STATE_DRAGGING && var != Integer . MAX_VALUE )
MessagesController . getInstance ( ) . loadMessages ( var , 20 , var , ! var && var == 0 , var , classGuid , 0 , 0 , 0 , var == 0 )	MessagesController . getInstance ( ) . loadMessages ( var , 20 , var , ! var , var , classGuid , 0 , 0 , var )
MessagesController . getInstance ( ) . loadMessages ( var , 20 , 0 , ! var && var == 0 , var , classGuid , 0 , 0 , 0 , var == 0 )	MessagesController . getInstance ( ) . loadMessages ( var , 20 , 0 , ! var , var , classGuid , 0 , 0 , var )
MessagesController . getInstance ( ) . loadMessages ( var , 20 , var , var == 0 , var , classGuid , 1 , 0 , 0 , var == 0 )	MessagesController . getInstance ( ) . loadMessages ( var , 20 , var , ! var , var , classGuid , 1 , 0 , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( ( String ) var , var , null , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( ( String ) var , var , null , null , false , var == null || var . asAdmin ( ) )
SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var )	SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false , var == null || var . asAdmin ( ) )
if ( var != null && ! MessagesController . isFeatureEnabled ( var , ChatActivity . this ) )	if ( ! MessagesController . isFeatureEnabled ( var , ChatActivity . this ) )
SendMessagesHelper . prepareSendingPhotos ( var , null , var , var , var )	SendMessagesHelper . prepareSendingPhotos ( var , null , var , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingPhotosSearch ( var , var , var )	SendMessagesHelper . prepareSendingPhotosSearch ( var , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var )	SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingDocuments ( var , var , null , null , var , var )	SendMessagesHelper . prepareSendingDocuments ( var , var , null , null , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingAudioDocuments ( var , var , var )	SendMessagesHelper . prepareSendingAudioDocuments ( var , var , var , var == null || var . asAdmin ( ) )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var = var != - 1 && var + var . url . length ( ) == var . length ( )	var = var + var . url . length ( ) == var . length ( )
SendMessagesHelper . getInstance ( ) . processForwardFromMyName ( var , var )	SendMessagesHelper . getInstance ( ) . processForwardFromMyName ( var , var , var == null || var . asAdmin ( ) )
var . setText ( UserObject . getUserName ( var ) )	var = UserObject . getUserName ( var )
if ( var == null )	if ( var == null && var == null )
if ( var == null || var != null && var . type == 13 )	if ( var == null || var . type == 13 )
var . scrollToPositionWithOffset ( 0 , AndroidUtilities . dp ( - 11 ) 11 + var )	var . scrollToPositionWithOffset ( 0 , - var . getPaddingTop ( ) - AndroidUtilities . dp ( 7 ) + var )
var . scrollToPositionWithOffset ( var . size ( ) - var . indexOf ( var ) , AndroidUtilities . dp ( - 11 ) 11 + var )	var . scrollToPositionWithOffset ( var . size ( ) - var . indexOf ( var ) , - var . getPaddingTop ( ) - AndroidUtilities . dp ( 7 ) + var )
var = 0	var = - 10000
if ( var != null && ! ( var instanceof TLRPC . TL_encryptedChat ) || var != null && ( var instanceof TLRPC . TL_chatForbidden || var . left ) || var != null && UserObject . isDeleted ( var ) )	if ( var != null && ! ( var instanceof TLRPC . TL_encryptedChat ) || var != null && ChatObject . isNotInChat ( var ) || var != null && UserObject . isDeleted ( var ) )
if ( var != null )	if ( var != null && var != null )
if ( var == null )	if ( ! ( var instanceof TLRPC . TL_chatFull ) )
if ( var < 2 || var == 8 )	if ( var < 2 || var == 20 )
if ( var == null || var . length ( ) == 0 )	if ( var == null || var . length ( ) == 0 || ChatObject . isChannel ( var ) )
if ( var . left )	if ( ChatObject . isLeftFromChat ( var ) )
var = var . participants . size ( )	var = var . participants . participants . size ( )
if ( var == null || var != null || var != null && ! var . equals ( var ) )	if ( var == null || var != null || ! var . equals ( var ) )
SendMessagesHelper . prepareSendingVideo ( var , var , var , var , var , var , var , var )	SendMessagesHelper . prepareSendingVideo ( var , var , var , var , var , var , var , var , var == null || var . asAdmin ( ) )
if ( parentLayout == null || ! var . onFragmentCreate ( ) )	if ( Build . VERSION . SDK_INT >= 16 )
SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var )	SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingPhoto ( var . imagePath , null , var , var , var . caption )	SendMessagesHelper . prepareSendingPhoto ( var . imagePath , null , var , var , var . caption , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingPhoto ( var . path , null , var , var , var . caption )	SendMessagesHelper . prepareSendingPhoto ( var . path , null , var , var , var . caption , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var )	SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingPhoto ( null , var , var , var , null )	SendMessagesHelper . prepareSendingPhoto ( null , var , var , var , null , var == null || var . asAdmin ( ) )
if ( Build . VERSION . SDK_INT >= 16 )	if ( parentLayout == null || ! var . onFragmentCreate ( ) )
SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var )	SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . prepareSendingDocument ( var , var , null , null , var , var )	SendMessagesHelper . prepareSendingDocument ( var , var , null , null , var , var , var == null || var . asAdmin ( ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var == null || var . asAdmin ( ) )
int var = ( Integer ) var [ 9 ]	ArrayList < TLRPC . TL_messageGroup > var = ( ArrayList < TLRPC . TL_messageGroup > ) var [ 9 ]
var = ( Integer ) var [ 7 ]	int var = ( Integer ) var [ 7 ]
var = false	var = - 10000
var = true	var = - 9000
if ( var . size ( ) != var )	if ( var . size ( ) != var && ! var )
if ( var != 0 )	if ( ! var )
if ( var . size ( ) != var )	if ( var . size ( ) < var )
if ( var . get ( var . size ( ) - 1 ) == var )	if ( var . get ( var . size ( ) - 1 ) == var || var . get ( var . size ( ) - 2 ) == var )
var = false	var = - 10000
HashMap < Integer , Integer > var = ( HashMap < Integer , Integer > ) var [ 0 ]	SparseArray < Long > var = ( SparseArray < Long > ) var [ 0 ]
HashMap < Integer , Integer > var = ( HashMap < Integer , Integer > ) var [ 1 ]	SparseIntArray var = ( SparseIntArray ) var [ 1 ]
MessagesController . getInstance ( ) . loadMessages ( var , 30 , 0 , ! var , var , classGuid , 0 , 0 , 0 , true )	MessagesController . getInstance ( ) . loadMessages ( var , 30 , 0 , ! var , var , classGuid , 0 , 0 , var )
if ( var != null && var == var . var )	if ( var != null && var . var == var . var )
if ( var != null )	if ( var instanceof TLRPC . TL_chatFull )
for ( int var = 0 ; var < var . participants . size ( ) ; var ++ )	for ( int var = 0 ; var < var . participants . participants . size ( ) ; var ++ )
TLRPC . TL_chatParticipant var = var . participants . get ( var )	TLRPC . TL_chatParticipant var = var . participants . participants . get ( var )
MessageObject var = var . get ( var )	MessageObject var = var . get ( ( int ) var )
if ( var == null )	if ( var != null )
if ( var != null && ( var instanceof TLRPC . TL_chatForbidden || var . left ) || var != null && ( UserObject . isDeleted ( var ) || var ) )	if ( var != null && ( ChatObject . isNotInChat ( var ) || ! ChatObject . canWriteToChat ( var ) ) || var != null && ( UserObject . isDeleted ( var ) || var ) )
if ( ! AndroidUtilities . isTablet ( ) )	AndroidUtilities . requestAdjustResize ( getParentActivity , classGuid )
if ( var != null && var . length ( ) != 0 )	if ( var . length ( ) != 0 )
var = new int	var = null
if ( var == 3 )	if ( var != null )
if ( var == 6 )	if ( var == null )
if ( var . isMusic ( ) )	for ( int var = var + 1 ; var < var . size ( ) ; var ++ )
if ( var == null || var == null || var < 0 || var >= var . length )	if ( var == null || var < 0 || var >= var . size ( ) )
MessagesController . getInstance ( ) . deleteMessages ( var , var , var )	MessagesController . getInstance ( ) . deleteMessages ( var , var , var , var . messageOwner . to_id . channel_id )
if ( var == 6 == 7 )	if ( var == 6 )
if ( ! AndroidUtilities . isTablet ( ) )	if ( ! AndroidUtilities . isTablet ( )  )
Activity var = getParentActivity	AndroidUtilities . requestAdjustResize ( getParentActivity , classGuid )
if ( var == null || var != null && ! var . exists ( ) )	if ( var == null || ! var . exists ( ) )
if ( var == null || var != null && ! var . exists ( ) )	if ( var == null || ! var . exists ( ) )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
if ( var . length ( ) != 0 && var < System . currentTimeMillis ( ) - 5000 && ! var )	if ( ! var && var . length ( ) != 0 && var < System . currentTimeMillis ( ) - 5000 && ! var )
if ( var != null && ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires < var ) )	if ( var != null && ( var . id == UserConfig . getClientUserId ( ) || var . status != null && var . status . expires < var && ! MessagesController . getInstance ( ) . onlinePrivacy . containsKey ( var . id ) ) )
MediaController . getInstance ( ) . startRecording ( var , var )	MediaController . getInstance ( ) . startRecording ( var , var , asAdmin )
if ( var == null || var )	if ( var == null || var || getVisibility != VISIBLE )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var , asAdmin )
if ( var == null )	if ( var == null || getVisibility != VISIBLE )
SendMessagesHelper . getInstance ( ) . sendMessage ( String . format ( Locale . US , "" , var , var . username ) . US , "" , var , var . username , var , null , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( String . format ( Locale . US , "" , var , var . username ) . US , "" , var , var . username , var , null , null , false , asAdmin )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , false , asAdmin )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , var , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , var , null , false , asAdmin )
SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var )	SendMessagesHelper . getInstance ( ) . sendSticker ( var , var , var , asAdmin )
MessagesController . getInstance ( ) . markMessageContentAsRead ( var . getId ( ) )	MessagesController . getInstance ( ) . markMessageContentAsRead ( var . messageOwner )
var = new SearchAdapter ( var , var , var )	var = new SearchAdapter ( var , var , var , false , false )
TLRPC . User var = var . getItem ( var )	TLRPC . User var = ( TLRPC . User ) var . getItem ( var )
var . putBoolean ( "" , true )	var . edit ( ) . putBoolean ( "" , true ) . commit
presentFragment ( new GroupCreateActivity ( var ) , false )	presentFragment ( new ChannelCreateActivity ( var ) )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) == 0 )	if ( ( var . flags & TLRPC . USER_FLAG_BOT ) == 0 && var )
TLRPC . TL_dialog var = var . getItem ( var )	TLRPC . Dialog var = var . getItem ( var )
TLRPC . TL_dialog var	TLRPC . Dialog var
ArrayList < TLRPC . TL_dialog > var = getDialogsArray	ArrayList < TLRPC . Dialog > var = getDialogsArray
if ( var != null && var . left || var instanceof TLRPC . TL_chatForbidden )	if ( var != null && ChatObject . isNotInChat ( var ) )
MessagesController . getInstance ( ) . loadDialogs ( MessagesController . getInstance ( ) . dialogs . size ( ) , MessagesController . getInstance ( ) . dialogsServerOnly . size ( ) , 100 , true )	MessagesController . getInstance ( ) . loadDialogs ( MessagesController . getInstance ( ) . dialogs . size ( ) , MessagesController . getInstance ( ) . currentDialogsCount , 100 , true )
var = var . getBoolean ( "" , false )	var = var . getInt ( "" , ChatObject . CHAT_TYPE_CHAT )
var . putBoolean ( "" , var )	var . putInt ( "" , var )
var = new SearchAdapter ( var , null , false )	var = new ContactsAdapter ( var , 1 , false , null , false )
var = new ContactsAdapter ( var , true , false , null , false )	var = new SearchAdapter ( var , null , false , false , false )
FrameLayout . LayoutParams var = ( FrameLayout . LayoutParams ) var . getLayoutParams ( )	var . addView ( var , LayoutHelper . createFrame ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT , 10 , 0 , 10 , 0 ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT , Gravity . TOP | Gravity . LEFT , 10 , 0 , 10 , 0 )
var . width = LayoutHelper . MATCH_PARENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT )
var . height = LayoutHelper . WRAP_CONTENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . WRAP_CONTENT ) . MATCH_PARENT , LayoutHelper . WRAP_CONTENT )
XImageSpan var = var . get ( var )	ChipSpan var = var . get ( var )
var . width = LayoutHelper . MATCH_PARENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )
var . height = LayoutHelper . MATCH_PARENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )
var . width = LayoutHelper . MATCH_PARENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )
var . height = LayoutHelper . MATCH_PARENT	var . addView ( var , LayoutHelper . createLinear ( LayoutHelper . MATCH_PARENT , LayoutHelper . MATCH_PARENT ) . MATCH_PARENT , LayoutHelper . MATCH_PARENT )
var = var . getItem ( var )	var = ( TLRPC . User ) var . getItem ( var )
XImageSpan var = var . get ( var . id )	ChipSpan var = var . get ( var . id )
if ( var . size ( ) == var )	if ( var != 0 && var . size ( ) == var )
XImageSpan var = createAndPutChipForUser ( var )	ChipSpan var = createAndPutChipForUser ( var )
XImageSpan var = new XImageSpan ( var , ImageSpan . ALIGN_BASELINE )	ChipSpan var = new ChipSpan ( var , ImageSpan . ALIGN_BASELINE )
var = var . getBoolean ( "" , false )	var = var . getInt ( "" , ChatObject . CHAT_TYPE_CHAT )
MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , var )	MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , null , var )
final long var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , var )	final int var = MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , null , var )
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
var . setInfo ( 5 , null , null , var )	var . setInfo ( 5 , null , null , var == ChatObject . CHAT_TYPE_BROADCAST )
if ( ! var )	if ( var != ChatObject . CHAT_TYPE_BROADCAST )
if ( ! var )	if ( var != ChatObject . CHAT_TYPE_BROADCAST )
MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , false )	MessagesController . getInstance ( ) . createChat ( var . getText ( ) . toString , var , null , var )
if ( var . length != 3 )	if ( var . length != 2 )
int var = ( int ) var [ 0 ]	TLRPC . ChatFull var = ( TLRPC . ChatFull ) var [ 0 ]
int var = ( int ) var [ 2 ]	int var = ( int ) var [ 1 ]
if ( var == var && var == classGuid )	if ( var . var == var && var == classGuid )
var . putBoolean ( "" , true )	var . edit ( ) . putBoolean ( "" , true ) . commit
presentFragment ( new GroupCreateActivity ( var ) )	presentFragment ( new ChannelCreateActivity ( var ) )
if ( var != null )	if ( var != null && var . length ( ) > 1 )
long var = 0	int var = 0
final TLRPC . User var = ( TLRPC . User ) var	final TLRPC . TL_contacts_resolvedPeer var = ( TLRPC . TL_contacts_resolvedPeer ) var
MessagesController . getInstance ( ) . putUser ( var , false )	MessagesController . getInstance ( ) . putUsers ( var . users , false )
ArrayList < TLRPC . User > var = new ArrayList	MessagesController . getInstance ( ) . putChats ( var . chats , false )
MessagesStorage . getInstance ( ) . putUsersAndChats ( var , null , false , true )	MessagesStorage . getInstance ( ) . putUsersAndChats ( var . users , var . chats , false , true )
if ( ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && ( var . flags & TLRPC . USER_FLAG_BOT_CANT_JOIN_GROUP ) != 0 )	if ( var == null || ( var . flags & TLRPC . USER_FLAG_BOT ) != 0 && ( var . flags & TLRPC . USER_FLAG_BOT_CANT_JOIN_GROUP ) != 0 )
MessagesController . getInstance ( ) . addUserToChat ( - ( int ) var , var , null , 0 , var )	MessagesController . getInstance ( ) . addUserToChat ( - ( int ) var , var , null , 0 , var , null )
var . putInt ( "" , var . id )	var . putInt ( "" , var . users . get ( 0 ) . id )
if ( var . chat != null && ! var . chat . left )	if ( var . chat != null && ! ChatObject . isLeftFromChat ( var . chat ) )
final long var = var	final int var = var
ConnectionsManager . getInstance ( ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( ) . cancelRequest ( var , true )
SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , null )	SendMessagesHelper . prepareSendingVideo ( var , 0 , 0 , 0 , 0 , null , var , null , true )
SendMessagesHelper . prepareSendingText ( var , var )	SendMessagesHelper . prepareSendingText ( var , var , true )
SendMessagesHelper . prepareSendingPhotos ( null , var , var , null , null )	SendMessagesHelper . prepareSendingPhotos ( null , var , var , null , null , true )
SendMessagesHelper . prepareSendingDocuments ( var , var , var , var , var , null )	SendMessagesHelper . prepareSendingDocuments ( var , var , var , var , var , null , true )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , true )
int var = ( Integer ) var [ 0 ]	final Integer var = ( Integer ) var [ 0 ]
FileLog . e ( "" , "" + var )	FileLog . d ( "" , "" + var )
if ( var == 2 )	if ( var == ConnectionsManager . ConnectionStateConnecting )
if ( var == 3 )	if ( var == ConnectionsManager . ConnectionStateUpdating )
var . setImage ( var , null , new AvatarDrawable ( var ) )	var . setImage ( var , null , var )
var . setText ( UserObject . getUserName ( var ) )	var = UserObject . getUserName ( var )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_PAN )	AndroidUtilities . removeAdjustResize ( getParentActivity , classGuid )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_PAN )	AndroidUtilities . removeAdjustResize ( getParentActivity , classGuid )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_RESIZE )	AndroidUtilities . requestAdjustResize ( getParentActivity , classGuid )
if ( var . lang_code == null || var . lang_code . length ( ) == 0 )	if ( var . lang_code . length ( ) == 0 )
if ( var != null && var . length ( ) != 0 )	if ( var . length ( ) != 0 )
if ( var != null && var . length ( ) != 0 )	if ( var . length ( ) != 0 )
ConnectionsManager . getInstance ( ) . initPushConnection	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
ConnectionsManager . getInstance ( ) . updateDcSettings ( 0 )	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
if ( var != null && var . length ( ) != 0 )	if ( var . length ( ) != 0 )
AndroidUtilities . shakeTextView ( var , 2 , 0 )	AndroidUtilities . shakeView ( var , 2 , 0 )
ConnectionsManager . getInstance ( ) . initPushConnection	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
ConnectionsManager . getInstance ( ) . updateDcSettings ( 0 )	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
if ( var != null && var . length ( ) != 0 )	if ( var . length ( ) != 0 )
AndroidUtilities . shakeTextView ( var , 2 , 0 )	AndroidUtilities . shakeView ( var , 2 , 0 )
ConnectionsManager . getInstance ( ) . initPushConnection	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
ConnectionsManager . getInstance ( ) . updateDcSettings ( 0 )	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
ConnectionsManager . getInstance ( ) . initPushConnection	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
ConnectionsManager . getInstance ( ) . updateDcSettings ( 0 )	ConnectionsManager . getInstance ( ) . setUserId ( var . user . id )
if ( var != null && var . length ( ) != 0 )	if ( var . length ( ) != 0 )
if ( var != null && var . length ( ) != 0 )	if ( var . length ( ) != 0 )
MessagesController . getInstance ( var ) . deleteMessages ( var , var , var )	MessagesController . getInstance ( var ) . deleteMessages ( var , var , var , var )
if ( ! AndroidUtilities . isTablet ( var ) )	if ( ! AndroidUtilities . isTablet ( var ) var )
if ( sharedMediaData [ var ] . addMessage ( var , false , var ) = true )	sharedMediaData [ var ] . addMessage ( var , false , var )
sharedMediaData [ var ] . cacheEndReached = ! ( Boolean ) var [ 3 ]	sharedMediaData [ var ] . endReached = ( Boolean ) var [ 5 ]
ConnectionsManager . getInstance ( var ) . cancelRpc ( var , true )	ConnectionsManager . getInstance ( var ) . cancelRequest ( var , true )
if ( var == null )	if ( var . peer == null )
var . peer = new TLRPC . TL_inputPeerUser ( var )	var . peer = MessagesController . getInputPeer ( var )
if ( var == EditorInfo . IME_ACTION_NEXT == EditorInfo . IME_ACTION_DONE )	if ( var == 0 == 1 )
if ( var == EditorInfo . IME_ACTION_DONE )	if ( var == 1 )
AndroidUtilities . shakeTextView ( var , 2 , 0 )	AndroidUtilities . shakeView ( var , 2 , 0 )
AndroidUtilities . shakeTextView ( var , 2 , 0 )	AndroidUtilities . shakeView ( var , 2 , 0 )
var . openSearch ( )	var . openSearch ( true )
int var = ( Integer ) var [ 4 ]	int var = ( Integer ) var [ 3 ]
boolean var = ( Boolean ) var [ 3 ]	int var = ( Integer ) var [ 3 ]
var = ! var	var = ( Boolean ) var [ 5 ]
MessagesController . getInstance ( var ) . deleteMessages ( var , var , var )	MessagesController . getInstance ( var ) . deleteMessages ( var , var , var , var . messageOwner . to_id . channel_id )
var = var . messageOwner . dialog_id	var = var . getDialogId ( var )
var = var . messageOwner . to_id . user_id	var = var . getDialogId ( var )
SharedMediaQuery . loadMedia ( var , 0 , 100 , var . getId ( var ) , SharedMediaQuery . MEDIA_PHOTOVIDEO , ! var , var )	SharedMediaQuery . loadMedia ( var , 0 , 100 , var . getId ( var ) , SharedMediaQuery . MEDIA_PHOTOVIDEO , true , var )
SharedMediaQuery . loadMedia ( var , 0 , 100 , var . getId ( var ) , SharedMediaQuery . MEDIA_PHOTOVIDEO , ! var , var )	SharedMediaQuery . loadMedia ( var , 0 , 100 , var . getId ( var ) , SharedMediaQuery . MEDIA_PHOTOVIDEO , true , var )
ConnectionsManager . getInstance ( var ) . cancelRpcsForClassGuid ( var )	ConnectionsManager . getInstance ( var ) . cancelRequestsForGuid ( var )
ConnectionsManager . getInstance ( var ) . cancelRpcsForClassGuid ( var )	ConnectionsManager . getInstance ( var ) . cancelRequestsForGuid ( var )
if ( var == 1 || var == - 1 && var > 0 )	if ( var == 1 || var > 0 )
SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false )	SendMessagesHelper . getInstance ( ) . sendMessage ( "" , var , null , null , false , false )
MessagesController . getInstance ( ) . addUserToChat ( - ( int ) var , var , null , 0 , null )	MessagesController . getInstance ( ) . addUserToChat ( - ( int ) var , var , null , 0 , null , null )
int var = var . participants . get ( var . get ( var - var - 1 ) - var - 1 ) . var	TLRPC . TL_chatParticipant var = var . participants . participants . get ( var . get ( var - var - 1 ) - var - 1 )
TLRPC . TL_chatParticipant var = var . participants . get ( var . get ( var - var - 1 ) - var - 1 )	int var = var . participants . participants . get ( var . get ( var - var - 1 ) - var - 1 ) . var
if ( var . admin_id != UserConfig . getClientUserId ( ) && var . inviter_id != UserConfig . getClientUserId ( ) )	if ( var . participants . admin_id != UserConfig . getClientUserId ( ) && var . inviter_id != UserConfig . getClientUserId ( ) )
if ( var != 0 || var >= 0 && ! var . left )	if ( var != 0 || var >= 0 && ! ChatObject . isLeftFromChat ( var ) )
MessagesController . getInstance ( ) . loadChatInfo ( var , null )	MessagesController . getInstance ( ) . loadChatInfo ( var , null , false )
if ( var != null && var . admin_id == UserConfig . getClientUserId ( ) )	if ( ( var . flags & TLRPC . CHAT_FLAG_ADMIN ) != 0 )
if ( var != null )	if ( var instanceof TLRPC . TL_chatFull )
if ( ( var & MessagesController . UPDATE_MASK_CHAT_AVATAR ) != 0 || ( var & MessagesController . UPDATE_MASK_CHAT_NAME ) != 0 || ( var & MessagesController . UPDATE_MASK_CHAT_MEMBERS ) != 0 || ( var & MessagesController . UPDATE_MASK_STATUS ) != 0 )	if ( ( var & MessagesController . UPDATE_MASK_CHANNEL ) != 0 || ( var & MessagesController . UPDATE_MASK_CHAT_AVATAR ) != 0 || ( var & MessagesController . UPDATE_MASK_CHAT_NAME ) != 0 || ( var & MessagesController . UPDATE_MASK_CHAT_MEMBERS ) != 0 || ( var & MessagesController . UPDATE_MASK_STATUS ) != 0 )
int var = ( Integer ) var [ 0 ]	TLRPC . ChatFull var = ( TLRPC . ChatFull ) var [ 0 ]
if ( var == var )	if ( var . var == var )
var = ( TLRPC . ChatParticipants ) var [ 1 ]	int result = new int [ 1 ]
if ( var == null )	if ( ! ( var instanceof TLRPC . TL_chatFull ) )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . participants . get ( var ) . var )	TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . participants . participants . get ( var ) . var )
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . participants . get ( var ) . var )	TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . participants . participants . get ( var ) . var )
if ( var != null && ! ( var instanceof TLRPC . TL_chatParticipantsForbidden ) )	if ( ! ChatObject . isChannel ( var ) && var != null && ! ( var . participants instanceof TLRPC . TL_chatParticipantsForbidden ) )
var += var . participants . size ( )	var += var . participants . participants . size ( )
var = var . participants . size ( )	var = var . participants . participants . size ( )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , true )
return var == var || var == var || var > var && var < var || var == var	return var == var || var == var || var > var && var < var || var == var || var == var || var == var || var == var || var == var || var == var || var == var
TLRPC . TL_chatParticipant var = var . participants . get ( var . get ( var - var - 1 ) - var - 1 )	TLRPC . TL_chatParticipant var = var . participants . participants . get ( var . get ( var - var - 1 ) - var - 1 )
if ( var == var || var == var || var == var || var == var == var || var == var == var || var == var == var || var == var || var == var || var == var || var == var || var == var > var && var < var == var == var )	if ( var == var || var == var || var == var || var == var == var || var == var == var || var == var || var == var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var > var && var < var == var == var )
if ( var == var || var == var )	if ( var == var || var == var || var == var )
if ( var == var || var == var || var == var || var == var || var == var || var == var )	if ( var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var || var == var )
TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
if ( var != null && var != null )	if ( var != null )
UserConfig . registeredForInternalPush = false	ConnectionsManager . getInstance ( ) . setUserId ( UserConfig . getClientUserId ( ) )
ConnectionsManager . getInstance ( ) . initPushConnection	ConnectionsManager . getInstance ( ) . setUserId ( UserConfig . getClientUserId ( ) )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_PAN )	AndroidUtilities . removeAdjustResize ( getParentActivity , classGuid )
getParentActivity . getWindow . setSoftInputMode ( WindowManager . LayoutParams . SOFT_INPUT_ADJUST_RESIZE )	AndroidUtilities . requestAdjustResize ( getParentActivity , classGuid )
var = var != null || var == null && var instanceof TLRPC . TL_account_noPassword	var = var != null || var instanceof TLRPC . TL_account_noPassword
if ( var == null && var instanceof TLRPC . TL_boolTrue )	if ( var == null && var instanceof TLRPC . TL_boolTrue != null )
AndroidUtilities . shakeTextView ( var , 2 , 0 )	AndroidUtilities . shakeView ( var , 2 , 0 )
if ( Build . VERSION . SDK_INT >= 11 var )	if ( var instanceof ColorDrawable )
if ( var == null || Build . VERSION . SDK_INT < 12 )	if ( var == null )
var = ForegroundDetector . getInstance ( ) . isWasInBackground ( var )	boolean var = ForegroundDetector . getInstance ( ) . isWasInBackground ( var )
ViewProxy . setTranslationX ( var , 0 )	var . setTranslationX ( 0 )
var . clearAnimation ( )	var . setTranslationX ( 0 )
AnimatorSetProxy var = new AnimatorSetProxy	AnimatorSet var = new AnimatorSet
var . playTogether ( ObjectAnimatorProxy . ofFloat ( var , "" , AndroidUtilities . dp ( var ) ) , "" , AndroidUtilities . dp ( var ) )	var . playTogether ( ObjectAnimator . ofFloat ( var , "" , AndroidUtilities . dp ( var ) ) , "" , AndroidUtilities . dp ( var ) )
var . setText ( var )	FileLog . var ( "" , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , false , null , null , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
if ( Build . VERSION . SDK_INT >= 14 && Build . VERSION . SDK_INT < 21 )	if ( Build . VERSION . SDK_INT < 21 )
if ( var == null || var . length ( ) == 0 )	if ( TextUtils . isEmpty ( var ) )
var . put ( var , var )	var . put ( var . shortPhones . get ( var ) , var )
Contact var = var . get ( var )	Contact var = var . get ( var . shortPhones . get ( var ) )
boolean var = var != null && ( var . first_name != null && var . first_name . length ( ) != 0 && ! var . first_name . equals ( var . first_name ) || var . last_name != null && var . last_name != null && ! var . last_name . equals ( var . last_name ) )	boolean var = var != null && ( TextUtils . isEmpty ( var . first_name ) && ! var . first_name . equals ( var . first_name ) || ! TextUtils . isEmpty ( var . last_name ) && ! var . last_name . equals ( var . last_name ) )
if ( var == null || var . first_name != null && var . first_name . length ( ) != 0 || var . last_name != null && var . last_name . length ( ) != 0 )	if ( var == null || ! TextUtils . isEmpty ( var . first_name ) || ! TextUtils . isEmpty ( var . last_name ) || TextUtils . isEmpty ( var . first_name ) && TextUtils . isEmpty ( var . last_name ) )
if ( var == null || var . first_name != null && var . first_name . length ( ) != 0 || var . last_name != null && var . last_name . length ( ) != 0 )	if ( var == null || ! TextUtils . isEmpty ( var . first_name ) || ! TextUtils . isEmpty ( var . last_name ) || TextUtils . isEmpty ( var . first_name ) && TextUtils . isEmpty ( var . last_name ) )
if ( var && ! var . isEmpty ( ) )	if ( var == var && ! var . isEmpty ( ) )
var . user_id = var . user_id	var . user_id = var . imported . get ( var ) . user_id
TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . user_id )	TLRPC . User var = MessagesController . getInstance ( ) . getUser ( var . get ( var ) . user_id )
if ( var == 1 && ( var . var ( ) || UserConfig . lastContactsSyncTime < int ( System . currentTimeMillis ( ) / 1000 ) - 24 * 60 * 60 ) )	if ( var == 1 && ( var . var ( ) || Math . abs ( System . currentTimeMillis ( ) / 1000 - UserConfig . lastContactsSyncTime ) >= 24 * 60 * 60 ) )
performSyncPhoneBook ( getContactsCopy ( var ) , false , false , false )	performSyncPhoneBook ( getContactsCopy ( var ) , false , false , false , false )
if ( Build . VERSION . SDK_INT >= 14 && Build . VERSION . SDK_INT < 21 )	if ( Build . VERSION . SDK_INT < 21 )
if ( Build . VERSION . SDK_INT >= 14 && Build . VERSION . SDK_INT < 21 )	if ( Build . VERSION . SDK_INT < 21 )
Bitmap var = var . getBitmap ( )	return var . getBitmap ( ) . getByteCount
var . inPurgeable = Build . VERSION . SDK_INT >= 14 && Build . VERSION . SDK_INT < 21	var . inPurgeable = Build . VERSION . SDK_INT < 21
if ( var instanceof AnimatedFileDrawable )	if ( var instanceof AnimatedFileDrawable instanceof AnimatedFileDrawable )
if ( var instanceof AnimatedFileDrawable )	if ( var instanceof AnimatedFileDrawable instanceof AnimatedFileDrawable )
var = var . getBoolean ( "" , true ) && Build . VERSION . SDK_INT >= 11	var = var . getBoolean ( "" , true )
var = var . getBoolean ( "" , true ) && Build . VERSION . SDK_INT >= 11	var = var . getBoolean ( "" , true )
startRecording ( var . getDialogId ( ) , null , false )	startRecording ( var . getDialogId ( ) , null )
startRecording ( var . getDialogId ( ) , null , false )	startRecording ( var . getDialogId ( ) , null )
MessagesStorage . getInstance ( ) . putMessages ( var , var . getDialogId ( ) , - 1 , 0 , 0 , false )	MessagesStorage . getInstance ( ) . putMessages ( var , var . getDialogId ( ) , - 1 , 0 , false )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var . getAbsolutePath ( ) , var , var , var , null , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var . getAbsolutePath ( ) , var , var , null , null )
if ( Build . VERSION . SDK_INT >= 12 )	if ( var == 2 )
var . parseString ( var . var )	if ( ! var . parseString ( var . var ) = null )
if ( var . megagroup && var . out || ! var . megagroup && ( var . creator || var . editor && isOut ( var ) ) && isImportant ( var ) )	if ( var . megagroup && var . out || ! var . megagroup && ( var . creator || var . editor && isOut ( var ) ) && var . post )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
SendMessagesHelper . getInstance ( ) . cleanUp	SendMessagesHelper . getInstance ( ) . cleanup
SecretChatHelper . getInstance ( ) . cleanUp	SecretChatHelper . getInstance ( ) . cleanup
SearchQuery . cleanUp ( )	SearchQuery . cleanup ( )
TLRPC . Dialog var = var . get ( ( long ) - var )	TLRPC . TL_dialog var = var . get ( ( long ) - var )
MessagesStorage . getInstance ( ) . putUserPhotos ( var , var )	MessagesStorage . getInstance ( ) . putDialogPhotos ( var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . userPhotosLoaded , var , var , var , var , var , var . photos )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . dialogPhotosLoaded , var , var , var , var , var , var . photos )
if ( var == 0 )	if ( var == 0 || var == 3 )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
if ( var . remove ( var ) )	if ( var == 0 || var == 3 )
if ( var instanceof TLRPC . TL_dialogChannel )	if ( var . remove ( var ) && DialogObject . isChannel ( var ) )
var . remove ( var . id )	var = var . remove ( var . top_message )
MessageObject var = var . remove ( var . top_message )	final MessageObject var = new MessageObject ( var , null , var . contains ( var . dialog_id ) . dialog_id )
if ( var == 1 )	if ( var == 1 || var == 3 )
FileLog . e ( "" , "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )	FileLog . e ( "" , "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var + "" + var )
var . channel = getInputChannel ( - var )	TLRPC . Chat var = getChat ( - var )
if ( var != 0 )	if ( ChatObject . var ( var ) )
var . limit += var	var . limit = 1
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )
MessagesStorage . getInstance ( ) . putMessages ( var , var , var , var , var , var )	MessagesStorage . getInstance ( ) . putMessages ( var , var , var , var , var )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var . collapsed , var , var , var )	NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . messagesDidLoaded , var , var , var , var , var , var , var , var , var , var , var , var )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
var . offset_date = Math . max ( var . last_message_date_i , var . messageOwner . date )	var . offset_date = var . messageOwner . date
processLoadedDialogs ( var , null , 0 , var , false , false , false )	processLoadedDialogs ( var , null , 0 , var , 0 , false , false )
HashMap < Long , TLRPC . Dialog > var = new HashMap	HashMap < Long , TLRPC . TL_dialog > var = new HashMap
TLRPC . Dialog var = var . var . get ( var )	TLRPC . TL_dialog var = var . var . get ( var )
TLRPC . Dialog var = var . remove ( var )	TLRPC . TL_dialog var = var . remove ( var )
if ( var . id == var . top_not_important_message )	var . id = var . top_message
if ( var . top_message == 0 && var . top_not_important_message == 0 )	if ( var . top_message == 0 )
TLRPC . Dialog var = var . remove ( MessageObject . getDialogId ( var ) )	TLRPC . TL_dialog var = var . remove ( MessageObject . getDialogId ( var ) )
if ( var && var . var . size ( ) == 0 )	if ( var == 1 && var . var . size ( ) == 0 )
final HashMap < Long , TLRPC . Dialog > var = new HashMap	final ArrayList < TLRPC . TL_dialog > var = new ArrayList
var . put ( - var . to_id . channel_id , var . date )	var . date = var . last_message_date
if ( ! var && var . post && ! var . out )	if ( var != 1 && var . post && ! var . out )
MessageObject var = var . get ( var . getDialogId ( ) )	MessageObject var = var . remove ( var . id )
TLRPC . Dialog var = var . var . get ( var )	TLRPC . TL_dialog var = var . var . get ( var )
if ( var . last_message_date_i == 0 && var . top_not_important_message != 0 )	if ( var && var == 1 && ( var . read_outbox_max_id == 0 || var . read_inbox_max_id == 0 ) && var . top_message != 0 )
if ( var != null )	if ( var == null = 0 )
var . last_message_date_i = var	var . put ( var . id , Math . max ( var , var . read_outbox_max_id ) , var . read_outbox_max_id )
if ( var instanceof TLRPC . TL_dialogChannel int ) var . id < 0 )	if ( DialogObject . isChannel ( var ) int ) var . id < 0 )
if ( var != null && var . megagroup )	if ( ! var . megagroup = false )
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )
if ( ! var )	if ( var != 1 )
putUsers ( var . var , var )	putUsers ( var . var , var == 1 )
putChats ( var . var , var )	putChats ( var . var , var == 1 )
TLRPC . Dialog var = var . getValue ( )	TLRPC . TL_dialog var = var . getValue ( )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
if ( ! var )	if ( var != 1 )
if ( var . last_message_date < var . last_message_date )	if ( var < var > var 1 )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
if ( ( int ) var . id != 0 && var != 1 )	if ( var != 2 )
if ( var . id < 0 )	if ( var < 0 )
TLRPC . Chat var = var . get ( - ( int ) var . id )	TLRPC . Chat var = var . get ( - var )
if ( var != null && ( var . megagroup && var . editor || var . creator ) )	if ( ! var . isEmpty ( ) )
var = ( var . var . size ( ) == 0 || var . var . size ( ) != var ) && ! var	var = ( var . var . size ( ) == 0 || var . var . size ( ) != var ) && var == 0
if ( ! var && var )	if ( ! var && var == 1 )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
TLRPC . Dialog var = var . get ( var . getKey ( ) )	TLRPC . TL_dialog var = var . get ( var . getKey ( ) )
final HashMap < Long , TLRPC . Dialog > var = new HashMap	final HashMap < Long , TLRPC . TL_dialog > var = new HashMap
TLRPC . Dialog var = var . var . get ( var )	TLRPC . TL_dialog var = var . var . get ( var )
if ( var instanceof TLRPC . TL_dialogChannel int ) var . id < 0 )	if ( DialogObject . isChannel ( var ) int ) var . id < 0 )
TLRPC . Dialog var = var . getValue ( )	TLRPC . TL_dialog var = var . getValue ( )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
if ( ( int ) var . id != 0 && var != 1 )	var = var . get ( var . id )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
final long var = var	final long var
MessagesStorage . getInstance ( ) . processPendingRead ( var , var , var , false )	MessagesStorage . getInstance ( ) . processPendingRead ( var , var , var )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
TLRPC . TL_channels_toggleComments var = new TLRPC . TL_channels_toggleComments ( )	TLRPC . TL_messages_getPeerDialogs var = new TLRPC . TL_messages_getPeerDialogs ( )
NotificationCenter . getInstance ( ) . postNotificationName ( NotificationCenter . updateInterfaces , var )	deleteDialog ( var . id , 3 )
ConnectionsManager . getInstance ( ) . cleanUp	ConnectionsManager . getInstance ( ) . cleanup
MessagesStorage . getInstance ( ) . cleanUp ( false )	MessagesStorage . getInstance ( ) . cleanup ( false )
FileLog . var ( "" , var )	FileLog . e ( "" , "" + var )
if ( ! var . out )	var . out = false
if ( ! var . isOut ( ) && var . isContentUnread ( ) )	if ( ! var . isOut ( ) && var . isUnread ( ) )
processUpdateArray ( var . other_updates , var . var , var . var )	processUpdateArray ( var . other_updates , var . var , var . var , true )
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )
if ( var . dialog_id != 0 )	if ( var . dialog_id == 0 )
var = var . dialog_id	var . dialog_id = - var . to_id . chat_id
var = - var . to_id . chat_id	var . dialog_id = - var . to_id . chat_id
var = var . to_id . user_id	var . dialog_id = var . to_id . user_id
MessageObject var = new MessageObject ( var , var , var , var . contains ( var ) )	MessageObject var = new MessageObject ( var , var , var , var . contains ( var . dialog_id ) . dialog_id )
ArrayList < MessageObject > var = var . get ( var )	ArrayList < MessageObject > var = var . get ( var . dialog_id )
var . put ( var , var )	var . put ( var . dialog_id , var )
processUpdateArray ( var , null , null )	processUpdateArray ( var , null , null , false )
var . unread = var . unread	var . unread = var < var . id
if ( var instanceof TLRPC . TL_channel && var . min )	if ( var . min )
if ( var == 0 || var == 2 )	if ( var == var )
if ( ! processUpdateArray ( var . var , var . var , var . var ) )	if ( ! processUpdateArray ( var . var , var . var , var . var , false ) )
var = ( ( TLRPC . TL_updateNewChannelMessage ) var ) . message . to_id . channel_id	return ( ( TLRPC . TL_updateNewChannelMessage ) var ) . message . to_id . channel_id
var = ( ( TLRPC . TL_updateEditChannelMessage ) var ) . message . to_id . channel_id	return ( ( TLRPC . TL_updateEditChannelMessage ) var ) . message . to_id . channel_id
var = var . channel_id	var . put ( - var . channel_id , var )
if ( getUpdateType ( var ) == 2 && var . pts + var . pts_count == var . pts )	if ( getUpdateType ( var ) == 2 && var == getUpdateChannelId ( var ) && var . pts + var . pts_count == var . pts )
if ( ! processUpdateArray ( var . var , var . var , var . var ) )	if ( ! processUpdateArray ( var . var , var . var , var . var , false ) )
final SparseArray < ArrayList < TLRPC . TL_messageGroup > . TL_messageGroup > var = new SparseArray	final SparseArray < Long > var = new SparseArray
if ( var == null || var . min )	if ( var == null || ! var && var . min )
if ( var == null || var . min )	if ( var == null || ! var && var . min )
if ( var != null && var . min = null )	if ( var != null && ! var && var . min = null )
if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )	if ( var . action instanceof TLRPC . TL_messageActionChatDeleteUser )
var . unread = true	var . unread = var < var . id
var . media_unread = true	var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
Integer var = var . get ( var )	var . put ( var . dialog_id , var )
if ( var >= var . id || ChatObject . isNotInChat ( var ) )	var . unread = ! ( var >= var . id || var != null && ChatObject . isNotInChat ( var ) || var . action instanceof TLRPC . TL_messageActionChatMigrateTo || var . action instanceof TLRPC . TL_messageActionChannelCreate )
if ( ! var . isOut ( ) && ( var . isUnread ( ) && var . to_id . channel_id == 0 || var . isContentUnread ( ) ) )	if ( ! var . isOut ( ) && var . isUnread ( ) )
if ( var instanceof TLRPC . TL_updateReadHistoryOutbox )	var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var instanceof TLRPC . TL_updateReadHistoryOutbox , var )
var . put ( - var . chat_id , var . max_id )	var . put ( - var . chat_id , ( long ) var . max_id )
var . put ( var . user_id , var . max_id )	var . put ( var . user_id , ( long ) var . max_id )
if ( var instanceof TLRPC . TL_updateChannelTooLong )	if ( ( var . flags & 1 ) != 0 )
if ( ( var . flags & 1 ) != 0 )	if ( var instanceof TLRPC . TL_updateChannelTooLong )
if ( var == 0 = 1 )	if ( var == 0 )
if ( var instanceof TLRPC . TL_updateChannelGroup )	if ( var instanceof TLRPC . TL_updateReadChannelInbox || var instanceof TLRPC . TL_updateReadChannelOutbox )
ArrayList < TLRPC . TL_messageGroup > var = var . get ( var . channel_id )	TLRPC . Chat var = var . get ( var . channel_id )
var . put ( var . channel_id , var )	var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var instanceof TLRPC . TL_updateReadChannelOutbox , var )
if ( var instanceof TLRPC . TL_updateChannel )	if ( var instanceof TLRPC . TL_updateDraftMessage )
var . media_unread = true	var = MessagesStorage . getInstance ( ) . getDialogReadMax ( var . out , var . dialog_id )
var . unread = var . media_unread = true	var . unread = var < var . id
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
TLRPC . Dialog var = var . get ( - ( long ) var . channel_id )	TLRPC . TL_dialog var = var . get ( - ( long ) var . channel_id )
getChannelDifference ( var . channel_id , 1 )	getChannelDifference ( var . channel_id , 1 , 0 )
long var = var . get ( var )	int var = int ( ( long ) var . get ( var ) )
TLRPC . Dialog var = var . get ( ( long ) var )	TLRPC . TL_dialog var = var . get ( ( long ) var )
if ( var != null && var . top_message <= ( int ) var )	if ( var != null && var . top_message <= var )
if ( var != null )	if ( var != null && var . isOut ( ) )
int var = var . get ( var )	int var = int ( ( long ) var . get ( var ) )
TLRPC . Dialog var = var . get ( ( long ) var )	TLRPC . TL_dialog var = var . get ( ( long ) var )
if ( var != null )	if ( var != null && ! var . isOut ( ) )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
MessagesStorage . getInstance ( ) . updateDialogsWithReadMessages ( var , true )	MessagesStorage . getInstance ( ) . updateDialogsWithReadMessages ( var , var , true )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
TLRPC . Dialog var = var . get ( var )	TLRPC . TL_dialog var = var . get ( var )
if ( var instanceof TLRPC . TL_dialogChannel )	if ( DialogObject . isChannel ( var ) < 0 )
var . executeFast ( "" ) . stepThis . dispose	var . executeFast ( "" + var ) . stepThis . dispose
if ( var < 32 )	if ( var < 34 )
int var = int ( var . dialog_id >> 32 )	int var = ( int ) var
if ( var == 0 == 2 )	if ( var == 0 || var == 3 == 2 )
var . add ( var )	var = var . id
createFirstHoles ( var , var , var , var , var , var )	createFirstHoles ( var , var , var , var )
var . bindInteger ( 1 , var )	var . bindLong ( 1 , var )
updateDialogsWithReadMessagesInternal ( null , var )	updateDialogsWithReadMessagesInternal ( null , var , var )
updateDialogsWithReadMessagesInternal ( null , var )	updateDialogsWithReadMessagesInternal ( null , var , var )
if ( var . next ( ) )	if ( var <= var . read_inbox_max_id )
int var = var . intValue ( 5 )	int var = var . intValue ( 4 )
if ( var < var . read_inbox_max_id )	if ( var . next ( ) )
if ( var < var . unread_important_count )	if ( var < var . unread_count )
var . unread_important_count = var	var . unread_count = var
long var = var . longValue ( 1 )	final long var = var . getAndAdd ( 1 )
int var = var . intValue ( 2 )	int var = var . intValue ( 1 )
long var = var . longValue ( 4 )	long var = var . longValue ( 2 )
var . bindInteger ( 6 , 0 )	var . bindLong ( 7 , 0 )
var . bindInteger ( 8 , var . unread_count )	var . bindInteger ( 3 , var . unread_count )
ContactsController . getInstance ( ) . performSyncPhoneBook ( var , true , true , false )	ContactsController . getInstance ( ) . performSyncPhoneBook ( var , true , true , false , false )
if ( var != 0 )	if ( var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var , var ) . US , "" + var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var ) . US , "" + var + "" , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var , var ) . US , "" + var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var , var ) . US , "" , var , var , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var , var , var ) . US , "" + var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var , var , var ) . US , "" , var , var , var , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var ) . US , "" + var + "" , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
SQLitePreparedStatement var = var . executeFast ( "" + var + "" )	SQLitePreparedStatement var = var . executeFast ( "" )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var , var ) . US , "" + var + "" , var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var ) . US , "" + var + "" , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var ) . US , "" + var + "" , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" + "" + var + "" , var , var , var , var / 2 , var , var , var , var / 2 ) . US , "" + var + "" + "" + var + "" , var , var , var , var / 2 , var , var , var , var / 2 )	var = var . queryFinalized ( String . format ( Locale . US , "" + "" , var , var , var , var / 2 , var , var , var , var / 2 ) . US , "" + "" , var , var , var , var / 2 , var , var , var , var / 2 )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" + "" + var + "" , var , var , var / 2 , var , var , var / 2 ) . US , "" + var + "" + "" + var + "" , var , var , var / 2 , var , var , var / 2 )	var = var . queryFinalized ( String . format ( Locale . US , "" + "" , var , var , var / 2 , var , var , var / 2 ) . US , "" + "" , var , var , var / 2 , var , var , var / 2 )
if ( var == 1 )	if ( var != 0 )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var ) . US , "" + var + "" , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var ) . US , "" , var , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var , var , var , var ) . US , "" + var + "" , var , var , var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var ) . US , "" , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var , var , var ) . US , "" + var + "" , var , var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )
if ( var != 0 )	if ( var == 1 )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var ) . US , "" + var + "" , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var , var ) . US , "" , var , var , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var , var , var , var ) . US , "" + var + "" , var , var , var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var , var , var ) . US , "" , var , var , var , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var , var , var ) . US , "" + var + "" , var , var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var ) . US , "" + var + "" , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" + var + "" , var , var , var , var ) . US , "" + var + "" , var , var , var , var )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var ) . US , "" , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" , var , var . messages . get ( var . messages . size ( ) - 1 ) . messages . size ( ) - 1 . id , var . messages . get ( 0 ) . id , var . messages . get ( 0 ) . id ) . US , "" , var , var . messages . get ( var . messages . size ( ) - 1 ) . messages . size ( ) - 1 . id , var . messages . get ( 0 ) . id , var . messages . get ( 0 ) . id )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var ) . US , "" , var , var , var )
var = var . queryFinalized ( String . format ( Locale . US , "" , var , var . messages . get ( var . messages . size ( ) - 1 ) . messages . size ( ) - 1 . id ) . US , "" , var , var . messages . get ( var . messages . size ( ) - 1 ) . messages . size ( ) - 1 . id )	var = var . queryFinalized ( String . format ( Locale . US , "" , var , var , var , var ) . US , "" , var , var , var , var )
while ( var . next ( ) )	if ( var . next ( ) )
var . min_id = var . intValue ( 0 )	var = var . intValue ( 0 )
var . var = var . intValue ( 1 )	int var = var . intValue ( 1 )
var . add ( ( ( TLRPC . TL_messageMediaDocument ) var ) . photo )	var . add ( ( ( TLRPC . TL_messageMediaPhoto ) var ) . photo )
var . bindInteger ( 6 , 0 )	var . bindInteger ( 6 , var . read_outbox_max_id )
var . bindInteger ( 7 , var . top_not_important_message )	var . bindInteger ( 7 , 0 )
TLRPC . TL_dialogChannel var = new TLRPC . TL_dialogChannel ( )	TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
var . top_not_important_message = var . top_message	var . flags = 1
var . top_message = var . top_important_message	var . top_message = var . top_message
var . unread_not_important_count = var . unread_count	var . read_outbox_max_id = var . read_outbox_max_id
HashMap < Long , TLRPC . Message > var = new HashMap	final HashMap < Long , TLRPC . Message > var = new HashMap
if ( ( var . to_id . channel_id == 0 && MessageObject . isUnread ( var ) || MessageObject . isContentUnread ( var ) ) && ! MessageObject . isOut ( var ) )	if ( MessageObject . isUnread ( var ) && ! MessageObject . isOut ( var ) )
var . put ( var , var . dialog_id )	createFirstHoles ( var , var , var , var )
var . remove ( var . longValue ( 0 ) )	TLRPC . Message var = var . get ( 0 )
TLRPC . Message var	TLRPC . Message var = var . get ( var . dialog_id )
var = var . get ( var . dialog_id )	TLRPC . Message var = var . get ( var . dialog_id )
if ( ( var . to_id . channel_id == 0 || MessageObject . isImportant ( var ) ) && var . date >= ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 && var != 0 )	if ( ( var . to_id . channel_id == 0 || var . post ) && var . date >= ConnectionsManager . getInstance ( ) . getCurrentTime - 60 * 60 && var != 0 )
var . putAll ( var )	var . dispose ( )
int var = 0	int var = - 1
int var = 0	int var = - 1
var . bindLong ( 7 , var )	var . bindLong ( 7 , 0 )
var . bindInteger ( 8 , var + var )	var . bindInteger ( 8 , 0 )
var . bindInteger ( 10 , var . date )	var . bindInteger ( 10 , 0 )
var . bindInteger ( 10 , var )	var . bindInteger ( 6 , var )
MessagesStorage . getInstance ( ) . updateDialogsWithReadMessagesInternal ( var , null )	MessagesStorage . getInstance ( ) . updateDialogsWithReadMessagesInternal ( var , null , null )
TLRPC . Dialog var	TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
var = new TLRPC . TL_dialog ( )	TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
var . pts = var . intValue ( 11 )	var . read_outbox_max_id = var . intValue ( 11 )
var . top_not_important_message = var . intValue ( 9 )	var . pts = var . intValue ( 9 )
var . unread_not_important_count = var . intValue ( 10 )	var . read_inbox_max_id = var . intValue ( 10 )
if ( var == 0 )	if ( var . var . isEmpty ( ) )
if ( var != 2 )	if ( var == 0 )
int var , var	int var = int ( var >> 32 )
int var = var . collapsed . size ( )	int var = var . readInt32 ( false )
if ( var != 2 || var . collapsed . isEmpty ( ) )	if ( var == 1 )
var = Math . max ( var , var . id )	var . bindInteger ( 6 , Math . max ( var , var . read_outbox_max_id ) , var . read_outbox_max_id )
var . min_id = var . id	var = var . id
var . bindInteger ( 2 , var . min_id )	long var = var . longValue ( 2 )
var . bindInteger ( 3 , var . var )	var . bindInteger ( 3 , var . unread_count )
TLRPC . Dialog var	TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
long var = var . longValue ( 0 )	final long var = var . longValue ( 0 )
var = new TLRPC . TL_dialog ( )	TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
var = new TLRPC . TL_dialogChannel ( )	var . id = var . longValue ( 0 )
var . var = var	var . id = var . readInt64 ( false )
var . read_inbox_max_id = var . intValue ( 13 )	var = var . byteBufferValue ( 13 )
var . top_not_important_message = var . intValue ( 10 )	var . pts = var . intValue ( 10 )
var . unread_not_important_count = var . intValue ( 11 )	var . read_inbox_max_id = var . intValue ( 11 )
if ( ! var . isNull ( 15 ) )	if ( ! var . isNull ( 13 ) )
var = var . byteBufferValue ( 15 )	var = var . byteBufferValue ( 13 )
MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , var , var , true , false , false )	MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , var , var , 1 , false , false )
MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , 0 , 100 , true , true , false )	MessagesController . getInstance ( ) . processLoadedDialogs ( var , var , 0 , 100 , 1 , true , false )
if ( MessageObject . isImportant ( var ) )	var . bindByteBuffer ( 2 , var )
var . requery ( )	var . step ( )
var . bindLong ( 1 , var )	var . bindInteger ( 1 , var )
var = Math . max ( var . id , var )	FileLog . var ( "" , var )
if ( var . size ( ) == 2 )	while ( var . next ( ) )
int var = var . get ( 0 ) . id	NativeByteBuffer var = var . byteBufferValue ( 1 )
int var = var . get ( 1 ) . id	int var = var . readInt32 ( false )
var . bindLong ( 1 , var )	final int var = var . readInt32 ( false )
var . step ( )	final TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
var . requery ( )	final TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
var . bindLong ( 1 , var )	var . id = var . readInt64 ( false )
var . bindInteger ( 2 , var )	var . top_message = var . readInt32 ( false )
var . bindInteger ( 3 , var )	var . read_inbox_max_id = var . readInt32 ( false )
var . step ( )	var . read_outbox_max_id = var . readInt32 ( false )
for ( int var = 0 ; var < SharedMediaQuery . MEDIA_TYPES_COUNT ; var ++ )	var . unread_count = var . readInt32 ( false )
var . requery ( )	var . last_message_date = var . readInt32 ( false )
var . bindLong ( 1 , var )	var . pts = var . readInt32 ( false )
var . bindInteger ( 2 , var )	var . flags = var . readInt32 ( false )
var . step ( )	var . reuse ( )
var . requery ( )	var . dispose ( )
var . bindLong ( 1 , var )	FileLog . var ( "" , var )
var . step ( )	result [ 0 ] = var . next ( var )
var . requery ( )	FileLog . var ( "" , var )
var . bindLong ( 1 , var )	var . release ( var )
var . bindInteger ( 2 , var )	var . acquire ( var )
var . bindInteger ( 3 , Integer . MAX_VALUE )	FileLog . var ( "" , var )
SQLitePreparedStatement var = var . executeFast ( "" )	putUsersInternal ( var . users )
TLRPC . Dialog var = var . var . get ( var )	TLRPC . TL_dialog var = var . var . get ( var )
ArrayList < TLRPC . Message > var = var . get ( var . id )	TLRPC . Message var = var . get ( var . id )
for ( int var = 0 ; var < var . size ( ) ; var ++ )	for ( int var = 0 ; var < var . var . size ( ) ; var ++ )
var . bindInteger ( 9 , 0 )	var . bindInteger ( 10 , 0 )
createFirstHoles ( var . id , var , var , var , var , var )	createFirstHoles ( var . id , var , var , var . id )
long var = var . top_not_important_message	var . dispose ( )
var = var = Math . max ( var , var )	var . dispose ( )
var = var = Math . max ( var , var )	var . dispose ( )
var |= ( ( long ) var . peer . channel_id ) << 32	var . dispose ( )
var . bindLong ( 7 , var )	var . bindLong ( 7 , 0 )
var . bindInteger ( 8 , var . unread_not_important_count )	var . bindInteger ( 8 , 0 )
var . dispose ( )	putChatsInternal ( var . chats )
var . dispose ( )	var . commitTransaction ( )
var . commitTransaction ( )	FileLog . var ( "" , var )
if ( var . isImportant ( ) )	if ( var . messageOwner . post )
if ( var == null )	if ( var == null || var . messageOwner . date <= var )
NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setGroup ( "" ) . setContentText ( var ) . setColor ( 0xff2ca5e0 ) . setGroupSummary ( false ) . setContentIntent ( var ) . extend ( var ) . extend ( new NotificationCompat . CarExtender ( ) . setUnreadConversation ( var . build ( ) ) . build ( ) ) . setCategory ( NotificationCompat . CATEGORY_MESSAGE )	NotificationCompat . Builder var = new NotificationCompat . Builder ( ApplicationLoader . applicationContext ) . setContentTitle ( var ) . setSmallIcon ( R . drawable . notification ) . setGroup ( "" ) . setContentText ( var ) . setAutoCancel ( true ) . setColor ( 0xff2ca5e0 ) . setGroupSummary ( false ) . setContentIntent ( var ) . extend ( var ) . extend ( new NotificationCompat . CarExtender ( ) . setUnreadConversation ( var . build ( ) ) . build ( ) ) . setCategory ( NotificationCompat . CATEGORY_MESSAGE )
final TLRPC . Dialog var = new TLRPC . TL_dialog ( )	final TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
TLRPC . Dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )	TLRPC . TL_dialog var = MessagesController . getInstance ( ) . dialogs_dict . get ( var )
TLRPC . Dialog var = new TLRPC . TL_dialog ( )	TLRPC . TL_dialog var = new TLRPC . TL_dialog ( )
MessagesController . getInstance ( ) . processUpdateArray ( var , null , null )	MessagesController . getInstance ( ) . processUpdateArray ( var , null , null , false )
sendMessage ( var , var . messageOwner . post )	sendMessage ( var )
sendMessage ( ( TLRPC . TL_photo ) var . messageOwner . media . photo , null , var , var . replyMessageObject , var , null , null )	sendMessage ( ( TLRPC . TL_photo ) var . messageOwner . media . photo , null , var , var . replyMessageObject , null , null )
sendMessage ( ( TLRPC . TL_document ) var . messageOwner . media . document , null , var . messageOwner . attachPath , var , var . replyMessageObject , var , null , null )	sendMessage ( ( TLRPC . TL_document ) var . messageOwner . media . document , null , var . messageOwner . attachPath , var , var . replyMessageObject , null , null )
sendMessage ( var . messageOwner . media , var , var . replyMessageObject , var , null , null )	sendMessage ( var . messageOwner . media , var , var . replyMessageObject , null , null )
sendMessage ( var , var , var . replyMessageObject , var , null , null )	sendMessage ( var , var , var . replyMessageObject , null , null )
sendMessage ( var , var , var )	sendMessage ( var , var )
sendMessage ( var . messageOwner . message , var , var . replyMessageObject , var , true , var , var . messageOwner . entities , null , null )	sendMessage ( var . messageOwner . message , var , var . replyMessageObject , var , true , var . messageOwner . entities , null , null )
sendMessage ( var , var , var )	sendMessage ( var , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( ( TLRPC . TL_document ) var , null , null , var , var , var , null , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( ( TLRPC . TL_document ) var , null , null , var , var , null , null )
if ( var && var . channel_id != 0 && ! var )	if ( var . channel_id != 0 && ! var )
if ( var && ! var )	if ( ! var )
sendMessage ( null , null , null , null , null , null , var . getDialogId ( ) , var . messageOwner . attachPath , null , null , true , var , var , null , var . messageOwner . reply_markup , var . messageOwner . params )	sendMessage ( null , null , null , null , null , null , var . getDialogId ( ) , var . messageOwner . attachPath , null , null , true , var , null , var . messageOwner . reply_markup , var . messageOwner . params )
sendMessage ( null , null , null , null , var , null , var , null , var , null , true , var , null , null , var , var )	sendMessage ( null , null , null , null , var , null , var , null , var , null , true , null , null , var , var )
sendMessage ( null , null , null , var , null , var , var , var , var , null , true , var , null , null , var , var )	sendMessage ( null , null , null , var , null , var , var , var , var , null , true , null , null , var , var )
sendMessage ( var , null , null , null , null , null , var , null , var , var , var , var , null , var , var , var )	sendMessage ( var , null , null , null , null , null , var , null , var , var , var , null , var , var , var )
sendMessage ( null , var , null , null , null , null , var , null , var , null , true , var , null , null , var , var )	sendMessage ( null , var , null , null , null , null , var , null , var , null , true , null , null , var , var )
sendMessage ( null , null , var , null , null , null , var , var , var , null , true , var , null , null , var , var )	sendMessage ( null , null , var , null , null , null , var , var , var , null , true , null , null , var , var )
if ( var == 0 && var instanceof TLRPC . TL_inputPeerChannel )	if ( var == 0 instanceof TLRPC . TL_inputPeerChannel )
if ( var && var instanceof TLRPC . TL_inputPeerChannel )	if ( var instanceof TLRPC . TL_inputPeerChannel )
if ( var . megagroup = false )	var = var != null && ! var . megagroup
if ( var && var != null && var . channel_id != 0 )	if ( var && var != null )
var . broadcast = true	DraftQuery . cleanDraft ( var , false )
if ( var && var instanceof TLRPC . TL_inputPeerChannel )	if ( var == null )
var . broadcast = true	var . clear_draft = true
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , var , null , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , null , var )
prepareSendingDocuments ( var , var , var , var , var , var , var )	prepareSendingDocuments ( var , var , var , var , var , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var . messageOwner . attachPath , var , var , var , null , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var . messageOwner . attachPath , var , var , null , var )
if ( ! prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , var , null ) = true )	if ( ! prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , null ) = true )
if ( ! prepareSendingDocumentInternal ( null , null , var . get ( var ) , var , var , var , var , null ) = true )	if ( ! prepareSendingDocumentInternal ( null , null , var . get ( var ) , var , var , var , null ) = true )
prepareSendingPhotos ( var , var , var , var , var , var )	prepareSendingPhotos ( var , var , var , var , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . content_url , var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var . content_url , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var . send_message . message , var , var , null , ! var . send_message . no_webpage , var , var . send_message . entities , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var . send_message . message , var , var , null , ! var . send_message . no_webpage , var . send_message . entities , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var . send_message . reply_markup , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var . send_message . reply_markup , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , var , null , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , null , var )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , true , var , null , null , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , null , null , true , null , null , null )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , var , null , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , null , var , var , null , var )
prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , var , var . get ( var ) )	prepareSendingDocumentInternal ( var . get ( var ) , var . get ( var ) , null , var , var , var , var . get ( var ) )
SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var , var , null , var )	SendMessagesHelper . getInstance ( ) . sendMessage ( var , var , var , var , var , null , var )
prepareSendingDocumentInternal ( var , var , null , null , var , var , var , null )	prepareSendingDocumentInternal ( var , var , null , null , var , var , null )
var . putInt ( "" , var )	var . putBoolean ( "" , var )
var = var . readString ( false )	var . readString ( false )
var = var . getInt ( "" , 0 )	var = var . getBoolean ( "" , false )
var = ""	var = true
SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , false , null , null , null )	SendMessagesHelper . getInstance ( ) . sendMessage ( var . toString ( ) , var , null , null , true , null , null , null )
if ( var == null )	if ( var != null )
messagesSearchEndReached [ 1 ] = messagesSearchEndReached [ 0 ]	messagesSearchEndReached [ 1 ] = true
NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , 0 , getMask var , ( long ) 0 )	NotificationCenter . getInstance ( var ) . postNotificationName ( NotificationCenter . chatSearchResultsAvailable , var , 0 , getMask var , ( long ) 0 , 0 , 0 )
if ( var == var && messagesSearchEndReached [ 0 ] && var != 0 )	if ( var == var && messagesSearchEndReached [ 0 ] && var != 0 && ! messagesSearchEndReached [ 1 ] )
messagesSearchEndReached [ 1 ] = false	messagesSearchEndReached [ 1 ] = var . messages . isEmpty ( var )
searchMessagesInChat ( var , var , var , var , 0 )	searchMessagesInChat ( var , var , var , var , 0 , true )
